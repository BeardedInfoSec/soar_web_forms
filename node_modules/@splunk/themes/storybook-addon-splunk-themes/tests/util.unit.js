"use strict";

var _util = require("../util");

describe('getMergedTheme', function () {
  // Storybook will set "null" for "globalsTheme" in some situtations so we need to validate that this doesn't throw
  it('should not throw if globalsTheme is null', function () {
    expect((0, _util.getMergedTheme)(null, {})).toStrictEqual({});
  });
  it('should merge two different keys correctly', function () {
    expect((0, _util.getMergedTheme)({
      density: 'compact'
    }, {
      colorScheme: 'dark'
    })).toStrictEqual({
      colorScheme: 'dark',
      density: 'compact'
    });
  });
  it('should merge the same key correctly', function () {
    expect((0, _util.getMergedTheme)({
      density: 'compact'
    }, {
      density: 'comfortable'
    })).toStrictEqual({
      density: 'comfortable'
    });
  });
  it('should pass through properties that only exist on one side of the merge', function () {
    expect((0, _util.getMergedTheme)({
      density: 'compact'
    }, {
      colorScheme: 'dark',
      density: 'comfortable'
    })).toStrictEqual({
      colorScheme: 'dark',
      density: 'comfortable'
    });
  });
  it('should pass through "both"', function () {
    expect((0, _util.getMergedTheme)({
      density: 'compact'
    }, {
      colorScheme: 'both',
      density: 'comfortable'
    })).toStrictEqual({
      colorScheme: 'both',
      density: 'comfortable'
    });
  });
  it('should reset values "both" in globalsTheme to its default if the new theme has "both"', function () {
    expect((0, _util.getMergedTheme)({
      density: 'both',
      family: 'prisma'
    }, {
      colorScheme: 'both'
    })).toStrictEqual({
      colorScheme: 'both',
      density: 'comfortable',
      family: 'prisma'
    });
  });
});