/******/ (() => {
    // webpackBootstrap
    /******/ "use strict";
    /******/ // The require scope
    /******/    var e = {};
    /******/
    /************************************************************************/
    /******/ /* webpack/runtime/compat get default export */
    /******/    (() => {
        /******/ // getDefaultExport function for compatibility with non-harmony modules
        /******/ e.n = t => {
            /******/ var n = t && t.__esModule ? 
            /******/ () => t["default"]
            /******/ : () => t
            /******/;
            e.d(n, {
                a: n
            });
            /******/            return n;
            /******/        };
        /******/    })();
    /******/
    /******/ /* webpack/runtime/define property getters */
    /******/    (() => {
        /******/ // define getter functions for harmony exports
        /******/ e.d = (t, n) => {
            /******/ for (var r in n) {
                /******/ if (e.o(n, r) && !e.o(t, r)) {
                    /******/ Object.defineProperty(t, r, {
                        enumerable: true,
                        get: n[r]
                    });
                    /******/                }
                /******/            }
            /******/        };
        /******/    })();
    /******/
    /******/ /* webpack/runtime/hasOwnProperty shorthand */
    /******/    (() => {
        /******/ e.o = (e, t) => Object.prototype.hasOwnProperty.call(e, t)
        /******/;
    })();
    /******/
    /******/ /* webpack/runtime/make namespace object */
    /******/    (() => {
        /******/ // define __esModule on exports
        /******/ e.r = e => {
            /******/ if (typeof Symbol !== "undefined" && Symbol.toStringTag) {
                /******/ Object.defineProperty(e, Symbol.toStringTag, {
                    value: "Module"
                });
                /******/            }
            /******/            Object.defineProperty(e, "__esModule", {
                value: true
            });
            /******/        };
        /******/    })();
    /******/
    /************************************************************************/    var t = {};
    // ESM COMPAT FLAG
        e.r(t);
    // EXPORTS
        e.d(t, {
        Panel: () => /* reexport */ L,
        default: () => /* reexport */ be
    });
    // CONCATENATED MODULE: external "react"
    const n = require("react");
    var r =  e.n(n);
    // CONCATENATED MODULE: external "prop-types"
    const o = require("prop-types");
    var i =  e.n(o);
    // CONCATENATED MODULE: external "lodash/filter"
    const a = require("lodash/filter");
    var l =  e.n(a);
    // CONCATENATED MODULE: external "lodash/keys"
    const u = require("lodash/keys");
    var c =  e.n(u);
    // CONCATENATED MODULE: external "lodash/omit"
    const s = require("lodash/omit");
    var f =  e.n(s);
    // CONCATENATED MODULE: external "lodash/values"
    const p = require("lodash/values");
    var d =  e.n(p);
    // CONCATENATED MODULE: external "react-spring"
    const v = require("react-spring");
    // CONCATENATED MODULE: external "@splunk/react-ui/Animation"
    const y = require("@splunk/react-ui/Animation");
    // CONCATENATED MODULE: external "styled-components"
    const b = require("styled-components");
    var m =  e.n(b);
    // CONCATENATED MODULE: external "@splunk/react-ui/Box"
    const h = require("@splunk/react-ui/Box");
    var g =  e.n(h);
    // CONCATENATED MODULE: external "@splunk/themes"
    const O = require("@splunk/themes");
    // CONCATENATED MODULE: ./src/SlidingPanels/SlidingPanelsStyles.ts
    var P = m()((0, v.animated)(g())).withConfig({
        displayName: "SlidingPanelsStyles__StyledBox",
        componentId: "su6isq-0"
    })([ "overflow:hidden;position:relative;" ]);
    var j = m()(v.animated.div).withConfig({
        displayName: "SlidingPanelsStyles__Styled",
        componentId: "su6isq-1"
    })([ "", ";", ";" ], O.mixins.reset("block"), O.mixins.clearfix());
    // CONCATENATED MODULE: ./src/utils/updateReactRef.ts
    /**
 * Updates a React ref. Callback refs and object refs (from `createRef` and `useRef`) are supported.
 *
 * @param ref - The React callback or object ref. Can be `null` or `undefined`.
 * @param current - The new value of the ref.
 */
    function w(e, t) {
        if (e) {
            if (typeof e === "function") {
                e(t);
            } else {
                // the public signature of this util uses React.Ref<T> to mirror the way React types refs.
                // the intention here is to signal "we will take care of setting 'current', not you".
                e.current = t;
 // eslint-disable-line no-param-reassign
                        }
        }
    }
    // CONCATENATED MODULE: ./src/SlidingPanels/Panel.tsx
    function S(e) {
        "@babel/helpers - typeof";
        return S = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
            return typeof e;
        } : function(e) {
            return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
        }, S(e);
    }
    function I() {
        return I = Object.assign ? Object.assign.bind() : function(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = arguments[t];
                for (var r in n) {
                    ({}).hasOwnProperty.call(n, r) && (e[r] = n[r]);
                }
            }
            return e;
        }, I.apply(null, arguments);
    }
    function E(e, t) {
        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
    }
    function _(e, t) {
        for (var n = 0; n < t.length; n++) {
            var r = t[n];
            r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), 
            Object.defineProperty(e, N(r.key), r);
        }
    }
    function k(e, t, n) {
        return t && _(e.prototype, t), n && _(e, n), Object.defineProperty(e, "prototype", {
            writable: !1
        }), e;
    }
    function T(e, t) {
        if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function");
        e.prototype = Object.create(t && t.prototype, {
            constructor: {
                value: e,
                writable: !0,
                configurable: !0
            }
        }), Object.defineProperty(e, "prototype", {
            writable: !1
        }), t && q(e, t);
    }
    function q(e, t) {
        return q = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(e, t) {
            return e.__proto__ = t, e;
        }, q(e, t);
    }
    function A(e) {
        var t = R();
        return function() {
            var n, r = x(e);
            if (t) {
                var o = x(this).constructor;
                n = Reflect.construct(r, arguments, o);
            } else n = r.apply(this, arguments);
            return C(this, n);
        };
    }
    function C(e, t) {
        if (t && ("object" == S(t) || "function" == typeof t)) return t;
        if (void 0 !== t) throw new TypeError("Derived constructors may only return object or undefined");
        return M(e);
    }
    function M(e) {
        if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return e;
    }
    function R() {
        try {
            var e = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {})));
        } catch (e) {}
        return (R = function t() {
            return !!e;
        })();
    }
    function x(e) {
        return x = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(e) {
            return e.__proto__ || Object.getPrototypeOf(e);
        }, x(e);
    }
    function U(e, t, n) {
        return (t = N(t)) in e ? Object.defineProperty(e, t, {
            value: n,
            enumerable: !0,
            configurable: !0,
            writable: !0
        }) : e[t] = n, e;
    }
    function N(e) {
        var t = D(e, "string");
        return "symbol" == S(t) ? t : t + "";
    }
    function D(e, t) {
        if ("object" != S(e) || !e) return e;
        var n = e[Symbol.toPrimitive];
        if (void 0 !== n) {
            var r = n.call(e, t || "default");
            if ("object" != S(r)) return r;
            throw new TypeError("@@toPrimitive must return a primitive value.");
        }
        return ("string" === t ? String : Number)(e);
    }
    var W = {
        elementRef: i().oneOfType([ i().func, i().object ]),
        panelId: i().any.isRequired,
        /**
   * @private.
   * Used internally, func passed in from outer place is overwritten
   * by SlidingPanels during rendering
   */
        onMount: i().func,
        /**
   * @private.
   * Used internally, func passed in from outer place is overwritten
   * by SlidingPanels during rendering
   */
        onUnmount: i().func
    };
    var B = {};
    /**
 * Container for arbitrary content.
 */    var X =  function(e) {
        T(n, e);
        var t = A(n);
        function n() {
            var e;
            E(this, n);
            for (var r = arguments.length, o = new Array(r), i = 0; i < r; i++) {
                o[i] = arguments[i];
            }
            e = t.call.apply(t, [ this ].concat(o));
            U(M(e), "el", null);
            U(M(e), "handleMount", (function(t) {
                e.el = t;
                w(e.props.elementRef, t);
            }));
            return e;
        }
 // @docs-props-type PanelPropsBase
                k(n, [ {
            key: "componentDidMount",
            value: function e() {
                var t, n;
                (t = (n = this.props).onMount) === null || t === void 0 ? void 0 : t.call(n, this);
            }
        }, {
            key: "componentWillUnmount",
            value: function e() {
                var t, n;
                (t = (n = this.props).onUnmount) === null || t === void 0 ? void 0 : t.call(n, this);
            }
 // eslint-disable-next-line react/no-unused-class-component-methods
                }, {
            key: "getHeight",
            value: function e() {
                var t;
                return (t = this.el) === null || t === void 0 ? void 0 : t.clientHeight;
            }
 // eslint-disable-next-line react/no-unused-class-component-methods
                }, {
            key: "getWidth",
            value: function e() {
                var t;
                return (t = this.el) === null || t === void 0 ? void 0 : t.clientWidth;
            }
        }, {
            key: "render",
            value: function e() {
                var t = this.props.panelId;
                
                return r().createElement(j, I({
                    "data-test": "panel",
                    "data-test-panel-id": t
                }, f()(this.props, c()(n.propTypes)), {
                    ref: this.handleMount
                }));
            }
        } ]);
        return n;
    }(n.Component);
    U(X, "propTypes", W);
    U(X, "defaultProps", B);
    /* harmony default export */    const L = X;
    // CONCATENATED MODULE: ./src/SlidingPanels/SlidingPanels.tsx
    function H(e) {
        "@babel/helpers - typeof";
        return H = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
            return typeof e;
        } : function(e) {
            return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
        }, H(e);
    }
    function V() {
        return V = Object.assign ? Object.assign.bind() : function(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = arguments[t];
                for (var r in n) {
                    ({}).hasOwnProperty.call(n, r) && (e[r] = n[r]);
                }
            }
            return e;
        }, V.apply(null, arguments);
    }
    function F(e, t) {
        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
    }
    function z(e, t) {
        for (var n = 0; n < t.length; n++) {
            var r = t[n];
            r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), 
            Object.defineProperty(e, oe(r.key), r);
        }
    }
    function G(e, t, n) {
        return t && z(e.prototype, t), n && z(e, n), Object.defineProperty(e, "prototype", {
            writable: !1
        }), e;
    }
    function J(e, t) {
        if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function");
        e.prototype = Object.create(t && t.prototype, {
            constructor: {
                value: e,
                writable: !0,
                configurable: !0
            }
        }), Object.defineProperty(e, "prototype", {
            writable: !1
        }), t && K(e, t);
    }
    function K(e, t) {
        return K = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(e, t) {
            return e.__proto__ = t, e;
        }, K(e, t);
    }
    function Q(e) {
        var t = $();
        return function() {
            var n, r = ee(e);
            if (t) {
                var o = ee(this).constructor;
                n = Reflect.construct(r, arguments, o);
            } else n = r.apply(this, arguments);
            return Y(this, n);
        };
    }
    function Y(e, t) {
        if (t && ("object" == H(t) || "function" == typeof t)) return t;
        if (void 0 !== t) throw new TypeError("Derived constructors may only return object or undefined");
        return Z(e);
    }
    function Z(e) {
        if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return e;
    }
    function $() {
        try {
            var e = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {})));
        } catch (e) {}
        return ($ = function t() {
            return !!e;
        })();
    }
    function ee(e) {
        return ee = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(e) {
            return e.__proto__ || Object.getPrototypeOf(e);
        }, ee(e);
    }
    function te(e, t) {
        var n = Object.keys(e);
        if (Object.getOwnPropertySymbols) {
            var r = Object.getOwnPropertySymbols(e);
            t && (r = r.filter((function(t) {
                return Object.getOwnPropertyDescriptor(e, t).enumerable;
            }))), n.push.apply(n, r);
        }
        return n;
    }
    function ne(e) {
        for (var t = 1; t < arguments.length; t++) {
            var n = null != arguments[t] ? arguments[t] : {};
            t % 2 ? te(Object(n), !0).forEach((function(t) {
                re(e, t, n[t]);
            })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : te(Object(n)).forEach((function(t) {
                Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t));
            }));
        }
        return e;
    }
    function re(e, t, n) {
        return (t = oe(t)) in e ? Object.defineProperty(e, t, {
            value: n,
            enumerable: !0,
            configurable: !0,
            writable: !0
        }) : e[t] = n, e;
    }
    function oe(e) {
        var t = ie(e, "string");
        return "symbol" == H(t) ? t : t + "";
    }
    function ie(e, t) {
        if ("object" != H(e) || !e) return e;
        var n = e[Symbol.toPrimitive];
        if (void 0 !== n) {
            var r = n.call(e, t || "default");
            if ("object" != H(r)) return r;
            throw new TypeError("@@toPrimitive must return a primitive value.");
        }
        return ("string" === t ? String : Number)(e);
    }
    var ae = {
        activePanelId: i().any.isRequired,
        children: i().node,
        elementRef: i().oneOfType([ i().func, i().object ]),
        innerClassName: i().string,
        innerStyle: i().object,
        onAnimationEnd: i().func,
        outerClassName: i().string,
        outerStyle: i().object,
        transition: i().oneOf([ "forward", "backward" ])
    };
    var le = {
        transition: "forward"
    };
    var ue = {
        precision: 1
    };
    var ce = function e(t) {
        var n = t.animating, r = t.outerStyle, o = t.interpolatedOuterStyle;
        return ne(ne({}, r), n ? o : {});
    };
    var se = function e(t) {
        return t ? {
            translateX: 1
        } : {};
    };
    var fe = function e(t) {
        var n = t ? t.getWidth() : 0;
        var r = t ? t.getHeight() : 0;
        return {
            width: n,
            height: r
        };
    };
    var pe = function e(t) {
        var o;
        var i = t.activePanelId, a = t.children, l = t.maxWidth, u = t.onMount, c = t.onUnmount, s = t.transition, f = t.transitionStyle;
        var p = n.Children.toArray(a).filter(n.isValidElement).find((function(e) {
            return e.props.panelId === i;
        }));
        // TODO: Fix Interpolation<string | number> can't be cast to string
                var d = (o = f.translateX) === null || o === void 0 ? void 0 : o.to((function(e) {
            return "translateX(".concat(e * l * (s === "forward" ? 1 : -1), "px)");
        }));
        var y = p ?  r().createElement(v.animated.div, {
            style: f
        },  (0, n.cloneElement)(p, {
            style: ne(ne({}, p.props.style), {}, {
                transform: d
            }),
            onMount: u,
            onUnmount: c
        })) : null;
        return y;
    };
    var de = function e() {
        return {
            translateX: 0
        };
    };
    var ve = function e(t) {
        return t ? {
            translateX: -1,
            position: "absolute",
            left: 0,
            top: 0
        } : {
            translateX: -1
        };
    };
    var ye =  function(e) {
        J(o, e);
        var t = Q(o);
        G(o, null, [ {
            key: "getDerivedStateFromProps",
            // @docs-props-type SlidingPanelsPropsBase
            value: function e(t, n) {
                if (t.activePanelId !== n.prevActivePanelId) {
                    // instead of using panelId, assign each sliding event an id and
                    // use it as the key to make sure new panelA will transit as expected if
                    // old panelA has not fully left yet
                    return {
                        animating: true,
                        panelLoading: true,
                        prevActivePanelId: t.activePanelId,
                        slidingId: n.slidingId + 1
                    };
                }
                return null;
            }
        } ]);
        function o(e) {
            var i;
            F(this, o);
            i = t.call(this, e);
            re(Z(i), "panelInstances", {});
            re(Z(i), "allowAnimationUpdates", true);
            re(Z(i), "handlePanelMount", (function(e) {
                i.panelInstances[e.props.panelId] = e;
                if (e.props.panelId === i.props.activePanelId) {
                    i.setState({
                        activePanel: e,
                        panelLoading: false
                    });
                }
            }));
            re(Z(i), "handlePanelUnmount", (function(e) {
                delete i.panelInstances[e.props.panelId];
            }));
            re(Z(i), "handleAnimationEnd", (function() {
                var e, t;
                if (i.allowAnimationUpdates) {
                    i.setState({
                        animating: false
                    });
                }
                (e = (t = i.props).onAnimationEnd) === null || e === void 0 ? void 0 : e.call(t);
            }));
            re(Z(i), "renderOuterContainer", (function(e) {
                var t = i.props, a = t.activePanelId, u = t.children, s = t.elementRef, p = t.outerClassName, b = t.outerStyle, m = t.innerClassName, h = t.innerStyle;
                var g = i.state.animating;
                var O = ce({
                    animating: g,
                    outerStyle: b,
                    interpolatedOuterStyle: e
                });
                var j = n.Children.toArray(u).filter(n.isValidElement).find((function(e) {
                    return e.props.panelId === a;
                }));
                if (false) {}
                var w = l()(d()(i.panelInstances), (function(e) {
                    return !!e;
                }));
                var S = w.map((function(e) {
                    var t;
                    var n = i.panelInstances[e.props.panelId];
                    return n ? (t = n.getWidth()) !== null && t !== void 0 ? t : 0 : 0;
                })).reduce((function(e, t) {
                    return Math.max(e, t);
                }), 0);
                
                return r().createElement(P, V({
                    className: p,
                    "data-test-active-panel-id": a,
                    "data-test": "sliding-panels",
                    elementRef: s,
                    style: O
                }, f()(i.props, c()(o.propTypes))),  r().createElement(y.Transition, {
                    from: se(g),
                    enter: de(),
                    leave: ve(g),
                    items: a
                }, (
                // eslint-disable-next-line @typescript-eslint/no-explicit-any
                function(e, t) {
                    
                    return r().createElement(v.animated.div, {
                        style: h,
                        className: m
                    }, pe({
                        activePanelId: t,
                        children: u,
                        maxWidth: S,
                        onMount: i.handlePanelMount,
                        onUnmount: i.handlePanelUnmount,
                        transition: i.props.transition,
                        transitionStyle: e
                    }));
                })));
            }));
            i.state = {
                animating: false,
                panelLoading: false,
                prevActivePanelId: i.props.activePanelId,
                // eslint-disable-line react/no-unused-state
                slidingId: 0
            };
            return i;
        }
        G(o, [ {
            key: "componentWillUnmount",
            value: function e() {
                this.allowAnimationUpdates = false;
            }
        }, {
            key: "render",
            value: function e() {
                var t = this.state, n = t.activePanel, o = t.panelLoading;
 // When a new panel is loading, the activePanel is about to be removed. The height and/or
                // width of that panel may have changed since the last render. To ensure that the next
                // panel animates from the current height and width (rather than the previously loaded one),
                // we only set the style when panelLoading is true (immediate prop prevents animation if true).
                                
                return r().createElement(y.Spring, {
                    to: fe(n),
                    onRest: this.handleAnimationEnd,
                    immediate: o,
                    config: ue
                }, /* eslint-disable-next-line @typescript-eslint/no-explicit-any */
                this.renderOuterContainer);
            }
        } ]);
        return o;
    }(n.Component);
    re(ye, "propTypes", ae);
    re(ye, "defaultProps", le);
    re(ye, "Panel", L);
    /* harmony default export */    const be = ye;
    // CONCATENATED MODULE: ./src/SlidingPanels/index.ts
    module.exports = t;
    /******/})();