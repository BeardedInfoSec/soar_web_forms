/******/ (() => {
    // webpackBootstrap
    /******/ "use strict";
    /******/ // The require scope
    /******/    var e = {};
    /******/
    /************************************************************************/
    /******/ /* webpack/runtime/compat get default export */
    /******/    (() => {
        /******/ // getDefaultExport function for compatibility with non-harmony modules
        /******/ e.n = t => {
            /******/ var n = t && t.__esModule ? 
            /******/ () => t["default"]
            /******/ : () => t
            /******/;
            e.d(n, {
                a: n
            });
            /******/            return n;
            /******/        };
        /******/    })();
    /******/
    /******/ /* webpack/runtime/define property getters */
    /******/    (() => {
        /******/ // define getter functions for harmony exports
        /******/ e.d = (t, n) => {
            /******/ for (var r in n) {
                /******/ if (e.o(n, r) && !e.o(t, r)) {
                    /******/ Object.defineProperty(t, r, {
                        enumerable: true,
                        get: n[r]
                    });
                    /******/                }
                /******/            }
            /******/        };
        /******/    })();
    /******/
    /******/ /* webpack/runtime/hasOwnProperty shorthand */
    /******/    (() => {
        /******/ e.o = (e, t) => Object.prototype.hasOwnProperty.call(e, t)
        /******/;
    })();
    /******/
    /******/ /* webpack/runtime/make namespace object */
    /******/    (() => {
        /******/ // define __esModule on exports
        /******/ e.r = e => {
            /******/ if (typeof Symbol !== "undefined" && Symbol.toStringTag) {
                /******/ Object.defineProperty(e, Symbol.toStringTag, {
                    value: "Module"
                });
                /******/            }
            /******/            Object.defineProperty(e, "__esModule", {
                value: true
            });
            /******/        };
        /******/    })();
    /******/
    /************************************************************************/    var t = {};
    // ESM COMPAT FLAG
        e.r(t);
    // EXPORTS
        e.d(t, {
        SingleOpenPanelGroup: () => /* reexport */ ce,
        default: () => /* reexport */ _e
    });
    // CONCATENATED MODULE: external "react"
    const n = require("react");
    var r =  e.n(n);
    // CONCATENATED MODULE: external "lodash/has"
    const a = require("lodash/has");
    var o =  e.n(a);
    // CONCATENATED MODULE: external "lodash/keys"
    const i = require("lodash/keys");
    var l =  e.n(i);
    // CONCATENATED MODULE: external "lodash/omit"
    const s = require("lodash/omit");
    var c =  e.n(s);
    // CONCATENATED MODULE: external "prop-types"
    const p = require("prop-types");
    var u =  e.n(p);
    // CONCATENATED MODULE: external "@splunk/react-ui/TransitionOpen"
    const d = require("@splunk/react-ui/TransitionOpen");
    var f =  e.n(d);
    // CONCATENATED MODULE: external "@splunk/ui-utils/id"
    const b = require("@splunk/ui-utils/id");
    // CONCATENATED MODULE: external "@splunk/ui-utils/i18n"
    const v = require("@splunk/ui-utils/i18n");
    // CONCATENATED MODULE: external "@splunk/react-ui/usePrevious"
    const m = require("@splunk/react-ui/usePrevious");
    var y =  e.n(m);
    // CONCATENATED MODULE: external "styled-components"
    const g = require("styled-components");
    var h =  e.n(g);
    // CONCATENATED MODULE: external "@splunk/react-ui/Box"
    const k = require("@splunk/react-ui/Box");
    var C =  e.n(k);
    // CONCATENATED MODULE: external "@splunk/react-ui/ButtonSimple"
    const x = require("@splunk/react-ui/ButtonSimple");
    var O =  e.n(x);
    // CONCATENATED MODULE: external "@splunk/react-ui/Clickable"
    const S = require("@splunk/react-ui/Clickable");
    var w =  e.n(S);
    // CONCATENATED MODULE: external "@splunk/themes"
    const P = require("@splunk/themes");
    // CONCATENATED MODULE: external "@splunk/react-icons/ChevronRight"
    const I = require("@splunk/react-icons/ChevronRight");
    var j =  e.n(I);
    // CONCATENATED MODULE: external "@splunk/react-icons/enterprise/ChevronRight"
    const E = require("@splunk/react-icons/enterprise/ChevronRight");
    var _ =  e.n(E);
    // CONCATENATED MODULE: ./src/CollapsiblePanel/icons/ExpandPanel.tsx
    var q = {
        className: u().string
    };
    var A = function e(t) {
        var n = t.className;
        var a = (0, P.useSplunkTheme)(), o = a.isEnterprise;
        return o ?  r().createElement(_(), {
            className: n,
            hideDefaultTooltip: true,
            screenReaderText: null
        }) :  r().createElement(j(), {
            className: n
        });
    };
    A.propTypes = q;
    /* harmony default export */    const R = A;
    // CONCATENATED MODULE: ./src/CollapsiblePanel/CollapsiblePanelStyles.ts
    var T = h()(C()).withConfig({
        displayName: "CollapsiblePanelStyles__StyledBox",
        componentId: "sc-1phikbp-0"
    })([ "display:flex;flex-direction:column;flex-shrink:1;", ";", ";& + &{margin-top:", ";}" ], (0, 
    P.pick)({
        enterprise: (0, g.css)([ "min-height:calc(", " + 12px);" ], P.variables.lineHeight),
        prisma: {
            comfortable: (0, g.css)([ "min-height:56px;" ]),
            compact: (0, g.css)([ "min-height:48px;" ])
        }
    }), (0, P.pick)({
        prisma: (0, g.css)([ "background-color:", ";" ], P.variables.backgroundColorSection)
    }), (0, P.pick)({
        enterprise: "2px",
        prisma: "1px"
    }));
    var D = h()(C()).withConfig({
        displayName: "CollapsiblePanelStyles__StyledSingleOpenPanelGroupBox",
        componentId: "sc-1phikbp-1"
    })([ "", ";flex-direction:column;margin-bottom:0;", "" ], P.mixins.reset("flex"), (0, 
    P.pick)({
        enterprise: (0, g.css)([ "background:", ";" ], P.variables.backgroundColor)
    }));
    /*
    these styles are consistent for both regular and titleWithActions, but applied to different elements
    * in regular mode, they're on the SVG's span wrapper
    * in titleWithActionsMode, they're on the button
    applying them directly to the icon wrapper doesn't work because Enterprise has 1px border around the button
*/    var N = (0, g.css)([ "min-width:", ";" ], (0, P.pick)({
        enterprise: "20px",
        prisma: "35px"
    }));
    var X = h().span.withConfig({
        displayName: "CollapsiblePanelStyles__StyledIconWrapper",
        componentId: "sc-1phikbp-2"
    })([ "display:inline-block;flex:0 auto;", "" ], N);
    var B = h().div.withConfig({
        displayName: "CollapsiblePanelStyles__StyledTitleWithActions",
        componentId: "sc-1phikbp-3"
    })([ "display:flex;flex-shrink:0;border-bottom:0;position:relative;padding:", ";transition:background-color 0.2s,border 0.2s,box-shadow 0.2s;color:", ";", " ", "" ], (0, 
    P.pick)({
        enterprise: (0, g.css)([ "", " ", " ", " ", "" ], P.variables.spacingXSmall, P.variables.spacingSmall, P.variables.spacingXSmall, P.variables.spacingXSmall),
        prisma: {
            comfortable: "8px 10px 8px 11px",
            compact: "8px 10px 8px 11px"
        }
    }), (0, P.pick)({
        enterprise: P.variables.textColor,
        prisma: P.variables.contentColorActive
    }), (0, P.pick)({
        prisma: (0, g.css)([ "background-color:", ";" ], P.variables.interactiveColorBackground),
        enterprise: {
            dark: (0, g.css)([ "background-color:", ";" ], P.variables.gray45),
            light: (0, g.css)([ "background-color:", ";" ], P.variables.gray96)
        }
    }), (function(e) {
        var t = e.$disabled;
        return t && (0, g.css)([ "cursor:default;color:", ";" ], (0, P.pick)({
            enterprise: P.variables.contentColorDefault,
            prisma: P.variables.contentColorDisabled
        }));
    }));
    var W = h()(O()).withConfig({
        displayName: "CollapsiblePanelStyles__StyledToggleButton",
        componentId: "sc-1phikbp-4"
    })([ "flex:0 auto;padding:0;", "" ], N);
    var L = h()(w()).withConfig({
        displayName: "CollapsiblePanelStyles__StyledTitleClickable",
        componentId: "sc-1phikbp-5"
    })([ "width:100%;flex-shrink:0;border-bottom:0;cursor:pointer;position:relative;display:flex;transition:background-color 0.2s,border 0.2s,box-shadow 0.2s;padding:", ";color:", ";", " ", " &[disabled]{cursor:default;color:", ";}&:focus:not([disabled]),&:active:not([disabled]){color:", ";box-shadow:", ";z-index:1;}&:hover:not([disabled]){color:", ";background-color:", ";}" ], (0, 
    P.pick)({
        enterprise: "6px 30px 6px 5px",
        prisma: {
            comfortable: "18px 20px 18px 11px",
            compact: "14px 20px 14px 11px"
        }
    }), (0, P.pick)({
        enterprise: P.variables.textColor,
        prisma: P.variables.contentColorActive
    }), (0, P.pick)({
        prisma: (0, g.css)([ "background-color:", ";" ], P.variables.interactiveColorBackground)
    }), (0, P.pickVariant)("$open", {
        false: {
            enterprise: {
                dark: (0, g.css)([ "background-color:", ";" ], P.variables.gray45),
                light: (0, g.css)([ "background-color:", ";" ], P.variables.gray96)
            }
        }
    }), (0, P.pick)({
        enterprise: P.variables.contentColorDefault,
        prisma: P.variables.contentColorDisabled
    }), (0, P.pick)({
        enterprise: P.variables.textColor,
        prisma: P.variables.contentColorActive
    }), P.variables.focusShadowInset, (0, P.pick)({
        enterprise: P.variables.textColor,
        prisma: P.variables.contentColorActive
    }), (0, P.pick)({
        enterprise: {
            light: P.variables.gray92,
            dark: P.variables.gray30
        },
        prisma: P.mixins.overlayColors(P.variables.interactiveColorBackground, P.variables.interactiveColorOverlayHover)
    }));
    var $ = h().span.withConfig({
        displayName: "CollapsiblePanelStyles__StyledHeadingContent",
        componentId: "sc-1phikbp-6"
    })([ "display:flex;justify-content:space-between;margin-left:", ";flex:1 1 auto;", " ", "" ], (0, 
    P.pick)({
        enterprise: "5px",
        prisma: "6px"
    }), (0, P.pick)({
        prisma: (0, g.css)([ "font-weight:", ";" ], P.variables.fontWeightSemiBold)
    }), (function(e) {
        var t = e.$titleWithActions;
        return t && (0, g.css)([ "min-height:", ";" ], (0, P.pick)({
            prisma: {
                comfortable: P.variables.spacingXXXLarge,
                compact: P.variables.spacingXXLarge
            }
        }));
    }));
    var M = h().span.withConfig({
        displayName: "CollapsiblePanelStyles__StyledHeadingActions",
        componentId: "sc-1phikbp-7"
    })([ "min-height:", ";flex:1 0 auto;" ], (0, P.pick)({
        prisma: {
            comfortable: P.variables.spacingXXXLarge,
            compact: P.variables.spacingXXLarge
        }
    }));
    var G = h().span.withConfig({
        displayName: "CollapsiblePanelStyles__StyledDescription",
        componentId: "sc-1phikbp-8"
    })([ "font-size:", ";margin-left:", ";" ], P.variables.fontSizeSmall, (0, P.pick)({
        enterprise: P.variables.spacingSmall,
        prisma: P.variables.spacingLarge
    }));
    var H = h().div.withConfig({
        displayName: "CollapsiblePanelStyles__StyledInsetWrapper",
        componentId: "sc-1phikbp-9"
    })([ "", ";padding:", ";" ], P.mixins.reset("block"), (0, P.pickVariant)("$inset", {
        true: (0, P.pick)({
            enterprise: {
                compact: P.variables.spacingXSmall,
                comfortable: P.variables.spacingSmall
            },
            prisma: {
                compact: P.variables.spacingMedium,
                comfortable: P.variables.spacingXLarge
            }
        }),
        false: 0
    }));
    var U = h()(R).withConfig({
        displayName: "CollapsiblePanelStyles__StyledExpandPanelIcon",
        componentId: "sc-1phikbp-10"
    })([ "transition:transform ", ";", ";", " width:100%;vertical-align:", ";" ], (0, 
    P.pick)({
        enterprise: "300ms",
        prisma: "200ms"
    }), (0, P.pick)({
        enterprise: (0, g.css)([ "[disabled] &{color:", ";}" ], (0, P.pick)({
            dark: P.variables.contentColorDefault,
            light: P.variables.contentColorDisabled
        })),
        prisma: (0, g.css)([ "color:", ";[disabled] &{color:inherit;}" ], P.variables.contentColorDefault)
    }), (function(e) {
        var t = e.open;
        return t && (0, g.css)([ "transform:rotate(90deg);" ]);
    }), (0, P.pick)({
        enterprise: "baseline",
        prisma: "text-bottom"
    }));
    // CONCATENATED MODULE: ./src/CollapsiblePanel/SingleOpenPanelGroupContext.tsx
    var z =  (0, n.createContext)({});
    /* harmony default export */    const V = z;
    // CONCATENATED MODULE: ./src/CollapsiblePanel/SingleOpenPanelGroup.tsx
    function F() {
        return F = Object.assign ? Object.assign.bind() : function(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = arguments[t];
                for (var r in n) {
                    ({}).hasOwnProperty.call(n, r) && (e[r] = n[r]);
                }
            }
            return e;
        }, F.apply(null, arguments);
    }
    function J(e) {
        return Y(e) || Q(e) || te(e) || K();
    }
    function K() {
        throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function Q(e) {
        if ("undefined" != typeof Symbol && null != e[Symbol.iterator] || null != e["@@iterator"]) return Array.from(e);
    }
    function Y(e) {
        if (Array.isArray(e)) return ne(e);
    }
    function Z(e, t) {
        return ae(e) || re(e, t) || te(e, t) || ee();
    }
    function ee() {
        throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function te(e, t) {
        if (e) {
            if ("string" == typeof e) return ne(e, t);
            var n = {}.toString.call(e).slice(8, -1);
            return "Object" === n && e.constructor && (n = e.constructor.name), "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? ne(e, t) : void 0;
        }
    }
    function ne(e, t) {
        (null == t || t > e.length) && (t = e.length);
        for (var n = 0, r = Array(t); n < t; n++) {
            r[n] = e[n];
        }
        return r;
    }
    function re(e, t) {
        var n = null == e ? null : "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
        if (null != n) {
            var r, a, o, i, l = [], s = !0, c = !1;
            try {
                if (o = (n = n.call(e)).next, 0 === t) {
                    if (Object(n) !== n) return;
                    s = !1;
                } else for (;!(s = (r = o.call(n)).done) && (l.push(r.value), l.length !== t); s = !0) {
                }
            } catch (e) {
                c = !0, a = e;
            } finally {
                try {
                    if (!s && null != n["return"] && (i = n["return"](), Object(i) !== i)) return;
                } finally {
                    if (c) throw a;
                }
            }
            return l;
        }
    }
    function ae(e) {
        if (Array.isArray(e)) return e;
    }
    function oe(e, t) {
        if (null == e) return {};
        var n, r, a = ie(e, t);
        if (Object.getOwnPropertySymbols) {
            var o = Object.getOwnPropertySymbols(e);
            for (r = 0; r < o.length; r++) {
                n = o[r], t.includes(n) || {}.propertyIsEnumerable.call(e, n) && (a[n] = e[n]);
            }
        }
        return a;
    }
    function ie(e, t) {
        if (null == e) return {};
        var n = {};
        for (var r in e) {
            if ({}.hasOwnProperty.call(e, r)) {
                if (t.includes(r)) continue;
                n[r] = e[r];
            }
        }
        return n;
    }
    /** @public */    var le = {
        children: u().node,
        defaultOpenPanelId: u().any,
        elementRef: u().oneOfType([ u().func, u().object ]),
        inset: u().bool,
        onChange: u().func,
        openPanelId: u().any
    };
    function se(e) {
        // @docs-props-type SingleOpenPanelGroupPropsBase
        var t = e.children, a = e.defaultOpenPanelId, i = e.elementRef, l = e.inset, s = l === void 0 ? false : l, p = e.onChange, u = e.openPanelId, d = oe(e, [ "children", "defaultOpenPanelId", "elementRef", "inset", "onChange", "openPanelId" ]);
        var f = o()(e, "openPanelId");
        var b = y()(a);
        var v = !f ? a : undefined;
        var m = (0, n.useState)(v), g = Z(m, 2), h = g[0], k = g[1];
        var C = function e() {
            var t = f ? u : h;
            return t;
        };
        var x = (0, n.useCallback)((function(e, t) {
            var n = t.panelId;
            var r = C();
            var a = r === n ? null : n;
            if (!f) {
                k(a);
            }
            p === null || p === void 0 ? void 0 : p(e, t);
        }), [ u, f, h, C, p ]);
        (0, n.useEffect)((function() {
            if (false) {}
            // In this functional component, we want the dependencies to be [], but when we do that
            // we get a linting error.
            // eslint-disable-next-line react-hooks/exhaustive-deps
                }), []);
        (0, n.useEffect)((function() {
            if (false) {}
        }), [ b, f ]);
        (0, n.useEffect)((function() {
            if (false) {}
        }), [ b, a ]);
        var O = n.Children.toArray(t).filter(n.isValidElement);
 // remove false, null, 0, etc
                var S = (0, n.useMemo)((function() {
            return {
                onChange: x,
                openPanelId: f ? u : h,
                inset: s
            };
        }), [ x, f, s, u, h ]);
        
        return r().createElement(D, F({
            "data-test": "single-open-panel-group",
            "data-test-open-panel-id": u,
            elementRef: i
        }, c().apply(void 0, [ d ].concat(J(Object.keys(le))))),  r().createElement(V.Provider, {
            value: S
        }, O));
    }
    se.propTypes = le;
    /* harmony default export */    const ce = se;
    // CONCATENATED MODULE: ./src/CollapsiblePanel/CollapsiblePanel.tsx
    function pe(e) {
        "@babel/helpers - typeof";
        return pe = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
            return typeof e;
        } : function(e) {
            return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
        }, pe(e);
    }
    function ue() {
        return ue = Object.assign ? Object.assign.bind() : function(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = arguments[t];
                for (var r in n) {
                    ({}).hasOwnProperty.call(n, r) && (e[r] = n[r]);
                }
            }
            return e;
        }, ue.apply(null, arguments);
    }
    function de(e, t) {
        var n = Object.keys(e);
        if (Object.getOwnPropertySymbols) {
            var r = Object.getOwnPropertySymbols(e);
            t && (r = r.filter((function(t) {
                return Object.getOwnPropertyDescriptor(e, t).enumerable;
            }))), n.push.apply(n, r);
        }
        return n;
    }
    function fe(e) {
        for (var t = 1; t < arguments.length; t++) {
            var n = null != arguments[t] ? arguments[t] : {};
            t % 2 ? de(Object(n), !0).forEach((function(t) {
                Se(e, t, n[t]);
            })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : de(Object(n)).forEach((function(t) {
                Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t));
            }));
        }
        return e;
    }
    function be(e, t) {
        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
    }
    function ve(e, t) {
        for (var n = 0; n < t.length; n++) {
            var r = t[n];
            r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), 
            Object.defineProperty(e, we(r.key), r);
        }
    }
    function me(e, t, n) {
        return t && ve(e.prototype, t), n && ve(e, n), Object.defineProperty(e, "prototype", {
            writable: !1
        }), e;
    }
    function ye(e, t) {
        if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function");
        e.prototype = Object.create(t && t.prototype, {
            constructor: {
                value: e,
                writable: !0,
                configurable: !0
            }
        }), Object.defineProperty(e, "prototype", {
            writable: !1
        }), t && ge(e, t);
    }
    function ge(e, t) {
        return ge = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(e, t) {
            return e.__proto__ = t, e;
        }, ge(e, t);
    }
    function he(e) {
        var t = xe();
        return function() {
            var n, r = Oe(e);
            if (t) {
                var a = Oe(this).constructor;
                n = Reflect.construct(r, arguments, a);
            } else n = r.apply(this, arguments);
            return ke(this, n);
        };
    }
    function ke(e, t) {
        if (t && ("object" == pe(t) || "function" == typeof t)) return t;
        if (void 0 !== t) throw new TypeError("Derived constructors may only return object or undefined");
        return Ce(e);
    }
    function Ce(e) {
        if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return e;
    }
    function xe() {
        try {
            var e = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {})));
        } catch (e) {}
        return (xe = function t() {
            return !!e;
        })();
    }
    function Oe(e) {
        return Oe = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(e) {
            return e.__proto__ || Object.getPrototypeOf(e);
        }, Oe(e);
    }
    function Se(e, t, n) {
        return (t = we(t)) in e ? Object.defineProperty(e, t, {
            value: n,
            enumerable: !0,
            configurable: !0,
            writable: !0
        }) : e[t] = n, e;
    }
    function we(e) {
        var t = Pe(e, "string");
        return "symbol" == pe(t) ? t : t + "";
    }
    function Pe(e, t) {
        if ("object" != pe(e) || !e) return e;
        var n = e[Symbol.toPrimitive];
        if (void 0 !== n) {
            var r = n.call(e, t || "default");
            if ("object" != pe(r)) return r;
            throw new TypeError("@@toPrimitive must return a primitive value.");
        }
        return ("string" === t ? String : Number)(e);
    }
    /** @public @deprecated Use `CollapsiblePanelChangeHandler` */
    /** @public @deprecated Use `CollapsiblePanelChangeHandler` */
    /** @public */    var Ie = {
        innerBodyStyles: u().object,
        actions: u().node,
        children: u().node,
        defaultOpen: u().bool,
        description: u().string,
        disabled: u().bool,
        elementRef: u().oneOfType([ u().func, u().object ]),
        headingLevel: u().number,
        inset: u().bool,
        onRequestClose: u().func,
        onRequestOpen: u().func,
        onChange: u().func,
        open: u().bool,
        overflow: u().string,
        panelId: u().any,
        renderChildrenWhenCollapsed: u().bool,
        title: u().node.isRequired,
        titleWithActions: u().bool
    };
    var je = {
        disabled: false,
        overflow: "auto",
        renderChildrenWhenCollapsed: false,
        titleWithActions: false,
        inset: false
    };
    var Ee =  function(e) {
        ye(n, e);
        var t = he(n);
        // @docs-props-type CollapsiblePanelPropsBase
                function n(e) {
            var r;
            be(this, n);
            r = t.call(this, e);
            Se(Ce(r), "controlledExternally", void 0);
            Se(Ce(r), "containerId", void 0);
            Se(Ce(r), "toggleId", void 0);
            Se(Ce(r), "handleRequestClose", (function(e) {
                var t = r.props, n = t.panelId, a = t.onRequestClose;
                a === null || a === void 0 ? void 0 : a({
                    event: e,
                    panelId: n,
                    reason: "toggleClick"
                });
            }));
            Se(Ce(r), "handleRequestOpen", (function(e) {
                var t = r.props, n = t.panelId, a = t.onRequestOpen;
                a === null || a === void 0 ? void 0 : a({
                    event: e,
                    panelId: n,
                    reason: "toggleClick"
                });
            }));
            Se(Ce(r), "handleChange", (function(e) {
                var t, n;
                var a = r.props, o = a.panelId, i = a.onChange;
                var l = r.isOpen();
                if (!r.isControlled()) {
                    r.setState({
                        animating: true,
                        open: !l
                    });
                }
                var s = l ? "close" : "open";
                i === null || i === void 0 ? void 0 : i(e, {
                    panelId: o,
                    reason: "toggleClick",
                    action: s
                });
                (t = (n = r.context).onChange) === null || t === void 0 ? void 0 : t.call(n, e, {
                    panelId: o,
                    reason: "toggleClick",
                    action: s
                });
                // Maintains backwards compatibility until the `handleRequestClose` and `handleRequestOpen` handlers are removed in SUI-5
                                if (l) {
                    r.handleRequestClose(e);
                } else {
                    r.handleRequestOpen(e);
                }
            }));
            Se(Ce(r), "handleAnimationEnd", (function() {
                r.setState({
                    animating: false
                });
            }));
            r.controlledExternally = o()(e, "open");
            r.state = fe(fe({}, !r.isControlled() ? {
                open: e.defaultOpen || false
            } : undefined), {}, {
                animating: false
            });
            if (false) {}
            if (false) {}
            if (false) {}
            r.containerId = "container-".concat((0, b.createGUID)());
            r.toggleId = "toggle-".concat((0, b.createGUID)());
            return r;
        }
        // Only testing this in the scenario of a SingleOpenPanelGroup.
                me(n, [ {
            key: "componentDidMount",
            value: function e() {
                if (false) {}
            }
        }, {
            key: "componentDidUpdate",
            value: function e(t) {
                if (this.props.open !== t.open) {
                    this.setState({
                        animating: true
                    });
 // eslint-disable-line react/no-did-update-set-state
                                }
                if (false) {}
                if (false) {}
            }
            /**
     * SingleOpenPanelGroup already takes into account if it is controlled or not in determining openPanelId
     * so this.context.openPanelId is used for both the controlled and uncontrolled case.
     */        }, {
            key: "isOpen",
            value: function e() {
                var e = this.isControlled() ? this.props.open : this.state.open;
                var t = this.context.openPanelId !== undefined ? this.context.openPanelId === this.props.panelId : e;
                return t;
            }
 // Using all three handlers: `handleRequestClose` and `handleRequestOpen` and `handleChange` to test interoperability and maintain backwards compatibility until the open/close handlers are removed in SUI-5
                }, {
            key: "isControlled",
            value: function e() {
                return this.controlledExternally;
            }
        }, {
            key: "render",
            value: function e() {
                var t = this.props, a = t.innerBodyStyles, o = t.actions, i = t.children, s = t.description, p = t.disabled, u = t.elementRef, d = t.headingLevel, m = t.overflow, y = t.renderChildrenWhenCollapsed, g = t.title, h = t.titleWithActions, k = t.inset;
                var C = this.state.animating;
                var x = (0, b.createDOMID)("panel-toggle");
                var O = this.isOpen();
                var S = {
                    disabled: p,
                    onClick: this.handleChange,
                    id: this.toggleId,
                    "aria-controls": this.containerId,
                    "aria-expanded": O,
                    $open: !!O,
                    "data-test": "toggle"
                };
                
                return r().createElement(T, ue({
                    "data-test": "collapsible-panel",
                    elementRef: u
                }, c()(this.props, l()(n.propTypes))), h || o != null ?  r().createElement(B, {
                    $disabled: p
                },  r().createElement(W, ue({
                    appearance: "subtle",
                    "aria-label": (0, v._)("Panel"),
                    "aria-labelledby": x
                }, S),  r().createElement(U, {
                    open: !!O
                })),  r().createElement($, {
                    $titleWithActions: h,
                    "data-test": "title",
                    id: o != null ? x : undefined
                }, g), o != null &&  r().createElement(M, null, o)) : 
                
                /* Clickable component is not allowed to have role="heading" so it is wrapped with a span */
                r().createElement("span", {
                    "data-test": "heading",
                    role: d ? "heading" : undefined,
                    "aria-level": d
                },  r().createElement(L, S,  r().createElement(X, null,  r().createElement(U, {
                    open: !!O
                })),  r().createElement($, null,  r().createElement("span", {
                    "data-test": "title"
                }, g), s &&  r().createElement(G, {
                    "data-test": "description"
                }, s)))),  r().createElement(f(), {
                    outerId: this.containerId,
                    "aria-labelledby": this.toggleId,
                    "data-test": "body",
                    outerStyle: {
                        overflow: C ? "hidden" : m
                    },
                    innerStyle: fe({
                        tableLayout: "fixed"
                    }, a),
                    open: O,
                    onAnimationEnd: this.handleAnimationEnd,
                    role: o != null ? "region" : undefined,
                    renderChildrenWhenCollapsed: y
                },  r().createElement(H, {
                    $inset: k
                }, i)));
            }
        } ]);
        return n;
    }(n.Component);
    Se(Ee, "propTypes", Ie);
    Se(Ee, "defaultProps", je);
    Se(Ee, "contextType", V);
    /* harmony default export */    const _e = Ee;
    // CONCATENATED MODULE: ./src/CollapsiblePanel/index.ts
    module.exports = t;
    /******/})();