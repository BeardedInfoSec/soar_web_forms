/******/ (() => {
    // webpackBootstrap
    /******/ "use strict";
    /******/ // The require scope
    /******/    var e = {};
    /******/
    /************************************************************************/
    /******/ /* webpack/runtime/compat get default export */
    /******/    (() => {
        /******/ // getDefaultExport function for compatibility with non-harmony modules
        /******/ e.n = r => {
            /******/ var t = r && r.__esModule ? 
            /******/ () => r["default"]
            /******/ : () => r
            /******/;
            e.d(t, {
                a: t
            });
            /******/            return t;
            /******/        };
        /******/    })();
    /******/
    /******/ /* webpack/runtime/define property getters */
    /******/    (() => {
        /******/ // define getter functions for harmony exports
        /******/ e.d = (r, t) => {
            /******/ for (var n in t) {
                /******/ if (e.o(t, n) && !e.o(r, n)) {
                    /******/ Object.defineProperty(r, n, {
                        enumerable: true,
                        get: t[n]
                    });
                    /******/                }
                /******/            }
            /******/        };
        /******/    })();
    /******/
    /******/ /* webpack/runtime/hasOwnProperty shorthand */
    /******/    (() => {
        /******/ e.o = (e, r) => Object.prototype.hasOwnProperty.call(e, r)
        /******/;
    })();
    /******/
    /******/ /* webpack/runtime/make namespace object */
    /******/    (() => {
        /******/ // define __esModule on exports
        /******/ e.r = e => {
            /******/ if (typeof Symbol !== "undefined" && Symbol.toStringTag) {
                /******/ Object.defineProperty(e, Symbol.toStringTag, {
                    value: "Module"
                });
                /******/            }
            /******/            Object.defineProperty(e, "__esModule", {
                value: true
            });
            /******/        };
        /******/    })();
    /******/
    /************************************************************************/    var r = {};
    // ESM COMPAT FLAG
        e.r(r);
    // EXPORTS
        e.d(r, {
        Typography: () => /* reexport */ g,
        default: () => /* reexport */ m
    });
    // CONCATENATED MODULE: external "react"
    const t = require("react");
    var n =  e.n(t);
    // CONCATENATED MODULE: external "prop-types"
    const a = require("prop-types");
    var o =  e.n(a);
    // CONCATENATED MODULE: external "@splunk/themes/mixins"
    const i = require("@splunk/themes/mixins");
    var l =  e.n(i);
    // CONCATENATED MODULE: external "styled-components"
    const s = require("styled-components");
    var p =  e.n(s);
    // CONCATENATED MODULE: ./src/Typography/Typography.tsx
    function u() {
        return u = Object.assign ? Object.assign.bind() : function(e) {
            for (var r = 1; r < arguments.length; r++) {
                var t = arguments[r];
                for (var n in t) {
                    ({}).hasOwnProperty.call(t, n) && (e[n] = t[n]);
                }
            }
            return e;
        }, u.apply(null, arguments);
    }
    function y(e, r) {
        if (null == e) return {};
        var t, n, a = f(e, r);
        if (Object.getOwnPropertySymbols) {
            var o = Object.getOwnPropertySymbols(e);
            for (n = 0; n < o.length; n++) {
                t = o[n], r.includes(t) || {}.propertyIsEnumerable.call(e, t) && (a[t] = e[t]);
            }
        }
        return a;
    }
    function f(e, r) {
        if (null == e) return {};
        var t = {};
        for (var n in e) {
            if ({}.hasOwnProperty.call(e, n)) {
                if (r.includes(n)) continue;
                t[n] = e[n];
            }
        }
        return t;
    }
    // TODO: Remove in next major version (SUI-5350)
    // TODO: TypographyPropsBase should extend from TypographyParams (SUI-5343)
    // Weight is omitted because the types conflict since weight no longer supports number values in the mixin
    // but they are supported in the component to avoid a breaking change
        var c = {
        children: o().node.isRequired,
        as: o().string.isRequired,
        elementRef: o().oneOfType([ o().func, o().object ]),
        family: o().oneOf([ "sansSerif", "monospace" ]),
        variant: o().oneOf(i.typographyVariants),
        size: o().number,
        lineHeight: o().number,
        color: o().oneOf([ "active", "default", "disabled", "inverted", "muted", "inherit" ]),
        weight: o().oneOf([ 300, 400, 500, 600, 700, 800, 900, "light", "normal", "semiBold", "bold", "extraBold", "heavy" ]),
        withReset: o().bool
    };
    var d = p().p.withConfig({
        displayName: "Typography__StyledTypography",
        componentId: "cgxs34-0"
    })([ "", "" ], (function(e) {
        var r = e.$variant, t = e.$typographyParams;
        return r ? l().typography(r, t) : l().typography(t);
    }));
    var h = {
        300: "light",
        400: "normal",
        500: "semiBold",
        600: "semiBold",
        700: "bold",
        800: "extraBold",
        900: "heavy"
    };
    /**
 * Typography renders text content with styling based on the Splunk Design System.
 */    function g(e) {
        var r = e.children, t = e.as, a = e.elementRef, o = e.variant, i = e.family, l = e.size, s = e.lineHeight, p = e.color, f = e.weight, c = e.withReset, g = y(e, [ "children", "as", "elementRef", "variant", "family", "size", "lineHeight", "color", "weight", "withReset" ]);
        // @docs-props-type TypographyPropsBase
        // TODO: Remove in next major version (SUI-5350)
                if (false) {}
        var m = {
            family: i,
            size: l,
            lineHeight: s,
            color: p,
            withReset: c,
            weight: typeof f === "number" ? h[f] : f
        };
        
        return n().createElement(d, u({
            as: t,
            ref: a,
            "data-test": "typography",
            $variant: o,
            $typographyParams: m
        }, g), r);
    }
    g.propTypes = c;
    /* harmony default export */    const m = g;
    // CONCATENATED MODULE: ./src/Typography/index.ts
    module.exports = r;
    /******/})();