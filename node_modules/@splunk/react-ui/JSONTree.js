/******/ (() => {
    // webpackBootstrap
    /******/ "use strict";
    /******/    var e = {
        /***/ 4610: 
        /***/ (e, r, n) => {
            // EXPORTS
            n.d(r, {
                default: () => /* reexport */ ne
            });
            // UNUSED EXPORTS: TreeItem
            // EXTERNAL MODULE: external "react"
                        var t = n(9497);
            var o =  n.n(t);
            // EXTERNAL MODULE: external "prop-types"
                        var a = n(23);
            var i =  n.n(a);
            // EXTERNAL MODULE: external "@splunk/ui-utils/keyboard"
                        var l = n(5295);
            // CONCATENATED MODULE: ./src/Tree/TreeContext.tsx
            var u =  (0, t.createContext)({
                defaultIndent: true
            });
            /* harmony default export */            const c = u;
            // EXTERNAL MODULE: external "styled-components"
                        var f = n(232);
            var d =  n.n(f);
            // EXTERNAL MODULE: external "@splunk/themes"
                        var v = n(3563);
            // CONCATENATED MODULE: ./src/Tree/TreeItemStyles.ts
            var s = d().span.withConfig({
                displayName: "TreeItemStyles__StyledTreeItemContent",
                componentId: "ie7zrw-0"
            })([ "font-family:inherit;" ]);
            var p = d().span.withConfig({
                displayName: "TreeItemStyles__StyledTreeItemNode",
                componentId: "ie7zrw-1"
            })([ "&:focus{box-shadow:", ";outline:0;&:active{box-shadow:none;}}" ], v.variables.focusShadow);
            // CONCATENATED MODULE: ./src/Tree/TreeStyles.ts
            var y = d().ul.withConfig({
                displayName: "TreeStyles__StyledUnorderedList",
                componentId: "sc-13pokwt-0"
            })([ "", ";font-family:inherit;list-style:none;white-space:inherit;", ";" ], v.mixins.reset("ul"), (function(e) {
                var r = e.$defaultIndent;
                return r && (0, f.css)([ "padding-left:", ";" ], v.variables.spacingXXXLarge);
            }));
            // CONCATENATED MODULE: ./src/Tree/TreeItem.tsx
            function b() {
                b = Object.assign || function(e) {
                    for (var r = 1; r < arguments.length; r++) {
                        var n = arguments[r];
                        for (var t in n) {
                            if (Object.prototype.hasOwnProperty.call(n, t)) {
                                e[t] = n[t];
                            }
                        }
                    }
                    return e;
                };
                return b.apply(this, arguments);
            }
            function m(e, r) {
                return w(e) || k(e, r) || g(e, r) || h();
            }
            function h() {
                throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }
            function g(e, r) {
                if (!e) return;
                if (typeof e === "string") return S(e, r);
                var n = Object.prototype.toString.call(e).slice(8, -1);
                if (n === "Object" && e.constructor) n = e.constructor.name;
                if (n === "Map" || n === "Set") return Array.from(e);
                if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return S(e, r);
            }
            function S(e, r) {
                if (r == null || r > e.length) r = e.length;
                for (var n = 0, t = new Array(r); n < r; n++) {
                    t[n] = e[n];
                }
                return t;
            }
            function k(e, r) {
                if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(e))) return;
                var n = [];
                var t = true;
                var o = false;
                var a = undefined;
                try {
                    for (var i = e[Symbol.iterator](), l; !(t = (l = i.next()).done); t = true) {
                        n.push(l.value);
                        if (r && n.length === r) break;
                    }
                } catch (e) {
                    o = true;
                    a = e;
                } finally {
                    try {
                        if (!t && i["return"] != null) i["return"]();
                    } finally {
                        if (o) throw a;
                    }
                }
                return n;
            }
            function w(e) {
                if (Array.isArray(e)) return e;
            }
            function O(e, r) {
                if (e == null) return {};
                var n = x(e, r);
                var t, o;
                if (Object.getOwnPropertySymbols) {
                    var a = Object.getOwnPropertySymbols(e);
                    for (o = 0; o < a.length; o++) {
                        t = a[o];
                        if (r.indexOf(t) >= 0) continue;
                        if (!Object.prototype.propertyIsEnumerable.call(e, t)) continue;
                        n[t] = e[t];
                    }
                }
                return n;
            }
            function x(e, r) {
                if (e == null) return {};
                var n = {};
                var t = Object.keys(e);
                var o, a;
                for (a = 0; a < t.length; a++) {
                    o = t[a];
                    if (r.indexOf(o) >= 0) continue;
                    n[o] = e[o];
                }
                return n;
            }
            var I = {
                id: i().string,
                children: i().node,
                content: i().node,
                customIndent: i().node,
                endAdornment: i().node,
                labelledBy: i().string,
                onFocus: i().func,
                onKeyDown: i().func,
                onToggle: i().func,
                open: i().bool,
                toggle: i().node
            };
            function C(e) {
                var r = e.id, n = e.children, a = e.content, i = e.customIndent, l = e.endAdornment, u = e.labelledBy, f = e.onFocus, d = e.onKeyDown, v = e.onToggle, h = e.open, g = h === void 0 ? true : h, S = e.toggle, k = O(e, [ "id", "children", "content", "customIndent", "endAdornment", "labelledBy", "onFocus", "onKeyDown", "onToggle", "open", "toggle" ]);
                var w = (0, t.useContext)(c), x = w.defaultIndent, I = x === void 0 ? true : x, C = w.onItemKeyDown, j = w.onItemClick, E = w.removeNode, A = w.setNode, T = w.itemPaths, P = w.focusedItemId;
                var R = (0, t.useState)(g), K = m(R, 2), _ = K[0], N = K[1];
 // make first tree item tabbable
                                var D = (0, t.useState)((T === null || T === void 0 ? void 0 : T.get("".concat(r))) === "0" ? 0 : -1), V = m(D, 2), L = V[0], q = V[1];
                var F = (0, t.useRef)(null);
                var M = (0, t.useRef)(null);
                var $ = t.Children.toArray(n).filter(t.isValidElement);
                $.forEach((function(e, n) {
                    if (e.props.id) {
                        if (_ && A) {
                            A("".concat(e.props.id), "".concat(T === null || T === void 0 ? void 0 : T.get("".concat(r)), "-").concat(n));
                        } else if (E) {
                            E(e.props.id);
                        }
                    }
                }));
                var J = function e(r, n) {
                    N(r);
                    v === null || v === void 0 ? void 0 : v(r, n);
                };
                var U = function e(n) {
                    j === null || j === void 0 ? void 0 : j(n, r);
                };
                var B = function e(r) {
                    var n;
                    r.stopPropagation();
                    F === null || F === void 0 ? void 0 : (n = F.current) === null || n === void 0 ? void 0 : n.focus();
                    f === null || f === void 0 ? void 0 : f(r);
                };
                var H = function e() {
                    if ((T === null || T === void 0 ? void 0 : T.get("".concat(r))) === "0") {
                        q(0);
                    }
                };
                (0, t.useEffect)((function() {
                    if (P === r) {
                        var e;
                        M === null || M === void 0 ? void 0 : (e = M.current) === null || e === void 0 ? void 0 : e.focus();
                    }
                }), [ P, M ]);
                var X = function e(r) {
                    r.stopPropagation();
                };
                var z = function e(n) {
                    n.stopPropagation();
 // Used to ensure first item in Tree is tab navigable, i.e. in JSONTree when focus is manually set to the root item,
                    // this allows user to tab backwards to previous item. Tab index is reset to 0 onBlur.
                                        if (n.shiftKey && n.key === "Tab" && (T === null || T === void 0 ? void 0 : T.get("".concat(r))) === "0") {
                        q(-1);
                    }
                    C === null || C === void 0 ? void 0 : C(n, r, _, $, J);
                    d === null || d === void 0 ? void 0 : d(n);
                };
                var W = function e() {
                    if (!S) {
                        return undefined;
                    }
                    
                    return (0, t.cloneElement)(S, {
                        onClick: function e(r) {
                            var n, t;
                            J(!_, r);
                            U(r);
                            (n = (t = S.props).onClick) === null || n === void 0 ? void 0 : n.call(t, r);
                        },
                        "aria-expanded": _
                    });
                };
                
                return o().createElement("li", b({}, k, {
                    ref: M,
                    tabIndex: L,
                    onBlur: H,
                    onFocus: B,
                    onKeyDown: z,
                    role: "treeitem",
                    "aria-labelledby": u,
                    "aria-expanded": $.length ? _ : undefined
                }), i,  o().createElement(p, {
                    ref: F,
                    tabIndex: -1,
                    onFocus: X,
                    onClick: U
                },  o().createElement(s, null, a), W(), !_ && l), _ &&  o().createElement(o().Fragment, null,  o().createElement(y, {
                    role: "group",
                    $defaultIndent: I
                }, n), l));
            }
            C.propTypes = I;
            /* harmony default export */            const j = C;
            // CONCATENATED MODULE: ./src/Tree/treeUtils.ts
            function E(e, r) {
                return K(e) || R(e, r) || T(e, r) || A();
            }
            function A() {
                throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }
            function T(e, r) {
                if (!e) return;
                if (typeof e === "string") return P(e, r);
                var n = Object.prototype.toString.call(e).slice(8, -1);
                if (n === "Object" && e.constructor) n = e.constructor.name;
                if (n === "Map" || n === "Set") return Array.from(e);
                if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return P(e, r);
            }
            function P(e, r) {
                if (r == null || r > e.length) r = e.length;
                for (var n = 0, t = new Array(r); n < r; n++) {
                    t[n] = e[n];
                }
                return t;
            }
            function R(e, r) {
                if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(e))) return;
                var n = [];
                var t = true;
                var o = false;
                var a = undefined;
                try {
                    for (var i = e[Symbol.iterator](), l; !(t = (l = i.next()).done); t = true) {
                        n.push(l.value);
                        if (r && n.length === r) break;
                    }
                } catch (e) {
                    o = true;
                    a = e;
                } finally {
                    try {
                        if (!t && i["return"] != null) i["return"]();
                    } finally {
                        if (o) throw a;
                    }
                }
                return n;
            }
            function K(e) {
                if (Array.isArray(e)) return e;
            }
            /**
 * A helper function to get first key in Map that matches given value
 */            function _(e, r) {
                var n;
                var t = Array.from(e.entries());
                return (n = t.find((function(e) {
                    var n = E(e, 2), t = n[1];
                    return t === r;
                }))) === null || n === void 0 ? void 0 : n[0];
            }
            /**
 * A helper function to get parent path of current item path
 */            function N(e) {
                // remove last index number of the current item path string to get parent
                return e.split("-").slice(0, -1).join("-");
            }
            /**
 * A helper function to get next path of current item path in same level
 */            function D(e, r) {
                return e === null || e === void 0 ? void 0 : e.replace(/([^-]*)$/, "".concat(r + 1));
            }
            /**
 * A helper function to get the last index number of an item path string
 */            function V(e) {
                var r = e.split("-").pop();
                if (!r) {
                    return 0;
                }
                return parseInt(r, 10) || 0;
            }
            function L(e, r) {
                var n = e.get(r);
                if (!n) {
                    return r;
                }
                var t = N(n);
                return _(e, t) || r;
            }
            /**
 * A helper function for getNextTreeItem
 */            function q(e, r) {
                var n = N(r);
                if (!n) {
                    return _(e, r);
                }
 // get next node in the parent level
                                var t = V(n);
                var o = D(n, t);
                var a = _(e, o);
                if (a) {
                    return a;
                }
 // continue getting parents until find next node or reach root
                                return q(e, o);
            }
            function F(e, r) {
                var n = e.get(r);
                if (!n) {
                    return r;
                }
 // case where next tree item is the first visible child
                                var t = _(e, "".concat(n, "-0"));
                if (t) {
                    return t;
                }
 // case where next tree item is the next node in the same level
                                var o = V(n);
                var a = D(n, o);
                var i = _(e, a);
                if (i) {
                    return i;
                }
 // case where next tree item is a higher level or does not exist
                                return q(e, n) || r;
            }
            /**
 * A helper function for getPrevTreeItem
 */            function M(e, r) {
                var n = _(e, "".concat(r, "-0"));
                if (!n) {
                    return _(e, r);
                }
                var t = _(e, r);
                var o = "".concat(r, "-0");
 // get the last child in current node, and continue to find its children recursively
                                while (t) {
                    var a = V(o);
                    var i = D(o, a);
                    t = _(e, i);
                    if (t) {
                        o = i;
                    }
                }
                return M(e, o);
            }
            function $(e, r) {
                var n = e.get(r);
                if (!n) {
                    return r;
                }
                var t = V(n);
 // case where current is first child of parent or root item
                                if (t === 0) {
                    return L(e, r);
                }
 // case where previous tree item is or is a child of previous node in same level
                                var o = n.replace(/[^-]+$/, "".concat(t - 1));
                return M(e, o) || r;
            }
            function J(e) {
                return _(e, "0");
            }
            function U(e) {
                var r = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "0";
                var n = _(e, r);
                var t = r;
 // find last child in current node
                                while (n) {
                    var o = V(t);
                    n = _(e, D(t, o));
                    if (n) {
                        t = D(t, o);
                    }
                }
 // check if last child has children
                                var a = _(e, "".concat(t, "-0"));
                if (!a) {
                    return _(e, t);
                }
 // continue to find its last child recursively
                                t = "".concat(t, "-0");
                return U(e, t);
            }
            // CONCATENATED MODULE: ./src/Tree/Tree.tsx
            function B() {
                B = Object.assign || function(e) {
                    for (var r = 1; r < arguments.length; r++) {
                        var n = arguments[r];
                        for (var t in n) {
                            if (Object.prototype.hasOwnProperty.call(n, t)) {
                                e[t] = n[t];
                            }
                        }
                    }
                    return e;
                };
                return B.apply(this, arguments);
            }
            function H(e, r) {
                return Q(e) || G(e, r) || z(e, r) || X();
            }
            function X() {
                throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }
            function z(e, r) {
                if (!e) return;
                if (typeof e === "string") return W(e, r);
                var n = Object.prototype.toString.call(e).slice(8, -1);
                if (n === "Object" && e.constructor) n = e.constructor.name;
                if (n === "Map" || n === "Set") return Array.from(e);
                if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return W(e, r);
            }
            function W(e, r) {
                if (r == null || r > e.length) r = e.length;
                for (var n = 0, t = new Array(r); n < r; n++) {
                    t[n] = e[n];
                }
                return t;
            }
            function G(e, r) {
                if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(e))) return;
                var n = [];
                var t = true;
                var o = false;
                var a = undefined;
                try {
                    for (var i = e[Symbol.iterator](), l; !(t = (l = i.next()).done); t = true) {
                        n.push(l.value);
                        if (r && n.length === r) break;
                    }
                } catch (e) {
                    o = true;
                    a = e;
                } finally {
                    try {
                        if (!t && i["return"] != null) i["return"]();
                    } finally {
                        if (o) throw a;
                    }
                }
                return n;
            }
            function Q(e) {
                if (Array.isArray(e)) return e;
            }
            function Y(e, r) {
                if (e == null) return {};
                var n = Z(e, r);
                var t, o;
                if (Object.getOwnPropertySymbols) {
                    var a = Object.getOwnPropertySymbols(e);
                    for (o = 0; o < a.length; o++) {
                        t = a[o];
                        if (r.indexOf(t) >= 0) continue;
                        if (!Object.prototype.propertyIsEnumerable.call(e, t)) continue;
                        n[t] = e[t];
                    }
                }
                return n;
            }
            function Z(e, r) {
                if (e == null) return {};
                var n = {};
                var t = Object.keys(e);
                var o, a;
                for (a = 0; a < t.length; a++) {
                    o = t[a];
                    if (r.indexOf(o) >= 0) continue;
                    n[o] = e[o];
                }
                return n;
            }
            var ee = {
                children: i().node,
                defaultIndent: i().bool
            };
            function re(e) {
                var r = e.children, n = e.defaultIndent, a = n === void 0 ? true : n, i = Y(e, [ "children", "defaultIndent" ]);
                var u = (0, t.useState)(), f = H(u, 2), d = f[0], v = f[1];
                var s = new Map;
                var p = function e(r, n, t, o, a) {
                    var i = (0, l.keycode)(r.nativeEvent);
                    r.stopPropagation();
                    switch (i) {
                      case "up":
                        r.preventDefault();
                        v($(s, n));
                        break;

                      case "down":
                        r.preventDefault();
                        v(F(s, n));
                        break;

                      case "left":
                        r.preventDefault();
                        if (t && (o === null || o === void 0 ? void 0 : o.length)) {
                            a(false, r);
                        } else {
                            v(L(s, n));
                        }
                        break;

                      case "right":
                        r.preventDefault();
                        if (t && (o === null || o === void 0 ? void 0 : o.length)) {
                            v(F(s, n));
                        } else {
                            a(true, r);
                        }
                        break;

                      case "home":
                        r.preventDefault();
                        v(J(s));
                        break;

                      case "end":
                        r.preventDefault();
                        v(U(s));
                        break;

                      default:
 // do nothing
                                        }
                };
                var b = function e(r, n) {
                    r.preventDefault();
                    v(n);
                };
                var m = function e(r) {
                    s["delete"](r);
                };
                var h = function e(r, n) {
                    s.set(r, n);
                };
                var g = t.Children.toArray(r).filter(t.isValidElement);
                g.forEach((function(e, r) {
                    if (e.props.id && h) {
                        h("".concat(e.props.id), "".concat(r));
                    }
                }));
                
                return o().createElement(c.Provider, {
                    value: {
                        defaultIndent: a,
                        onItemKeyDown: p,
                        onItemClick: b,
                        removeNode: m,
                        setNode: h,
                        itemPaths: s,
                        focusedItemId: d
                    }
                },  o().createElement(y, B({
                    role: "tree",
                    $defaultIndent: a
                }, i), r));
            }
            re.propTypes = ee;
            re.TreeItem = j;
            /* harmony default export */            const ne = re;
        } // CONCATENATED MODULE: ./src/Tree/index.ts
        /***/ ,
        /***/ 3563: 
        /***/ e => {
            e.exports = require("@splunk/themes");
            /***/        },
        /***/ 5295: 
        /***/ e => {
            e.exports = require("@splunk/ui-utils/keyboard");
            /***/        },
        /***/ 23: 
        /***/ e => {
            e.exports = require("prop-types");
            /***/        },
        /***/ 9497: 
        /***/ e => {
            e.exports = require("react");
            /***/        },
        /***/ 232: 
        /***/ e => {
            e.exports = require("styled-components");
            /***/
            /******/        }
    };
    /************************************************************************/
    /******/ // The module cache
    /******/    var r = {};
    /******/
    /******/ // The require function
    /******/    function n(t) {
        /******/ // Check if module is in cache
        /******/ var o = r[t];
        /******/        if (o !== undefined) {
            /******/ return o.exports;
            /******/        }
        /******/ // Create a new module (and put it into the cache)
        /******/        var a = r[t] = {
            /******/ // no module.id needed
            /******/ // no module.loaded needed
            /******/ exports: {}
            /******/        };
        /******/
        /******/ // Execute the module function
        /******/        e[t](a, a.exports, n);
        /******/
        /******/ // Return the exports of the module
        /******/        return a.exports;
        /******/    }
    /******/
    /************************************************************************/
    /******/ /* webpack/runtime/compat get default export */
    /******/    (() => {
        /******/ // getDefaultExport function for compatibility with non-harmony modules
        /******/ n.n = e => {
            /******/ var r = e && e.__esModule ? 
            /******/ () => e["default"]
            /******/ : () => e
            /******/;
            n.d(r, {
                a: r
            });
            /******/            return r;
            /******/        };
        /******/    })();
    /******/
    /******/ /* webpack/runtime/define property getters */
    /******/    (() => {
        /******/ // define getter functions for harmony exports
        /******/ n.d = (e, r) => {
            /******/ for (var t in r) {
                /******/ if (n.o(r, t) && !n.o(e, t)) {
                    /******/ Object.defineProperty(e, t, {
                        enumerable: true,
                        get: r[t]
                    });
                    /******/                }
                /******/            }
            /******/        };
        /******/    })();
    /******/
    /******/ /* webpack/runtime/hasOwnProperty shorthand */
    /******/    (() => {
        /******/ n.o = (e, r) => Object.prototype.hasOwnProperty.call(e, r)
        /******/;
    })();
    /******/
    /******/ /* webpack/runtime/make namespace object */
    /******/    (() => {
        /******/ // define __esModule on exports
        /******/ n.r = e => {
            /******/ if (typeof Symbol !== "undefined" && Symbol.toStringTag) {
                /******/ Object.defineProperty(e, Symbol.toStringTag, {
                    value: "Module"
                });
                /******/            }
            /******/            Object.defineProperty(e, "__esModule", {
                value: true
            });
            /******/        };
        /******/    })();
    /******/
    /************************************************************************/    var t = {};
    // This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.
        (() => {
        // ESM COMPAT FLAG
        n.r(t);
        // EXPORTS
                n.d(t, {
            default: () => /* reexport */ xe
        });
        // EXTERNAL MODULE: external "react"
                var e = n(9497);
        var r =  n.n(e);
        // EXTERNAL MODULE: external "prop-types"
                var o = n(23);
        var a =  n.n(o);
        // CONCATENATED MODULE: external "lodash/isString"
        const i = require("lodash/isString");
        var l =  n.n(i);
        // EXTERNAL MODULE: external "styled-components"
                var u = n(232);
        var c =  n.n(u);
        // EXTERNAL MODULE: external "@splunk/themes"
                var f = n(3563);
        // CONCATENATED MODULE: ./src/JSONTree/JSONTreeStyles.ts
        var d = (0, u.css)([ "", ";", ";" ], f.mixins.reset("block"), f.mixins.typography({
            family: "monospace"
        }));
        var v = c().code.withConfig({
            displayName: "JSONTreeStyles__StyledScrollCode",
            componentId: "vrdt21-0"
        })([ "", ";overflow-x:auto;white-space:nowrap;" ], d);
        var s = c().code.withConfig({
            displayName: "JSONTreeStyles__StyledWrapCode",
            componentId: "vrdt21-1"
        })([ "", ";white-space:pre-wrap;" ], d);
        // CONCATENATED MODULE: external "lodash/fill"
        const p = require("lodash/fill");
        var y =  n.n(p);
        // CONCATENATED MODULE: external "lodash/isArray"
        const b = require("lodash/isArray");
        var m =  n.n(b);
        // CONCATENATED MODULE: external "lodash/isEmpty"
        const h = require("lodash/isEmpty");
        var g =  n.n(h);
        // CONCATENATED MODULE: external "lodash/isNumber"
        const S = require("lodash/isNumber");
        var k =  n.n(S);
        // CONCATENATED MODULE: external "lodash/isObject"
        const w = require("lodash/isObject");
        var O =  n.n(w);
        // CONCATENATED MODULE: external "lodash/keys"
        const x = require("lodash/keys");
        var I =  n.n(x);
        // CONCATENATED MODULE: external "lodash/repeat"
        const C = require("lodash/repeat");
        var j =  n.n(C);
        // CONCATENATED MODULE: external "@splunk/ui-utils/i18n"
        const E = require("@splunk/ui-utils/i18n");
        // EXTERNAL MODULE: external "@splunk/ui-utils/keyboard"
                var A = n(5295);
        // EXTERNAL MODULE: ./src/Tree/index.ts + 6 modules
                var T = n(4610);
        // CONCATENATED MODULE: ./src/JSONTree/JSONTreeItem.tsx
        function P() {
            P = Object.assign || function(e) {
                for (var r = 1; r < arguments.length; r++) {
                    var n = arguments[r];
                    for (var t in n) {
                        if (Object.prototype.hasOwnProperty.call(n, t)) {
                            e[t] = n[t];
                        }
                    }
                }
                return e;
            };
            return P.apply(this, arguments);
        }
        function R(e, r) {
            return V(e) || D(e, r) || _(e, r) || K();
        }
        function K() {
            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }
        function _(e, r) {
            if (!e) return;
            if (typeof e === "string") return N(e, r);
            var n = Object.prototype.toString.call(e).slice(8, -1);
            if (n === "Object" && e.constructor) n = e.constructor.name;
            if (n === "Map" || n === "Set") return Array.from(e);
            if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return N(e, r);
        }
        function N(e, r) {
            if (r == null || r > e.length) r = e.length;
            for (var n = 0, t = new Array(r); n < r; n++) {
                t[n] = e[n];
            }
            return t;
        }
        function D(e, r) {
            if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(e))) return;
            var n = [];
            var t = true;
            var o = false;
            var a = undefined;
            try {
                for (var i = e[Symbol.iterator](), l; !(t = (l = i.next()).done); t = true) {
                    n.push(l.value);
                    if (r && n.length === r) break;
                }
            } catch (e) {
                o = true;
                a = e;
            } finally {
                try {
                    if (!t && i["return"] != null) i["return"]();
                } finally {
                    if (o) throw a;
                }
            }
            return n;
        }
        function V(e) {
            if (Array.isArray(e)) return e;
        }
        function L(e, r) {
            if (e == null) return {};
            var n = q(e, r);
            var t, o;
            if (Object.getOwnPropertySymbols) {
                var a = Object.getOwnPropertySymbols(e);
                for (o = 0; o < a.length; o++) {
                    t = a[o];
                    if (r.indexOf(t) >= 0) continue;
                    if (!Object.prototype.propertyIsEnumerable.call(e, t)) continue;
                    n[t] = e[t];
                }
            }
            return n;
        }
        function q(e, r) {
            if (e == null) return {};
            var n = {};
            var t = Object.keys(e);
            var o, a;
            for (a = 0; a < t.length; a++) {
                o = t[a];
                if (r.indexOf(o) >= 0) continue;
                n[o] = e[o];
            }
            return n;
        }
        var F = {
            clickableKeyRef: a().object,
            clickableValRef: a().object,
            hasChildren: a().bool,
            indentArray: a().arrayOf(a().string),
            index: a().number,
            initialOpenState: a().bool,
            properties: a().arrayOf(a().string),
            propertyDataPath: a().string,
            propertyElement: a().node,
            renderExpandLink: a().func,
            representation: a().node,
            value: a().oneOfType([ a().string, a().object, a().array, a().number, a().bool ])
        };
        function M(n) {
            var t = n.clickableKeyRef, o = n.clickableValRef, a = n.hasChildren, i = n.indentArray, l = n.index, u = n.initialOpenState, c = n.onFocus, f = n.properties, d = n.propertyDataPath, v = n.propertyElement, s = n.renderExpandLink, p = n.representation, y = n.value, b = L(n, [ "clickableKeyRef", "clickableValRef", "hasChildren", "indentArray", "index", "initialOpenState", "onFocus", "properties", "propertyDataPath", "propertyElement", "renderExpandLink", "representation", "value" ]);
            var h = (0, e.useState)(u), g = R(h, 2), S = g[0], k = g[1];
            var w = function e(r) {
                k(r);
            };
            var O = (0, e.useRef)(null);
            var x = s ? s({
                open: S,
                withTooltip: true,
                expandLinkRef: O
            }) : {
                expandLink: undefined
            }, I = x.expandLink;
            var C = (f === null || f === void 0 ? void 0 : f.length) && l + 1 < (f === null || f === void 0 ? void 0 : f.length) ? "," : null;
            
            return r().createElement(T["default"].TreeItem, P({
                content:  r().createElement(r().Fragment, null, v, a && (m()(y) ? "[" : "{"), !a &&  r().createElement(r().Fragment, null, p, C)),
                customIndent: i,
                "data-test": a ? "node" : null,
                "data-test-path": d,
                endAdornment: a &&  r().createElement(r().Fragment, null, S && i, m()(y) ? "]" : "}", C),
                onFocus: function e(r) {
                    c === null || c === void 0 ? void 0 : c(r);
 // check if onFocus was triggered by a click event or expand link
                                        var n = r.relatedTarget === (t === null || t === void 0 ? void 0 : t.current) || r.relatedTarget === (o === null || o === void 0 ? void 0 : o.current) || r.relatedTarget === (O === null || O === void 0 ? void 0 : O.current) ? r.relatedTarget : null;
                    if (b.id === "root") {
                        var a;
                        O === null || O === void 0 ? void 0 : (a = O.current) === null || a === void 0 ? void 0 : a.focus();
                    }
                    if (!n) {
                        // if JSONTreeItem contains clickable keys/vals, focus should go there
                        if (v && (t === null || t === void 0 ? void 0 : t.current)) {
                            var i;
                            (i = t.current) === null || i === void 0 ? void 0 : i.focus();
                        } else if (o === null || o === void 0 ? void 0 : o.current) {
                            var l;
                            (l = o.current) === null || l === void 0 ? void 0 : l.focus();
                        }
                    } else {
                        n.focus();
                    }
                },
                onToggle: w,
                open: u,
                tabIndex: 0,
                toggle: a ? I : undefined
            }, b), a && p);
        }
        M.propTypes = F;
        // CONCATENATED MODULE: external "@splunk/react-ui/Clickable"
        const $ = require("@splunk/react-ui/Clickable");
        var J =  n.n($);
        // CONCATENATED MODULE: external "@splunk/react-ui/Tooltip"
        const U = require("@splunk/react-ui/Tooltip");
        var B =  n.n(U);
        // CONCATENATED MODULE: ./src/JSONTree/JSONTreeItemStyles.ts
        var H = {
            string: f.variables.syntaxTeal,
            number: f.variables.syntaxBlue,
            boolean: f.variables.syntaxPurple,
            null: f.variables.syntaxBrown,
            object: f.variables.contentColorDefault
        };
        var X = (0, u.css)([ "word-break:break-word;word-wrap:break-word;" ]);
        var z = (0, u.css)([ "white-space:nowrap;" ]);
        var W = (0, u.css)([ "color:", ";", ";" ], (function(e) {
            var r = e.valueType;
            return H[r];
        }), (function(e) {
            var r = e.overflowType;
            return r === "wrap" ? X : z;
        }));
        var G = c().span.withConfig({
            displayName: "JSONTreeItemStyles__StyledValue",
            componentId: "o558h3-0"
        })([ "", "" ], W);
        var Q = c()(J()).withConfig({
            displayName: "JSONTreeItemStyles__StyledValueInteractiveClickable",
            componentId: "o558h3-1"
        })([ "", " font-family:inherit;&:focus{box-shadow:0 0 1px 3px ", ";outline:0;&:active{box-shadow:none;}}&:hover{background-color:", ";}" ], W, f.variables.focusColor, (0, 
        f.pick)({
            enterprise: f.variables.backgroundColorHover,
            prisma: f.variables.interactiveColorOverlayHover
        }));
        var Y = (0, u.css)([ "font-weight:bold;color:", ";" ], (0, f.pick)({
            enterprise: {
                dark: "#ec9f98",
                light: f.variables.syntaxRed
            },
            prisma: f.variables.syntaxRed
        }));
        var Z = c().span.withConfig({
            displayName: "JSONTreeItemStyles__StyledProperty",
            componentId: "o558h3-2"
        })([ "", "" ], Y);
        var ee = c()(J()).withConfig({
            displayName: "JSONTreeItemStyles__StyledPropertyInteractiveClickable",
            componentId: "o558h3-3"
        })([ "", " font-family:inherit;&:focus{box-shadow:0 0 1px 3px ", ";outline:0;&:active{box-shadow:none;}}&:hover{background-color:", ";}" ], Y, f.variables.focusColor, (0, 
        f.pick)({
            enterprise: f.variables.backgroundColorHover,
            prisma: f.variables.interactiveColorOverlayHover
        }));
        var re = c()(J()).withConfig({
            displayName: "JSONTreeItemStyles__StyledExpandLinkClickable",
            componentId: "o558h3-4"
        })([ "cursor:pointer;color:", ";font-family:inherit;&:hover{background-color:", ";text-decoration:none;}&:focus{box-shadow:", ";&:active{box-shadow:none;}}", "" ], (0, 
        f.pick)({
            enterprise: {
                dark: f.variables.accentColorL20,
                light: f.variables.accentColorD20
            },
            prisma: f.variables.interactiveColorPrimary
        }), (0, f.pick)({
            enterprise: f.variables.backgroundColorHover,
            prisma: f.variables.interactiveColorOverlayHover
        }), f.variables.focusShadowInset, (0, f.pick)({
            prisma: (0, u.css)([ "border-radius:", ";" ], f.variables.borderRadius)
        }));
        var ne = c()(B()).withConfig({
            displayName: "JSONTreeItemStyles__StyledTooltip",
            componentId: "o558h3-5"
        })([ "font-family:", ";" ], f.variables.monoFontFamily);
        // CONCATENATED MODULE: ./src/JSONTree/renderTreeItems.tsx
        function te(e) {
            "@babel/helpers - typeof";
            if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
                te = function e(r) {
                    return typeof r;
                };
            } else {
                te = function e(r) {
                    return r && typeof Symbol === "function" && r.constructor === Symbol && r !== Symbol.prototype ? "symbol" : typeof r;
                };
            }
            return te(e);
        }
        function oe(e) {
            return ue(e) || le(e) || ie(e) || ae();
        }
        function ae() {
            throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }
        function ie(e, r) {
            if (!e) return;
            if (typeof e === "string") return ce(e, r);
            var n = Object.prototype.toString.call(e).slice(8, -1);
            if (n === "Object" && e.constructor) n = e.constructor.name;
            if (n === "Map" || n === "Set") return Array.from(e);
            if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return ce(e, r);
        }
        function le(e) {
            if (typeof Symbol !== "undefined" && Symbol.iterator in Object(e)) return Array.from(e);
        }
        function ue(e) {
            if (Array.isArray(e)) return ce(e);
        }
        function ce(e, r) {
            if (r == null || r > e.length) r = e.length;
            for (var n = 0, t = new Array(r); n < r; n++) {
                t[n] = e[n];
            }
            return t;
        }
        function fe(n) {
            var t = n.id, o = n.childKey, a = n.index, i = n.value, l = n.properties, u = n.propertyDataPath, c = n.obj, f = n.renderValue, d = n.renderKey, v = n.getInitialOpenState, s = n.indentArray, p = n.renderExpandLink, y = n.onFocus;
            var b = (0, e.useRef)(null);
            var h = (0, e.useRef)(null);
            var S = f({
                key: o,
                value: i,
                clickValueRef: b
            }), k = S.representation, w = S.clickableValRef;
            var x = !m()(c) ? d(o, h) : {
                propertyElement: undefined,
                clickableKeyRef: undefined
            }, I = x.propertyElement, C = x.clickableKeyRef;
            var j = O()(i) && !g()(i) || m()(i) && i.length > 0;
            
            return r().createElement(M, {
                id: t,
                propertyDataPath: u,
                propertyElement: I,
                hasChildren: j,
                initialOpenState: v(),
                representation: k,
                indentArray: s,
                value: i,
                index: a,
                properties: l,
                renderExpandLink: p,
                clickableKeyRef: C,
                clickableValRef: w,
                onFocus: function e() {
                    y(C, w);
                }
            });
        }
        function de(n) {
            var t = n.renderValue, o = n.obj;
            var a = (0, e.useRef)(null);
            var i = t({
                value: o,
                clickValueRef: a
            }), l = i.representation;
            
            return r().createElement(T["default"].TreeItem, {
                id: "0",
                "data-test-path": ".",
                content: l
            });
        }
        function ve(e) {
            var n = e.defaultOpen, t = n === void 0 ? false : n, o = e.expandChildren, a = o === void 0 ? false : o, i = e.expandChildrenOnShiftKey, u = i === void 0 ? false : i, c = e.indent, f = c === void 0 ? 4 : c, d = e.indentLevel, v = d === void 0 ? 1 : d, s = e.obj, p = e.onClickKey, b = e.onClickValue, h = e.overflow, S = h === void 0 ? "scroll" : h, w = e.path, x = w === void 0 ? [] : w, C = e.shift, T = e.updateShift;
            var P = y()(Array(v), j()(" ", f));
            var R;
            var K;
            var _ = function e() {
                if (a === true) {
                    return t;
                }
                if (a === "withShiftModifier" || u) {
                    return !!C;
                }
                return false;
            };
            var N = function e(r) {
                if (a === "withShiftModifier" || u) {
                    if (T != null) {
                        T(r.shiftKey);
                    }
                }
            };
            var D = function e(r, n) {
                var t, o;
                // When rendering a single value key is not present, here we prevent `[undefined]` in path
                                var a = n !== undefined ? [].concat(oe(x), [ n ]) : oe(x);
                var i = ".".concat(a.join("."));
                (t = K) === null || t === void 0 ? void 0 : (o = t.current) === null || o === void 0 ? void 0 : o.focus();
                p === null || p === void 0 ? void 0 : p(r, {
                    key: i,
                    keyPath: a
                });
            };
            var V = function e(r, n) {
                var t, o;
                // When rendering a single value key is not present, here we prevent `[undefined]` in path
                                var a = n !== undefined ? [].concat(oe(x), [ n ]) : oe(x);
                var i = ".".concat(a.join("."));
                (t = R) === null || t === void 0 ? void 0 : (o = t.current) === null || o === void 0 ? void 0 : o.focus();
                b === null || b === void 0 ? void 0 : b(r, {
                    key: i,
                    keyPath: a,
                    value: r.target.textContent
                });
            };
            var L = function e(r, n) {
                var t, o;
                var a = (0, A.keycode)(r.nativeEvent);
                if (a === "left" && p && ((t = K) === null || t === void 0 ? void 0 : t.current) && !n) {
                    var i;
                    r.stopPropagation();
                    (i = K.current) === null || i === void 0 ? void 0 : i.focus();
                }
                if (a === "right" && b && ((o = R) === null || o === void 0 ? void 0 : o.current) && n) {
                    var l;
                    r.stopPropagation();
                    (l = R.current) === null || l === void 0 ? void 0 : l.focus();
                }
            };
            var q = function e(n) {
                var t = n.open, o = n.withTooltip, a = n.expandLinkRef;
                var i = t ? "[-]" : "[+]";
                var l = t ? (0, E._)("Collapse all") : (0, E._)("Shift click to expand all");
                var c =  r().createElement(re, {
                    elementRef: a,
                    tabIndex: -1,
                    onClick: function e(r) {
                        N(r);
                    },
                    "aria-expanded": t,
                    "data-test": "toggle"
                }, " ", i, " ");
                if (u && o) {
                    return {
                        expandLink:  r().createElement(ne, {
                            contentRelationship: "description",
                            openDelay: "secondary",
                            defaultPlacement: "above",
                            content: (0, E._)(l)
                        }, c),
                        expandLinkRef: a
                    };
                }
                return {
                    expandLink: c,
                    expandLinkRef: a
                };
            };
            var F = function e(n) {
                var t = n.value, o = n.key, i = n.clickValueRef;
                var c;
                if (!O()(t)) {
                    if (typeof t === "string") {
                        c = '"'.concat(t, '"');
                    } else if (typeof t === "boolean") {
                        c = t.toString();
                    } else if (t === null) {
                        c = "null";
                    } else {
                        c = t;
                    }
                } else if (g()(t)) {
                    // isObject is true for arrays
                    c = m()(t) ? "[]" : "{}";
                } else {
                    c = ve({
                        defaultOpen: a === true,
                        expandChildren: a,
                        expandChildrenOnShiftKey: u,
                        onClickKey: p,
                        onClickValue: b,
                        overflow: S,
                        obj: t,
                        path: o !== undefined ? [].concat(oe(x), [ o ]) : oe(x),
                        indentLevel: v + 1,
                        shift: C,
                        updateShift: T
                    });
                }
                if (l()(c) || k()(c)) {
                    var f = t === null ? "null" : // TS: bigint, function, symbol are prevented by JSONElement type
                    te(t);
                    if (b) {
                        return {
                            representation:  r().createElement(Q, {
                                elementRef: i,
                                valueType: f,
                                overflowType: S,
                                onClick: function e(r) {
                                    R = i;
                                    V(r, o);
                                },
                                onKeyDown: function e(r) {
                                    L(r, false);
                                },
                                tabIndex: -1
                            }, c),
                            clickableValRef: i
                        };
                    }
                    return {
                        representation:  r().createElement(G, {
                            valueType: f,
                            overflowType: S
                        }, c)
                    };
                }
                return {
                    representation: c
                };
            };
            var $ = function e(n, t) {
                if (p) {
                    return {
                        propertyElement:  r().createElement("span", null,  r().createElement(ee, {
                            elementRef: t,
                            tabIndex: -1,
                            onClick: function e(r) {
                                K = t;
                                D(r, n);
                            },
                            onKeyDown: function e(r) {
                                L(r, true);
                            }
                        }, n), ":", " "),
                        clickableKeyRef: t
                    };
                }
                return {
                    propertyElement:  r().createElement("span", null,  r().createElement(Z, null, n), ":", " ")
                };
            };
            if (O()(s) && !g()(s) || m()(s) && s.length > 0) {
                var J = I()(s).map((function(e, n, t) {
                    var o = s[e];
 // TS: should be safe based on (recursive) JSONElement type
                                        var a = m()(s) ? parseInt(e, 10) : e;
                    var i = x.length === 0 ? ".".concat(a) : ".".concat(x.join("."), ".").concat(a);
                    
                    return r().createElement(fe, {
                        id: i,
                        key: i,
                        propertyDataPath: i,
                        childKey: a,
                        index: n,
                        value: o,
                        properties: t,
                        obj: s,
                        renderValue: F,
                        renderKey: $,
                        getInitialOpenState: _,
                        indentArray: P,
                        renderExpandLink: q,
                        onFocus: function e(r, n) {
                            K = r;
                            R = n;
                        }
                    });
                }));
                if (x.length === 0) {
                    var U = O()(s) && !g()(s) || m()(s) && s.length > 0;
                    
                    return r().createElement(M, {
                        id: "root",
                        propertyDataPath: ".",
                        key: ".",
                        hasChildren: U,
                        initialOpenState: t,
                        value: s,
                        index: 0,
                        renderExpandLink: q,
                        representation: J
                    });
                }
                return J;
            }
 // edge case: a single number/string/boolean being rendered (still valid JSON)
                        
            return r().createElement(de, {
                obj: s,
                renderValue: F
            });
        }
        // CONCATENATED MODULE: ./src/JSONTree/JSONTree.tsx
        function se() {
            se = Object.assign || function(e) {
                for (var r = 1; r < arguments.length; r++) {
                    var n = arguments[r];
                    for (var t in n) {
                        if (Object.prototype.hasOwnProperty.call(n, t)) {
                            e[t] = n[t];
                        }
                    }
                }
                return e;
            };
            return se.apply(this, arguments);
        }
        function pe(e, r) {
            return ge(e) || he(e, r) || be(e, r) || ye();
        }
        function ye() {
            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }
        function be(e, r) {
            if (!e) return;
            if (typeof e === "string") return me(e, r);
            var n = Object.prototype.toString.call(e).slice(8, -1);
            if (n === "Object" && e.constructor) n = e.constructor.name;
            if (n === "Map" || n === "Set") return Array.from(e);
            if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return me(e, r);
        }
        function me(e, r) {
            if (r == null || r > e.length) r = e.length;
            for (var n = 0, t = new Array(r); n < r; n++) {
                t[n] = e[n];
            }
            return t;
        }
        function he(e, r) {
            if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(e))) return;
            var n = [];
            var t = true;
            var o = false;
            var a = undefined;
            try {
                for (var i = e[Symbol.iterator](), l; !(t = (l = i.next()).done); t = true) {
                    n.push(l.value);
                    if (r && n.length === r) break;
                }
            } catch (e) {
                o = true;
                a = e;
            } finally {
                try {
                    if (!t && i["return"] != null) i["return"]();
                } finally {
                    if (o) throw a;
                }
            }
            return n;
        }
        function ge(e) {
            if (Array.isArray(e)) return e;
        }
        function Se(e, r) {
            if (e == null) return {};
            var n = ke(e, r);
            var t, o;
            if (Object.getOwnPropertySymbols) {
                var a = Object.getOwnPropertySymbols(e);
                for (o = 0; o < a.length; o++) {
                    t = a[o];
                    if (r.indexOf(t) >= 0) continue;
                    if (!Object.prototype.propertyIsEnumerable.call(e, t)) continue;
                    n[t] = e[t];
                }
            }
            return n;
        }
        function ke(e, r) {
            if (e == null) return {};
            var n = {};
            var t = Object.keys(e);
            var o, a;
            for (a = 0; a < t.length; a++) {
                o = t[a];
                if (r.indexOf(o) >= 0) continue;
                n[o] = e[o];
            }
            return n;
        }
        var we = {
            elementRef: a().oneOfType([ a().func, a().object ]),
            expandChildren: a().oneOfType([ a().bool, a().oneOf([ "withShiftModifier" ]) ]),
            indent: a().number,
            json: a().oneOfType([ a().string, a().object, a().array, a().number, a().bool ]).isRequired,
            onClickKey: a().func,
            onClickValue: a().func,
            overflow: a().oneOf([ "wrap", "scroll" ]),
            expandChildrenOnShiftKey: a().bool
        };
        /**
 * Used to visualize a JSON string.
 */        function Oe(n) {
            var t = n.elementRef, o = n.expandChildren, a = o === void 0 ? false : o, i = n.indent, u = i === void 0 ? 4 : i, c = n.json, f = n.onClickKey, d = n.onClickValue, p = n.overflow, y = p === void 0 ? "scroll" : p, b = n.expandChildrenOnShiftKey, m = b === void 0 ? false : b, h = Se(n, [ "elementRef", "expandChildren", "indent", "json", "onClickKey", "onClickValue", "overflow", "expandChildrenOnShiftKey" ]);
            // @docs-props-type JSONTreePropsBase
                        var g = l()(c) ? JSON.parse(c) : c;
            var S = y === "wrap" ? s : v;
            var k = (0, e.useState)(undefined), w = pe(k, 2), O = w[0], x = w[1];
            var I = function e(r) {
                x(r);
            };
            
            return r().createElement(S, se({
                "data-language": "language-json",
                "data-test": "json-tree",
                ref: t,
                role: "tree"
            }, h),  r().createElement(T["default"], {
                defaultIndent: false
            }, ve({
                defaultOpen: true,
                expandChildren: a,
                expandChildrenOnShiftKey: m,
                indent: u,
                obj: g,
                onClickKey: f,
                onClickValue: d,
                overflow: y,
                shift: O,
                updateShift: I
            })));
        }
        Oe.propTypes = we;
        /* harmony default export */        const xe = Oe;
    }) // CONCATENATED MODULE: ./src/JSONTree/index.ts
    ();
    module.exports = t;
    /******/})();