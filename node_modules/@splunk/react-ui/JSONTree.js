/******/ (() => {
    // webpackBootstrap
    /******/ "use strict";
    /******/    var e = {
        /***/ 8655: 
        /***/ (e, n, r) => {
            // EXPORTS
            r.d(n, {
                default: () => /* reexport */ fe
            });
            // UNUSED EXPORTS: Item
            // EXTERNAL MODULE: external "react"
                        var t = r(9497);
            var o =  r.n(t);
            // EXTERNAL MODULE: external "prop-types"
                        var a = r(23);
            var i =  r.n(a);
            // EXTERNAL MODULE: external "@splunk/ui-utils/keyboard"
                        var l = r(5295);
            // CONCATENATED MODULE: ./src/Tree/TreeContext.tsx
            var u =  (0, t.createContext)({
                defaultIndent: true
            });
            /* harmony default export */            const c = u;
            // EXTERNAL MODULE: external "styled-components"
                        var f = r(232);
            var d =  r.n(f);
            // EXTERNAL MODULE: external "@splunk/themes"
                        var s = r(3563);
            // CONCATENATED MODULE: ./src/Tree/ItemStyles.ts
            var v = d().span.withConfig({
                displayName: "ItemStyles__StyledTreeItemContentWrapper",
                componentId: "sc-1ig9nmy-0"
            })([ "display:inline-block;min-height:100%;" ]);
            var p = d().span.withConfig({
                displayName: "ItemStyles__StyledTreeItemIndent",
                componentId: "sc-1ig9nmy-1"
            })([ "display:inline;white-space:pre;" ]);
            var y = d().span.withConfig({
                displayName: "ItemStyles__StyledTreeItemContent",
                componentId: "sc-1ig9nmy-2"
            })([ "display:", ";min-height:100%;&:focus{outline:3px solid ", ";outline-offset:1px;&:active{outline:none;}}&:hover{background-color:", ";cursor:pointer;}" ], (function(e) {
                var n = e.$hasCustomIndent;
                return n ? "inline" : "inline-block";
            }), s.variables.focusColor, (0, s.pick)({
                dark: "rgba(255, 255, 255, 0.05)",
                light: "rgba(0, 0, 0, 0.03)"
            }));
            // CONCATENATED MODULE: ./src/Tree/TreeStyles.ts
            var m = d().ul.withConfig({
                displayName: "TreeStyles__StyledUnorderedList",
                componentId: "sc-13pokwt-0"
            })([ "", ";font-family:inherit;list-style:none;white-space:inherit;", ";" ], s.mixins.reset("ul"), (function(e) {
                var n = e.$defaultIndent;
                return n && (0, f.css)([ "padding-left:", ";" ], s.variables.spacingXXXLarge);
            }));
            // CONCATENATED MODULE: ./src/utils/updateReactRef.ts
            /**
 * Updates a React ref. Callback refs and object refs (from `createRef` and `useRef`) are supported.
 *
 * @param ref - The React callback or object ref. Can be `null` or `undefined`.
 * @param current - The new value of the ref.
 */
            function b(e, n) {
                if (e) {
                    if (typeof e === "function") {
                        e(n);
                    } else {
                        // the public signature of this util uses React.Ref<T> to mirror the way React types refs.
                        // the intention here is to signal "we will take care of setting 'current', not you".
                        e.current = n;
 // eslint-disable-line no-param-reassign
                                        }
                }
            }
            // CONCATENATED MODULE: ./src/Tree/Item.tsx
            function h(e) {
                "@babel/helpers - typeof";
                return h = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                    return typeof e;
                } : function(e) {
                    return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
                }, h(e);
            }
            function g() {
                return g = Object.assign ? Object.assign.bind() : function(e) {
                    for (var n = 1; n < arguments.length; n++) {
                        var r = arguments[n];
                        for (var t in r) {
                            ({}).hasOwnProperty.call(r, t) && (e[t] = r[t]);
                        }
                    }
                    return e;
                }, g.apply(null, arguments);
            }
            function S(e, n) {
                var r = Object.keys(e);
                if (Object.getOwnPropertySymbols) {
                    var t = Object.getOwnPropertySymbols(e);
                    n && (t = t.filter((function(n) {
                        return Object.getOwnPropertyDescriptor(e, n).enumerable;
                    }))), r.push.apply(r, t);
                }
                return r;
            }
            function k(e) {
                for (var n = 1; n < arguments.length; n++) {
                    var r = null != arguments[n] ? arguments[n] : {};
                    n % 2 ? S(Object(r), !0).forEach((function(n) {
                        O(e, n, r[n]);
                    })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : S(Object(r)).forEach((function(n) {
                        Object.defineProperty(e, n, Object.getOwnPropertyDescriptor(r, n));
                    }));
                }
                return e;
            }
            function O(e, n, r) {
                return (n = w(n)) in e ? Object.defineProperty(e, n, {
                    value: r,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[n] = r, e;
            }
            function w(e) {
                var n = I(e, "string");
                return "symbol" == h(n) ? n : n + "";
            }
            function I(e, n) {
                if ("object" != h(e) || !e) return e;
                var r = e[Symbol.toPrimitive];
                if (void 0 !== r) {
                    var t = r.call(e, n || "default");
                    if ("object" != h(t)) return t;
                    throw new TypeError("@@toPrimitive must return a primitive value.");
                }
                return ("string" === n ? String : Number)(e);
            }
            function x(e, n) {
                return P(e) || T(e, n) || j(e, n) || C();
            }
            function C() {
                throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }
            function j(e, n) {
                if (e) {
                    if ("string" == typeof e) return E(e, n);
                    var r = {}.toString.call(e).slice(8, -1);
                    return "Object" === r && e.constructor && (r = e.constructor.name), "Map" === r || "Set" === r ? Array.from(e) : "Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? E(e, n) : void 0;
                }
            }
            function E(e, n) {
                (null == n || n > e.length) && (n = e.length);
                for (var r = 0, t = Array(n); r < n; r++) {
                    t[r] = e[r];
                }
                return t;
            }
            function T(e, n) {
                var r = null == e ? null : "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
                if (null != r) {
                    var t, o, a, i, l = [], u = !0, c = !1;
                    try {
                        if (a = (r = r.call(e)).next, 0 === n) {
                            if (Object(r) !== r) return;
                            u = !1;
                        } else for (;!(u = (t = a.call(r)).done) && (l.push(t.value), l.length !== n); u = !0) {
                        }
                    } catch (e) {
                        c = !0, o = e;
                    } finally {
                        try {
                            if (!u && null != r["return"] && (i = r["return"](), Object(i) !== i)) return;
                        } finally {
                            if (c) throw o;
                        }
                    }
                    return l;
                }
            }
            function P(e) {
                if (Array.isArray(e)) return e;
            }
            function A(e, n) {
                if (null == e) return {};
                var r, t, o = R(e, n);
                if (Object.getOwnPropertySymbols) {
                    var a = Object.getOwnPropertySymbols(e);
                    for (t = 0; t < a.length; t++) {
                        r = a[t], n.includes(r) || {}.propertyIsEnumerable.call(e, r) && (o[r] = e[r]);
                    }
                }
                return o;
            }
            function R(e, n) {
                if (null == e) return {};
                var r = {};
                for (var t in e) {
                    if ({}.hasOwnProperty.call(e, t)) {
                        if (n.includes(t)) continue;
                        r[t] = e[t];
                    }
                }
                return r;
            }
            var K = {
                id: i().string,
                children: i().node,
                content: i().node,
                customIndent: i().node,
                elementRef: i().oneOfType([ i().func, i().object ]),
                endAdornment: i().node,
                expanded: i().bool,
                onFocus: i().func,
                onKeyDown: i().func,
                onToggleSelection: i().func,
                onToggleExpansion: i().func
            };
            /** @public */
            /** @public */            function D(e) {
                var n = e.id, r = e.children, a = e.content, i = e.customIndent, l = e.elementRef, u = e.endAdornment, f = e.expanded, d = e.onFocus, s = e.onKeyDown, h = e.onToggleExpansion, S = e.onToggleSelection, O = A(e, [ "id", "children", "content", "customIndent", "elementRef", "endAdornment", "expanded", "onFocus", "onKeyDown", "onToggleExpansion", "onToggleSelection" ]);
                // @docs-props-type TreeItemPropsBase
                                var w = (0, t.useContext)(c), I = w.defaultIndent, C = I === void 0 ? true : I, j = w.onItemKeyDown, E = w.onItemClick, T = w.removeNode, P = w.setNode, R = w.itemPaths, K = w.focusedItemId;
 // make first tree item tabbable
                                var D = (0, t.useState)((R === null || R === void 0 ? void 0 : R.get("".concat(n))) === "0" ? 0 : -1), _ = x(D, 2), N = _[0], V = _[1];
                var L = (0, t.useRef)(null);
                var q = (0, t.useRef)(null);
                var F = t.Children.toArray(r).filter(t.isValidElement);
                F.forEach((function(e, r) {
                    if (e.props.id) {
                        if (f && P) {
                            P("".concat(e.props.id), "".concat(R === null || R === void 0 ? void 0 : R.get("".concat(n)), "-").concat(r));
                        } else if (T) {
                            T(e.props.id);
                        }
                    }
                }));
                var M = (0, t.useCallback)((function(e) {
                    b(L, e);
                    b(l, e);
                }), [ l ]);
                var $ = (0, t.useCallback)((function(e) {
                    var n;
                    var r = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
                    // For consistency, if not provided but found in the event then add it to `data` on callback.
                    // This allows for common handling of both click and keyboard events in the consumer.
                                        var t = k({}, r);
                    if (!r.treeItemId && ((n = e.currentTarget) === null || n === void 0 ? void 0 : n.id)) {
                        t.treeItemId = e.currentTarget.id;
                    }
                    h === null || h === void 0 ? void 0 : h(e, t);
                }), [ h ]);
                var J = (0, t.useCallback)((function(e) {
                    E === null || E === void 0 ? void 0 : E(e, n);
                }), [ n, E ]);
                var U = (0, t.useCallback)((function(e) {
                    var n;
                    e.stopPropagation();
                    q === null || q === void 0 ? void 0 : (n = q.current) === null || n === void 0 ? void 0 : n.focus();
                    d === null || d === void 0 ? void 0 : d(e);
                }), [ d ]);
                var H = (0, t.useCallback)((function() {
                    if ((R === null || R === void 0 ? void 0 : R.get("".concat(n))) === "0") {
                        V(0);
                    }
                }), [ n, R ]);
                (0, t.useEffect)((function() {
                    if (K === n) {
                        var e;
                        L === null || L === void 0 ? void 0 : (e = L.current) === null || e === void 0 ? void 0 : e.focus();
                    }
                }), [ K, n, L ]);
                var B = (0, t.useCallback)((function(e) {
                    e.stopPropagation();
                }), []);
                var X = (0, t.useCallback)((function(e) {
                    e.stopPropagation();
                    if (e.key === " ") {
                        e.preventDefault();
                        S === null || S === void 0 ? void 0 : S(e, {
                            treeItemId: n
                        });
                        return;
                    }
                    // Used to ensure first item in Tree is tab navigable, i.e. in JSONTree when focus is manually set to the root item,
                    // this allows user to tab backwards to previous item. Tab index is reset to 0 onBlur.
                                        if (e.shiftKey && e.key === "Tab" && (R === null || R === void 0 ? void 0 : R.get("".concat(n))) === "0") {
                        V(-1);
                    }
                    j === null || j === void 0 ? void 0 : j(e, n, f, F, $);
                    s === null || s === void 0 ? void 0 : s(e);
                }), [ F, f, $, n, R, j, s, S ]);
                
                return o().createElement("li", g({
                    "data-test": "tree-item"
                }, O, {
                    id: n,
                    ref: M,
                    tabIndex: N,
                    onBlur: H,
                    onFocus: U,
                    onKeyDown: X,
                    role: "treeitem",
                    "aria-expanded": F.length ? f || "false" : undefined
                }),  o().createElement(v, null,  o().createElement(p, null, i),  o().createElement(y, {
                    $hasCustomIndent: !!i,
                    "data-test": "tree-item-content",
                    ref: q,
                    tabIndex: -1,
                    onFocus: B,
                    onClick: J
                }, a, !f && u)), f &&  o().createElement(o().Fragment, null,  o().createElement(m, {
                    role: "group",
                    $defaultIndent: C
                }, r), u));
            }
            D.propTypes = K;
            /* harmony default export */            const _ = D;
            // CONCATENATED MODULE: ./src/Tree/treeUtils.ts
            function N(e, n) {
                return M(e) || F(e, n) || L(e, n) || V();
            }
            function V() {
                throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }
            function L(e, n) {
                if (e) {
                    if ("string" == typeof e) return q(e, n);
                    var r = {}.toString.call(e).slice(8, -1);
                    return "Object" === r && e.constructor && (r = e.constructor.name), "Map" === r || "Set" === r ? Array.from(e) : "Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? q(e, n) : void 0;
                }
            }
            function q(e, n) {
                (null == n || n > e.length) && (n = e.length);
                for (var r = 0, t = Array(n); r < n; r++) {
                    t[r] = e[r];
                }
                return t;
            }
            function F(e, n) {
                var r = null == e ? null : "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
                if (null != r) {
                    var t, o, a, i, l = [], u = !0, c = !1;
                    try {
                        if (a = (r = r.call(e)).next, 0 === n) {
                            if (Object(r) !== r) return;
                            u = !1;
                        } else for (;!(u = (t = a.call(r)).done) && (l.push(t.value), l.length !== n); u = !0) {
                        }
                    } catch (e) {
                        c = !0, o = e;
                    } finally {
                        try {
                            if (!u && null != r["return"] && (i = r["return"](), Object(i) !== i)) return;
                        } finally {
                            if (c) throw o;
                        }
                    }
                    return l;
                }
            }
            function M(e) {
                if (Array.isArray(e)) return e;
            }
            /**
 * A helper function to get first key in Map that matches given value
 */            function $(e, n) {
                var r;
                var t = Array.from(e.entries());
                return (r = t.find((function(e) {
                    var r = N(e, 2), t = r[1];
                    return t === n;
                }))) === null || r === void 0 ? void 0 : r[0];
            }
            /**
 * A helper function to get parent path of current item path
 */            function J(e) {
                // remove last index number of the current item path string to get parent
                return e.split("-").slice(0, -1).join("-");
            }
            /**
 * A helper function to get next path of current item path in same level
 */            function U(e, n) {
                return e === null || e === void 0 ? void 0 : e.replace(/([^-]*)$/, "".concat(n + 1));
            }
            /**
 * A helper function to get the last index number of an item path string
 */            function H(e) {
                var n = e.split("-").pop();
                if (!n) {
                    return 0;
                }
                return parseInt(n, 10) || 0;
            }
            function B(e, n) {
                var r = e.get(n);
                if (!r) {
                    return n;
                }
                var t = J(r);
                return $(e, t) || n;
            }
            /**
 * A helper function for getNextTreeItem
 */            function X(e, n) {
                var r = J(n);
                if (!r) {
                    return $(e, n);
                }
                // get next node in the parent level
                                var t = H(r);
                var o = U(r, t);
                var a = $(e, o);
                if (a) {
                    return a;
                }
                // continue getting parents until find next node or reach root
                                return X(e, o);
            }
            function W(e, n) {
                var r = e.get(n);
                if (!r) {
                    return n;
                }
                // case where next tree item is the first visible child
                                var t = $(e, "".concat(r, "-0"));
                if (t) {
                    return t;
                }
                // case where next tree item is the next node in the same level
                                var o = H(r);
                var a = U(r, o);
                var i = $(e, a);
                if (i) {
                    return i;
                }
                // case where next tree item is a higher level or does not exist
                                return X(e, r) || n;
            }
            /**
 * A helper function for getPrevTreeItem
 */            function z(e, n) {
                var r = $(e, "".concat(n, "-0"));
                if (!r) {
                    return $(e, n);
                }
                var t = $(e, n);
                var o = "".concat(n, "-0");
                // get the last child in current node, and continue to find its children recursively
                                while (t) {
                    var a = H(o);
                    var i = U(o, a);
                    t = $(e, i);
                    if (t) {
                        o = i;
                    }
                }
                return z(e, o);
            }
            function G(e, n) {
                var r = e.get(n);
                if (!r) {
                    return n;
                }
                var t = H(r);
                // case where current is first child of parent or root item
                                if (t === 0) {
                    return B(e, n);
                }
                // case where previous tree item is or is a child of previous node in same level
                                var o = r.replace(/[^-]+$/, "".concat(t - 1));
                return z(e, o) || n;
            }
            function Q(e) {
                return $(e, "0");
            }
            function Y(e) {
                var n = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "0";
                var r = $(e, n);
                var t = n;
                // find last child in current node
                                while (r) {
                    var o = H(t);
                    r = $(e, U(t, o));
                    if (r) {
                        t = U(t, o);
                    }
                }
                // check if last child has children
                                var a = $(e, "".concat(t, "-0"));
                if (!a) {
                    return $(e, t);
                }
                // continue to find its last child recursively
                                t = "".concat(t, "-0");
                return Y(e, t);
            }
            // CONCATENATED MODULE: ./src/Tree/Tree.tsx
            function Z() {
                return Z = Object.assign ? Object.assign.bind() : function(e) {
                    for (var n = 1; n < arguments.length; n++) {
                        var r = arguments[n];
                        for (var t in r) {
                            ({}).hasOwnProperty.call(r, t) && (e[t] = r[t]);
                        }
                    }
                    return e;
                }, Z.apply(null, arguments);
            }
            function ee(e, n) {
                return ae(e) || oe(e, n) || re(e, n) || ne();
            }
            function ne() {
                throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
            }
            function re(e, n) {
                if (e) {
                    if ("string" == typeof e) return te(e, n);
                    var r = {}.toString.call(e).slice(8, -1);
                    return "Object" === r && e.constructor && (r = e.constructor.name), "Map" === r || "Set" === r ? Array.from(e) : "Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? te(e, n) : void 0;
                }
            }
            function te(e, n) {
                (null == n || n > e.length) && (n = e.length);
                for (var r = 0, t = Array(n); r < n; r++) {
                    t[r] = e[r];
                }
                return t;
            }
            function oe(e, n) {
                var r = null == e ? null : "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
                if (null != r) {
                    var t, o, a, i, l = [], u = !0, c = !1;
                    try {
                        if (a = (r = r.call(e)).next, 0 === n) {
                            if (Object(r) !== r) return;
                            u = !1;
                        } else for (;!(u = (t = a.call(r)).done) && (l.push(t.value), l.length !== n); u = !0) {
                        }
                    } catch (e) {
                        c = !0, o = e;
                    } finally {
                        try {
                            if (!u && null != r["return"] && (i = r["return"](), Object(i) !== i)) return;
                        } finally {
                            if (c) throw o;
                        }
                    }
                    return l;
                }
            }
            function ae(e) {
                if (Array.isArray(e)) return e;
            }
            function ie(e, n) {
                if (null == e) return {};
                var r, t, o = le(e, n);
                if (Object.getOwnPropertySymbols) {
                    var a = Object.getOwnPropertySymbols(e);
                    for (t = 0; t < a.length; t++) {
                        r = a[t], n.includes(r) || {}.propertyIsEnumerable.call(e, r) && (o[r] = e[r]);
                    }
                }
                return o;
            }
            function le(e, n) {
                if (null == e) return {};
                var r = {};
                for (var t in e) {
                    if ({}.hasOwnProperty.call(e, t)) {
                        if (n.includes(t)) continue;
                        r[t] = e[t];
                    }
                }
                return r;
            }
            var ue = {
                children: i().node,
                defaultIndent: i().bool,
                elementRef: i().oneOfType([ i().func, i().object ])
            };
            /**
 * Used to present a hierarchical list.
 */            function ce(e) {
                var n = e.children, r = e.defaultIndent, a = r === void 0 ? true : r, i = e.elementRef, u = ie(e, [ "children", "defaultIndent", "elementRef" ]);
                // @docs-props-type TreePropsBase
                                var f = (0, t.useState)(), d = ee(f, 2), s = d[0], v = d[1];
                var p = new Map;
                var y = function e(n, r, t, o, a) {
                    n.stopPropagation();
                    var i = (0, l.keycode)(n.nativeEvent);
                    var u = t && (o === null || o === void 0 ? void 0 : o.length);
                    switch (i) {
                      case "up":
                        n.preventDefault();
                        v(G(p, r));
                        break;

                      case "down":
                        n.preventDefault();
                        v(W(p, r));
                        break;

                      case "left":
                        n.preventDefault();
                        if (u) {
                            a(n, {
                                treeItemId: r
                            });
                        } else {
                            v(B(p, r));
                        }
                        break;

                      case "right":
                        n.preventDefault();
                        if (u) {
                            v(W(p, r));
                        } else {
                            a(n, {
                                treeItemId: r
                            });
                        }
                        break;

                      case "home":
                        n.preventDefault();
                        v(Q(p));
                        break;

                      case "end":
                        n.preventDefault();
                        v(Y(p));
                        break;

                      case "enter":
                        n.preventDefault();
                        a(n, {
                            treeItemId: r
                        });
                        break;

                      default:
 // do nothing
                                        }
                };
                var b = function e(n, r) {
                    n.preventDefault();
                    v(r);
                };
                var h = function e(n) {
                    p["delete"](n);
                };
                var g = function e(n, r) {
                    p.set(n, r);
                };
                var S = t.Children.toArray(n).filter(t.isValidElement);
                S.forEach((function(e, n) {
                    if (e.props.id && g) {
                        g("".concat(e.props.id), "".concat(n));
                    }
                }));
                var k = (0, t.useMemo)((function() {
                    return {
                        defaultIndent: a,
                        onItemKeyDown: y,
                        onItemClick: b,
                        removeNode: h,
                        setNode: g,
                        itemPaths: p,
                        focusedItemId: s
                    };
                }), [ a, s, p, y, h, g ]);
                
                return o().createElement(c.Provider, {
                    value: k
                },  o().createElement(m, Z({
                    "data-test": "tree",
                    ref: i,
                    role: "tree",
                    $defaultIndent: a
                }, u), n));
            }
            ce.propTypes = ue;
            ce.Item = _;
            /* harmony default export */            const fe = ce;
        } // CONCATENATED MODULE: ./src/Tree/index.ts
        /***/ ,
        /***/ 3563: 
        /***/ e => {
            e.exports = require("@splunk/themes");
            /***/        },
        /***/ 5295: 
        /***/ e => {
            e.exports = require("@splunk/ui-utils/keyboard");
            /***/        },
        /***/ 23: 
        /***/ e => {
            e.exports = require("prop-types");
            /***/        },
        /***/ 9497: 
        /***/ e => {
            e.exports = require("react");
            /***/        },
        /***/ 232: 
        /***/ e => {
            e.exports = require("styled-components");
            /***/
            /******/        }
    };
    /************************************************************************/
    /******/ // The module cache
    /******/    var n = {};
    /******/
    /******/ // The require function
    /******/    function r(t) {
        /******/ // Check if module is in cache
        /******/ var o = n[t];
        /******/        if (o !== undefined) {
            /******/ return o.exports;
            /******/        }
        /******/ // Create a new module (and put it into the cache)
        /******/        var a = n[t] = {
            /******/ // no module.id needed
            /******/ // no module.loaded needed
            /******/ exports: {}
            /******/        };
        /******/
        /******/ // Execute the module function
        /******/        e[t](a, a.exports, r);
        /******/
        /******/ // Return the exports of the module
        /******/        return a.exports;
        /******/    }
    /******/
    /************************************************************************/
    /******/ /* webpack/runtime/compat get default export */
    /******/    (() => {
        /******/ // getDefaultExport function for compatibility with non-harmony modules
        /******/ r.n = e => {
            /******/ var n = e && e.__esModule ? 
            /******/ () => e["default"]
            /******/ : () => e
            /******/;
            r.d(n, {
                a: n
            });
            /******/            return n;
            /******/        };
        /******/    })();
    /******/
    /******/ /* webpack/runtime/define property getters */
    /******/    (() => {
        /******/ // define getter functions for harmony exports
        /******/ r.d = (e, n) => {
            /******/ for (var t in n) {
                /******/ if (r.o(n, t) && !r.o(e, t)) {
                    /******/ Object.defineProperty(e, t, {
                        enumerable: true,
                        get: n[t]
                    });
                    /******/                }
                /******/            }
            /******/        };
        /******/    })();
    /******/
    /******/ /* webpack/runtime/hasOwnProperty shorthand */
    /******/    (() => {
        /******/ r.o = (e, n) => Object.prototype.hasOwnProperty.call(e, n)
        /******/;
    })();
    /******/
    /******/ /* webpack/runtime/make namespace object */
    /******/    (() => {
        /******/ // define __esModule on exports
        /******/ r.r = e => {
            /******/ if (typeof Symbol !== "undefined" && Symbol.toStringTag) {
                /******/ Object.defineProperty(e, Symbol.toStringTag, {
                    value: "Module"
                });
                /******/            }
            /******/            Object.defineProperty(e, "__esModule", {
                value: true
            });
            /******/        };
        /******/    })();
    /******/
    /************************************************************************/    var t = {};
    // This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.
        (() => {
        // ESM COMPAT FLAG
        r.r(t);
        // EXPORTS
                r.d(t, {
            default: () => /* reexport */ Ie
        });
        // EXTERNAL MODULE: external "react"
                var e = r(9497);
        var n =  r.n(e);
        // EXTERNAL MODULE: external "prop-types"
                var o = r(23);
        var a =  r.n(o);
        // CONCATENATED MODULE: external "lodash/isString"
        const i = require("lodash/isString");
        var l =  r.n(i);
        // EXTERNAL MODULE: external "styled-components"
                var u = r(232);
        var c =  r.n(u);
        // EXTERNAL MODULE: external "@splunk/themes"
                var f = r(3563);
        // CONCATENATED MODULE: ./src/JSONTree/JSONTreeStyles.ts
        var d = (0, u.css)([ "", ";", ";" ], f.mixins.reset("block"), f.mixins.typography({
            family: "monospace"
        }));
        var s = c().code.withConfig({
            displayName: "JSONTreeStyles__StyledScrollCode",
            componentId: "vrdt21-0"
        })([ "", ";overflow-x:auto;white-space:nowrap;" ], d);
        var v = c().code.withConfig({
            displayName: "JSONTreeStyles__StyledWrapCode",
            componentId: "vrdt21-1"
        })([ "", ";white-space:pre-wrap;" ], d);
        // CONCATENATED MODULE: external "lodash/fill"
        const p = require("lodash/fill");
        var y =  r.n(p);
        // CONCATENATED MODULE: external "lodash/isArray"
        const m = require("lodash/isArray");
        var b =  r.n(m);
        // CONCATENATED MODULE: external "lodash/isEmpty"
        const h = require("lodash/isEmpty");
        var g =  r.n(h);
        // CONCATENATED MODULE: external "lodash/isNumber"
        const S = require("lodash/isNumber");
        var k =  r.n(S);
        // CONCATENATED MODULE: external "lodash/isObject"
        const O = require("lodash/isObject");
        var w =  r.n(O);
        // CONCATENATED MODULE: external "lodash/keys"
        const I = require("lodash/keys");
        var x =  r.n(I);
        // CONCATENATED MODULE: external "lodash/repeat"
        const C = require("lodash/repeat");
        var j =  r.n(C);
        // CONCATENATED MODULE: external "@splunk/ui-utils/i18n"
        const E = require("@splunk/ui-utils/i18n");
        // EXTERNAL MODULE: external "@splunk/ui-utils/keyboard"
                var T = r(5295);
        // EXTERNAL MODULE: ./src/Tree/index.ts + 7 modules
                var P = r(8655);
        // CONCATENATED MODULE: ./src/JSONTree/JSONTreeItem.tsx
        function A() {
            return A = Object.assign ? Object.assign.bind() : function(e) {
                for (var n = 1; n < arguments.length; n++) {
                    var r = arguments[n];
                    for (var t in r) {
                        ({}).hasOwnProperty.call(r, t) && (e[t] = r[t]);
                    }
                }
                return e;
            }, A.apply(null, arguments);
        }
        function R(e, n) {
            return V(e) || N(e, n) || D(e, n) || K();
        }
        function K() {
            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }
        function D(e, n) {
            if (e) {
                if ("string" == typeof e) return _(e, n);
                var r = {}.toString.call(e).slice(8, -1);
                return "Object" === r && e.constructor && (r = e.constructor.name), "Map" === r || "Set" === r ? Array.from(e) : "Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? _(e, n) : void 0;
            }
        }
        function _(e, n) {
            (null == n || n > e.length) && (n = e.length);
            for (var r = 0, t = Array(n); r < n; r++) {
                t[r] = e[r];
            }
            return t;
        }
        function N(e, n) {
            var r = null == e ? null : "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
            if (null != r) {
                var t, o, a, i, l = [], u = !0, c = !1;
                try {
                    if (a = (r = r.call(e)).next, 0 === n) {
                        if (Object(r) !== r) return;
                        u = !1;
                    } else for (;!(u = (t = a.call(r)).done) && (l.push(t.value), l.length !== n); u = !0) {
                    }
                } catch (e) {
                    c = !0, o = e;
                } finally {
                    try {
                        if (!u && null != r["return"] && (i = r["return"](), Object(i) !== i)) return;
                    } finally {
                        if (c) throw o;
                    }
                }
                return l;
            }
        }
        function V(e) {
            if (Array.isArray(e)) return e;
        }
        function L(e, n) {
            if (null == e) return {};
            var r, t, o = q(e, n);
            if (Object.getOwnPropertySymbols) {
                var a = Object.getOwnPropertySymbols(e);
                for (t = 0; t < a.length; t++) {
                    r = a[t], n.includes(r) || {}.propertyIsEnumerable.call(e, r) && (o[r] = e[r]);
                }
            }
            return o;
        }
        function q(e, n) {
            if (null == e) return {};
            var r = {};
            for (var t in e) {
                if ({}.hasOwnProperty.call(e, t)) {
                    if (n.includes(t)) continue;
                    r[t] = e[t];
                }
            }
            return r;
        }
        var F = {
            clickableKeyRef: a().object,
            clickableValRef: a().object,
            hasChildren: a().bool,
            indentArray: a().arrayOf(a().string),
            index: a().number,
            initialOpenState: a().bool,
            properties: a().arrayOf(a().string),
            propertyDataPath: a().string,
            propertyElement: a().node,
            renderExpandLink: a().func,
            representation: a().node,
            value: a().oneOfType([ a().string, a().object, a().array, a().number, a().bool ])
        };
        function M(r) {
            var t = r.clickableKeyRef, o = r.clickableValRef, a = r.hasChildren, i = r.indentArray, l = r.index, u = r.initialOpenState, c = r.onFocus, f = r.properties, d = r.propertyDataPath, s = r.propertyElement, v = r.renderExpandLink, p = r.representation, y = r.value, m = L(r, [ "clickableKeyRef", "clickableValRef", "hasChildren", "indentArray", "index", "initialOpenState", "onFocus", "properties", "propertyDataPath", "propertyElement", "renderExpandLink", "representation", "value" ]);
            var h = (0, e.useState)(u), g = R(h, 2), S = g[0], k = g[1];
            var O = (0, e.useCallback)((function() {
                k((function(e) {
                    return !e;
                }));
            }), []);
            var w = (0, e.useRef)(null);
            var I = v ? v({
                onToggleExpansion: O,
                open: S,
                withTooltip: true,
                expandLinkRef: w
            }) : {
                expandLink: undefined
            }, x = I.expandLink;
            var C = (f === null || f === void 0 ? void 0 : f.length) && l + 1 < (f === null || f === void 0 ? void 0 : f.length) ? "," : null;
            
            return n().createElement(P["default"].Item, A({
                content:  n().createElement(n().Fragment, null, s, a && (b()(y) ? "[" : "{"), !a &&  n().createElement(n().Fragment, null, p, C), a && x),
                customIndent: i,
                "data-test": a ? "node" : null,
                "data-test-path": d,
                endAdornment: a &&  n().createElement(n().Fragment, null, S && i, b()(y) ? "]" : "}", C),
                expanded: S,
                onFocus: function e(n) {
                    c === null || c === void 0 ? void 0 : c(n);
                    // check if onFocus was triggered by a click event or expand link
                                        var r = n.relatedTarget === (t === null || t === void 0 ? void 0 : t.current) || n.relatedTarget === (o === null || o === void 0 ? void 0 : o.current) || n.relatedTarget === (w === null || w === void 0 ? void 0 : w.current) ? n.relatedTarget : null;
                    if (m.id === "root") {
                        var a;
                        w === null || w === void 0 ? void 0 : (a = w.current) === null || a === void 0 ? void 0 : a.focus();
                    }
                    if (!r) {
                        // if JSONTreeItem contains clickable keys/vals, focus should go there
                        if (s && (t === null || t === void 0 ? void 0 : t.current)) {
                            var i;
                            (i = t.current) === null || i === void 0 ? void 0 : i.focus();
                        } else if (o === null || o === void 0 ? void 0 : o.current) {
                            var l;
                            (l = o.current) === null || l === void 0 ? void 0 : l.focus();
                        }
                    } else {
                        r.focus();
                    }
                },
                onToggleExpansion: O,
                tabIndex: 0
            }, m), a && p);
        }
        M.propTypes = F;
        // CONCATENATED MODULE: external "@splunk/react-ui/Clickable"
        const $ = require("@splunk/react-ui/Clickable");
        var J =  r.n($);
        // CONCATENATED MODULE: external "@splunk/react-ui/Tooltip"
        const U = require("@splunk/react-ui/Tooltip");
        var H =  r.n(U);
        // CONCATENATED MODULE: ./src/JSONTree/JSONTreeItemStyles.ts
        var B = {
            string: f.variables.syntaxTeal,
            number: f.variables.syntaxBlue,
            boolean: f.variables.syntaxPurple,
            null: f.variables.syntaxBrown,
            object: f.variables.contentColorDefault
        };
        var X = (0, u.css)([ "word-break:break-word;word-wrap:break-word;" ]);
        var W = (0, u.css)([ "white-space:nowrap;" ]);
        var z = (0, u.css)([ "color:", ";", ";" ], (function(e) {
            var n = e.valueType;
            return B[n];
        }), (function(e) {
            var n = e.overflowType;
            return n === "wrap" ? X : W;
        }));
        var G = c().span.withConfig({
            displayName: "JSONTreeItemStyles__StyledValue",
            componentId: "o558h3-0"
        })([ "", "" ], z);
        var Q = c()(J()).withConfig({
            displayName: "JSONTreeItemStyles__StyledValueInteractiveClickable",
            componentId: "o558h3-1"
        })([ "", " font-family:inherit;&:focus{box-shadow:0 0 1px 3px ", ";outline:0;&:active{box-shadow:none;}}&:hover{background-color:", ";}" ], z, f.variables.focusColor, (0, 
        f.pick)({
            enterprise: f.variables.backgroundColorHover,
            prisma: f.variables.interactiveColorOverlayHover
        }));
        var Y = (0, u.css)([ "font-weight:bold;color:", ";" ], (0, f.pick)({
            enterprise: {
                dark: "#ec9f98",
                light: f.variables.syntaxRed
            },
            prisma: f.variables.syntaxRed
        }));
        var Z = c().span.withConfig({
            displayName: "JSONTreeItemStyles__StyledProperty",
            componentId: "o558h3-2"
        })([ "", "" ], Y);
        var ee = c()(J()).withConfig({
            displayName: "JSONTreeItemStyles__StyledPropertyInteractiveClickable",
            componentId: "o558h3-3"
        })([ "", " font-family:inherit;&:focus{box-shadow:0 0 1px 3px ", ";outline:0;&:active{box-shadow:none;}}&:hover{background-color:", ";}" ], Y, f.variables.focusColor, (0, 
        f.pick)({
            enterprise: f.variables.backgroundColorHover,
            prisma: f.variables.interactiveColorOverlayHover
        }));
        var ne = c()(J()).withConfig({
            displayName: "JSONTreeItemStyles__StyledExpandLinkClickable",
            componentId: "o558h3-4"
        })([ "cursor:pointer;color:", ";font-family:inherit;&:hover{background-color:", ";text-decoration:none;}&:focus{box-shadow:", ";&:active{box-shadow:none;}}", "" ], (0, 
        f.pick)({
            enterprise: {
                dark: f.variables.accentColorL20,
                light: f.variables.accentColorD20
            },
            prisma: f.variables.interactiveColorPrimary
        }), (0, f.pick)({
            enterprise: f.variables.backgroundColorHover,
            prisma: f.variables.interactiveColorOverlayHover
        }), f.variables.focusShadowInset, (0, f.pick)({
            prisma: (0, u.css)([ "border-radius:", ";" ], f.variables.borderRadius)
        }));
        var re = c()(H()).withConfig({
            displayName: "JSONTreeItemStyles__StyledTooltip",
            componentId: "o558h3-5"
        })([ "font-family:", ";" ], f.variables.monoFontFamily);
        // CONCATENATED MODULE: ./src/JSONTree/renderTreeItems.tsx
        function te(e) {
            "@babel/helpers - typeof";
            return te = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                return typeof e;
            } : function(e) {
                return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
            }, te(e);
        }
        function oe(e) {
            return ue(e) || le(e) || ie(e) || ae();
        }
        function ae() {
            throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }
        function ie(e, n) {
            if (e) {
                if ("string" == typeof e) return ce(e, n);
                var r = {}.toString.call(e).slice(8, -1);
                return "Object" === r && e.constructor && (r = e.constructor.name), "Map" === r || "Set" === r ? Array.from(e) : "Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? ce(e, n) : void 0;
            }
        }
        function le(e) {
            if ("undefined" != typeof Symbol && null != e[Symbol.iterator] || null != e["@@iterator"]) return Array.from(e);
        }
        function ue(e) {
            if (Array.isArray(e)) return ce(e);
        }
        function ce(e, n) {
            (null == n || n > e.length) && (n = e.length);
            for (var r = 0, t = Array(n); r < n; r++) {
                t[r] = e[r];
            }
            return t;
        }
        function fe(r) {
            var t = r.id, o = r.childKey, a = r.index, i = r.value, l = r.properties, u = r.propertyDataPath, c = r.obj, f = r.renderValue, d = r.renderKey, s = r.getInitialOpenState, v = r.indentArray, p = r.renderExpandLink, y = r.onFocus;
            var m = (0, e.useRef)(null);
            var h = (0, e.useRef)(null);
            var S = f({
                key: o,
                value: i,
                clickValueRef: m
            }), k = S.representation, O = S.clickableValRef;
            var I = !b()(c) ? d(o, h) : {
                propertyElement: undefined,
                clickableKeyRef: undefined
            }, x = I.propertyElement, C = I.clickableKeyRef;
            var j = w()(i) && !g()(i) || b()(i) && i.length > 0;
            
            return n().createElement(M, {
                id: t,
                propertyDataPath: u,
                propertyElement: x,
                hasChildren: j,
                initialOpenState: s(),
                representation: k,
                indentArray: v,
                value: i,
                index: a,
                properties: l,
                renderExpandLink: p,
                clickableKeyRef: C,
                clickableValRef: O,
                onFocus: function e() {
                    y(C, O);
                }
            });
        }
        function de(r) {
            var t = r.renderValue, o = r.obj;
            var a = (0, e.useRef)(null);
            var i = t({
                value: o,
                clickValueRef: a
            }), l = i.representation;
            
            return n().createElement(P["default"].Item, {
                id: "0",
                "data-test-path": ".",
                content: l
            });
        }
        function se(e) {
            var r = e.defaultOpen, t = r === void 0 ? false : r, o = e.expandChildren, a = o === void 0 ? false : o, i = e.expandChildrenOnShiftKey, u = i === void 0 ? false : i, c = e.indent, f = c === void 0 ? 4 : c, d = e.indentLevel, s = d === void 0 ? 1 : d, v = e.obj, p = e.onClickKey, m = e.onClickValue, h = e.overflow, S = h === void 0 ? "scroll" : h, O = e.path, I = O === void 0 ? [] : O, C = e.shift, P = e.updateShift;
            var A = y()(Array(s), j()(" ", f));
            var R;
            var K;
            var D = function e() {
                if (a === true) {
                    return t;
                }
                if (a === "withShiftModifier" || u) {
                    return !!C;
                }
                return false;
            };
            var _ = function e(n) {
                if (a === "withShiftModifier" || u) {
                    if (P != null) {
                        P(n.shiftKey);
                    }
                }
            };
            var N = function e(n, r) {
                var t, o;
                // When rendering a single value key is not present, here we prevent `[undefined]` in path
                                var a = r !== undefined ? [].concat(oe(I), [ r ]) : oe(I);
                var i = ".".concat(a.join("."));
                (t = K) === null || t === void 0 ? void 0 : (o = t.current) === null || o === void 0 ? void 0 : o.focus();
                p === null || p === void 0 ? void 0 : p(n, {
                    key: i,
                    keyPath: a
                });
            };
            var V = function e(n, r) {
                var t, o;
                // When rendering a single value key is not present, here we prevent `[undefined]` in path
                                var a = r !== undefined ? [].concat(oe(I), [ r ]) : oe(I);
                var i = ".".concat(a.join("."));
                (t = R) === null || t === void 0 ? void 0 : (o = t.current) === null || o === void 0 ? void 0 : o.focus();
                m === null || m === void 0 ? void 0 : m(n, {
                    key: i,
                    keyPath: a,
                    value: n.target.textContent
                });
            };
            var L = function e(n, r) {
                var t, o;
                var a = (0, T.keycode)(n.nativeEvent);
                if (a === "left" && p && ((t = K) === null || t === void 0 ? void 0 : t.current) && !r) {
                    var i;
                    n.stopPropagation();
                    (i = K.current) === null || i === void 0 ? void 0 : i.focus();
                }
                if (a === "right" && m && ((o = R) === null || o === void 0 ? void 0 : o.current) && r) {
                    var l;
                    n.stopPropagation();
                    (l = R.current) === null || l === void 0 ? void 0 : l.focus();
                }
            };
            var q = function e(r) {
                var t = r.onToggleExpansion, o = r.open, a = r.withTooltip, i = r.expandLinkRef;
                var l = o ? "[-]" : "[+]";
                var c = o ? (0, E._)("Collapse all") : (0, E._)("Shift click to expand all");
                var f =  n().createElement(ne, {
                    elementRef: i,
                    tabIndex: -1,
                    onClick: function e(n) {
                        _(n);
                        t === null || t === void 0 ? void 0 : t(n);
                    },
                    "aria-expanded": o,
                    "data-test": "toggle"
                }, " ", l, " ");
                if (u && a) {
                    return {
                        expandLink:  n().createElement(re, {
                            contentRelationship: "description",
                            openDelay: "secondary",
                            defaultPlacement: "above",
                            content: (0, E._)(c)
                        }, f),
                        expandLinkRef: i
                    };
                }
                return {
                    expandLink: f,
                    expandLinkRef: i
                };
            };
            var F = function e(r) {
                var t = r.value, o = r.key, i = r.clickValueRef;
                var c;
                if (!w()(t)) {
                    if (typeof t === "string") {
                        c = '"'.concat(t, '"');
                    } else if (typeof t === "boolean") {
                        c = t.toString();
                    } else if (t === null) {
                        c = "null";
                    } else {
                        c = t;
                    }
                } else if (g()(t)) {
                    // isObject is true for arrays
                    c = b()(t) ? "[]" : "{}";
                } else {
                    c = se({
                        defaultOpen: a === true,
                        expandChildren: a,
                        expandChildrenOnShiftKey: u,
                        onClickKey: p,
                        onClickValue: m,
                        overflow: S,
                        obj: t,
                        path: o !== undefined ? [].concat(oe(I), [ o ]) : oe(I),
                        indentLevel: s + 1,
                        shift: C,
                        updateShift: P
                    });
                }
                if (l()(c) || k()(c)) {
                    var f = t === null ? "null" : // TS: bigint, function, symbol are prevented by JSONElement type
                    te(t);
                    if (m) {
                        return {
                            representation:  n().createElement(Q, {
                                elementRef: i,
                                valueType: f,
                                overflowType: S,
                                onClick: function e(n) {
                                    R = i;
                                    V(n, o);
                                },
                                onKeyDown: function e(n) {
                                    L(n, false);
                                },
                                tabIndex: -1
                            }, c),
                            clickableValRef: i
                        };
                    }
                    return {
                        representation:  n().createElement(G, {
                            valueType: f,
                            overflowType: S
                        }, c)
                    };
                }
                return {
                    representation: c
                };
            };
            var $ = function e(r, t) {
                if (p) {
                    return {
                        propertyElement:  n().createElement("span", null,  n().createElement(ee, {
                            elementRef: t,
                            tabIndex: -1,
                            onClick: function e(n) {
                                K = t;
                                N(n, r);
                            },
                            onKeyDown: function e(n) {
                                L(n, true);
                            }
                        }, r), ":", " "),
                        clickableKeyRef: t
                    };
                }
                return {
                    propertyElement:  n().createElement("span", null,  n().createElement(Z, null, r), ":", " ")
                };
            };
            if (w()(v) && !g()(v) || b()(v) && v.length > 0) {
                var J = x()(v).map((function(e, r, t) {
                    var o = v[e];
 // TS: should be safe based on (recursive) JSONElement type
                                        var a = b()(v) ? parseInt(e, 10) : e;
                    var i = I.length === 0 ? ".".concat(a) : ".".concat(I.join("."), ".").concat(a);
                    
                    return n().createElement(fe, {
                        id: i,
                        key: i,
                        propertyDataPath: i,
                        childKey: a,
                        index: r,
                        value: o,
                        properties: t,
                        obj: v,
                        renderValue: F,
                        renderKey: $,
                        getInitialOpenState: D,
                        indentArray: A,
                        renderExpandLink: q,
                        onFocus: function e(n, r) {
                            K = n;
                            R = r;
                        }
                    });
                }));
                if (I.length === 0) {
                    var U = w()(v) && !g()(v) || b()(v) && v.length > 0;
                    
                    return n().createElement(M, {
                        id: "root",
                        propertyDataPath: ".",
                        key: ".",
                        hasChildren: U,
                        initialOpenState: t,
                        value: v,
                        index: 0,
                        renderExpandLink: q,
                        representation: J
                    });
                }
                return J;
            }
            // edge case: a single number/string/boolean being rendered (still valid JSON)
                        
            return n().createElement(de, {
                obj: v,
                renderValue: F
            });
        }
        // CONCATENATED MODULE: ./src/JSONTree/JSONTree.tsx
        function ve() {
            return ve = Object.assign ? Object.assign.bind() : function(e) {
                for (var n = 1; n < arguments.length; n++) {
                    var r = arguments[n];
                    for (var t in r) {
                        ({}).hasOwnProperty.call(r, t) && (e[t] = r[t]);
                    }
                }
                return e;
            }, ve.apply(null, arguments);
        }
        function pe(e, n) {
            return ge(e) || he(e, n) || me(e, n) || ye();
        }
        function ye() {
            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }
        function me(e, n) {
            if (e) {
                if ("string" == typeof e) return be(e, n);
                var r = {}.toString.call(e).slice(8, -1);
                return "Object" === r && e.constructor && (r = e.constructor.name), "Map" === r || "Set" === r ? Array.from(e) : "Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? be(e, n) : void 0;
            }
        }
        function be(e, n) {
            (null == n || n > e.length) && (n = e.length);
            for (var r = 0, t = Array(n); r < n; r++) {
                t[r] = e[r];
            }
            return t;
        }
        function he(e, n) {
            var r = null == e ? null : "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
            if (null != r) {
                var t, o, a, i, l = [], u = !0, c = !1;
                try {
                    if (a = (r = r.call(e)).next, 0 === n) {
                        if (Object(r) !== r) return;
                        u = !1;
                    } else for (;!(u = (t = a.call(r)).done) && (l.push(t.value), l.length !== n); u = !0) {
                    }
                } catch (e) {
                    c = !0, o = e;
                } finally {
                    try {
                        if (!u && null != r["return"] && (i = r["return"](), Object(i) !== i)) return;
                    } finally {
                        if (c) throw o;
                    }
                }
                return l;
            }
        }
        function ge(e) {
            if (Array.isArray(e)) return e;
        }
        function Se(e, n) {
            if (null == e) return {};
            var r, t, o = ke(e, n);
            if (Object.getOwnPropertySymbols) {
                var a = Object.getOwnPropertySymbols(e);
                for (t = 0; t < a.length; t++) {
                    r = a[t], n.includes(r) || {}.propertyIsEnumerable.call(e, r) && (o[r] = e[r]);
                }
            }
            return o;
        }
        function ke(e, n) {
            if (null == e) return {};
            var r = {};
            for (var t in e) {
                if ({}.hasOwnProperty.call(e, t)) {
                    if (n.includes(t)) continue;
                    r[t] = e[t];
                }
            }
            return r;
        }
        /** @public */
        /** @public */
        /** @public */        var Oe = {
            elementRef: a().oneOfType([ a().func, a().object ]),
            expandChildren: a().oneOfType([ a().bool, a().oneOf([ "withShiftModifier" ]) ]),
            indent: a().number,
            json: a().oneOfType([ a().string, a().object, a().array, a().number, a().bool ]).isRequired,
            onClickKey: a().func,
            onClickValue: a().func,
            overflow: a().oneOf([ "wrap", "scroll" ]),
            expandChildrenOnShiftKey: a().bool
        };
        /**
 * Used to visualize a JSON string.
 */        function we(r) {
            var t = r.elementRef, o = r.expandChildren, a = o === void 0 ? false : o, i = r.indent, u = i === void 0 ? 4 : i, c = r.json, f = r.onClickKey, d = r.onClickValue, p = r.overflow, y = p === void 0 ? "scroll" : p, m = r.expandChildrenOnShiftKey, b = m === void 0 ? false : m, h = Se(r, [ "elementRef", "expandChildren", "indent", "json", "onClickKey", "onClickValue", "overflow", "expandChildrenOnShiftKey" ]);
            // @docs-props-type JSONTreePropsBase
                        var g = l()(c) ? JSON.parse(c) : c;
            var S = y === "wrap" ? v : s;
            var k = (0, e.useState)(undefined), O = pe(k, 2), w = O[0], I = O[1];
            var x = function e(n) {
                I(n);
            };
            
            return n().createElement(S, ve({
                "data-language": "language-json",
                "data-test": "json-tree",
                ref: t,
                role: "tree"
            }, h),  n().createElement(P["default"], {
                defaultIndent: false
            }, se({
                defaultOpen: true,
                expandChildren: a,
                expandChildrenOnShiftKey: b,
                indent: u,
                obj: g,
                onClickKey: f,
                onClickValue: d,
                overflow: y,
                shift: w,
                updateShift: x
            })));
        }
        we.propTypes = Oe;
        /* harmony default export */        const Ie = we;
    }) // CONCATENATED MODULE: ./src/JSONTree/index.ts
    ();
    module.exports = t;
    /******/})();