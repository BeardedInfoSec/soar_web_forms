/******/ (() => {
    // webpackBootstrap
    /******/ "use strict";
    /******/    var e = {
        /***/ 2907: 
        /***/ (e, t, n) => {
            // EXPORTS
            n.d(t, {
                default: () => /* reexport */ i
            });
            // EXTERNAL MODULE: external "react"
                        var r = n(9497);
            // EXTERNAL MODULE: external "lodash/has"
                        var o = n(5919);
            var l =  n.n(o);
            // CONCATENATED MODULE: ./src/useControlled/useControlled.tsx
            /**
 * This is a private component not intended for use outside @splunk/react-ui
 *
 * A hook that accepts a default value (as used in an uncontrolled component)
 * and validates that actions that aren't valid in an uncontrolled component
 * such as updating the default value, combining default value with value, etc.
 * are not happening.
 *
 * Return the controlled state of the component.
 */
            function a(e) {
                var t = e.componentProps, n = e.componentName, o = n === void 0 ? "this component" : n, a = e.defaultValuePropName, i = a === void 0 ? "defaultValue" : a, u = e.valuePropName, c = u === void 0 ? "value" : u;
                var s = (0, r.useRef)(l()(t, c));
                var f = (0, r.useRef)(t[i]);
                (0, r.useEffect)((function() {
                    if (false) {}
                }), [ o, t, i, c ]);
                (0, r.useEffect)((function() {
                    if (false) {}
                    if (false) {}
                }), [ o, t, i, c ]);
                return s.current;
            }
            /* harmony default export */            const i = a;
        } // CONCATENATED MODULE: ./src/useControlled/index.ts
        /***/ ,
        /***/ 5919: 
        /***/ e => {
            e.exports = require("lodash/has");
            /***/        },
        /***/ 9497: 
        /***/ e => {
            e.exports = require("react");
            /***/
            /******/        }
    };
    /************************************************************************/
    /******/ // The module cache
    /******/    var t = {};
    /******/
    /******/ // The require function
    /******/    function n(r) {
        /******/ // Check if module is in cache
        /******/ var o = t[r];
        /******/        if (o !== undefined) {
            /******/ return o.exports;
            /******/        }
        /******/ // Create a new module (and put it into the cache)
        /******/        var l = t[r] = {
            /******/ // no module.id needed
            /******/ // no module.loaded needed
            /******/ exports: {}
            /******/        };
        /******/
        /******/ // Execute the module function
        /******/        e[r](l, l.exports, n);
        /******/
        /******/ // Return the exports of the module
        /******/        return l.exports;
        /******/    }
    /******/
    /************************************************************************/
    /******/ /* webpack/runtime/compat get default export */
    /******/    (() => {
        /******/ // getDefaultExport function for compatibility with non-harmony modules
        /******/ n.n = e => {
            /******/ var t = e && e.__esModule ? 
            /******/ () => e["default"]
            /******/ : () => e
            /******/;
            n.d(t, {
                a: t
            });
            /******/            return t;
            /******/        };
        /******/    })();
    /******/
    /******/ /* webpack/runtime/define property getters */
    /******/    (() => {
        /******/ // define getter functions for harmony exports
        /******/ n.d = (e, t) => {
            /******/ for (var r in t) {
                /******/ if (n.o(t, r) && !n.o(e, r)) {
                    /******/ Object.defineProperty(e, r, {
                        enumerable: true,
                        get: t[r]
                    });
                    /******/                }
                /******/            }
            /******/        };
        /******/    })();
    /******/
    /******/ /* webpack/runtime/hasOwnProperty shorthand */
    /******/    (() => {
        /******/ n.o = (e, t) => Object.prototype.hasOwnProperty.call(e, t)
        /******/;
    })();
    /******/
    /******/ /* webpack/runtime/make namespace object */
    /******/    (() => {
        /******/ // define __esModule on exports
        /******/ n.r = e => {
            /******/ if (typeof Symbol !== "undefined" && Symbol.toStringTag) {
                /******/ Object.defineProperty(e, Symbol.toStringTag, {
                    value: "Module"
                });
                /******/            }
            /******/            Object.defineProperty(e, "__esModule", {
                value: true
            });
            /******/        };
        /******/    })();
    /******/
    /************************************************************************/    var r = {};
    // This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.
        (() => {
        // ESM COMPAT FLAG
        n.r(r);
        // EXPORTS
                n.d(r, {
            Divider: () => /* reexport */ T.Divider,
            Heading: () => /* reexport */ T.Heading,
            Option: () => /* reexport */ Bt,
            default: () => /* reexport */ ln
        });
        // EXTERNAL MODULE: external "react"
                var e = n(9497);
        var t =  n.n(e);
        // CONCATENATED MODULE: external "prop-types"
        const o = require("prop-types");
        var l =  n.n(o);
        // EXTERNAL MODULE: external "lodash/has"
                var a = n(5919);
        var i =  n.n(a);
        // CONCATENATED MODULE: external "@splunk/ui-utils/i18n"
        const u = require("@splunk/ui-utils/i18n");
        // CONCATENATED MODULE: external "lodash/castArray"
        const c = require("lodash/castArray");
        var s =  n.n(c);
        // CONCATENATED MODULE: external "lodash/find"
        const f = require("lodash/find");
        var p =  n.n(f);
        // CONCATENATED MODULE: external "lodash/forEachRight"
        const d = require("lodash/forEachRight");
        var v =  n.n(d);
        // CONCATENATED MODULE: external "lodash/includes"
        const b = require("lodash/includes");
        var m =  n.n(b);
        // CONCATENATED MODULE: external "lodash/memoize"
        const y = require("lodash/memoize");
        var h =  n.n(y);
        // CONCATENATED MODULE: external "lodash/pick"
        const g = require("lodash/pick");
        var O =  n.n(g);
        // CONCATENATED MODULE: external "lodash/uniq"
        const S = require("lodash/uniq");
        var C =  n.n(S);
        // CONCATENATED MODULE: external "lodash/without"
        const k = require("lodash/without");
        var w =  n.n(k);
        // CONCATENATED MODULE: external "@splunk/react-ui/Dropdown"
        const x = require("@splunk/react-ui/Dropdown");
        var j =  n.n(x);
        // CONCATENATED MODULE: external "@splunk/react-ui/Link"
        const P = require("@splunk/react-ui/Link");
        var E =  n.n(P);
        // CONCATENATED MODULE: external "@splunk/react-ui/Menu"
        const T = require("@splunk/react-ui/Menu");
        // CONCATENATED MODULE: external "@splunk/react-ui/ResultsMenu"
        const R = require("@splunk/react-ui/ResultsMenu");
        var A =  n.n(R);
        // CONCATENATED MODULE: external "@splunk/react-ui/Text"
        const _ = require("@splunk/react-ui/Text");
        var I =  n.n(_);
        // CONCATENATED MODULE: external "@splunk/react-ui/ScreenReaderContent"
        const M = require("@splunk/react-ui/ScreenReaderContent");
        var L =  n.n(M);
        // CONCATENATED MODULE: external "@splunk/react-ui/usePrevious"
        const q = require("@splunk/react-ui/usePrevious");
        var D =  n.n(q);
        // CONCATENATED MODULE: external "@splunk/ui-utils/filter"
        const B = require("@splunk/ui-utils/filter");
        // CONCATENATED MODULE: external "@splunk/ui-utils/id"
        const V = require("@splunk/ui-utils/id");
        // CONCATENATED MODULE: external "@splunk/ui-utils/keyboard"
        const N = require("@splunk/ui-utils/keyboard");
        // CONCATENATED MODULE: external "@splunk/react-icons/CaretSmallDown"
        const K = require("@splunk/react-icons/CaretSmallDown");
        var F =  n.n(K);
        // CONCATENATED MODULE: external "@splunk/react-icons/enterprise/Caret"
        const H = require("@splunk/react-icons/enterprise/Caret");
        var z =  n.n(H);
        // CONCATENATED MODULE: external "@splunk/themes"
        const $ = require("@splunk/themes");
        // CONCATENATED MODULE: ./src/Select/icons/CaretSmallDown.tsx
        var W = function e() {
            var n = (0, $.useSplunkTheme)(), r = n.isEnterprise;
            var o = r ?  t().createElement(z(), {
                screenReaderText: null,
                hideDefaultTooltip: true,
                size: .5
            }) :  t().createElement(F(), null);
            return o;
        };
        /* harmony default export */        const U = W;
        // CONCATENATED MODULE: external "@splunk/react-icons/enterprise/Search"
        const J = require("@splunk/react-icons/enterprise/Search");
        var X =  n.n(J);
        // CONCATENATED MODULE: external "@splunk/react-icons/Magnifier"
        const G = require("@splunk/react-icons/Magnifier");
        var Q =  n.n(G);
        // CONCATENATED MODULE: ./src/Select/icons/Search.tsx
        var Y = function e() {
            var n = (0, $.useSplunkTheme)(), r = n.isEnterprise, o = n.isCompact;
            var l = (0, u._)("Search");
            var a = o ? "20px" : "24px";
            var i = r ?  t().createElement(X(), {
                role: "presentation",
                size: "16px",
                screenReaderText: l,
                hideDefaultTooltip: true
            }) :  t().createElement(Q(), {
                role: "presentation",
                "aria-label": l,
                width: a,
                height: a
            });
            return i;
        };
        /* harmony default export */        const Z = Y;
        // CONCATENATED MODULE: ./src/Select/OptionBase.tsx
        function ee(e) {
            "@babel/helpers - typeof";
            return ee = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                return typeof e;
            } : function(e) {
                return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
            }, ee(e);
        }
        function te() {
            return te = Object.assign ? Object.assign.bind() : function(e) {
                for (var t = 1; t < arguments.length; t++) {
                    var n = arguments[t];
                    for (var r in n) {
                        ({}).hasOwnProperty.call(n, r) && (e[r] = n[r]);
                    }
                }
                return e;
            }, te.apply(null, arguments);
        }
        function ne(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var r = Object.getOwnPropertySymbols(e);
                t && (r = r.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable;
                }))), n.push.apply(n, r);
            }
            return n;
        }
        function re(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = null != arguments[t] ? arguments[t] : {};
                t % 2 ? ne(Object(n), !0).forEach((function(t) {
                    oe(e, t, n[t]);
                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : ne(Object(n)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t));
                }));
            }
            return e;
        }
        function oe(e, t, n) {
            return (t = le(t)) in e ? Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = n, e;
        }
        function le(e) {
            var t = ae(e, "string");
            return "symbol" == ee(t) ? t : t + "";
        }
        function ae(e, t) {
            if ("object" != ee(e) || !e) return e;
            var n = e[Symbol.toPrimitive];
            if (void 0 !== n) {
                var r = n.call(e, t || "default");
                if ("object" != ee(r)) return r;
                throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === t ? String : Number)(e);
        }
        function ie(e, t) {
            if (null == e) return {};
            var n, r, o = ue(e, t);
            if (Object.getOwnPropertySymbols) {
                var l = Object.getOwnPropertySymbols(e);
                for (r = 0; r < l.length; r++) {
                    n = l[r], t.includes(n) || {}.propertyIsEnumerable.call(e, n) && (o[n] = e[n]);
                }
            }
            return o;
        }
        function ue(e, t) {
            if (null == e) return {};
            var n = {};
            for (var r in e) {
                if ({}.hasOwnProperty.call(e, r)) {
                    if (t.includes(r)) continue;
                    n[r] = e[r];
                }
            }
            return n;
        }
        var ce = {
            /** @private */
            active: l().bool,
            children: l().node,
            description: l().string,
            descriptionPosition: l().oneOf([ "right", "bottom" ]),
            disabled: l().bool,
            elementRef: l().oneOfType([ l().func, l().object ]),
            hidden: l().bool,
            icon: l().node,
            label: l().string.isRequired,
            /**
   * @private Passed down from <BaseSelect>
   */
            multiple: l().bool,
            matchRanges: l().arrayOf(l().shape({
                start: l().number.isRequired,
                end: l().number.isRequired
            })),
            /** @private */
            onClick: l().func,
            /** @private */
            role: l().oneOf([ "menuitemcheckbox", "option" ]),
            /** @private */
            selected: l().oneOfType([ l().bool, l().oneOf([ "some" ]) ]),
            truncate: l().bool,
            value: l().oneOfType([ l().string, l().number, l().bool ]).isRequired
        };
        /**
 * An option within a `Multiselect`.
 */        function se(n) {
            var r = n.children, o = n.descriptionPosition, l = o === void 0 ? "bottom" : o, a = n.disabled, i = n.elementRef, u = n.icon, c = n.label, s = n.multiple, f = n.onClick, p = n.role, d = p === void 0 ? "option" : p, v = n.value, b = ie(n, [ "children", "descriptionPosition", "disabled", "elementRef", "icon", "label", "multiple", "onClick", "role", "value" ]);
            // @docs-props-type OptionPropsBase
                        var m = (0, e.useCallback)((function(e) {
                if (!a) {
                    f === null || f === void 0 ? void 0 : f(e, {
                        value: v
                    });
                }
            }), [ a, f, v ]);
            var y = v.toString();
            var h = re({
                descriptionPosition: l,
                disabled: a
            }, b);
            
            return t().createElement(T.Item, te({
                "data-test-value": v,
                "data-test": "option",
                elementRef: i
            }, h, {
                selectable: true,
                selectableAppearance: s ? "checkbox" : "checkmark",
                startAdornment: u,
                onClick: m,
                role: d,
                value: y
            }), r || c);
        }
        se.propTypes = ce;
        se.type = T.Item;
 // For components to distinguish if their children are Options or Headings/Dividers
        /* harmony default export */        const fe = se;
        // CONCATENATED MODULE: ./src/Select/SelectAllOption.tsx
        var pe = {
            active: l().bool,
            changedToggle: l().bool,
            elementRef: l().oneOfType([ l().func, l().object ]),
            id: l().string,
            onClick: l().func,
            selectAllLabel: l().string,
            selected: l().oneOf([ false, true, "some" ]),
            totalCount: l().number
        };
        function de(e) {
            var n = e.active, r = e.elementRef, o = e.id, l = e.onClick, a = e.selectAllLabel, i = e.totalCount, u = e.changedToggle, c = e.selected;
            // When toggle is changed the total count is not displayed anymore so the count is now shown in the Select all menu item
                        var s = u ? " (".concat(i === null || i === void 0 ? void 0 : i.toString(), ")") : "";
            
            return t().createElement(fe, {
                active: n,
                elementRef: r,
                "aria-keyshortcuts": "Control+A",
                "data-test": "select-all",
                description: "".concat(s, " Ctrl-a"),
                descriptionPosition: "right",
                id: o,
                key: "selectAll",
                label: a,
                multiple: true,
                onClick: l,
                role: "menuitemcheckbox",
                selected: c,
                tabIndex: -1,
                value: "selectAll"
            });
        }
        de.propTypes = pe;
        /* harmony default export */        const ve = de;
        // CONCATENATED MODULE: external "styled-components"
        const be = require("styled-components");
        var me =  n.n(be);
        // CONCATENATED MODULE: external "@splunk/react-ui/Button"
        const ye = require("@splunk/react-ui/Button");
        var he =  n.n(ye);
        // CONCATENATED MODULE: ./src/Select/SelectBaseStyles.ts
        var ge = me()(he()).withConfig({
            displayName: "SelectBaseStyles__StyledButton",
            componentId: "sc-16cj7sk-0"
        })([ "&[data-inline]{width:", ";}", "" ], (function(e) {
            var t = e.$multiple;
            return t ? "400px" : "auto";
        }), (function(e) {
            var t = e.$multiple;
            return !t && "flex-grow: 0;";
        }));
        var Oe = me().span.withConfig({
            displayName: "SelectBaseStyles__StyledLinkIcon",
            componentId: "sc-16cj7sk-1"
        })([ "padding-right:2px;" ]);
        var Se = me().span.withConfig({
            displayName: "SelectBaseStyles__StyledLinkCaret",
            componentId: "sc-16cj7sk-2"
        })([ "padding-left:2px;" ]);
        var Ce = me().div.withConfig({
            displayName: "SelectBaseStyles__StyledFilter",
            componentId: "sc-16cj7sk-3"
        })([ "padding:", ";min-width:160px;" ], (0, $.pick)({
            enterprise: "8px",
            prisma: "10px 16px"
        }));
        var ke = me().span.withConfig({
            displayName: "SelectBaseStyles__StyledSearchIconWrapper",
            componentId: "sc-16cj7sk-4"
        })([ "color:", ";pointer-events:none;padding:", ";" ], (0, $.pick)({
            enterprise: {
                light: $.variables.gray60,
                dark: $.variables.white
            },
            prisma: $.variables.contentColorMuted
        }), (0, $.pick)({
            comfortable: "0 8px",
            compact: "0 6px"
        }));
        var we = me().span.withConfig({
            displayName: "SelectBaseStyles__StyledCount",
            componentId: "sc-16cj7sk-5"
        })([ "padding-right:", ";" ], $.variables.spacingXSmall);
        var xe = me()(E()).withConfig({
            displayName: "SelectBaseStyles__StyledControlsLink",
            componentId: "sc-16cj7sk-6"
        })([ "margin-right:20px;", ";" ], (function(e) {
            var t = e.$disabled;
            return t && (0, be.css)([ "color:", ";" ], $.variables.contentColorDisabled);
        }));
        var je = me().div.withConfig({
            displayName: "SelectBaseStyles__StyledToggleAllControls",
            componentId: "sc-16cj7sk-7"
        })([ "padding:", ";", "" ], (0, $.pick)({
            enterprise: "5px 8px",
            prisma: "10px 16px"
        }), (0, $.pickVariant)("$placement", {
            above: {
                enterprise: (0, be.css)([ "border-top:", ";" ], $.variables.border),
                prisma: (0, be.css)([ "border-top:1px solid ", ";" ], $.variables.neutral200)
            },
            below: {
                enterprise: (0, be.css)([ "border-bottom:", ";" ], $.variables.border),
                prisma: (0, be.css)([ "border-bottom:1px solid ", ";" ], $.variables.neutral200)
            }
        }));
        // EXTERNAL MODULE: ./src/useControlled/index.ts + 1 modules
                var Pe = n(2907);
        // CONCATENATED MODULE: ./src/utils/fuzzyMatch.ts
        // A utility for matching keyboard characters to list values
        var Ee = function e(t, n) {
            return t ? t.label.charAt(n).toLowerCase() : "";
        };
        var Te = function e(t, n) {
            if (!t.length) {
                return t;
            }
            var r = null;
            var o = false;
            var l = t.filter((function(e) {
                var t = Ee(e, n.index);
                if (t === n.value) {
                    o = true;
                    return true;
                }
                // If we haven't found a match yet, keep track of the next closest match.
                // Secondary matching looks for the closest character of a higher value, and failing that, closest of a lower value.
                                if (!o) {
                    var l = Ee(r, n.index);
                    if (!l) {
                        r = e;
                    } else if (t > n.value) {
                        if (l < n.value) {
                            r = e;
                        } else if (l > t) {
                            r = e;
                        }
                    } else if (t > l) {
                        r = e;
                    }
                }
                return false;
            }));
            return l.length === 0 && r ? [ r ] : l;
        };
        // CONCATENATED MODULE: ./src/utils/scrollIntoViewIfNeeded.ts
        // A utility that attempts to move an element into view by scrolling it's derived parent.
        var Re = function e(t) {
            if (!t) {
                return;
            }
            var n = t.offsetParent;
            if (!n) {
                return;
            }
            // Below the bottom of the container.
                        if (n.scrollTop + n.clientHeight < t.offsetTop + t.clientHeight) {
                n.scrollTop = t.offsetTop + t.clientHeight - n.clientHeight;
                // Above the top of the container.
                        } else if (n.scrollTop > t.offsetTop) {
                n.scrollTop = t.offsetTop;
            }
        };
        // CONCATENATED MODULE: ./src/utils/ssrDocument.ts
        /* eslint-disable @typescript-eslint/no-empty-function */
        var Ae = {
            body: {
                appendChild: function e() {
                    return [];
                }
            },
            addEventListener: function e() {},
            removeEventListener: function e() {},
            activeElement: {
                blur: function e() {},
                nodeName: ""
            },
            querySelector: function e() {
                return null;
            },
            querySelectorAll: function e() {
                return [];
            },
            getElementById: function e() {
                return null;
            },
            createEvent: function e() {
                return {
                    initEvent: function e() {}
                };
            },
            createElement: function e() {
                return {
                    children: [],
                    childNodes: [],
                    style: {},
                    setAttribute: function e() {},
                    getElementsByTagName: function e() {
                        return [];
                    }
                };
            },
            createElementNS: function e() {
                return {};
            },
            importNode: function e() {
                return null;
            },
            location: {
                hash: "",
                host: "",
                hostname: "",
                href: "",
                origin: "",
                pathname: "",
                protocol: "",
                search: ""
            }
        };
        function _e() {
            var e = typeof document !== "undefined" ? document : Ae;
            return e;
        }
        var Ie = _e();
        /* harmony default export */        const Me = /* unused pure expression or super */ null && Ie;
        // CONCATENATED MODULE: ./src/utils/ssrWindow.ts
        /* eslint-disable @typescript-eslint/no-empty-function */
        var Le = {
            document: Ae,
            navigator: {
                userAgent: ""
            },
            location: {
                hash: "",
                host: "",
                hostname: "",
                href: "",
                origin: "",
                pathname: "",
                protocol: "",
                search: ""
            },
            history: {
                replaceState: function e() {},
                pushState: function e() {},
                go: function e() {},
                back: function e() {}
            },
            CustomEvent: function e() {
                return this;
            },
            addEventListener: function e() {},
            removeEventListener: function e() {},
            getComputedStyle: function e() {
                return {
                    getPropertyValue: function e() {
                        return "";
                    }
                };
            },
            Image: function e() {},
            Date: function e() {},
            screen: {},
            setTimeout: function e() {},
            clearTimeout: function e() {},
            matchMedia: function e() {
                return {};
            },
            requestAnimationFrame: function e(t) {
                if (typeof setTimeout === "undefined") {
                    t();
                    return null;
                }
                return setTimeout(t, 0);
            },
            cancelAnimationFrame: function e(t) {
                if (typeof setTimeout === "undefined") {
                    return;
                }
                clearTimeout(t);
            }
        };
        function qe() {
            var e = typeof window !== "undefined" ? window : Le;
            return e;
        }
        var De = qe();
        /* harmony default export */        const Be = /* unused pure expression or super */ null && De;
        // CONCATENATED MODULE: ./src/Select/SelectBase.tsx
        function Ve(e) {
            return Fe(e) || Ke(e) || We(e) || Ne();
        }
        function Ne() {
            throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }
        function Ke(e) {
            if ("undefined" != typeof Symbol && null != e[Symbol.iterator] || null != e["@@iterator"]) return Array.from(e);
        }
        function Fe(e) {
            if (Array.isArray(e)) return Ue(e);
        }
        function He() {
            return He = Object.assign ? Object.assign.bind() : function(e) {
                for (var t = 1; t < arguments.length; t++) {
                    var n = arguments[t];
                    for (var r in n) {
                        ({}).hasOwnProperty.call(n, r) && (e[r] = n[r]);
                    }
                }
                return e;
            }, He.apply(null, arguments);
        }
        function ze(e, t) {
            return Xe(e) || Je(e, t) || We(e, t) || $e();
        }
        function $e() {
            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }
        function We(e, t) {
            if (e) {
                if ("string" == typeof e) return Ue(e, t);
                var n = {}.toString.call(e).slice(8, -1);
                return "Object" === n && e.constructor && (n = e.constructor.name), "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? Ue(e, t) : void 0;
            }
        }
        function Ue(e, t) {
            (null == t || t > e.length) && (t = e.length);
            for (var n = 0, r = Array(t); n < t; n++) {
                r[n] = e[n];
            }
            return r;
        }
        function Je(e, t) {
            var n = null == e ? null : "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
            if (null != n) {
                var r, o, l, a, i = [], u = !0, c = !1;
                try {
                    if (l = (n = n.call(e)).next, 0 === t) {
                        if (Object(n) !== n) return;
                        u = !1;
                    } else for (;!(u = (r = l.call(n)).done) && (i.push(r.value), i.length !== t); u = !0) {
                    }
                } catch (e) {
                    c = !0, o = e;
                } finally {
                    try {
                        if (!u && null != n["return"] && (a = n["return"](), Object(a) !== a)) return;
                    } finally {
                        if (c) throw o;
                    }
                }
                return i;
            }
        }
        function Xe(e) {
            if (Array.isArray(e)) return e;
        }
        function Ge(e, t) {
            if (null == e) return {};
            var n, r, o = Qe(e, t);
            if (Object.getOwnPropertySymbols) {
                var l = Object.getOwnPropertySymbols(e);
                for (r = 0; r < l.length; r++) {
                    n = l[r], t.includes(n) || {}.propertyIsEnumerable.call(e, n) && (o[n] = e[n]);
                }
            }
            return o;
        }
        function Qe(e, t) {
            if (null == e) return {};
            var n = {};
            for (var r in e) {
                if ({}.hasOwnProperty.call(e, r)) {
                    if (t.includes(r)) continue;
                    n[r] = e[r];
                }
            }
            return n;
        }
        function Ye(e) {
            "@babel/helpers - typeof";
            return Ye = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                return typeof e;
            } : function(e) {
                return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
            }, Ye(e);
        }
        function Ze(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var r = Object.getOwnPropertySymbols(e);
                t && (r = r.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable;
                }))), n.push.apply(n, r);
            }
            return n;
        }
        function et(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = null != arguments[t] ? arguments[t] : {};
                t % 2 ? Ze(Object(n), !0).forEach((function(t) {
                    tt(e, t, n[t]);
                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : Ze(Object(n)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t));
                }));
            }
            return e;
        }
        function tt(e, t, n) {
            return (t = nt(t)) in e ? Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = n, e;
        }
        function nt(e) {
            var t = rt(e, "string");
            return "symbol" == Ye(t) ? t : t + "";
        }
        function rt(e, t) {
            if ("object" != Ye(e) || !e) return e;
            var n = e[Symbol.toPrimitive];
            if (void 0 !== n) {
                var r = n.call(e, t || "default");
                if ("object" != Ye(r)) return r;
                throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === t ? String : Number)(e);
        }
        var ot = {
            allowKeyMatching: l().bool,
            allowNewValues: l().bool,
            animateLoading: l().bool,
            appearance: l().oneOf([ "default", "link", "primary", "pill", "toggle", "flat", "subtle" ]),
            append: l().bool,
            children: l().node,
            defaultPlacement: l().oneOf([ "above", "below", "vertical" ]),
            defaultValues: l().array,
            describedBy: l().string,
            disabled: l().bool,
            elementRef: l().oneOfType([ l().func, l().object ]),
            error: l().bool,
            filter: l().oneOf([ false, true, "controlled" ]),
            footerMessage: l().node,
            inline: l().bool,
            inputId: l().string,
            inputRef: l().oneOfType([ l().func, l().object ]),
            isLoadingOptions: l().bool,
            labelledBy: l().string,
            labelText: l().string,
            loadingMessage: l().node,
            menuStyle: l().object,
            multiple: l().bool,
            name: l().string,
            noOptionsMessage: l().node,
            onChange: l().func,
            onClick: l().func,
            onClose: l().func,
            onFilterChange: l().func,
            onOpen: l().func,
            onScroll: l().func,
            onScrollBottom: l().func,
            /** @private. */
            required: l().bool,
            placeholder: l().string,
            prefixLabel: l().string,
            prepend: l().bool,
            repositionMode: l().oneOf([ "none", "flip" ]),
            selectAllAppearance: l().oneOf([ "buttongroup", "checkbox" ]),
            showSelectedValuesFirst: l().oneOf([ "nextOpen", "immediately", "never" ]),
            suffixLabel: l().string,
            tabConfirmsNewValue: l().bool,
            toggle: l().node,
            toggleContent: l().oneOf([ "optionChildren", "optionLabel" ]),
            values: l().array,
            /** @private. */
            virtualization: l().number
        };
        var lt = h()((function(e) {
            return [ e ];
        }));
        // preserve separate widths for single vs. multi mode
                var at = h()((function(e) {
            var t = e.anchorWidth, n = e.isMultiple, r = e.maxHeight, o = e.menuStyle;
            return n ? et({
                width: Math.max(t !== null && t !== void 0 ? t : 0, 200),
                maxHeight: r
            }, o) : et({
                minWidth: t !== null && t !== void 0 ? t : undefined,
                maxWidth: Math.max(t !== null && t !== void 0 ? t : 0, 300),
                maxHeight: r
            }, o);
        }));
        var it = [ "clickAway", "escapeKey", "offScreen", "tabKey", "toggleClick" ];
        function ut(e) {
            return e && i()(e.props, "value");
        }
        function ct(e, t) {
            return "".concat(Ye(e), "-").concat(e, "-").concat(t);
        }
        var st = [ "append", "error", "prepend" ];
        var ft = (0, u._)("No matches");
        var pt = (0, u._)("Select...");
        var dt = function e(n) {
            var r = n.activeItemId, o = n.filterA11yId, l = n.filterKeyword, a = n.hasChildren, i = n.inputId, c = n.inputRef, s = n.menuListboxId, f = n.multiple, p = n.onClearAll, d = n.onSelectAll, v = n.onTextBlur, b = n.onTextChange, m = n.onTextFocus, y = n.onTextKeyDown, h = n.optionSelection, g = n.placement, O = n.selectAllAppearance, S = n.textHasFocus;
            var C = (0, u._)("Select all options".concat(h.current === "all" ? " disabled" : ""));
            var k = (0, u._)("Clear all options".concat(h.current === "none" ? " disabled" : ""));
            // only visually disable these as opposed to fully disabling to avoid losing keyboard focus - see SUI-2731
                        var w =  t().createElement(je, {
                $placement: g,
                key: "selectAll"
            },  t().createElement(xe, {
                $disabled: h.current === "all",
                "aria-label": C,
                onClick: d,
                "data-test": "select-all"
            }, l ? (0, u._)("Select all Matches") : (0, u._)("Select all")),  t().createElement(xe, {
                $disabled: h.current === "none",
                "aria-label": k,
                onClick: p,
                "data-test": "clear-all"
            }, l ? (0, u._)("Clear all Matches") : (0, u._)("Clear all")));
            
            return t().createElement("div", {
                key: "controls"
            }, o &&  t().createElement(L(), {
                id: o
            }, (0, u._)("Type to filter")),  t().createElement(Ce, {
                key: "filter",
                "data-test": "filter"
            },  t().createElement(I(), {
                value: l,
                autoCapitalize: "off",
                autoComplete: "off",
                autoCorrect: "off",
                spellCheck: false,
                onChange: b,
                onKeyDown: y,
                onFocus: m,
                onBlur: v,
                placeholder: (0, u._)("filter"),
                role: "combobox",
                "aria-expanded": "true",
                "aria-controls": s,
                "aria-owns": S && a ? r : undefined,
                "aria-label": (0, u._)("Filter"),
                "aria-autocomplete": "list",
                "aria-activedescendant": S && a ? r : undefined,
                inputRef: c,
                inputId: i,
                canClear: true,
                startAdornment:  t().createElement(ke, null,  t().createElement(Z, null))
            })), f && a && O === "buttongroup" && w);
        };
        var vt = false;
        var bt = function e(t) {
            var n = t.prefixLabel, r = t.label, o = t.suffixLabel;
            var l = r;
            if (n) {
                l = [ "".concat(n, ": ") ].concat(l);
            }
            if (o) {
                l = s()(l).concat(" ".concat(o));
            }
            return l;
        };
        function mt(n) {
            var r = n.appearance, o = n.append, l = n.children, a = n.currentValues, i = a === void 0 ? [] : a, c = n.describedBy, s = n.disabled, f = n.elementRef, d = n.error, v = n.inline, b = n.labelText, m = n.labelledBy, y = n.multiple, h = n.onClick, g = n.placeholder, S = n.prefixLabel, C = n.prepend, k = n.required, w = n.suffixLabel, x = n.toggle, j = n.toggleContent, P = Ge(n, [ "appearance", "append", "children", "currentValues", "describedBy", "disabled", "elementRef", "error", "inline", "labelText", "labelledBy", "multiple", "onClick", "placeholder", "prefixLabel", "prepend", "required", "suffixLabel", "toggle", "toggleContent" ]);
            var T;
            var R;
            var A = [];
            // Generate buttonLabels
                        var _ = e.Children.toArray(l);
            var I = i.reduce((function(e, t, n, r) {
                var o = p()(_, (function(e) {
                    return ut(e) && e.props.value === t;
                }));
                if (o) {
                    var l = o.props, a = l.children, c = l.icon, s = l.label;
                    var f = j !== "optionLabel" && a ? a : s;
                    e.push(f);
                    A.push(s);
                    // if not in multiple mode, add the icon
                                        if (!y && i.length === 1) {
                        T = c;
                    }
                } else if (y) {
                    // only add values that don't match an option in "multiple" mode to preserve old behaviour
                    e.push(t);
                    A.push(t.toString());
                }
                if (n < r.length - 1) {
                    e.push((0, u._)(", "));
                    A.push((0, u._)(", "));
                }
                return e;
            }), []);
            R = I;
            // only apply prefix / suffix if the label is not empty
                        if (R.length > 0) {
                // If there's more than one item selected, read out the selected total
                // rather than reading out each selected item
                A = bt({
                    prefixLabel: S,
                    label: R.length > 1 ? [ "".concat(i.length, " items selected") ] : A,
                    suffixLabel: w
                });
                R = bt({
                    prefixLabel: S,
                    label: R,
                    suffixLabel: w
                });
            }
            // single <Select> behaviour is to show the placeholder if all parts of the label
            // are empty strings so we replicate this behaviour here
                        if (R.length === 0 || !y && R.every((function(e) {
                return e === "";
            }))) {
                R = lt(g);
                A = R;
            }
            var M = Object.keys(P).includes("aria-labelledby");
            var L = et({
                "aria-describedby": c,
                "aria-label": m || M ? undefined : "".concat(b ? "".concat(b, ", ") : "").concat(A.join("")),
                // aria-labelledby takes precedence over aria-label, so existence of both is redundant
                "aria-labelledby": m,
                "aria-required": k,
                "data-select-appearance": r,
                append: o,
                prepend: C,
                onClick: h,
                role: "combobox",
                disabled: s,
                elementRef: f,
                error: d
            }, P);
            if (y) {
                L["data-test-values"] = JSON.stringify(i);
            } else {
                var q = ze(i, 1), D = q[0];
                L["data-test-value"] = D;
            }
            if (x) {
                
                return (0, e.cloneElement)(x, L);
            }
            if (r === "link") {
                
                return t().createElement(E(), He({}, L, {
                    "data-select-appearance": "link"
                }), !!T &&  t().createElement(Oe, null, T), R || g,  t().createElement(Se, null,  t().createElement(U, null)));
            }
            
            return t().createElement(ge, He({}, L, {
                $multiple: y,
                appearance: r,
                label: R,
                error: d,
                icon: T,
                inline: v,
                isMenu: true,
                onClick: h
            }, O()(P, st)), !!i.length && y &&  t().createElement(we, {
                "data-role": "count"
            }, "(", i.length, ")"));
        }
        mt[x.legacyRefMode] = true;
        function yt(n) {
            var r = n.allowKeyMatching, o = r === void 0 ? true : r, l = n.animateLoading, a = n.appearance, i = a === void 0 ? "toggle" : a, c = n.append, s = n.allowNewValues, f = n.children, d = n.defaultPlacement, b = d === void 0 ? "vertical" : d, y = n.defaultValues, h = n.describedBy, g = n.disabled, O = n.elementRef, S = n.error, k = n.filter, x = n.footerMessage, P = n.inline, E = n.inputId, _ = n.inputRef, I = n.isLoadingOptions, M = n.labelledBy, L = n.labelText, q = n.loadingMessage, K = n.menuStyle, F = K === void 0 ? {} : K, H = n.multiple, z = n.name, $ = n.noOptionsMessage, W = $ === void 0 ? ft : $, U = n.onChange, J = n.onScroll, X = n.onScrollBottom, G = n.onFilterChange, Q = n.onClick, Y = n.onClose, Z = n.onOpen, ee = n.required, te = n.placeholder, ne = te === void 0 ? pt : te, re = n.prefixLabel, oe = n.prepend, le = n.repositionMode, ae = le === void 0 ? "flip" : le, ie = n.selectAllAppearance, ue = ie === void 0 ? "buttongroup" : ie, ce = n.showSelectedValuesFirst, se = n.suffixLabel, pe = n.tabConfirmsNewValue, de = n.values, be = n.virtualization, me = n.toggle, ye = n.toggleContent, he = ye === void 0 ? "optionChildren" : ye, ge = Ge(n, [ "allowKeyMatching", "animateLoading", "appearance", "append", "allowNewValues", "children", "defaultPlacement", "defaultValues", "describedBy", "disabled", "elementRef", "error", "filter", "footerMessage", "inline", "inputId", "inputRef", "isLoadingOptions", "labelledBy", "labelText", "loadingMessage", "menuStyle", "multiple", "name", "noOptionsMessage", "onChange", "onScroll", "onScrollBottom", "onFilterChange", "onClick", "onClose", "onOpen", "required", "placeholder", "prefixLabel", "prepend", "repositionMode", "selectAllAppearance", "showSelectedValuesFirst", "suffixLabel", "tabConfirmsNewValue", "values", "virtualization", "toggle", "toggleContent" ]);
            // @docs-props-type SelectBasePropsBase
                        var Oe = (0, Pe["default"])({
                componentName: "SelectBase",
                /* eslint-disable-next-line prefer-rest-params */
                componentProps: arguments[0],
                // see SUI-7028
                defaultValuePropName: "defaultValues",
                valuePropName: "values"
            });
            // states
                        var Se = (0, e.useState)((function() {
                return {
                    activeItemId: (0, V.createDOMID)("active-item"),
                    menuListboxId: (0, V.createDOMID)("menu-listbox")
                };
            })), Ce = ze(Se, 1), ke = Ce[0], we = ke.activeItemId, xe = ke.menuListboxId;
            var je = (0, e.useState)(0), Ee = ze(je, 2), Ae = Ee[0], _e = Ee[1];
            var Ie = (0, e.useState)(""), Me = ze(Ie, 2), Le = Me[0], De = Me[1];
            var Be = (0, e.useState)(false), Ne = ze(Be, 2), Ke = Ne[0], Fe = Ne[1];
            var $e = (0, e.useState)(false), We = ze($e, 2), Ue = We[0], Je = We[1];
            var Xe = (0, e.useState)([]), Qe = ze(Xe, 2), Ye = Qe[0], Ze = Qe[1];
            var et = (0, e.useState)(y || []), tt = ze(et, 2), nt = tt[0], rt = tt[1];
 // previous state
                        var ot = D()(Ae);
            // refs
                        var lt = (0, e.useRef)(null);
            var st = (0, e.useRef)(null);
            var bt = (0, e.useRef)(null);
            var yt = (0, e.useRef)([]);
            var ht = (0, e.useRef)([]);
            var gt = (0, e.useRef)(ot);
            var Ot = (0, e.useRef)();
            var St = (0, e.useRef)({});
            var Ct = (0, e.useRef)(0);
            var kt = (0, e.useRef)([]);
            var wt = (0, e.useRef)(null);
            var xt = (0, e.useRef)();
            var jt = (0, e.useRef)(0);
            var Pt = (0, e.useRef)("none");
            var Et = (0, e.useState)(k ? (0, V.createDOMID)("filter") : undefined), Tt = ze(Et, 1), Rt = Tt[0];
            (0, e.useEffect)((function() {
                if (false) {}
            }), [ i, c, S, oe ]);
            var At = (0, e.useCallback)((function() {
                var e = Oe ? de : nt;
                return H || e == null ? e : e.slice(0, 1);
            }), [ Oe, H, de, nt ]);
            var _t = (0, e.useCallback)((function() {
                var e;
                // in non-multiple mode, don't move values to the top of the list
                                return H && ce !== "never" ? (e = At()) !== null && e !== void 0 ? e : [] : [];
            }), [ At, H, ce ]);
            var It = (0, e.useCallback)((function(e) {
                var t = Le;
                Fe(true);
                Ze(_t());
                // SUI-3234: preserve existing behavior difference between <Select> and <Multiselect.Compact>
                                if (H) {
                    De("");
                }
                if (t !== Le) {
                    G === null || G === void 0 ? void 0 : G(e, {
                        keyword: Le
                    });
                }
            }), [ Le, _t, H, G ]);
            (0, e.useEffect)((function() {
                if (Ke) {
                    Z === null || Z === void 0 ? void 0 : Z();
                    if (wt.current && !k) {
                        wt.current.focus();
                    } else {
                        var e;
                        _e((e = xt.current) !== null && e !== void 0 ? e : 0);
                    }
                }
            }), [ Z, Ke, Ye, Le, k ]);
            var Mt = (0, e.useCallback)((function() {
                Fe(false);
                _e(0);
                gt.current = null;
                Y === null || Y === void 0 ? void 0 : Y();
            }), [ Y ]);
            var Lt = (0, e.useCallback)((function(e, t) {
                var n;
                var r = (n = At()) !== null && n !== void 0 ? n : [];
                var o = r.indexOf(t);
                var l;
                if (H) {
                    if (o >= 0) {
                        l = [].concat(Ve(r.slice(0, o)), Ve(r.slice(o + 1)));
                    } else {
                        l = r.concat([ t ]);
                    }
                } else {
                    // non-multiple mode must always have a value
                    l = [ t ];
                }
                var a = !Oe;
                if (a) {
                    rt(l);
                }
                if (H) {
                    // in uncontrolled multiple mode, keep the menu open
                    if (a) {
                        Fe(true);
                    }
                } else {
                    var i;
                    // non-multiple mode only supports a single selection
                    // so close the menu once a selection is made
                                        Mt({
                        reason: "contentClick"
                    });
                    (i = lt.current) === null || i === void 0 ? void 0 : i.focus();
                }
                U === null || U === void 0 ? void 0 : U(e, {
                    values: l,
                    name: z,
                    reason: "valueToggle"
                });
            }), [ At, Mt, Oe, H, z, U ]);
            var qt = function e() {
                st.current = null;
                yt.current = [];
                if (bt.current) {
                    clearTimeout(bt.current);
                }
            };
            var Dt = (0, e.useCallback)((function(e) {
                var n;
                // this doesn't make sense if we can't select multiple values
                                if (!H) {
                    return;
                }
                var r = (n = At()) !== null && n !== void 0 ? n : [];
                var o = C()(r.concat(kt.current));
                o = t().Children.toArray(f).filter((function(e) {
                    return ut(e) && m()(o, e.props.value) && (!e.props.disabled || m()(r, e.props.value));
                })).map((function(e) {
                    return e.props.value;
                }));
                if (!Oe) {
                    rt(o);
                }
                U === null || U === void 0 ? void 0 : U(e, {
                    values: o,
                    name: z,
                    reason: "selectAll"
                });
            }), [ f, At, Oe, H, z, U ]);
            var Bt = (0, e.useCallback)((function(e) {
                var n;
                // this doesn't make sense if we can't select multiple values
                                if (!H) {
                    return;
                }
                var r = (n = At()) !== null && n !== void 0 ? n : [];
                var o = w().apply(void 0, [ r ].concat(Ve(kt.current)));
                // this will unselect all selected values unless those values are disabled or hidden by the filter
                                var l = t().Children.toArray(f).filter((function(e) {
                    return ut(e) && (m()(r, e.props.value) && e.props.disabled || m()(o, e.props.value));
                })).map((function(e) {
                    return e.props.value;
                }));
                if (!Oe) {
                    rt(l);
                }
                U === null || U === void 0 ? void 0 : U(e, {
                    values: l,
                    name: z,
                    reason: "clearAll"
                });
            }), [ f, At, Oe, H, z, U ]);
            var Vt = (0, e.useCallback)((function(e) {
                if (Ke && !I) {
                    X === null || X === void 0 ? void 0 : X(e);
                }
            }), [ Ke, I, X ]);
            var Nt = (0, e.useCallback)((function(t) {
                var n = (0, N.keycode)(t.nativeEvent);
                if (n === "tab") {
                    if (pe && Ot.current && Ct.current <= 1) {
                        t.preventDefault();
                        Lt(t, Ot.current);
                    }
                }
                if (t.shiftKey || t.metaKey || t.ctrlKey) {
                    if (n === "a" && (t.ctrlKey || t.metaKey)) {
                        // handle control + A
                        if (Pt.current === "all") {
                            Bt(t);
                        } else {
                            Dt(t);
                        }
                    }
                    return;
                }
                if (n === "down") {
                    t.preventDefault();
                    _e(Math.min(Ae + 1, ue === "checkbox" ? Ct.current : Ct.current - 1));
                    if (f && X) {
                        var r;
                        var o = e.Children.toArray(f).length - (2 + ((r = At()) !== null && r !== void 0 ? r : []).length);
                        if (Ae === o) {
                            Vt(t);
                        }
                    }
                }
                if (n === "up") {
                    t.preventDefault();
                    _e(Math.max(Ae - 1, 0));
                }
                if (n === "enter" && Ot.current && Ke) {
                    if (Ot.current === "selectAll") {
                        if (Pt.current === "all") {
                            Bt(t);
                        } else {
                            Dt(t);
                        }
                    } else {
                        t.preventDefault();
                        Lt(t, Ot.current);
                    }
                }
            }), [ Ae, f, At, Bt, Vt, Dt, X, Ke, ue, pe, Lt ]);
            var Kt = (0, e.useCallback)((function(e, t) {
                var n = t.value;
                e.preventDefault();
                if (!Ke) {
                    return;
                }
                Lt(e, n);
            }), [ Ke, Lt ]);
            var Ft = (0, e.useCallback)((function(e, t) {
                var n = e.nativeEvent.key;
                // Checking for a single character to avoid complications from double-byte languages and emojis.
                                if (n.length === 1) {
                    var r = [];
                    var o = {
                        index: 0,
                        value: n
                    };
                    if (!st.current) {
                        if (n === " ") {
                            qt();
                            return;
                        }
                        r = Te(ht.current, o);
                    } else if (yt.current.length > 1) {
                        o.index = st.current.index + 1;
                        r = Te(yt.current, o);
                    }
                    if (r.length) {
                        var l;
                        var a = 0;
                        // If the active option is a first character match, cycle to the next matching option.
                                                if (o.index === 0 && r.length > 1) {
                            var i = r.indexOf(ht.current[t]);
                            if (i >= 0) {
                                a = i === r.length - 1 ? 0 : i + 1;
                            }
                        }
                        var u = r[a];
                        var c = u.value, s = u.label;
                        var f = St.current[ct(c, s)];
                        f === null || f === void 0 ? void 0 : (l = f.focus) === null || l === void 0 ? void 0 : l.call(f);
                    }
                    yt.current = r;
                    st.current = o;
                    if (bt.current) {
                        clearTimeout(bt.current);
                    }
                    bt.current = setTimeout(qt, 500);
                    e.preventDefault();
                    e.stopPropagation();
                }
            }), []);
            var Ht = (0, e.useCallback)((function(e, t) {
                var n = t.value;
                De(n);
                Fe(true);
                _e(0);
                G === null || G === void 0 ? void 0 : G(e, {
                    keyword: n
                });
            }), [ G ]);
            var zt = (0, e.useCallback)((function() {
                Je(true);
            }), []);
            var $t = (0, e.useCallback)((function() {
                Je(false);
            }), []);
            var Wt = (0, e.useCallback)((function(e) {
                if (gt.current !== Ae) {
                    Re(e);
                }
            }), [ Ae ]);
            var Ut = (0, e.useCallback)((function(e, t, n) {
                if (n) {
                    wt.current = e;
                }
                if (e == null) {
                    delete St.current[t];
                } else {
                    St.current[t] = e;
                }
            }), [ St ]);
            var Jt = (0, e.useCallback)((function(e) {
                lt.current = e;
            }), [ lt ]);
            var Xt = (0, e.useMemo)((function() {
                var e;
                return (e = At()) !== null && e !== void 0 ? e : [];
            }), [ At ]);
            var Gt = e.Children.toArray(f);
            var Qt = Xt.some((function(e) {
                var t = p()(Gt, (function(t) {
                    return ut(t) && t.props.value === e;
                }));
                return t && !t.props.disabled;
            }));
            var Yt = ce === "immediately" ? _t() : Ye;
            var Zt = (0, e.useMemo)((function() {
                Ct.current = 0;
                xt.current = undefined;
                jt.current = 0;
                Ot.current = undefined;
                ht.current = [];
                var n = function e(t, n) {
                    return function(e) {
                        return Ut(e, t, n);
                    };
                };
                var r;
                var l = 0;
                var a = false;
                // used to avoid overwriting the selected item ref in multiple mode
                                var i;
                var c = e.Children.toArray(f).reduce((function(u, c, s) {
                    // ignore Headings and Dividers
                    if (!ut(c)) {
                        u.push(c);
                        return u;
                    }
                    var f = c.props, p = f.disabled, d = f.hidden, v = f.label, b = f.value;
 // Find out if the search string exactly matches a value
                                        if (b === Le) {
                        r = true;
                    }
                    var m = Xt && Xt.indexOf(b) >= 0;
                    var y = !!m && !p && !i;
                    var h = o && !H && !k && !I && !X;
                    var g = ct(b, v);
                    var O = -1;
                    if (h && !p && !d) {
                        ht.current.push({
                            label: v,
                            value: b
                        });
                        O = ht.current.length - 1;
                    }
                    // Format the Menu.Item
                                        var S =  (0, e.cloneElement)(c, {
                        elementRef: n(g, y),
                        key: c.key || s,
                        onClick: Kt,
                        onKeyDown: h ? function(e) {
                            return Ft(e, O);
                        } : undefined,
                        selected: m,
                        multiple: H,
                        role: "option"
                    });
                    if (y) {
                        i = true;
                    }
                    if (Yt && Yt.indexOf(b) >= 0) {
                        if (l === 0) {
                            u.splice(l, 0,  t().createElement(T.Divider, {
                                key: "topDivider"
                            }));
                            a = true;
                        }
                        u.splice(l, 0, S);
                        l += 1;
                    } else {
                        u.push(S);
                    }
                    return u;
                }), []);
                // In multiple mode, add missing items
                                if (H) {
                    v()(Xt, (function(e) {
                        var o = p()(c, (function(t) {
                            return ut(t) && t.props && t.props.value === e;
                        }));
                        if (!o) {
                            if (e === Le) {
                                r = true;
                            }
                            var i = Yt && Yt.indexOf(e) >= 0;
                            var u = Yt.length;
                            if (l === 0) {
                                c.splice(0, 0,  t().createElement(T.Divider, {
                                    key: "topDivider"
                                }));
                                l += 1;
                                a = true;
                            }
                            var s = String(e);
                            var f = ct(e, s);
                            c.splice(i ? 0 : u + 1, 0,  t().createElement(fe, {
                                elementRef: n(f),
                                label: s,
                                value: e,
                                key: "missing-value-".concat(e),
                                onClick: Kt,
                                multiple: H,
                                selected: true
                            }));
                            if (i) {
                                l += 1;
                            }
                        }
                    }));
                }
                var d = k === "controlled";
                // Filter the items
                                var b = (0, B.stringToKeywords)(Le);
                c = d ? c : c.filter((function(e) {
                    if (ut(e)) {
                        return (0, B.testPhrase)(e.props.label, b);
                    }
                    return true;
 // Keep all headers and non-interactive options
                                })).map((function(t) {
                    if (!ut(t)) {
                        return t;
                    }
                    // highlight matched text
                                        var n = b && (0, B.keywordLocations)(t.props.label, b);
                    
                    return (0, e.cloneElement)(t, {
                        matchRanges: n || undefined
                    });
                }));
                // Add the option to add the new value
                                if (s && !r && Le) {
                    var m = a ? l + 1 : l;
                    var y = "".concat(Le, " (new value)");
                    var h = ct(Le, y);
                    c.splice(m, 0,  t().createElement(fe, {
                        elementRef: n(h),
                        label: y,
                        value: Le,
                        key: "newValue",
                        multiple: H,
                        onClick: Kt
                    }));
                }
                // When selectAll is a menu item, add an offset so that activeItem accounts for the extra selectAll option.
                                var g = ue === "checkbox" && H && c.length > 1 ? 1 : 0;
                var O = true;
                // Highlight the selected Items and remove hidden
                                c = c.reduce((function(t, n) {
                    // ignore Dividers & Headings
                    if (!ut(n)) {
                        t.push(n);
                        return t;
                    }
                    // Ignore any hidden items
                                        if (n.props && n.props.hidden) {
                        return t;
                    }
                    if (n.props.selected && !n.props.disabled && xt.current == null) {
                        xt.current = Ct.current;
                    }
                    var r = g === Ae;
                    g += 1;
                    Ct.current += 1;
                    jt.current += n.props.selected ? 1 : 0;
                    if (n.key !== "newValue" && !n.props.disabled && !n.props.selected) {
                        O = false;
                    }
                    if (!r || !Ue) {
                        t.push(n);
                        return t;
                    }
                    if (!n.props.disabled) {
                        Ot.current = n.props.value;
                    }
                    var o =  (0, e.cloneElement)(n, {
                        active: r,
                        elementRef: Wt,
                        id: we
                    });
                    t.push(o);
                    return t;
                }), []);
                Pt.current = jt.current === 0 && "none" || O && "all" || "some";
                // add select all option
                                if (ue === "checkbox" && H && Ct.current > 0) {
                    var S;
                    if (Pt.current === "all") {
                        if (Le === "") {
                            S = (0, u._)("Clear all");
                        } else {
                            S = (0, u._)("Clear all matches");
                        }
                    } else if (Le === "") {
                        S = (0, u._)("Select all");
                    } else {
                        S = (0, u._)("Select all matches");
                    }
                    if (Ae === 0 && Ue) {
                        Ot.current = "selectAll";
                    }
                    c.unshift( t().createElement(ve, {
                        key: "select-all-option",
                        active: Ae === 0,
                        changedToggle: !!me,
                        elementRef: Wt,
                        id: Ae === 0 ? we : undefined,
                        onClick: Pt.current === "all" ? Bt : Dt,
                        selectAllLabel: S,
                        selected: Pt.current === "all" || Pt.current !== "none" && "some",
                        totalCount: Xt.length,
                        tabIndex: -1
                    }),  t().createElement(T.Divider, {
                        key: "selectAllDivider"
                    }));
                }
                kt.current = c.reduce((function(e, t) {
                    if (ut(t)) {
                        e.push(t.props.value);
                    }
                    return e;
                }), []);
                vt = c.some((function(e) {
                    return ut(e);
                }));
                return c;
            }), [ Ae, we, o, s, f, Xt, k, Le, Wt, Bt, Kt, Ft, Ut, Dt, I, H, Yt, X, ue, Ue, me ]);
            var en = function e(n) {
                var r = n.anchorWidth, o = n.maxHeight, a = n.placement;
                var i = at({
                    anchorWidth: r,
                    isMultiple: H,
                    maxHeight: o,
                    menuStyle: F
                });
                var u = Xt.length > 0 && !Qt && !k ? 0 : undefined;
                var c = {
                    "aria-multiselectable": H || undefined,
                    childrenStart: !!k &&  t().createElement(dt, {
                        activeItemId: we,
                        filterA11yId: Rt,
                        filterKeyword: Le,
                        hasChildren: vt,
                        inputId: E,
                        inputRef: _,
                        menuListboxId: xe,
                        multiple: H,
                        onClearAll: Bt,
                        onSelectAll: Dt,
                        onTextBlur: $t,
                        onTextChange: Ht,
                        onTextFocus: zt,
                        onTextKeyDown: Nt,
                        optionSelection: Pt,
                        placement: a,
                        selectAllAppearance: ue,
                        textHasFocus: Ue
                    }),
                    focusMode: k ? "never" : undefined,
                    isLoading: I,
                    menuId: xe,
                    onScrollBottom: X ? Vt : undefined,
                    placement: a !== null && a !== void 0 ? a : undefined,
                    noOptionsMessage: W,
                    footerMessage: x,
                    animateLoading: l,
                    loadingMessage: q,
                    onScroll: J,
                    style: i,
                    tabIndex: u
                };
                if (be) {
                    
                    return t().createElement(R.VirtualizedResultsMenu, He({
                        virtualization: be
                    }, c), Zt);
                }
                
                return t().createElement(A(), c, Zt);
            };
            
            return t().createElement(j(), {
                closeReasons: it,
                inputId: E,
                "aria-labelledby": Rt,
                toggle:  t().createElement(mt, He({
                    appearance: i,
                    append: c,
                    currentValues: At(),
                    "data-test": H ? "multiselect" : "select",
                    describedBy: h,
                    disabled: g,
                    elementRef: O,
                    error: S,
                    inline: P,
                    labelText: L,
                    labelledBy: M,
                    multiple: H,
                    onClick: Q,
                    placeholder: ne,
                    prefixLabel: re,
                    prepend: oe,
                    required: ee,
                    suffixLabel: se,
                    toggle: me,
                    toggleContent: he
                }, ge), f),
                onRequestOpen: It,
                onRequestClose: Mt,
                open: Ke,
                openWithArrowKeys: true,
                repositionMode: ae,
                defaultPlacement: k ? b : undefined,
                canCoverAnchor: qe().innerHeight < 500,
                ref: Jt,
                retainFocus: false,
                takeFocus: Xt.length === 0 || Xt.length > 0 && !Qt || !!k
            }, en);
        }
        yt.propTypes = ot;
        yt.componentType = "SelectBase";
        yt.Option = fe;
        yt.Divider = T.Divider;
        yt.Heading = T.Heading;
        /* harmony default export */        const ht = yt;
        // CONCATENATED MODULE: ./src/utils/updateReactRef.ts
        /**
 * Updates a React ref. Callback refs and object refs (from `createRef` and `useRef`) are supported.
 *
 * @param ref - The React callback or object ref. Can be `null` or `undefined`.
 * @param current - The new value of the ref.
 */
        function gt(e, t) {
            if (e) {
                if (typeof e === "function") {
                    e(t);
                } else {
                    // the public signature of this util uses React.Ref<T> to mirror the way React types refs.
                    // the intention here is to signal "we will take care of setting 'current', not you".
                    e.current = t;
 // eslint-disable-line no-param-reassign
                                }
            }
        }
        // CONCATENATED MODULE: ./src/Select/Option.tsx
        function Ot(e) {
            "@babel/helpers - typeof";
            return Ot = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                return typeof e;
            } : function(e) {
                return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
            }, Ot(e);
        }
        function St() {
            return St = Object.assign ? Object.assign.bind() : function(e) {
                for (var t = 1; t < arguments.length; t++) {
                    var n = arguments[t];
                    for (var r in n) {
                        ({}).hasOwnProperty.call(n, r) && (e[r] = n[r]);
                    }
                }
                return e;
            }, St.apply(null, arguments);
        }
        function Ct(e, t) {
            if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
        }
        function kt(e, t) {
            for (var n = 0; n < t.length; n++) {
                var r = t[n];
                r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), 
                Object.defineProperty(e, It(r.key), r);
            }
        }
        function wt(e, t, n) {
            return t && kt(e.prototype, t), n && kt(e, n), Object.defineProperty(e, "prototype", {
                writable: !1
            }), e;
        }
        function xt(e, t) {
            if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function");
            e.prototype = Object.create(t && t.prototype, {
                constructor: {
                    value: e,
                    writable: !0,
                    configurable: !0
                }
            }), Object.defineProperty(e, "prototype", {
                writable: !1
            }), t && jt(e, t);
        }
        function jt(e, t) {
            return jt = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(e, t) {
                return e.__proto__ = t, e;
            }, jt(e, t);
        }
        function Pt(e) {
            var t = Rt();
            return function() {
                var n, r = At(e);
                if (t) {
                    var o = At(this).constructor;
                    n = Reflect.construct(r, arguments, o);
                } else n = r.apply(this, arguments);
                return Et(this, n);
            };
        }
        function Et(e, t) {
            if (t && ("object" == Ot(t) || "function" == typeof t)) return t;
            if (void 0 !== t) throw new TypeError("Derived constructors may only return object or undefined");
            return Tt(e);
        }
        function Tt(e) {
            if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return e;
        }
        function Rt() {
            try {
                var e = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {})));
            } catch (e) {}
            return (Rt = function t() {
                return !!e;
            })();
        }
        function At(e) {
            return At = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(e) {
                return e.__proto__ || Object.getPrototypeOf(e);
            }, At(e);
        }
        function _t(e, t, n) {
            return (t = It(t)) in e ? Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = n, e;
        }
        function It(e) {
            var t = Mt(e, "string");
            return "symbol" == Ot(t) ? t : t + "";
        }
        function Mt(e, t) {
            if ("object" != Ot(e) || !e) return e;
            var n = e[Symbol.toPrimitive];
            if (void 0 !== n) {
                var r = n.call(e, t || "default");
                if ("object" != Ot(r)) return r;
                throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === t ? String : Number)(e);
        }
        var Lt = {
            /** @private */
            active: l().bool,
            children: l().node,
            description: l().string,
            descriptionPosition: l().oneOf([ "right", "bottom" ]),
            disabled: l().bool,
            elementRef: l().oneOfType([ l().func, l().object ]),
            hidden: l().bool,
            icon: l().node,
            label: l().string.isRequired,
            matchRanges: l().arrayOf(l().shape({
                start: l().number.isRequired,
                end: l().number.isRequired
            })),
            /** @private */
            onClick: l().func,
            /** @private */
            role: l().oneOf([ "menuitemcheckbox", "option" ]),
            /** @private */
            selected: l().bool,
            truncate: l().bool,
            value: l().oneOfType([ l().string, l().number, l().bool ]).isRequired
        };
        var qt = {
            active: false,
            descriptionPosition: "bottom",
            disabled: false,
            hidden: false,
            selected: false,
            truncate: false
        };
        /**
 * An option within a `Select`. This inherits from
 * [PureComponent](https://reactjs.org/docs/react-api.html#reactpurecomponent)
 * so any elements passed to it must also be pure.
 */        var Dt =  function(e) {
            xt(r, e);
            var n = Pt(r);
            function r() {
                var e;
                Ct(this, r);
                for (var o = arguments.length, l = new Array(o), a = 0; a < o; a++) {
                    l[a] = arguments[a];
                }
                e = n.call.apply(n, [ this ].concat(l));
                _t(Tt(e), "optionBaseRef",  t().createRef());
                _t(Tt(e), "handleMount", (function(t) {
                    gt(e.props.elementRef, t);
                    gt(e.optionBaseRef, t);
                }));
                return e;
            }
 // @docs-props-type OptionPropsBase
                        wt(r, [ {
                key: "scrollIntoViewIfNeeded",
                // eslint-disable-next-line react/no-unused-class-component-methods
                value: function e() {
                    Re(this.optionBaseRef.current);
                }
                /**
     * Place focus on the button.
     */
                // eslint-disable-next-line react/no-unused-class-component-methods
                        }, {
                key: "focus",
                value: function e() {
                    var t, n;
                    (t = this.optionBaseRef) === null || t === void 0 ? void 0 : (n = t.current) === null || n === void 0 ? void 0 : n.focus();
                }
            }, {
                key: "render",
                value: function e() {
                    
                    return t().createElement(fe, St({}, this.props, {
                        elementRef: this.handleMount,
                        multiple: false
                    }), this.props.children || this.props.label);
                }
            } ]);
            return r;
        }(e.PureComponent);
        _t(Dt, "propTypes", Lt);
        _t(Dt, "defaultProps", qt);
        /* harmony default export */        const Bt = Dt;
        // CONCATENATED MODULE: ./src/Select/Select.tsx
        function Vt(e) {
            "@babel/helpers - typeof";
            return Vt = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                return typeof e;
            } : function(e) {
                return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
            }, Vt(e);
        }
        function Nt() {
            return Nt = Object.assign ? Object.assign.bind() : function(e) {
                for (var t = 1; t < arguments.length; t++) {
                    var n = arguments[t];
                    for (var r in n) {
                        ({}).hasOwnProperty.call(n, r) && (e[r] = n[r]);
                    }
                }
                return e;
            }, Nt.apply(null, arguments);
        }
        function Kt(e, t) {
            if (null == e) return {};
            var n, r, o = Ft(e, t);
            if (Object.getOwnPropertySymbols) {
                var l = Object.getOwnPropertySymbols(e);
                for (r = 0; r < l.length; r++) {
                    n = l[r], t.includes(n) || {}.propertyIsEnumerable.call(e, n) && (o[n] = e[n]);
                }
            }
            return o;
        }
        function Ft(e, t) {
            if (null == e) return {};
            var n = {};
            for (var r in e) {
                if ({}.hasOwnProperty.call(e, r)) {
                    if (t.includes(r)) continue;
                    n[r] = e[r];
                }
            }
            return n;
        }
        function Ht(e, t) {
            if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
        }
        function zt(e, t) {
            for (var n = 0; n < t.length; n++) {
                var r = t[n];
                r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), 
                Object.defineProperty(e, en(r.key), r);
            }
        }
        function $t(e, t, n) {
            return t && zt(e.prototype, t), n && zt(e, n), Object.defineProperty(e, "prototype", {
                writable: !1
            }), e;
        }
        function Wt(e, t) {
            if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function");
            e.prototype = Object.create(t && t.prototype, {
                constructor: {
                    value: e,
                    writable: !0,
                    configurable: !0
                }
            }), Object.defineProperty(e, "prototype", {
                writable: !1
            }), t && Ut(e, t);
        }
        function Ut(e, t) {
            return Ut = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(e, t) {
                return e.__proto__ = t, e;
            }, Ut(e, t);
        }
        function Jt(e) {
            var t = Qt();
            return function() {
                var n, r = Yt(e);
                if (t) {
                    var o = Yt(this).constructor;
                    n = Reflect.construct(r, arguments, o);
                } else n = r.apply(this, arguments);
                return Xt(this, n);
            };
        }
        function Xt(e, t) {
            if (t && ("object" == Vt(t) || "function" == typeof t)) return t;
            if (void 0 !== t) throw new TypeError("Derived constructors may only return object or undefined");
            return Gt(e);
        }
        function Gt(e) {
            if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return e;
        }
        function Qt() {
            try {
                var e = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {})));
            } catch (e) {}
            return (Qt = function t() {
                return !!e;
            })();
        }
        function Yt(e) {
            return Yt = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(e) {
                return e.__proto__ || Object.getPrototypeOf(e);
            }, Yt(e);
        }
        function Zt(e, t, n) {
            return (t = en(t)) in e ? Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = n, e;
        }
        function en(e) {
            var t = tn(e, "string");
            return "symbol" == Vt(t) ? t : t + "";
        }
        function tn(e, t) {
            if ("object" != Vt(e) || !e) return e;
            var n = e[Symbol.toPrimitive];
            if (void 0 !== n) {
                var r = n.call(e, t || "default");
                if ("object" != Vt(r)) return r;
                throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === t ? String : Number)(e);
        }
        /* eslint-disable max-classes-per-file */
        /** @public */
        /** @public */
        /** @public */        var nn = {
            allowKeyMatching: l().bool,
            animateLoading: l().bool,
            appearance: l().oneOf([ "default", "link", "primary", "pill", "toggle", "flat", "subtle" ]),
            append: l().bool,
            children: l().node,
            defaultPlacement: l().oneOf([ "above", "below", "vertical" ]),
            defaultValue: l().oneOfType([ l().string, l().number, l().bool ]),
            describedBy: l().string,
            disabled: l().bool,
            elementRef: l().oneOfType([ l().func, l().object ]),
            error: l().bool,
            filter: l().oneOf([ false, true, "controlled" ]),
            footerMessage: l().node,
            inline: l().bool,
            inputId: l().string,
            inputRef: l().oneOfType([ l().func, l().object ]),
            isLoadingOptions: l().bool,
            labelledBy: l().string,
            labelText: l().string,
            loadingMessage: l().node,
            menuStyle: l().object,
            name: l().string,
            noOptionsMessage: l().node,
            onChange: l().func,
            onClose: l().func,
            onFilterChange: l().func,
            onOpen: l().func,
            onScroll: l().func,
            onScrollBottom: l().func,
            placeholder: l().string,
            prefixLabel: l().string,
            prepend: l().bool,
            suffixLabel: l().string,
            toggleContent: l().oneOf([ "optionChildren", "optionLabel" ]),
            /** @private. */
            toggle: l().node,
            value: l().oneOfType([ l().string, l().number, l().bool ]),
            /** @private. */
            virtualization: l().number
        };
        var rn = {
            allowKeyMatching: true,
            animateLoading: false,
            appearance: "toggle",
            append: false,
            children: [],
            defaultPlacement: "vertical",
            disabled: false,
            error: false,
            filter: false,
            inline: true,
            isLoadingOptions: false,
            menuStyle: {},
            noOptionsMessage: (0, u._)("No matches"),
            placeholder: (0, u._)("Select..."),
            prepend: false,
            toggleContent: "optionChildren"
        };
        var on =  function(e) {
            Wt(r, e);
            var n = Jt(r);
            // @docs-props-type SelectPropsBase
                        function r(e) {
                var t;
                Ht(this, r);
                t = n.call(this, e);
                var o = {};
                // wrap defaultValue in an array once to avoid failing <SelectBase>'s defaultValues comparison check
                // using "has" to make sure that pre-4.3 behavior is preserved if a user explicitly passes "null" or "undefined"
                                if (i()(e, "defaultValue")) {
                    if (e.defaultValue != null) {
                        o.defaultValues = [ e.defaultValue ];
                    } else {
                        o.defaultValues = [];
                    }
                }
                t.state = o;
                // `this.props.appearance === 'toggle'` is not included here because it is the default value.
                // Including it would trigger a warning for every instance of using `Select`.
                                if (false) {}
                return t;
            }
            $t(r, [ {
                key: "componentDidUpdate",
                value: function e(t) {
                    if (false) {}
                }
            }, {
                key: "render",
                value: function e() {
                    var n = this.props, r = n.defaultValue, o = n.onChange, l = n.value, a = Kt(n, [ "defaultValue", "onChange", "value" ]);
                    var u = {
                        onChange: function e(t, n) {
                            var r = n.name, l = n.values;
                            o === null || o === void 0 ? void 0 : o(t, {
                                name: r,
                                value: l[0]
                            });
                        }
                    };
                    // using "has" as opposed to a null check to match SelectBase
                                        if (i()(this.props, "value")) {
                        if (l != null) {
                            u.values = [ l ];
                        } else {
                            u.values = [];
                        }
                    } else if (this.state.defaultValues != null) {
                        // using defaultValues from state in order to avoid wrapping defaultValue here
                        u.defaultValues = this.state.defaultValues;
                    }
                    
                    return t().createElement(ht, Nt({}, a, u, {
                        multiple: false
                    }));
                }
            } ]);
            return r;
        }(e.Component);
        Zt(on, "propTypes", nn);
        Zt(on, "defaultProps", rn);
        Zt(on, "Option", Bt);
        Zt(on, "Heading", T.Heading);
        Zt(on, "Divider", T.Divider);
        /* harmony default export */        const ln = on;
    }) // CONCATENATED MODULE: ./src/Select/index.ts
    ();
    module.exports = r;
    /******/})();