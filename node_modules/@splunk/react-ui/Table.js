/******/ (() => {
    // webpackBootstrap
    /******/ "use strict";
    /******/ // The require scope
    /******/    var e = {};
    /******/
    /************************************************************************/
    /******/ /* webpack/runtime/compat get default export */
    /******/    (() => {
        /******/ // getDefaultExport function for compatibility with non-harmony modules
        /******/ e.n = t => {
            /******/ var n = t && t.__esModule ? 
            /******/ () => t["default"]
            /******/ : () => t
            /******/;
            e.d(n, {
                a: n
            });
            /******/            return n;
            /******/        };
        /******/    })();
    /******/
    /******/ /* webpack/runtime/define property getters */
    /******/    (() => {
        /******/ // define getter functions for harmony exports
        /******/ e.d = (t, n) => {
            /******/ for (var r in n) {
                /******/ if (e.o(n, r) && !e.o(t, r)) {
                    /******/ Object.defineProperty(t, r, {
                        enumerable: true,
                        get: n[r]
                    });
                    /******/                }
                /******/            }
            /******/        };
        /******/    })();
    /******/
    /******/ /* webpack/runtime/hasOwnProperty shorthand */
    /******/    (() => {
        /******/ e.o = (e, t) => Object.prototype.hasOwnProperty.call(e, t)
        /******/;
    })();
    /******/
    /******/ /* webpack/runtime/make namespace object */
    /******/    (() => {
        /******/ // define __esModule on exports
        /******/ e.r = e => {
            /******/ if (typeof Symbol !== "undefined" && Symbol.toStringTag) {
                /******/ Object.defineProperty(e, Symbol.toStringTag, {
                    value: "Module"
                });
                /******/            }
            /******/            Object.defineProperty(e, "__esModule", {
                value: true
            });
            /******/        };
        /******/    })();
    /******/
    /************************************************************************/    var t = {};
    // ESM COMPAT FLAG
        e.r(t);
    // EXPORTS
        e.d(t, {
        Body: () => /* reexport */ be,
        Caption: () => /* reexport */ Re,
        Cell: () => /* reexport */ Ye,
        Head: () => /* reexport */ $o,
        HeadCell: () => /* reexport */ Wn,
        HeadDropdownCell: () => /* reexport */ wi,
        Row: () => /* reexport */ yo,
        TableBase: () => /* reexport */ fl,
        default: () => /* reexport */ vl
    });
    // CONCATENATED MODULE: external "react"
    const n = require("react");
    var r =  e.n(n);
    // CONCATENATED MODULE: external "prop-types"
    const o = require("prop-types");
    var i =  e.n(o);
    // CONCATENATED MODULE: external "@dnd-kit/core"
    const a = require("@dnd-kit/core");
    // CONCATENATED MODULE: external "@dnd-kit/sortable"
    const l = require("@dnd-kit/sortable");
    // CONCATENATED MODULE: external "@dnd-kit/modifiers"
    const c = require("@dnd-kit/modifiers");
    // CONCATENATED MODULE: external "lodash/forEach"
    const s = require("lodash/forEach");
    var u =  e.n(s);
    // CONCATENATED MODULE: external "lodash/has"
    const d = require("lodash/has");
    var f =  e.n(d);
    // CONCATENATED MODULE: external "lodash/indexOf"
    const p = require("lodash/indexOf");
    var v =  e.n(p);
    // CONCATENATED MODULE: external "lodash/isEqual"
    const b = require("lodash/isEqual");
    var y =  e.n(b);
    // CONCATENATED MODULE: external "lodash/isNumber"
    const h = require("lodash/isNumber");
    // CONCATENATED MODULE: external "lodash/omit"
    const m = require("lodash/omit");
    var g =  e.n(m);
    // CONCATENATED MODULE: external "lodash/throttle"
    const w = require("lodash/throttle");
    var x =  e.n(w);
    // CONCATENATED MODULE: external "react-resize-detector"
    const C = require("react-resize-detector");
    var S =  e.n(C);
    // CONCATENATED MODULE: external "@splunk/react-ui/EventListener"
    const k = require("@splunk/react-ui/EventListener");
    var O =  e.n(k);
    // CONCATENATED MODULE: external "@splunk/ui-utils/keyboard"
    const E = require("@splunk/ui-utils/keyboard");
    // CONCATENATED MODULE: external "@splunk/react-ui/ScrollContainerContext"
    const R = require("@splunk/react-ui/ScrollContainerContext");
    // CONCATENATED MODULE: external "@splunk/react-ui/usePrevious"
    const j = require("@splunk/react-ui/usePrevious");
    var I =  e.n(j);
    // CONCATENATED MODULE: external "@splunk/ui-utils/i18n"
    const T = require("@splunk/ui-utils/i18n");
    // CONCATENATED MODULE: external "@splunk/ui-utils/format"
    const P = require("@splunk/ui-utils/format");
    // CONCATENATED MODULE: external "lodash/includes"
    const D = require("lodash/includes");
    var _ =  e.n(D);
    // CONCATENATED MODULE: external "lodash/without"
    const q = require("lodash/without");
    var A =  e.n(q);
    // CONCATENATED MODULE: external "@splunk/ui-utils/id"
    const z = require("@splunk/ui-utils/id");
    // CONCATENATED MODULE: external "styled-components"
    const N = require("styled-components");
    var H =  e.n(N);
    // CONCATENATED MODULE: external "@splunk/themes"
    const M = require("@splunk/themes");
    // CONCATENATED MODULE: ./src/Table/BodyStyles.ts
    var L = H().tbody.withConfig({
        displayName: "BodyStyles__Styled",
        componentId: "sc-1k5p6pq-0"
    })([ "", " z-index:0;" ], M.mixins.reset("table-row-group"));
    // CONCATENATED MODULE: ./src/utils/updateReactRef.ts
    /**
 * Updates a React ref. Callback refs and object refs (from `createRef` and `useRef`) are supported.
 *
 * @param ref - The React callback or object ref. Can be `null` or `undefined`.
 * @param current - The new value of the ref.
 */
    function B(e, t) {
        if (e) {
            if (typeof e === "function") {
                e(t);
            } else {
                // the public signature of this util uses React.Ref<T> to mirror the way React types refs.
                // the intention here is to signal "we will take care of setting 'current', not you".
                e.current = t;
 // eslint-disable-line no-param-reassign
                        }
        }
    }
    // CONCATENATED MODULE: ./src/Table/Body.tsx
    function $(e) {
        "@babel/helpers - typeof";
        return $ = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
            return typeof e;
        } : function(e) {
            return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
        }, $(e);
    }
    function W(e, t) {
        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
    }
    function K(e, t) {
        for (var n = 0; n < t.length; n++) {
            var r = t[n];
            r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), 
            Object.defineProperty(e, ee(r.key), r);
        }
    }
    function F(e, t, n) {
        return t && K(e.prototype, t), n && K(e, n), Object.defineProperty(e, "prototype", {
            writable: !1
        }), e;
    }
    function V(e, t) {
        if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function");
        e.prototype = Object.create(t && t.prototype, {
            constructor: {
                value: e,
                writable: !0,
                configurable: !0
            }
        }), Object.defineProperty(e, "prototype", {
            writable: !1
        }), t && U(e, t);
    }
    function U(e, t) {
        return U = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(e, t) {
            return e.__proto__ = t, e;
        }, U(e, t);
    }
    function G(e) {
        var t = J();
        return function() {
            var n, r = Q(e);
            if (t) {
                var o = Q(this).constructor;
                n = Reflect.construct(r, arguments, o);
            } else n = r.apply(this, arguments);
            return X(this, n);
        };
    }
    function X(e, t) {
        if (t && ("object" == $(t) || "function" == typeof t)) return t;
        if (void 0 !== t) throw new TypeError("Derived constructors may only return object or undefined");
        return Y(e);
    }
    function Y(e) {
        if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return e;
    }
    function J() {
        try {
            var e = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {})));
        } catch (e) {}
        return (J = function t() {
            return !!e;
        })();
    }
    function Q(e) {
        return Q = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(e) {
            return e.__proto__ || Object.getPrototypeOf(e);
        }, Q(e);
    }
    function Z(e, t, n) {
        return (t = ee(t)) in e ? Object.defineProperty(e, t, {
            value: n,
            enumerable: !0,
            configurable: !0,
            writable: !0
        }) : e[t] = n, e;
    }
    function ee(e) {
        var t = te(e, "string");
        return "symbol" == $(t) ? t : t + "";
    }
    function te(e, t) {
        if ("object" != $(e) || !e) return e;
        var n = e[Symbol.toPrimitive];
        if (void 0 !== n) {
            var r = n.call(e, t || "default");
            if ("object" != $(r)) return r;
            throw new TypeError("@@toPrimitive must return a primitive value.");
        }
        return ("string" === t ? String : Number)(e);
    }
    function ne() {
        return ne = Object.assign ? Object.assign.bind() : function(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = arguments[t];
                for (var r in n) {
                    ({}).hasOwnProperty.call(n, r) && (e[r] = n[r]);
                }
            }
            return e;
        }, ne.apply(null, arguments);
    }
    function re(e, t) {
        return ce(e) || le(e, t) || ie(e, t) || oe();
    }
    function oe() {
        throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function ie(e, t) {
        if (e) {
            if ("string" == typeof e) return ae(e, t);
            var n = {}.toString.call(e).slice(8, -1);
            return "Object" === n && e.constructor && (n = e.constructor.name), "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? ae(e, t) : void 0;
        }
    }
    function ae(e, t) {
        (null == t || t > e.length) && (t = e.length);
        for (var n = 0, r = Array(t); n < t; n++) {
            r[n] = e[n];
        }
        return r;
    }
    function le(e, t) {
        var n = null == e ? null : "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
        if (null != n) {
            var r, o, i, a, l = [], c = !0, s = !1;
            try {
                if (i = (n = n.call(e)).next, 0 === t) {
                    if (Object(n) !== n) return;
                    c = !1;
                } else for (;!(c = (r = i.call(n)).done) && (l.push(r.value), l.length !== t); c = !0) {
                }
            } catch (e) {
                s = !0, o = e;
            } finally {
                try {
                    if (!c && null != n["return"] && (a = n["return"](), Object(a) !== a)) return;
                } finally {
                    if (s) throw o;
                }
            }
            return l;
        }
    }
    function ce(e) {
        if (Array.isArray(e)) return e;
    }
    function se(e, t) {
        if (null == e) return {};
        var n, r, o = ue(e, t);
        if (Object.getOwnPropertySymbols) {
            var i = Object.getOwnPropertySymbols(e);
            for (r = 0; r < i.length; r++) {
                n = i[r], t.includes(n) || {}.propertyIsEnumerable.call(e, n) && (o[n] = e[n]);
            }
        }
        return o;
    }
    function ue(e, t) {
        if (null == e) return {};
        var n = {};
        for (var r in e) {
            if ({}.hasOwnProperty.call(e, r)) {
                if (t.includes(r)) continue;
                n[r] = e[r];
            }
        }
        return n;
    }
    var de = {
        /** @private. Generally passed by Table rather than added directly. */
        actions: i().bool,
        children: i().node,
        elementRef: i().oneOfType([ i().func, i().object ]),
        /** @private. Generally passed by Table rather than added directly. */
        movableColumns: i().bool,
        /** @private. Generally passed by Table rather than added directly. */
        rowExpansion: i().oneOf([ "single", "multi", "none", "controlled" ]),
        /** @private. Generally passed by Table rather than added directly. */
        onRequestMoveRow: i().func,
        /** @private. Generally passed by Table rather than added directly. */
        primaryColumnIndex: i().number,
        /** @private. Generally passed by Table rather than added directly. */
        stripeRows: i().bool
    };
    var fe = {
        actions: false,
        rowExpansion: "none",
        stripeRows: false
    };
    function pe(e) {
        var t = e.actions, o = e.children, i = e.elementRef, a = e.movableColumns, l = e.onRequestMoveRow, c = e.rowExpansion, s = e.primaryColumnIndex, u = e.stripeRows, d = se(e, [ "actions", "children", "elementRef", "movableColumns", "onRequestMoveRow", "rowExpansion", "primaryColumnIndex", "stripeRows" ]);
        var f = [];
        var p = (0, n.useState)([]), v = re(p, 2), b = v[0], y = v[1];
        var h = (0, n.useRef)(null);
        var m = (0, n.useCallback)((function(e) {
            h.current = e;
            B(i, e);
        }), [ i, h ]);
        var g = function e(t, n, r) {
            var o = b;
            if (c === "single") {
                if (_()(o, n)) {
                    y([]);
                } else {
                    y([ n ]);
                }
            } else if (c === "multi") {
                if (_()(o, n)) {
                    y(A()(o, n));
                } else {
                    y(o === null || o === void 0 ? void 0 : o.concat(n));
                }
            }
            r === null || r === void 0 ? void 0 : r(t);
        };
        var w = n.Children.toArray(o).filter(n.isValidElement);
        var x = (0, n.useState)(new Map), C = re(x, 2), S = C[0], k = C[1];
        r().useEffect((function() {
            k((function(e) {
                var t = new Map(e);
                var r = false;
                w.forEach((function(o) {
                    var i, a;
                    if (!o.props.expansionRow) return;
                    var l = (i = (a = o.key) !== null && a !== void 0 ? a : o.props.dataId) !== null && i !== void 0 ? i : w.indexOf(o);
                    var c = n.Children.count(o.props.expansionRow);
                    var s = e.get(l);
                    if (!s || s.length !== c) {
                        t.set(l, Array.from({
                            length: c
                        }, (function() {
                            return (0, z.createDOMID)();
                        })));
                        r = true;
                    }
                }));
                return r ? t : e;
            }));
        }), [ w ]);
        w.forEach((function(e, r) {
            if (e) {
                var o, i, d;
                if (false) {}
                var p = (o = (i = e.key) !== null && i !== void 0 ? i : e.props.dataId) !== null && o !== void 0 ? o : r;
                var v = r % 2 ? "even" : "odd";
                var y = u ? v : "none";
                var h = c === "controlled" ? e.props.expanded : _()(b, p);
                var m = function t(n) {
                    g(n, p, e.props.onExpansion);
                };
                var w = e.props.expansionRow ? (d = S.get(p)) === null || d === void 0 ? void 0 : d.join(" ") : undefined;
                f.push( (0, n.cloneElement)(e, {
                    stripe: y,
                    actions: t,
                    expanded: h,
                    expansionRowIds: w,
                    expandable: c !== "none",
                    draggable: !!l,
                    movableColumns: a,
                    primaryColumnIndex: s,
                    onExpansion: m,
                    key: e.key || e.props.dataId || r
                }));
                if (h && e.props.expansionRow) {
                    n.Children.forEach(e.props.expansionRow, (function(e, t) {
                        var r;
                        var o = (r = S.get(p)) === null || r === void 0 ? void 0 : r[t];
                        f.push( (0, n.cloneElement)(e, {
                            key: o,
                            id: o,
                            stripe: y,
                            movableColumns: a,
                            "data-expansion-row": "true"
                        }));
                    }));
                }
            }
        }));
        if (f.length === 0) {
            return null;
        }
        
        return r().createElement(L, ne({
            "data-test": "body"
        }, d, {
            ref: m
        }), f);
    }
    pe.propTypes = de;
    var ve =  function(e) {
        V(n, e);
        var t = G(n);
        function n() {
            W(this, n);
            return t.apply(this, arguments);
        }
        F(n, [ {
            key: "render",
            // @docs-props-type BodyPropsBase
            value: function e() {
                
                return r().createElement(pe, this.props);
            }
        } ]);
        return n;
    }(n.Component);
    Z(ve, "splunkUiType", "Table.Body");
    Z(ve, "propTypes", de);
    Z(ve, "defaultProps", fe);
    /* harmony default export */    const be = ve;
    // exporting the base component for testing purpose
        // CONCATENATED MODULE: ./src/Table/TableStyles.ts
    var ye = H().div.withConfig({
        displayName: "TableStyles__Styled",
        componentId: "sc-1cmfss7-0"
    })([ "", ";max-width:100%;position:relative;z-index:1;@media print{max-height:none !important;}" ], M.mixins.reset("block"));
    var he = H().div.withConfig({
        displayName: "TableStyles__StyledTableContainer",
        componentId: "sc-1cmfss7-1"
    })([ "overflow:auto;&::before{content:'';width:100%;height:0;top:0;position:absolute;}" ]);
    var me = H().table.withConfig({
        displayName: "TableStyles__StyledTable",
        componentId: "sc-1cmfss7-2"
    })([ "", ";position:relative;border-collapse:collapse;border-spacing:0;min-width:100%;z-index:0;height:1px;&[data-fixed-column='true']{table-layout:fixed;min-width:0;width:0;}", " @media print{width:100%;max-width:100%;table-layout:auto;}" ], M.mixins.reset("table"), (function(e) {
        var t = e.$resizableFillLayout;
        return t && (0, N.css)([ "width:100%;min-width:100%;table-layout:fixed;" ]);
    }));
    var ge = H().div.withConfig({
        displayName: "TableStyles__StyledDockedScrollbar",
        componentId: "sc-1cmfss7-3"
    })([ "position:fixed;bottom:0;overflow:auto;z-index:calc(", " + 1);" ], M.variables.zindexFixedNavbar);
    var we = H().div.withConfig({
        displayName: "TableStyles__StyledDockedScrollbarContent",
        componentId: "sc-1cmfss7-4"
    })([ "height:1px;" ]);
    var xe = H().caption.withConfig({
        displayName: "TableStyles__StyledTableCaption",
        componentId: "sc-1cmfss7-5"
    })([ "padding:", ";font-size:", ";caption-side:", ";" ], (0, M.pick)({
        enterprise: "".concat(M.variables.spacingXSmall, " 0"),
        prisma: "5px 0"
    }), M.variables.fontSizeLarge, (function(e) {
        var t = e.side;
        return t;
    }));
    // CONCATENATED MODULE: ./src/Table/Caption.tsx
    function Ce() {
        return Ce = Object.assign ? Object.assign.bind() : function(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = arguments[t];
                for (var r in n) {
                    ({}).hasOwnProperty.call(n, r) && (e[r] = n[r]);
                }
            }
            return e;
        }, Ce.apply(null, arguments);
    }
    function Se(e, t) {
        if (null == e) return {};
        var n, r, o = ke(e, t);
        if (Object.getOwnPropertySymbols) {
            var i = Object.getOwnPropertySymbols(e);
            for (r = 0; r < i.length; r++) {
                n = i[r], t.includes(n) || {}.propertyIsEnumerable.call(e, n) && (o[n] = e[n]);
            }
        }
        return o;
    }
    function ke(e, t) {
        if (null == e) return {};
        var n = {};
        for (var r in e) {
            if ({}.hasOwnProperty.call(e, r)) {
                if (t.includes(r)) continue;
                n[r] = e[r];
            }
        }
        return n;
    }
    var Oe = {
        children: i().node.isRequired,
        side: i().oneOf([ "top", "bottom" ])
    };
    /**
 * Tables that use a docked header must place the caption on the bottom side.
 * Tables that use a fixed header cannot use captions.
 */    function Ee(e) {
        var t = e.children, n = e.side, o = n === void 0 ? "top" : n, i = Se(e, [ "children", "side" ]);
        // @docs-props-type CaptionPropsBase
                
        return r().createElement(xe, Ce({
            "data-test": "caption",
            side: o
        }, i), t);
    }
    Ee.propTypes = Oe;
    Ee.splunkUiType = "Table.Caption";
    /* harmony default export */    const Re = Ee;
    // CONCATENATED MODULE: ./src/Table/CellStyles.ts
    var je = (0, N.css)([ "box-shadow:", ";" ], M.variables.focusShadowInset);
    var Ie = H().td.withConfig({
        displayName: "CellStyles__Styled",
        componentId: "sc-1955xk2-0"
    })([ "", " padding:", ";border-left:0 solid transparent;border-right:0 solid transparent;word-wrap:break-word;line-height:", ";vertical-align:top;height:100%;", " ", " ", " ", " ", " ", " [data-expansion-row='true'] > &:first-child{padding-top:8px;}[data-expansion-row='true'] > &:last-child{padding-bottom:14px;}[data-has-movable-columns='true'] > &:not([data-movable-column='false']){", "}" ], M.mixins.reset("table-cell"), (0, 
    M.pick)({
        enterprise: "6px 12px",
        prisma: {
            comfortable: "14px 8px",
            compact: "6px 8px"
        }
    }), M.variables.lineHeight, (0, M.pickVariant)("$align", {
        center: (0, N.css)([ "text-align:center;" ]),
        left: (0, N.css)([ "text-align:left;" ]),
        right: (0, N.css)([ "text-align:right;" ])
    }), (0, M.pickVariant)("$variant", {
        expand: (0, N.css)([ "padding:0;" ]),
        actions: {
            prisma: {
                comfortable: (0, N.css)([ "padding:4px 8px;" ]),
                compact: (0, N.css)([ "padding:0 8px 0 0;" ])
            },
            enterprise: (0, N.css)([ "padding:2px 8px;" ])
        },
        toggle: (0, N.css)([ "padding:0;" ])
    }), (function(e) {
        var t = e.$variant;
        return (0, M.pickVariant)("$appearance", {
            data: (0, N.css)([ "", "" ], t === "actions" && (0, N.css)([ "cursor:default;" ])),
            rowLink: {
                enterprise: (0, N.css)([ "color:", ";*:hover > &&{cursor:pointer;}" ], M.variables.linkColor),
                prisma: (0, N.css)([ "color:", ";*:hover > &&{cursor:pointer;}" ], M.variables.contentColorDefault)
            },
            link: (0, N.css)([ "color:", ";&:hover{cursor:pointer;", "}&:focus{", " box-shadow:", ";}" ], M.variables.linkColor, (0, 
            M.pick)({
                enterprise: {
                    dark: (0, N.css)([ "color:", ";box-shadow:", ";" ], M.variables.accentColorL20, M.variables.focusShadowInset),
                    light: (0, N.css)([ "box-shadow:", ";" ], M.variables.focusShadowInset)
                },
                prisma: (0, N.css)([ "text-decoration:underline;" ])
            }), (0, M.pick)({
                enterprise: {
                    dark: (0, N.css)([ "color:", ";" ], M.variables.accentColorL20),
                    light: (0, N.css)([ "color:", ";" ], M.variables.focusColor)
                },
                prisma: (0, N.css)([ "color:", ";text-decoration:underline;" ], M.variables.interactiveColorPrimary)
            }), M.variables.focusShadowInset)
        });
    }), (function(e) {
        var t = e.$clickable, n = e.$focusWithin;
        return t && (0, N.css)([ "cursor:pointer;&:hover{background-color:", ";}&:focus{", "}", " &:active{background:", ";}" ], (0, 
        M.pick)({
            enterprise: {
                light: M.variables.accentColorL50,
                dark: M.variables.accentColorD50
            },
            prisma: M.variables.interactiveColorOverlayHover
        }), je, n && (0, N.css)([ "&:focus-within{", "}" ], je), (0, M.pick)({
            prisma: M.variables.interactiveColorOverlayActive
        }));
    }), (function(e) {
        var t = e.$expanded;
        return t && (0, N.css)([ "background-color:", ";" ], (0, M.pick)({
            prisma: M.variables.interactiveColorOverlaySelected
        }));
    }), (function(e) {
        var t = e.$disabled;
        return t && (0, N.css)([ "color:", ";" ], (0, M.pick)({
            prisma: M.variables.contentColorDisabled
        }));
    }), (0, M.pick)({
        enterprise: (0, N.css)([ "padding-left:29px;&:first-child{padding-left:28px;}" ])
    }));
    // CONCATENATED MODULE: ./src/Table/Cell.tsx
    function Te(e) {
        "@babel/helpers - typeof";
        return Te = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
            return typeof e;
        } : function(e) {
            return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
        }, Te(e);
    }
    function Pe() {
        return Pe = Object.assign ? Object.assign.bind() : function(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = arguments[t];
                for (var r in n) {
                    ({}).hasOwnProperty.call(n, r) && (e[r] = n[r]);
                }
            }
            return e;
        }, Pe.apply(null, arguments);
    }
    function De(e, t) {
        if (null == e) return {};
        var n, r, o = _e(e, t);
        if (Object.getOwnPropertySymbols) {
            var i = Object.getOwnPropertySymbols(e);
            for (r = 0; r < i.length; r++) {
                n = i[r], t.includes(n) || {}.propertyIsEnumerable.call(e, n) && (o[n] = e[n]);
            }
        }
        return o;
    }
    function _e(e, t) {
        if (null == e) return {};
        var n = {};
        for (var r in e) {
            if ({}.hasOwnProperty.call(e, r)) {
                if (t.includes(r)) continue;
                n[r] = e[r];
            }
        }
        return n;
    }
    function qe(e, t) {
        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
    }
    function Ae(e, t) {
        for (var n = 0; n < t.length; n++) {
            var r = t[n];
            r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), 
            Object.defineProperty(e, Fe(r.key), r);
        }
    }
    function ze(e, t, n) {
        return t && Ae(e.prototype, t), n && Ae(e, n), Object.defineProperty(e, "prototype", {
            writable: !1
        }), e;
    }
    function Ne(e, t) {
        if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function");
        e.prototype = Object.create(t && t.prototype, {
            constructor: {
                value: e,
                writable: !0,
                configurable: !0
            }
        }), Object.defineProperty(e, "prototype", {
            writable: !1
        }), t && He(e, t);
    }
    function He(e, t) {
        return He = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(e, t) {
            return e.__proto__ = t, e;
        }, He(e, t);
    }
    function Me(e) {
        var t = $e();
        return function() {
            var n, r = We(e);
            if (t) {
                var o = We(this).constructor;
                n = Reflect.construct(r, arguments, o);
            } else n = r.apply(this, arguments);
            return Le(this, n);
        };
    }
    function Le(e, t) {
        if (t && ("object" == Te(t) || "function" == typeof t)) return t;
        if (void 0 !== t) throw new TypeError("Derived constructors may only return object or undefined");
        return Be(e);
    }
    function Be(e) {
        if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return e;
    }
    function $e() {
        try {
            var e = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {})));
        } catch (e) {}
        return ($e = function t() {
            return !!e;
        })();
    }
    function We(e) {
        return We = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(e) {
            return e.__proto__ || Object.getPrototypeOf(e);
        }, We(e);
    }
    function Ke(e, t, n) {
        return (t = Fe(t)) in e ? Object.defineProperty(e, t, {
            value: n,
            enumerable: !0,
            configurable: !0,
            writable: !0
        }) : e[t] = n, e;
    }
    function Fe(e) {
        var t = Ve(e, "string");
        return "symbol" == Te(t) ? t : t + "";
    }
    function Ve(e, t) {
        if ("object" != Te(e) || !e) return e;
        var n = e[Symbol.toPrimitive];
        if (void 0 !== n) {
            var r = n.call(e, t || "default");
            if ("object" != Te(r)) return r;
            throw new TypeError("@@toPrimitive must return a primitive value.");
        }
        return ("string" === t ? String : Number)(e);
    }
    /** @public */    var Ue = {
        align: i().oneOf([ "left", "center", "right" ]),
        /** @private */
        appearance: i().oneOf([ "data", "link", "rowLink" ]),
        /** @private Used to set the $clickable appearance without an onClick */
        appearClickable: i().bool,
        children: i().node,
        data: i().any,
        elementRef: i().oneOfType([ i().func, i().object ]),
        onClick: i().func,
        /** @private */
        onKeyDown: i().func,
        /** @private */
        disabled: i().bool,
        /** @private. */
        expand: i().bool,
        /** @private. */
        variant: i().oneOf([ "toggle", "expand", "drag", "actions" ])
    };
    var Ge = {
        align: "left"
    };
    var Xe =  function(e) {
        Ne(n, e);
        var t = Me(n);
        function n() {
            var e;
            qe(this, n);
            for (var r = arguments.length, o = new Array(r), i = 0; i < r; i++) {
                o[i] = arguments[i];
            }
            e = t.call.apply(t, [ this ].concat(o));
            Ke(Be(e), "el", null);
            Ke(Be(e), "handleMount", (function(t) {
                // eslint-disable-next-line react/no-unused-class-component-methods
                e.el = t;
                B(e.props.elementRef, t);
            }));
            Ke(Be(e), "handleClick", (function(t) {
                var n = e.props, r = n.data, o = n.onClick, i = n.variant;
                if (i === "actions") {
                    // Action buttons have their own onClicks inside the cell so we don't want Row onClick to fire
                    t.stopPropagation();
                }
                o === null || o === void 0 ? void 0 : o(t, r);
            }));
            Ke(Be(e), "handleKeyDown", (function(t) {
                var n = e.props, r = n.data, o = n.onClick, i = n.onKeyDown;
                if ((0, E.keycode)(t.nativeEvent) === "enter") {
                    o === null || o === void 0 ? void 0 : o(t, r);
                }
                i === null || i === void 0 ? void 0 : i(t);
            }));
            return e;
        }
 // @docs-props-type CellPropsBase
        // eslint-disable-next-line react/no-unused-class-component-methods
                ze(n, [ {
            key: "render",
            value: function e() {
                var t = this.props, n = t.align, o = t.appearance, i = t.appearClickable, a = t.children, l = t.disabled, c = t.elementRef, s = t.onClick, u = t.onKeyDown, d = t.variant, f = De(t, [ "align", "appearance", "appearClickable", "children", "disabled", "elementRef", "onClick", "onKeyDown", "variant" ]);
                var p = s !== undefined;
                var v = i || p;
                var b = v ? "link" : "data";
                
                return r().createElement(Ie, Pe({
                    "data-test": "cell",
                    $align: n,
                    $appearance: o || b,
                    $clickable: v ? true : undefined,
                    $disabled: !!l,
                    $focusWithin: i,
                    $variant: d,
                    onClick: this.handleClick,
                    onKeyDown: this.handleKeyDown,
                    ref: this.handleMount,
                    tabIndex: p ? 0 : undefined
                }, f), a);
            }
        } ]);
        return n;
    }(n.Component);
    Ke(Xe, "splunkUiType", "Table.Cell");
    Ke(Xe, "propTypes", Ue);
    Ke(Xe, "defaultProps", Ge);
    /* harmony default export */    const Ye = Xe;
    // CONCATENATED MODULE: external "lodash/findIndex"
    const Je = require("lodash/findIndex");
    var Qe =  e.n(Je);
    // CONCATENATED MODULE: external "lodash/keys"
    const Ze = require("lodash/keys");
    var et =  e.n(Ze);
    // CONCATENATED MODULE: external "lodash/isString"
    const tt = require("lodash/isString");
    var nt =  e.n(tt);
    // CONCATENATED MODULE: external "lodash/merge"
    const rt = require("lodash/merge");
    var ot =  e.n(rt);
    // CONCATENATED MODULE: external "@splunk/react-ui/Tooltip"
    const it = require("@splunk/react-ui/Tooltip");
    var at =  e.n(it);
    // CONCATENATED MODULE: external "@splunk/react-icons/ArrowDown"
    const lt = require("@splunk/react-icons/ArrowDown");
    var ct =  e.n(lt);
    // CONCATENATED MODULE: external "@splunk/react-icons/ArrowUp"
    const st = require("@splunk/react-icons/ArrowUp");
    var ut =  e.n(st);
    // CONCATENATED MODULE: external "@splunk/react-icons/ArrowUpDown"
    const dt = require("@splunk/react-icons/ArrowUpDown");
    var ft =  e.n(dt);
    // CONCATENATED MODULE: external "@splunk/react-icons/CaretSmallDown"
    const pt = require("@splunk/react-icons/CaretSmallDown");
    var vt =  e.n(pt);
    // CONCATENATED MODULE: external "@splunk/react-icons/CaretsSmallUpDown"
    const bt = require("@splunk/react-icons/CaretsSmallUpDown");
    var yt =  e.n(bt);
    // CONCATENATED MODULE: external "@splunk/react-icons/enterprise/Caret"
    const ht = require("@splunk/react-icons/enterprise/Caret");
    var mt =  e.n(ht);
    // CONCATENATED MODULE: external "@splunk/react-ui/ScreenReaderContent"
    const gt = require("@splunk/react-ui/ScreenReaderContent");
    var wt =  e.n(gt);
    // CONCATENATED MODULE: external "@splunk/react-icons/InformationCircle"
    const xt = require("@splunk/react-icons/InformationCircle");
    var Ct =  e.n(xt);
    // CONCATENATED MODULE: external "@splunk/react-ui/Divider"
    const St = require("@splunk/react-ui/Divider");
    var kt =  e.n(St);
    // CONCATENATED MODULE: ./src/Table/HeadInnerStyles.ts
    var Ot = "12px";
    var Et = H().div.withConfig({
        displayName: "HeadInnerStyles__StyledDragContainer",
        componentId: "sc-1sa0wng-0"
    })([ "position:absolute;cursor:move;top:0;", " padding:", ";" ], (0, M.pick)({
        enterprise: (0, N.css)([ "left:0;" ]),
        prisma: (0, N.css)([ "right:0;" ])
    }), (0, M.pick)({
        enterprise: "9px 12px",
        prisma: {
            comfortable: "17px 4px 14px",
            compact: "9px 4px 6px"
        }
    }));
    var Rt = H().span.withConfig({
        displayName: "HeadInnerStyles__StyledMenuIcon",
        componentId: "sc-1sa0wng-1"
    })([ "", " color:", ";position:relative;" ], (0, M.pick)({
        prisma: (0, N.css)([ "display:inline-flex;" ]),
        enterprise: (0, N.css)([ "padding-left:4px;" ])
    }), (0, M.pick)({
        enterprise: M.variables.textGray,
        prisma: M.variables.contentColorDefault
    }));
    var jt = H().span.withConfig({
        displayName: "HeadInnerStyles__StyledLabel",
        componentId: "sc-1sa0wng-2"
    })([ "flex:0 1 auto;position:relative;word-wrap:break-word;word-break:break-word;", " ", " ", " ", " ", " + &{margin-left:", ";}" ], (0, 
    M.pick)({
        enterprise: function e(t) {
            var n = t.$align;
            return n !== "right" && (0, N.css)([ "display:flex;justify-content:space-between;" ]);
        },
        prisma: (0, N.css)([ "display:flex;" ])
    }), (0, M.pickVariant)("$truncate", {
        true: (0, N.css)([ "overflow:hidden;text-overflow:ellipsis;white-space:nowrap;" ])
    }), (0, M.pickVariant)("$fill", {
        true: (0, N.css)([ "flex:1 0 0px;" ])
    }), (0, M.pickVariant)("$align", {
        right: (0, N.css)([ "& > &{text-align:right;}" ]),
        left: (0, N.css)([ "& > &{text-align:left;}" ]),
        center: (0, N.css)([ "& > &{text-align:center;}" ])
    }), /* sc-sel */ Et, (0, M.pick)({
        enterprise: Ot
    }));
    var It = (0, N.css)([ "box-shadow:", ";outline:none;", ";" ], M.variables.focusShadowInset, (0, 
    M.pick)({
        enterprise: {
            light: (0, N.css)([ "color:", ";" ], M.variables.accentColorD10),
            dark: (0, N.css)([ "color:", ";" ], M.variables.linkColorHover)
        },
        prisma: (0, N.css)([ "background-color:", ";" ], M.variables.interactiveColorOverlaySelected)
    }));
    var Tt = H().div.withConfig({
        displayName: "HeadInnerStyles__Styled",
        componentId: "sc-1sa0wng-3"
    })([ "", " ", ";position:relative;width:100%;font-size:", ";", ";line-height:", ";justify-content:", ";padding:", ";", " ", " ", " ", " &[data-helper]{background-color:", ";position:absolute;left:-10000px;top:-10000px;box-shadow:", ";box-sizing:border-box;background-repeat:repeat-x;", ";}@media print{background-image:none;}", "" ], M.mixins.reset("flex"), M.mixins.clearfix(), (0, 
    M.pick)({
        enterprise: "inherit",
        prisma: "12px"
    }), (0, M.pick)({
        prisma: (0, N.css)([ "font-weight:bold;" ])
    }), (0, M.pick)({
        enterprise: M.variables.lineHeight,
        prisma: "16px"
    }), (0, M.pickVariant)("$align", {
        center: "center",
        left: "flex-start",
        right: "flex-end"
    }), (0, M.pick)({
        enterprise: "6px 12px",
        prisma: {
            comfortable: "16px 10px",
            compact: "8px"
        }
    }), (function(e) {
        var t = e.$variant;
        return t === "toggleAll" && (0, N.css)([ "padding:0;" ]);
    }), (function(e) {
        var t = e.$hasActionsHead;
        return t && (0, N.css)([ "button:not([disabled]):focus{", ";}padding:0;" ], (0, 
        M.pick)({
            enterprise: (0, N.css)([ "box-shadow:", ";" ], M.variables.focusShadowInset)
        }));
    }), (function(e) {
        var t = e.$dragging;
        return t && (0, N.css)([ "opacity:0;" ]);
    }), (function(e) {
        var t = e.$draggable;
        return t && (0, N.css)([ "padding-left:", ";-webkit-user-drag:element;user-select:none;" ], (0, 
        M.pick)({
            enterprise: "16px"
        }));
    }), (0, M.pick)({
        enterprise: {
            light: M.variables.accentColorL50,
            dark: M.variables.accentColorD50
        },
        prisma: M.mixins.overlayColors(M.variables.interactiveColorBackground, M.variables.interactiveColorOverlaySelected)
    }), (0, M.pick)({
        enterprise: M.variables.overlayShadow,
        prisma: M.variables.dragShadow
    }), (0, M.pick)({
        enterprise: (0, N.css)([ "border:1px solid ", ";" ], M.variables.borderColor)
    }), (function(e) {
        var t = e.$clickable, n = e.$focusWithin;
        return t && (0, N.css)([ "cursor:pointer;&:focus{", "}", " &:hover{outline:none;color:", ";background-color:", ";}&:active{background-color:", ";}" ], It, n && (0, 
        N.css)([ "&:focus-within{", "}" ], It), (0, M.pick)({
            enterprise: {
                light: M.variables.accentColorD10,
                dark: M.variables.linkColorHover
            }
        }), (0, M.pick)({
            prisma: M.variables.interactiveColorOverlayHover
        }), (0, M.pick)({
            prisma: M.variables.interactiveColorOverlayActive
        }));
    }));
    var Pt = H().span.withConfig({
        displayName: "HeadInnerStyles__StyledSortIcon",
        componentId: "sc-1sa0wng-4"
    })([ "flex:0 0 auto;", ";", " color:", ";", "" ], (0, M.pick)({
        enterprise: (0, N.css)([ "right:0;" ]),
        prisma: (0, N.css)([ "left:0;" ])
    }), (0, M.pick)({
        prisma: (0, N.css)([ "margin-right:4px;" ])
    }), (0, M.pick)({
        enterprise: {
            light: M.variables.textGray,
            dark: M.variables.gray80
        }
    }), (function(e) {
        var t = e.$sorted;
        return t && (0, N.css)([ "color:", ";" ], (0, M.pick)({
            enterprise: M.variables.accentColor,
            prisma: M.variables.contentColorDefault
        }));
    }));
    var Dt = H()(kt()).withConfig({
        displayName: "HeadInnerStyles__StyledResize",
        componentId: "sc-1sa0wng-5"
    })([ "", ";position:absolute;right:-5px;width:9px;top:0;bottom:0;z-index:1;cursor:col-resize;th:last-child > ", " > &{right:0;width:5px;}&::-moz-focus-inner{border:0;padding:0;}&:focus{outline:none;&::before{content:'';position:absolute;background:", ";box-shadow:", ";left:4px;width:1px;top:0;bottom:0;}}" ], M.mixins.reset("block"), /* sc-sel */ Tt, M.variables.focusColor, M.variables.focusShadow);
    // TODO: SUI-5361 remove StyledCaretUp and StyledCaretDown once have made a general way to address the multicolor icon problem
        var _t = H()(yt()).withConfig({
        displayName: "HeadInnerStyles__StyledCaretDown",
        componentId: "sc-1sa0wng-6"
    })([ "path:last-child{fill:transparent;}" ]);
    var qt = H()(yt()).withConfig({
        displayName: "HeadInnerStyles__StyledCaretUp",
        componentId: "sc-1sa0wng-7"
    })([ "path:first-child{fill:transparent;}" ]);
    var At = H()(Ct()).withConfig({
        displayName: "HeadInnerStyles__StyledTooltipIcon",
        componentId: "sc-1sa0wng-8"
    })([ "align-self:center;margin-inline-start:", ";" ], M.variables.spacingXSmall);
    // CONCATENATED MODULE: ./src/Table/HeadCellStyles.ts
    var zt = H().th.withConfig({
        displayName: "HeadCellStyles__Styled",
        componentId: "sc-1hj81sa-0"
    })([ "", ";background-color:", ";box-sizing:content-box;text-align:left;vertical-align:", ";& + &{border-left:1px solid ", ";}", " ", " ", "" ], M.mixins.reset("table-cell"), (0, 
    M.pick)({
        enterprise: {
            light: M.variables.gray92,
            dark: M.variables.black
        },
        prisma: M.variables.interactiveColorBackground
    }), (function(e) {
        var t = e.$variant;
        return t ? "middle" : "top";
    }), (0, M.pick)({
        enterprise: M.variables.backgroundColor,
        prisma: M.variables.backgroundColorPage
    }), (function(e) {
        var t = e.$isFixed, n = e.$zIndex;
        return t && (0, N.css)([ "position:sticky;top:0;z-index:", ";&:not(:first-child)::before{content:'';height:100%;position:absolute;top:0;bottom:0;box-shadow:-1px 0 0 0 ", ";width:2px;border:0;left:0;margin-right:-2px;color:transparent;}&:not(:last-child)::after{content:'';height:100%;position:absolute;top:0;bottom:0;box-shadow:1px 0 0 0 ", ";width:2px;border:0;right:0;margin-left:-2px;color:transparent;}" ], n, (0, 
        M.pick)({
            enterprise: M.variables.backgroundColor,
            prisma: M.variables.backgroundColorPage
        }), (0, M.pick)({
            enterprise: M.variables.backgroundColor,
            prisma: M.variables.backgroundColorPage
        }));
    }), (function(e) {
        var t = e.$dragging;
        return t && (0, N.css)([ "background-color:", ";&:focus{box-shadow:none;}" ], (0, 
        M.pick)({
            enterprise: {
                light: M.variables.gray80,
                dark: M.variables.gray20
            },
            prisma: M.mixins.overlayColors(M.variables.backgroundColorPage, M.variables.interactiveColorOverlayDrag)
        }));
    }), (0, M.pickVariant)("$variant", {
        actions: (0, N.css)([ "& > ", "{padding-right:8px;}" ], /* sc-sel */ Tt),
        info: (0, N.css)([ "& > ", "{", ";}" ], /* sc-sel */ Tt, (0, M.pick)({
            enterprise: (0, N.css)([ "padding-top:7px;" ]),
            prisma: {
                comfortable: (0, N.css)([ "padding:16px 12px;" ]),
                compact: (0, N.css)([ "padding:6px 12px;" ])
            }
        }))
    }));
    var Nt = H().div.withConfig({
        displayName: "HeadCellStyles__StyledGuideLine",
        componentId: "sc-1hj81sa-1"
    })([ "", " width:1px;position:absolute;background-color:", ";height:100%;top:0;z-index:1;", "" ], M.mixins.reset("block"), (0, 
    M.pick)({
        enterprise: M.variables.linkColor,
        prisma: M.variables.interactiveColorPrimary
    }), (0, M.pickVariant)("$position", {
        before: (0, N.css)([ "float:left;", ":not(:first-child) > &{margin-left:-1px;}" ], /* sc-sel */ zt),
        after: (0, N.css)([ "right:0;" ])
    }));
    // CONCATENATED MODULE: ./src/Table/DragHandleStyles.ts
    var Ht = H().div.withConfig({
        displayName: "DragHandleStyles__StyledDrag",
        componentId: "sc-9eqfn5-0"
    })([ "display:block;cursor:move;background:", ";", "" ], M.variables.draggableBackground, (0, 
    M.pick)({
        enterprise: (0, N.css)([ "width:7px;height:14px;" ]),
        prisma: (0, N.css)([ "width:6px;height:20px;margin-top:-3px;opacity:0;", ":focus &,", ":hover &,[data-helper] &{opacity:1;}" ], /* sc-sel */ zt, /* sc-sel */ zt)
    }));
    // CONCATENATED MODULE: ./src/Table/DragHandle.tsx
    var Mt = {
        screenReaderContent: i().string
    };
    function Lt(e) {
        var t = e.screenReaderContent;
        
        return r().createElement(Ht, null, !!t &&  r().createElement(wt(), null, t));
    }
    Lt.propTypes = Mt;
    /* harmony default export */    const Bt = Lt;
    // CONCATENATED MODULE: ./src/utils/ssrDocument.ts
    /* eslint-disable @typescript-eslint/no-empty-function */
    var $t = {
        body: {
            appendChild: function e() {
                return [];
            }
        },
        addEventListener: function e() {},
        removeEventListener: function e() {},
        activeElement: {
            blur: function e() {},
            nodeName: ""
        },
        querySelector: function e() {
            return null;
        },
        querySelectorAll: function e() {
            return [];
        },
        getElementById: function e() {
            return null;
        },
        createEvent: function e() {
            return {
                initEvent: function e() {}
            };
        },
        createElement: function e() {
            return {
                children: [],
                childNodes: [],
                style: {},
                setAttribute: function e() {},
                getElementsByTagName: function e() {
                    return [];
                }
            };
        },
        createElementNS: function e() {
            return {};
        },
        importNode: function e() {
            return null;
        },
        location: {
            hash: "",
            host: "",
            hostname: "",
            href: "",
            origin: "",
            pathname: "",
            protocol: "",
            search: ""
        }
    };
    function Wt() {
        var e = typeof document !== "undefined" ? document : $t;
        return e;
    }
    var Kt = Wt();
    /* harmony default export */    const Ft = /* unused pure expression or super */ null && Kt;
    // CONCATENATED MODULE: ./src/utils/ssrWindow.ts
    /* eslint-disable @typescript-eslint/no-empty-function */
    var Vt = {
        document: $t,
        navigator: {
            userAgent: ""
        },
        location: {
            hash: "",
            host: "",
            hostname: "",
            href: "",
            origin: "",
            pathname: "",
            protocol: "",
            search: ""
        },
        history: {
            replaceState: function e() {},
            pushState: function e() {},
            go: function e() {},
            back: function e() {}
        },
        CustomEvent: function e() {
            return this;
        },
        addEventListener: function e() {},
        removeEventListener: function e() {},
        getComputedStyle: function e() {
            return {
                getPropertyValue: function e() {
                    return "";
                }
            };
        },
        Image: function e() {},
        Date: function e() {},
        screen: {},
        setTimeout: function e() {},
        clearTimeout: function e() {},
        matchMedia: function e() {
            return {};
        },
        requestAnimationFrame: function e(t) {
            if (typeof setTimeout === "undefined") {
                t();
                return null;
            }
            return setTimeout(t, 0);
        },
        cancelAnimationFrame: function e(t) {
            if (typeof setTimeout === "undefined") {
                return;
            }
            clearTimeout(t);
        }
    };
    function Ut() {
        var e = typeof window !== "undefined" ? window : Vt;
        return e;
    }
    var Gt = Ut();
    /* harmony default export */    const Xt = /* unused pure expression or super */ null && Gt;
    // CONCATENATED MODULE: ./src/Table/HeadInner.tsx
    function Yt() {
        return Yt = Object.assign ? Object.assign.bind() : function(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = arguments[t];
                for (var r in n) {
                    ({}).hasOwnProperty.call(n, r) && (e[r] = n[r]);
                }
            }
            return e;
        }, Yt.apply(null, arguments);
    }
    function Jt(e) {
        return en(e) || Zt(e) || rn(e) || Qt();
    }
    function Qt() {
        throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function Zt(e) {
        if ("undefined" != typeof Symbol && null != e[Symbol.iterator] || null != e["@@iterator"]) return Array.from(e);
    }
    function en(e) {
        if (Array.isArray(e)) return on(e);
    }
    function tn(e, t) {
        return ln(e) || an(e, t) || rn(e, t) || nn();
    }
    function nn() {
        throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function rn(e, t) {
        if (e) {
            if ("string" == typeof e) return on(e, t);
            var n = {}.toString.call(e).slice(8, -1);
            return "Object" === n && e.constructor && (n = e.constructor.name), "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? on(e, t) : void 0;
        }
    }
    function on(e, t) {
        (null == t || t > e.length) && (t = e.length);
        for (var n = 0, r = Array(t); n < t; n++) {
            r[n] = e[n];
        }
        return r;
    }
    function an(e, t) {
        var n = null == e ? null : "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
        if (null != n) {
            var r, o, i, a, l = [], c = !0, s = !1;
            try {
                if (i = (n = n.call(e)).next, 0 === t) {
                    if (Object(n) !== n) return;
                    c = !1;
                } else for (;!(c = (r = i.call(n)).done) && (l.push(r.value), l.length !== t); c = !0) {
                }
            } catch (e) {
                s = !0, o = e;
            } finally {
                try {
                    if (!c && null != n["return"] && (a = n["return"](), Object(a) !== a)) return;
                } finally {
                    if (s) throw o;
                }
            }
            return l;
        }
    }
    function ln(e) {
        if (Array.isArray(e)) return e;
    }
    function cn(e, t) {
        if (null == e) return {};
        var n, r, o = sn(e, t);
        if (Object.getOwnPropertySymbols) {
            var i = Object.getOwnPropertySymbols(e);
            for (r = 0; r < i.length; r++) {
                n = i[r], t.includes(n) || {}.propertyIsEnumerable.call(e, n) && (o[n] = e[n]);
            }
        }
        return o;
    }
    function sn(e, t) {
        if (null == e) return {};
        var n = {};
        for (var r in e) {
            if ({}.hasOwnProperty.call(e, r)) {
                if (t.includes(r)) continue;
                n[r] = e[r];
            }
        }
        return n;
    }
    var un = {
        align: i().oneOf([ "left", "center", "right" ]),
        clickable: i().bool,
        columnId: i().any,
        elementRef: i().oneOfType([ i().func, i().object ]),
        focusWithin: i().bool,
        hasActionsHead: i().bool,
        hasTooltip: i().bool,
        id: i().string,
        index: i().number,
        isMenu: i().bool,
        label: i().node,
        onAutosizeColumn: i().func,
        onDragEnd: i().func,
        onDragStart: i().func,
        onRequestResize: i().func,
        resizable: i().bool,
        sortDir: i().oneOf([ "none", "asc", "desc" ]),
        truncate: i().bool,
        width: i().oneOfType([ i().number, i().oneOf([ "auto" ]) ]),
        variant: i().oneOf([ "toggleAll", "info", "actions" ])
    };
    var dn = new Set([ "none", "asc", "desc" ]);
    var fn = Object.freeze({
        none: (0, T._)("Click to sort"),
        asc: (0, T._)("Press to sort descending"),
        desc: (0, T._)("Press to sort ascending")
    });
    var pn = Object.freeze({
        none: yt(),
        asc: qt,
        desc: _t
    });
    var vn = Object.freeze({
        none: ft(),
        asc: ut(),
        desc: ct()
    });
    function bn(e) {
        var t = e.index, o = e.clickable, i = e.columnId, a = e.elementRef, l = e.focusWithin, c = e.id, s = e.width, u = e.onDragEnd, d = e.onAutosizeColumn, f = e.align, p = f === void 0 ? "left" : f, v = e.label, b = e.hasActionsHead, y = b === void 0 ? false : b, h = e.hasTooltip, m = h === void 0 ? false : h, w = e.isMenu, x = w === void 0 ? false : w, C = e.onDragStart, S = e.onRequestResize, k = e.resizable, R = k === void 0 ? true : k, j = e.sortDir, I = j === void 0 ? undefined : j, D = e.truncate, _ = D === void 0 ? true : D, q = e.variant, A = cn(e, [ "index", "clickable", "columnId", "elementRef", "focusWithin", "id", "width", "onDragEnd", "onAutosizeColumn", "align", "label", "hasActionsHead", "hasTooltip", "isMenu", "onDragStart", "onRequestResize", "resizable", "sortDir", "truncate", "variant" ]);
        if (false) {}
        var z = (0, M.useSplunkTheme)(), N = z.isEnterprise;
        var H = (0, T._)("Click to open menu");
        var L = (0, n.useState)(), $ = tn(L, 2), W = $[0], K = $[1];
        var F = (0, n.useState)(false), V = tn(F, 2), U = V[0], G = V[1];
        var X = (0, n.useState)(false), Y = tn(X, 2), J = Y[0], Q = Y[1];
        var Z = (0, n.useState)(0), ee = tn(Z, 2), te = ee[0], ne = ee[1];
        var re = (0, n.useState)(0), oe = tn(re, 2), ie = oe[0], ae = oe[1];
        var le = (0, n.useRef)(null);
        var ce = (0, n.useRef)(s === "auto" ? undefined : s);
        // Cleanup dragend, and unmount during drag
                (0, n.useEffect)((function() {
            return function() {
                return W === null || W === void 0 ? void 0 : W.remove();
            };
        }), [ W ]);
        var se;
        var ue;
        if (I !== undefined && dn.has(I)) {
            var de = N ? pn : vn;
            se = de[I];
            ue = fn[I];
        }
        if (s === "auto") {
            var fe;
            var pe = le.current;
            var ve = pe === null || pe === void 0 ? void 0 : (fe = pe.parentElement) === null || fe === void 0 ? void 0 : fe.getBoundingClientRect();
            ce.current = ve === null || ve === void 0 ? void 0 : ve.width;
        } else {
            ce.current = s;
        }
        var be = (0, n.useCallback)((function(e) {
            le.current = e;
            B(a, e);
        }), [ a, le ]);
        var ye = (0, n.useCallback)((function(e) {
            var n = (0, E.keycode)(e.nativeEvent);
            if (S === undefined || t === undefined) {
                return;
            }
            if (s === "auto") {
                var r;
                var o = le.current;
                var a = o === null || o === void 0 ? void 0 : (r = o.parentElement) === null || r === void 0 ? void 0 : r.getBoundingClientRect();
                ce.current = a === null || a === void 0 ? void 0 : a.width;
            } else {
                ce.current = s;
            }
            if (ce.current === undefined) {
                return;
            }
            if (n === "left") {
                e.preventDefault();
 // prevent text selection
                                var l = Math.max(ce.current - 10, 20);
                S(e, {
                    index: t,
                    columnId: i,
                    id: c,
                    width: l
                });
            }
            if (n === "right") {
                e.preventDefault();
 // prevent text selection
                                var u = ce.current + 10;
                S(e, {
                    index: t,
                    columnId: i,
                    id: c,
                    width: u
                });
            }
            if (n === "enter") {
                e.preventDefault();
 // SUI-7320: prevent sorting and dropdown opening
                        }
        }), [ i, c, t, S, s ]);
        var he = (0, n.useCallback)((function(e) {
            if (s === "auto") {
                var t;
                var n = le.current;
                var r = n === null || n === void 0 ? void 0 : (t = n.parentElement) === null || t === void 0 ? void 0 : t.getBoundingClientRect();
                ce.current = r === null || r === void 0 ? void 0 : r.width;
            } else {
                ce.current = s;
            }
            if (ce.current === undefined) {
                return;
            }
            e.preventDefault();
 // prevent text selection
                        ne(e.clientX);
            ae(ce.current || 0);
            G(true);
        }), [ s ]);
        var me = function e(n) {
            var r = te - n.clientX;
            var o = Math.max(ie - r, 16);
            if (t !== undefined) {
                S === null || S === void 0 ? void 0 : S(n, {
                    index: t,
                    columnId: i,
                    id: c,
                    width: o
                });
            }
        };
        var ge = function e() {
            G(false);
        };
        var we = (0, n.useCallback)((function(e) {
            var n;
            var r = Wt();
            var o = le.current;
            if (e.dataTransfer.setDragImage && (o === null || o === void 0 ? void 0 : o.parentElement)) {
                var a = o.parentElement.getBoundingClientRect();
                var l = o.cloneNode(true);
                l.style.width = "".concat(a.width, "px");
                l.style.height = "".concat(a.height, "px");
                l.setAttribute("data-helper", "true");
                r.body.appendChild(l);
                e.dataTransfer.setDragImage(l, e.clientX - a.left, e.clientY - a.top);
                Q(true);
                K(l);
            }
            e.dataTransfer.effectAllowed = "move";
            e.dataTransfer.setData("text", (n = o === null || o === void 0 ? void 0 : o.textContent) !== null && n !== void 0 ? n : "");
 // Required for Firefox
                        C === null || C === void 0 ? void 0 : C(t, i);
        }), [ i, t, C ]);
        var xe = (0, n.useCallback)((function() {
            K(undefined);
            Q(false);
            u === null || u === void 0 ? void 0 : u();
        }), [ u ]);
        var Ce = (0, n.useCallback)((function(e) {
            if (t !== undefined) {
                d === null || d === void 0 ? void 0 : d(e, {
                    index: t,
                    columnId: i
                });
            }
        }), [ i, t, d ]);
        var Se = !!C;
        var ke = Ut();
        var Oe = ce.current ? (0, P.sprintf)((0, T._)("%(width)d pixels"), {
            width: ce.current
        }) : undefined;
        var Ee = i ? {
            ariaControls: i
        } : {};
        
        return r().createElement(Tt, Yt({
            draggable: Se || undefined,
            onDragStart: Se ? we : undefined,
            onDragEnd: Se ? xe : undefined,
            ref: be,
            as: o ? "button" : "div",
            $hasActionsHead: !!y,
            $align: p,
            $draggable: Se,
            $dragging: !!J,
            $clickable: o,
            $focusWithin: l,
            $variant: q
        }, g()(A, [].concat(Jt(Object.keys(bn.propTypes)), [ "id" ]))), U &&  r().createElement(r().Fragment, null,  r().createElement(O(), {
            target: ke,
            eventType: "mouseup",
            listener: ge
        }),  r().createElement(O(), {
            target: ke,
            eventType: "mousemove",
            listener: me
        })), S && R &&  r().createElement(Dt, Yt({
            "aria-label": (0, P.sprintf)((0, T._)("Resize %(label)s"), {
                label: v
            })
        }, Ee, {
            "aria-valuetext": Oe,
            "data-test": "resize",
            onMouseDown: he,
            onDoubleClick: Ce,
            onKeyDown: ye,
            orientation: "vertical",
            tabIndex: 0
        })), Se &&  r().createElement(Et, null,  r().createElement(Bt, {
            screenReaderContent: (0, T._)("Press left or right arrow key to reorder the columns.")
        })),  r().createElement(jt, {
            $align: p,
            $truncate: _,
            $fill: x
        }, v, x && 
        
        // this icon indicates "has a menu" in all themes
        r().createElement(Rt, null, N ?  r().createElement(mt(), {
            "data-test": "caret-down",
            screenReaderText: H,
            hideDefaultTooltip: true,
            size: .5
        }) :  r().createElement(vt(), {
            "data-test": "caret-down",
            "aria-label": H
        }))), m &&  r().createElement(At, {
            "data-test": "tooltip-icon"
        }), I &&  r().createElement(Pt, {
            $sorted: I !== "none"
        }, se !== undefined && (N ?  r().createElement(se, {
            inline: true,
            "aria-hidden": false,
            "aria-label": ue,
            viewBox: "-8 0 24 24"
        }) :  r().createElement(se, {
            inline: true,
            "aria-hidden": false,
            "aria-label": ue
        }))));
    }
    bn.propTypes = un;
    /* harmony default export */    const yn = bn;
    // CONCATENATED MODULE: ./src/Table/TableContext.ts
    var hn =  (0, n.createContext)({});
    hn.displayName = "Table";
    /* harmony default export */    const mn = hn;
    // CONCATENATED MODULE: ./src/Table/HeadCell.tsx
    function gn(e) {
        "@babel/helpers - typeof";
        return gn = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
            return typeof e;
        } : function(e) {
            return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
        }, gn(e);
    }
    function wn() {
        return wn = Object.assign ? Object.assign.bind() : function(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = arguments[t];
                for (var r in n) {
                    ({}).hasOwnProperty.call(n, r) && (e[r] = n[r]);
                }
            }
            return e;
        }, wn.apply(null, arguments);
    }
    function xn(e) {
        return On(e) || kn(e) || Sn(e) || Cn();
    }
    function Cn() {
        throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function Sn(e, t) {
        if (e) {
            if ("string" == typeof e) return En(e, t);
            var n = {}.toString.call(e).slice(8, -1);
            return "Object" === n && e.constructor && (n = e.constructor.name), "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? En(e, t) : void 0;
        }
    }
    function kn(e) {
        if ("undefined" != typeof Symbol && null != e[Symbol.iterator] || null != e["@@iterator"]) return Array.from(e);
    }
    function On(e) {
        if (Array.isArray(e)) return En(e);
    }
    function En(e, t) {
        (null == t || t > e.length) && (t = e.length);
        for (var n = 0, r = Array(t); n < t; n++) {
            r[n] = e[n];
        }
        return r;
    }
    function Rn(e, t) {
        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
    }
    function jn(e, t) {
        for (var n = 0; n < t.length; n++) {
            var r = t[n];
            r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), 
            Object.defineProperty(e, Hn(r.key), r);
        }
    }
    function In(e, t, n) {
        return t && jn(e.prototype, t), n && jn(e, n), Object.defineProperty(e, "prototype", {
            writable: !1
        }), e;
    }
    function Tn(e, t) {
        if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function");
        e.prototype = Object.create(t && t.prototype, {
            constructor: {
                value: e,
                writable: !0,
                configurable: !0
            }
        }), Object.defineProperty(e, "prototype", {
            writable: !1
        }), t && Pn(e, t);
    }
    function Pn(e, t) {
        return Pn = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(e, t) {
            return e.__proto__ = t, e;
        }, Pn(e, t);
    }
    function Dn(e) {
        var t = An();
        return function() {
            var n, r = zn(e);
            if (t) {
                var o = zn(this).constructor;
                n = Reflect.construct(r, arguments, o);
            } else n = r.apply(this, arguments);
            return _n(this, n);
        };
    }
    function _n(e, t) {
        if (t && ("object" == gn(t) || "function" == typeof t)) return t;
        if (void 0 !== t) throw new TypeError("Derived constructors may only return object or undefined");
        return qn(e);
    }
    function qn(e) {
        if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return e;
    }
    function An() {
        try {
            var e = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {})));
        } catch (e) {}
        return (An = function t() {
            return !!e;
        })();
    }
    function zn(e) {
        return zn = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(e) {
            return e.__proto__ || Object.getPrototypeOf(e);
        }, zn(e);
    }
    function Nn(e, t, n) {
        return (t = Hn(t)) in e ? Object.defineProperty(e, t, {
            value: n,
            enumerable: !0,
            configurable: !0,
            writable: !0
        }) : e[t] = n, e;
    }
    function Hn(e) {
        var t = Mn(e, "string");
        return "symbol" == gn(t) ? t : t + "";
    }
    function Mn(e, t) {
        if ("object" != gn(e) || !e) return e;
        var n = e[Symbol.toPrimitive];
        if (void 0 !== n) {
            var r = n.call(e, t || "default");
            if ("object" != gn(r)) return r;
            throw new TypeError("@@toPrimitive must return a primitive value.");
        }
        return ("string" === t ? String : Number)(e);
    }
    /** @public */    var Ln = {
        align: i().oneOf([ "left", "center", "right" ]),
        /** @private Used to set the $clickable appearance without an onClick */
        appearClickable: i().bool,
        children: i().node,
        columnId: i().any,
        elementRef: i().oneOfType([ i().func, i().object ]),
        /** @private Indicates the presence of actions. */
        hasActionsHead: i().bool,
        /** @private The index of the cell, skipping the info column. */
        index: i().number,
        /** @private. */
        onAutosizeColumn: i().func,
        onSort: i().func,
        /** @private. */
        onDragStart: i().func,
        /**
   * @private. Passed through and works as expected.
   */
        onKeyDown: i().func,
        /** @private. */
        onClick: i().func,
        /** @private. */
        onRequestMoveColumn: i().func,
        /** @private. */
        onRequestResize: i().func,
        resizable: i().bool,
        /** @private. */
        showGuideline: i().oneOf([ "none", "before", "after" ]),
        sortDir: i().oneOf([ "asc", "desc", "none" ]),
        sortKey: i().string,
        tooltip: i().node,
        truncate: i().bool,
        /**
   * Used internally to suppress focus and id when this `HeadCell` is superseded by one in an
   * overlaid `HeadTable` for user interactions.
   * @private
   */
        visible: i().bool,
        width: i().oneOfType([ i().number, i().oneOf([ "auto" ]) ]),
        /** @private. */
        variant: i().oneOf([ "toggleAll", "info", "actions" ]),
        /** @private. */
        zIndex: i().number
    };
    var Bn = {
        align: "left",
        resizable: true,
        showGuideline: "none",
        sortDir: "none",
        truncate: true,
        visible: true,
        zIndex: 1
    };
    var $n =  function(e) {
        Tn(n, e);
        var t = Dn(n);
        // @docs-props-type HeadCellPropsBase
                function n(e) {
            var r;
            Rn(this, n);
            r = t.call(this, e);
            Nn(qn(r), "handleClick", (function(e) {
                var t, n;
                // ignore clicks on the resize handle
                                if (e.target.getAttribute("data-test") !== "resize" && r.props.onSort && r.props.index !== undefined) {
                    var o = r.props, i = o.sortKey, a = o.sortDir, l = o.id, c = o.index, s = o.columnId;
                    r.props.onSort(e, {
                        sortKey: i,
                        sortDir: a,
                        id: l,
                        columnId: s,
                        index: c
                    });
                }
                (t = (n = r.props).onClick) === null || t === void 0 ? void 0 : t.call(n);
            }));
            Nn(qn(r), "handleKeyDown", (function(e) {
                var t = r.props, n = t.columnId, o = t.index, i = t.onKeyDown, a = t.onRequestMoveColumn;
                if (e.target.getAttribute("data-test") !== "resize") {
                    if ((0, E.keycode)(e.nativeEvent) === "left" && o !== undefined && o > 0) {
                        a === null || a === void 0 ? void 0 : a({
                            fromIndex: o,
                            toIndex: o - 1,
                            columnId: n
                        });
                    } else if ((0, E.keycode)(e.nativeEvent) === "right" && o !== undefined) {
                        a === null || a === void 0 ? void 0 : a({
                            fromIndex: o,
                            toIndex: o + 1,
                            columnId: n
                        });
                    }
                }
                if (o !== undefined) {
                    i === null || i === void 0 ? void 0 : i(e, {
                        index: o,
                        columnId: n
                    });
                }
            }));
            Nn(qn(r), "handleDragStart", (function(e, t) {
                var n, o;
                r.setState({
                    isDragging: true
                });
                (n = (o = r.props).onDragStart) === null || n === void 0 ? void 0 : n.call(o, e, t);
            }));
            Nn(qn(r), "handleDragEnd", (function() {
                r.setState({
                    isDragging: false
                });
            }));
            Nn(qn(r), "sortDirAriaMapping", {
                asc: "ascending",
                desc: "descending",
                none: "none"
            });
            r.state = {
                isDragging: false
            };
            return r;
        }
        In(n, [ {
            key: "render",
            value: function e() {
                var t = this.props, o = t.align, i = t.appearClickable, a = t.children, l = t.columnId, c = t.elementRef, s = t.hasActionsHead, u = t.id, d = t.index, f = t.onAutosizeColumn, p = t.onClick, v = t.onDragStart, b = t.onRequestResize, y = t.onSort, h = t.resizable, m = t.showGuideline, w = t.sortDir, x = t.style, C = t.variant, S = t.tooltip, k = t.truncate, O = t.visible, E = t.width, R = t.zIndex;
                var j = !!v;
                var I = !!y && !!w;
                var T = p !== undefined;
                var P = ot()(x, {
                    width: E
                });
                var D = s ? false : k;
                var _ = this.context.headType;
                var q = {
                    label: a,
                    align: o,
                    columnId: l,
                    hasActionsHead: s,
                    id: u,
                    index: d,
                    resizable: O && h,
                    onDragStart: v ? this.handleDragStart : undefined,
                    onDragEnd: v ? this.handleDragEnd : undefined,
                    onAutosizeColumn: f,
                    onRequestResize: b,
                    sortDir: y && w,
                    truncate: D,
                    width: E,
                    clickable: i || j || I || T,
                    focusWithin: i,
                    variant: C
                };
                /* eslint-disable jsx-a11y/no-static-element-interactions */                
                return r().createElement(zt, wn({
                    style: P,
                    ref: c,
                    "aria-sort": y && (this.sortDirAriaMapping[w] || "none"),
                    "data-test": "head-cell",
                    "data-test-label": nt()(a) ? a : undefined,
                    "data-test-sort-dir": y && w,
                    id: O ? u : undefined,
                    onClick: y || T ? this.handleClick : undefined,
                    $dragging: this.state.isDragging || undefined,
                    $variant: C,
                    $zIndex: R,
                    $isFixed: _ === "fixed"
                }, g()(this.props, [].concat(xn(Object.keys(n.propTypes)), [ "id", "style" ])), {
                    onKeyDown: j || y || T ? this.handleKeyDown : undefined
                }), S ?  r().createElement(at(), {
                    content: S,
                    renderAnchor: function e(t) {
                        var n = wn({}, t);
                        
                        return r().createElement(yn, wn({}, n, q, {
                            hasTooltip: true
                        }));
                    }
                }) :  r().createElement(yn, q), m !== "none" &&  r().createElement(Nt, {
                    $position: m
                }));
                /* eslint-enable jsx-a11y/no-static-element-interactions */            }
        } ]);
        return n;
    }(n.Component);
    Nn($n, "splunkUiType", "Table.HeadCell");
    Nn($n, "propTypes", Ln);
    Nn($n, "defaultProps", Bn);
    Nn($n, "contextType", mn);
    /* harmony default export */    const Wn = $n;
    // CONCATENATED MODULE: external "@splunk/react-icons/enterprise/Info"
    const Kn = require("@splunk/react-icons/enterprise/Info");
    var Fn =  e.n(Kn);
    // CONCATENATED MODULE: external "@splunk/react-icons/ChevronRight"
    const Vn = require("@splunk/react-icons/ChevronRight");
    var Un =  e.n(Vn);
    // CONCATENATED MODULE: ./src/Table/icons/HeadExpandRows.tsx
    /* This file works around the use of withSplunkTheme in Head. */
    function Gn() {
        var e = (0, M.useSplunkTheme)(), t = e.isEnterprise;
        var n = (0, T._)("More Information");
        return t ?  r().createElement(Fn(), {
            hideDefaultTooltip: true,
            screenReaderText: n,
            "aria-hidden": false
        }) :  r().createElement(Un(), {
            "aria-label": n,
            "aria-hidden": false,
            height: "16px",
            width: "16px"
        });
    }
    // CONCATENATED MODULE: external "@dnd-kit/utilities"
    const Xn = require("@dnd-kit/utilities");
    // CONCATENATED MODULE: external "@splunk/react-icons/DotsThreeVertical"
    const Yn = require("@splunk/react-icons/DotsThreeVertical");
    var Jn =  e.n(Yn);
    // CONCATENATED MODULE: external "@splunk/react-ui/Button"
    const Qn = require("@splunk/react-ui/Button");
    var Zn =  e.n(Qn);
    // CONCATENATED MODULE: external "@splunk/react-ui/Dropdown"
    const er = require("@splunk/react-ui/Dropdown");
    var tr =  e.n(er);
    // CONCATENATED MODULE: external "@splunk/react-icons/enterprise/ChevronRight"
    const nr = require("@splunk/react-icons/enterprise/ChevronRight");
    var rr =  e.n(nr);
    // CONCATENATED MODULE: ./src/Table/ExpandButtonStyles.ts
    var or = H().button.withConfig({
        displayName: "ExpandButtonStyles__StyledClickable",
        componentId: "sc-7nlw5q-0"
    })([ "", ";display:flex;text-align:center;height:100%;width:100%;cursor:pointer;", " &:hover{background-color:", ";}&:focus{box-shadow:", ";}" ], M.mixins.reset("block"), (0, 
    M.pick)({
        enterprise: (0, N.css)([ "padding:6px 0 0 0;" ]),
        prisma: {
            comfortable: (0, N.css)([ "padding:12px 0 0 0;" ]),
            compact: (0, N.css)([ "padding:4px 0 0 0;" ])
        }
    }), (0, M.pick)({
        enterprise: {
            light: M.variables.accentColorL50,
            dark: M.variables.accentColorD50
        },
        prisma: M.variables.interactiveColorOverlayHover
    }), M.variables.focusShadowInset);
    var ir = H().span.withConfig({
        displayName: "ExpandButtonStyles__StyledIconContainer",
        componentId: "sc-7nlw5q-1"
    })([ "height:", ";width:100%;" ], M.variables.lineHeight);
    // CONCATENATED MODULE: ./src/Table/ExpandButton.tsx
    function ar(e) {
        "@babel/helpers - typeof";
        return ar = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
            return typeof e;
        } : function(e) {
            return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
        }, ar(e);
    }
    function lr() {
        return lr = Object.assign ? Object.assign.bind() : function(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = arguments[t];
                for (var r in n) {
                    ({}).hasOwnProperty.call(n, r) && (e[r] = n[r]);
                }
            }
            return e;
        }, lr.apply(null, arguments);
    }
    function cr(e, t) {
        var n = Object.keys(e);
        if (Object.getOwnPropertySymbols) {
            var r = Object.getOwnPropertySymbols(e);
            t && (r = r.filter((function(t) {
                return Object.getOwnPropertyDescriptor(e, t).enumerable;
            }))), n.push.apply(n, r);
        }
        return n;
    }
    function sr(e) {
        for (var t = 1; t < arguments.length; t++) {
            var n = null != arguments[t] ? arguments[t] : {};
            t % 2 ? cr(Object(n), !0).forEach((function(t) {
                ur(e, t, n[t]);
            })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : cr(Object(n)).forEach((function(t) {
                Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t));
            }));
        }
        return e;
    }
    function ur(e, t, n) {
        return (t = dr(t)) in e ? Object.defineProperty(e, t, {
            value: n,
            enumerable: !0,
            configurable: !0,
            writable: !0
        }) : e[t] = n, e;
    }
    function dr(e) {
        var t = fr(e, "string");
        return "symbol" == ar(t) ? t : t + "";
    }
    function fr(e, t) {
        if ("object" != ar(e) || !e) return e;
        var n = e[Symbol.toPrimitive];
        if (void 0 !== n) {
            var r = n.call(e, t || "default");
            if ("object" != ar(r)) return r;
            throw new TypeError("@@toPrimitive must return a primitive value.");
        }
        return ("string" === t ? String : Number)(e);
    }
    function pr(e, t) {
        if (null == e) return {};
        var n, r, o = vr(e, t);
        if (Object.getOwnPropertySymbols) {
            var i = Object.getOwnPropertySymbols(e);
            for (r = 0; r < i.length; r++) {
                n = i[r], t.includes(n) || {}.propertyIsEnumerable.call(e, n) && (o[n] = e[n]);
            }
        }
        return o;
    }
    function vr(e, t) {
        if (null == e) return {};
        var n = {};
        for (var r in e) {
            if ({}.hasOwnProperty.call(e, r)) {
                if (t.includes(r)) continue;
                n[r] = e[r];
            }
        }
        return n;
    }
    var br = {
        className: i().string,
        expanded: i().bool
    };
    var yr = function e(t) {
        var n = t.className, o = t.expanded, i = pr(t, [ "className", "expanded" ]);
        var a = (0, M.useSplunkTheme)(), l = a.isEnterprise;
        var c = {
            className: n
        };
        var s = sr(sr({}, c), {}, {
            hideDefaultTooltip: true,
            screenReaderText: null
        });
        var u = sr({}, c);
        var d = l ?  r().createElement(rr(), s) :  r().createElement(Un(), u);
        
        return r().createElement(or, lr({
            title: o ? (0, T._)("Collapse row") : (0, T._)("Expand row")
        }, i),  r().createElement(ir, null, d));
    };
    var hr = H()(yr).withConfig({
        displayName: "ExpandButton__StyledExpandButton",
        componentId: "ttb2no-0"
    })([ "transition:transform ", ";", "" ], (0, M.pick)({
        enterprise: "300ms",
        prisma: "200ms"
    }), (function(e) {
        return e.expanded && (0, N.css)([ "transform:rotate(90deg);" ]);
    }));
    hr.propTypes = br;
    /* harmony default export */    const mr = hr;
    // CONCATENATED MODULE: ./src/Table/RowDragCellStyles.ts
    var gr = H().td.withConfig({
        displayName: "RowDragCellStyles__StyledCell",
        componentId: "sc-9kbaj2-0"
    })([ "", " cursor:move;touch-action:none;width:", ";position:relative;vertical-align:middle;& + &{border-left:", ";}" ], M.mixins.reset("table-cell"), (0, 
    M.pick)({
        enterprise: "32px",
        prisma: "36px"
    }), (0, M.pick)({
        enterprise: "1px solid ".concat(M.variables.backgroundColor),
        prisma: "1px solid ".concat(M.variables.interactiveColorBorder)
    }));
    var wr = H().div.withConfig({
        displayName: "RowDragCellStyles__StyledDrag",
        componentId: "sc-9kbaj2-1"
    })([ "", " ", ";justify-content:center;cursor:move;-webkit-user-drag:element;user-select:none;align-items:center;position:absolute;width:100%;top:0;bottom:0;&:focus{outline:0;box-shadow:", ";}&:hover{background-color:", ";outline:none;}&:active{background-color:", ";box-shadow:", ";}& > div{margin:0;}@media print{background-image:none;}" ], M.mixins.reset("flex"), M.mixins.clearfix(), M.variables.focusShadowInset, (0, 
    M.pick)({
        enterprise: {
            light: M.variables.accentColorL50,
            dark: M.variables.accentColorD50
        },
        prisma: M.variables.interactiveColorOverlayHover
    }), (0, M.pick)({
        prisma: M.variables.interactiveColorOverlayActive
    }), M.variables.focusShadowInset);
    // CONCATENATED MODULE: ./src/Table/RowDragCell.tsx
    function xr() {
        return xr = Object.assign ? Object.assign.bind() : function(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = arguments[t];
                for (var r in n) {
                    ({}).hasOwnProperty.call(n, r) && (e[r] = n[r]);
                }
            }
            return e;
        }, xr.apply(null, arguments);
    }
    function Cr(e, t) {
        if (null == e) return {};
        var n, r, o = Sr(e, t);
        if (Object.getOwnPropertySymbols) {
            var i = Object.getOwnPropertySymbols(e);
            for (r = 0; r < i.length; r++) {
                n = i[r], t.includes(n) || {}.propertyIsEnumerable.call(e, n) && (o[n] = e[n]);
            }
        }
        return o;
    }
    function Sr(e, t) {
        if (null == e) return {};
        var n = {};
        for (var r in e) {
            if ({}.hasOwnProperty.call(e, r)) {
                if (t.includes(r)) continue;
                n[r] = e[r];
            }
        }
        return n;
    }
    var kr = {
        setActivatorNodeRef: i().func.isRequired,
        listeners: i().objectOf(i().func)
    };
    function Or(e) {
        var t = e.listeners, n = e.setActivatorNodeRef, o = Cr(e, [ "listeners", "setActivatorNodeRef" ]);
        
        return r().createElement(gr, {
            "data-helper": true
        },  r().createElement(wr, xr({
            "data-test": "drag",
            ref: n,
            tabIndex: 0
        }, t, o),  r().createElement(Bt, null)));
    }
    Or.propTypes = kr;
    /* harmony default export */    const Er = Or;
    // CONCATENATED MODULE: ./src/Table/RowStyles.ts
    var Rr = H().tr.withConfig({
        displayName: "RowStyles__StyledStripeNone",
        componentId: "f0igqq-0"
    })([ "", " background-color:", ";", ";@media print{background-color:none;}", " ", "" ], M.mixins.reset("table-row"), (0, 
    M.pick)({
        prisma: M.variables.transparent
    }), (function(e) {
        var t = e.$clickable;
        return t && (0, N.css)([ "cursor:pointer;&:hover{background-color:", ";}&:focus{box-shadow:", ";}" ], (0, 
        M.pick)({
            enterprise: {
                light: M.variables.accentColorL50,
                dark: M.variables.accentColorD50
            },
            prisma: M.variables.interactiveColorOverlayHover
        }), M.variables.focusShadowInset);
    }), (function(e) {
        var t = e.disabled, n = e.$expandable;
        return !t && !n && (0, N.css)([ "&:not([data-expansion-row='true']){&:hover{background-color:", ";}}" ], (0, 
        M.pick)({
            prisma: M.variables.interactiveColorOverlayHover
        }));
    }), (function(e) {
        var t = e.disabled;
        return t && (0, N.css)([ "color:", ";" ], (0, M.pick)({
            prisma: M.variables.contentColorDisabled
        }));
    }));
    var jr = H()(Rr).withConfig({
        displayName: "RowStyles__StyledStripeOdd",
        componentId: "f0igqq-1"
    })([ "background-color:", ";" ], (0, M.pick)({
        enterprise: {
            dark: M.variables.gray22
        },
        prisma: M.variables.transparent
    }));
    var Ir = H()(Rr).withConfig({
        displayName: "RowStyles__StyledStripeEven",
        componentId: "f0igqq-2"
    })([ "background-color:", ";" ], (0, M.pick)({
        enterprise: {
            light: M.variables.gray96,
            dark: M.variables.gray20
        },
        prisma: {
            light: M.variables.white,
            dark: M.variables.black
        }
    }));
    var Tr = H()(Ye).withConfig({
        displayName: "RowStyles__StyledToggleCell",
        componentId: "f0igqq-3"
    })([ "height:1px;" ]);
    var Pr = H()(Ye).withConfig({
        displayName: "RowStyles__StyledCellExpansionDisabled",
        componentId: "f0igqq-4"
    })([ "width:", ";" ], (0, M.pick)({
        enterprise: "35px",
        prisma: "40px"
    }));
    // CONCATENATED MODULE: external "@splunk/react-ui/Clickable"
    const Dr = require("@splunk/react-ui/Clickable");
    var _r =  e.n(Dr);
    // CONCATENATED MODULE: external "@splunk/react-ui/Switch"
    const qr = require("@splunk/react-ui/Switch");
    var Ar =  e.n(qr);
    // CONCATENATED MODULE: ./src/Table/ToggleStyles.ts
    var zr = H()(_r()).withConfig({
        displayName: "ToggleStyles__StyledClickable",
        componentId: "sc-1x3ikch-0"
    })([ "height:100%;width:100%;display:flex;justify-content:center;padding:", ";&:focus{box-shadow:", ";}" ], (0, 
    M.pick)({
        enterprise: "6px 12px",
        prisma: {
            comfortable: "14px 10px 16px",
            compact: "6px 8px 8px"
        }
    }), M.variables.focusShadowInset);
    var Nr = H()(Ar()).withConfig({
        displayName: "ToggleStyles__StyledSwitch",
        componentId: "sc-1x3ikch-1"
    })([ "margin:", ";", " justify-content:center;" ], (0, M.pickVariant)("$allRows", {
        true: {
            enterprise: "-6px 0",
            prisma: "-10px 0"
        },
        false: "0"
    }), (function(e) {
        var t = e.$allRows;
        return t === false && (0, N.css)([ "padding:0;padding-top:", ";" ], (0, M.pick)({
            enterprise: "1px"
        }));
    }));
    // CONCATENATED MODULE: ./src/Table/Toggle.tsx
    function Hr() {
        return Hr = Object.assign ? Object.assign.bind() : function(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = arguments[t];
                for (var r in n) {
                    ({}).hasOwnProperty.call(n, r) && (e[r] = n[r]);
                }
            }
            return e;
        }, Hr.apply(null, arguments);
    }
    function Mr(e, t) {
        if (null == e) return {};
        var n, r, o = Lr(e, t);
        if (Object.getOwnPropertySymbols) {
            var i = Object.getOwnPropertySymbols(e);
            for (r = 0; r < i.length; r++) {
                n = i[r], t.includes(n) || {}.propertyIsEnumerable.call(e, n) && (o[n] = e[n]);
            }
        }
        return o;
    }
    function Lr(e, t) {
        if (null == e) return {};
        var n = {};
        for (var r in e) {
            if ({}.hasOwnProperty.call(e, r)) {
                if (t.includes(r)) continue;
                n[r] = e[r];
            }
        }
        return n;
    }
    var Br = {
        allRows: i().bool,
        disabled: i().bool,
        onClick: i().func,
        selected: i().oneOf([ true, false, "some" ])
    };
    function $r(e) {
        var t = e.allRows, n = e.disabled, o = e.onClick, i = e.selected, a = Mr(e, [ "allRows", "disabled", "onClick", "selected" ]);
        
        return r().createElement(zr, Hr({
            "aria-checked": i === "some" ? "mixed" : i,
            disabled: n,
            onClick: o,
            role: "checkbox"
        }, a),  r().createElement(Nr, {
            $allRows: t || false,
            interactive: false,
            disabled: n,
            value: "",
            selected: i
        }));
    }
    $r.propTypes = Br;
    /* harmony default export */    const Wr = $r;
    // CONCATENATED MODULE: ./src/Table/Row.tsx
    function Kr(e) {
        "@babel/helpers - typeof";
        return Kr = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
            return typeof e;
        } : function(e) {
            return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
        }, Kr(e);
    }
    function Fr(e, t) {
        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
    }
    function Vr(e, t) {
        for (var n = 0; n < t.length; n++) {
            var r = t[n];
            r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), 
            Object.defineProperty(e, oo(r.key), r);
        }
    }
    function Ur(e, t, n) {
        return t && Vr(e.prototype, t), n && Vr(e, n), Object.defineProperty(e, "prototype", {
            writable: !1
        }), e;
    }
    function Gr(e, t) {
        if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function");
        e.prototype = Object.create(t && t.prototype, {
            constructor: {
                value: e,
                writable: !0,
                configurable: !0
            }
        }), Object.defineProperty(e, "prototype", {
            writable: !1
        }), t && Xr(e, t);
    }
    function Xr(e, t) {
        return Xr = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(e, t) {
            return e.__proto__ = t, e;
        }, Xr(e, t);
    }
    function Yr(e) {
        var t = Zr();
        return function() {
            var n, r = eo(e);
            if (t) {
                var o = eo(this).constructor;
                n = Reflect.construct(r, arguments, o);
            } else n = r.apply(this, arguments);
            return Jr(this, n);
        };
    }
    function Jr(e, t) {
        if (t && ("object" == Kr(t) || "function" == typeof t)) return t;
        if (void 0 !== t) throw new TypeError("Derived constructors may only return object or undefined");
        return Qr(e);
    }
    function Qr(e) {
        if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return e;
    }
    function Zr() {
        try {
            var e = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {})));
        } catch (e) {}
        return (Zr = function t() {
            return !!e;
        })();
    }
    function eo(e) {
        return eo = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(e) {
            return e.__proto__ || Object.getPrototypeOf(e);
        }, eo(e);
    }
    function to(e, t) {
        var n = Object.keys(e);
        if (Object.getOwnPropertySymbols) {
            var r = Object.getOwnPropertySymbols(e);
            t && (r = r.filter((function(t) {
                return Object.getOwnPropertyDescriptor(e, t).enumerable;
            }))), n.push.apply(n, r);
        }
        return n;
    }
    function no(e) {
        for (var t = 1; t < arguments.length; t++) {
            var n = null != arguments[t] ? arguments[t] : {};
            t % 2 ? to(Object(n), !0).forEach((function(t) {
                ro(e, t, n[t]);
            })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : to(Object(n)).forEach((function(t) {
                Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t));
            }));
        }
        return e;
    }
    function ro(e, t, n) {
        return (t = oo(t)) in e ? Object.defineProperty(e, t, {
            value: n,
            enumerable: !0,
            configurable: !0,
            writable: !0
        }) : e[t] = n, e;
    }
    function oo(e) {
        var t = io(e, "string");
        return "symbol" == Kr(t) ? t : t + "";
    }
    function io(e, t) {
        if ("object" != Kr(e) || !e) return e;
        var n = e[Symbol.toPrimitive];
        if (void 0 !== n) {
            var r = n.call(e, t || "default");
            if ("object" != Kr(r)) return r;
            throw new TypeError("@@toPrimitive must return a primitive value.");
        }
        return ("string" === t ? String : Number)(e);
    }
    function ao(e, t) {
        if (null == e) return {};
        var n, r, o = lo(e, t);
        if (Object.getOwnPropertySymbols) {
            var i = Object.getOwnPropertySymbols(e);
            for (r = 0; r < i.length; r++) {
                n = i[r], t.includes(n) || {}.propertyIsEnumerable.call(e, n) && (o[n] = e[n]);
            }
        }
        return o;
    }
    function lo(e, t) {
        if (null == e) return {};
        var n = {};
        for (var r in e) {
            if ({}.hasOwnProperty.call(e, r)) {
                if (t.includes(r)) continue;
                n[r] = e[r];
            }
        }
        return n;
    }
    function co() {
        return co = Object.assign ? Object.assign.bind() : function(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = arguments[t];
                for (var r in n) {
                    ({}).hasOwnProperty.call(n, r) && (e[r] = n[r]);
                }
            }
            return e;
        }, co.apply(null, arguments);
    }
    var so = {
        odd: jr,
        even: Ir,
        none: Rr
    };
    /** @public */
    /** @public */
    /** @public */
    /** @public */
    /** @public */    var uo = {
        /** @private. Generally passed by Table rather than added directly. */
        activeElementId: i().string,
        actionPrimary: i().element,
        actionsSecondary: i().element,
        children: i().node,
        data: i().any,
        /** @private. Generally passed by Table rather than added directly. */
        dataId: i().oneOfType([ i().string, i().number ]),
        disabled: i().bool,
        /** @private. Generally passed by Table rather than added directly. */
        draggable: i().bool,
        elementRef: i().oneOfType([ i().func, i().object ]),
        /** @private. */
        expandable: i().bool,
        expanded: i().bool,
        /** @private. Identifies the unique id (or ids) for an expanded row (or rows). In expandable rows `ExpansionRowIcon` uses `expansionRowId` for accessibility aria attributes. */
        expansionRowIds: i().string,
        expansionRow: i().oneOfType([ i().element, i().arrayOf(i().element) ]),
        /** @private. Indicates whether the table has an actions column. */
        actions: i().bool,
        /** @private. Generally passed by `Table` rather than added directly. */
        index: i().number,
        /** @private. Generally passed by `Table` rather than added directly. */
        movableColumns: i().bool,
        onClick: i().func,
        onExpansion: i().func,
        /** @private. This is passed through and works as expected. */
        onKeyDown: i().func,
        /** @private. Generally passed by `Table` rather than added directly. */
        onRequestMoveRow: i().func,
        onRequestToggle: i().func,
        /** @private. Generally passed by `Table` rather than added directly. */
        primaryColumnIndex: i().number,
        rowScreenReaderText: i().string,
        selected: i().bool,
        /** @private. */
        stripe: i().oneOf([ "odd", "even", "none" ])
    };
    var fo = {
        stripe: "none",
        primaryColumnIndex: 0
    };
    var po =  r().forwardRef((function(e, t) {
        var n = (0, M.useSplunkTheme)(), o = n.isCompact;
        var i = o ? "20px" : "24px";
        
        return r().createElement(at(), co({
            content: (0, T._)("Actions"),
            contentRelationship: "label"
        }, e),  r().createElement(Zn(), {
            appearance: "subtle",
            "data-test": "actions-secondary-toggle",
            icon:  r().createElement(Jn(), {
                height: i,
                width: i
            }),
            elementRef: t
        }));
    }));
    function vo(e) {
        var t;
        var o = e.actions, i = e.actionPrimary, a = e.actionsSecondary, c = e.children, s = e.data, u = e.dataId, d = e.disabled, f = e.draggable, p = e.elementRef, v = e.expandable, b = e.expanded, y = e.expansionRowIds, h = e.expansionRow, m = e.index, w = e.movableColumns, x = e.onClick, C = e.onExpansion, S = e.onKeyDown, k = e.onRequestToggle, O = e.primaryColumnIndex, R = e.rowScreenReaderText, j = e.selected, I = e.stripe, D = e.style, _ = ao(e, [ "actions", "actionPrimary", "actionsSecondary", "children", "data", "dataId", "disabled", "draggable", "elementRef", "expandable", "expanded", "expansionRowIds", "expansionRow", "index", "movableColumns", "onClick", "onExpansion", "onKeyDown", "onRequestToggle", "primaryColumnIndex", "rowScreenReaderText", "selected", "stripe", "style" ]);
        var q = (0, n.useMemo)((function() {
            return {
                id: f ? u : (0, z.createGUID)(),
                disabled: !f
            };
        }), [ f, u ]);
        var A = (0, l.useSortable)(q), N = A.attributes, H = A.listeners, M = A.transform, L = A.transition, $ = A.setNodeRef, W = A.setActivatorNodeRef;
        var K = (0, n.useMemo)((function() {
            return f ? no(no({}, D), {}, {
                transform: Xn.CSS.Translate.toString(M),
                transition: L
            }) : D;
        }), [ f, M, L, D ]);
        var F = (0, n.useRef)(null);
        var V = function e(t) {
            var n = t.target;
            while (n) {
                if (F.current === n) {
                    break;
                }
                // Ignore clicks on row-actions
                                if (n.tagName === "BUTTON" || n.tagName === "A") {
                    return;
                }
                n = n.parentNode;
            }
            if (!t.defaultPrevented) {
                x === null || x === void 0 ? void 0 : x(t, s);
            }
        };
        var U = function e(t) {
            if ((0, E.keycode)(t.nativeEvent) === "enter" && x) {
                x(t, s);
            }
            S === null || S === void 0 ? void 0 : S(t);
        };
        var G = function e(t) {
            if (!d) {
                t.preventDefault();
                k === null || k === void 0 ? void 0 : k(t, s);
            }
        };
        var X = function e(t) {
            t.preventDefault();
            C === null || C === void 0 ? void 0 : C(t, s);
        };
        var Y = function t() {
            if (i && i.props.onClick) {
                
                return (0, n.cloneElement)(i, {
                    onClick: function t(n) {
                        var r, o;
                        n.preventDefault();
                        return (r = (o = i.props).onClick) === null || r === void 0 ? void 0 : r.call(o, n, e.data);
                    }
                });
            }
            return i;
        };
        var J = function t() {
            if (a && a.props.children) {
                var r = n.Children.toArray(a.props.children).filter(n.isValidElement);
                var o = r.map((function(t) {
                    if (t.props.onClick) {
                        
                        return (0, n.cloneElement)(t, {
                            onClick: function n(r) {
                                var o, i;
                                r.preventDefault();
                                return (o = (i = t.props).onClick) === null || o === void 0 ? void 0 : o.call(i, r, e.data);
                            }
                        });
                    }
                    return t;
                }));
                
                return (0, n.cloneElement)(a, {
                    children: o
                });
            }
            return a;
        };
        function Q(e) {
            F.current = e;
            B(p, e);
            if (f) {
                $(e);
            }
        }
        var Z = !x ? n.Children.toArray(c).map((function(e) {
            
            return (0, n.cloneElement)(e, {
                disabled: d
            });
        })) : n.Children.toArray(c).filter(n.isValidElement).map((function(e) {
            
            return (0, n.cloneElement)(e, {
                appearance: "rowLink",
                disabled: d
            });
        }));
        var ee;
        if (R) {
            ee = R;
        } else if ((t = Z[O]) === null || t === void 0 ? void 0 : t.props.children) {
            var te;
            ee = "".concat((te = Z[O]) === null || te === void 0 ? void 0 : te.props.children);
        } else {
            var ne;
            ee = "".concat((ne = Z[0]) === null || ne === void 0 ? void 0 : ne.props.children);
            if (false) {}
        }
        var re = (0, P.sprintf)((0, T._)("%(selected)s"), {
            selected: j ? "selected" : "unselected"
        });
        var oe = so[I];
        var ie = b ? n.Children.count(h) + 1 : undefined;
        var ae = w ? "false" : undefined;
        var le = function e() {
            
            return r().createElement(po, null);
        };
        var ce = (0, P.sprintf)((0, T._)("Collapse row - %(rowLabelValue)s"), {
            rowLabelValue: ee
        });
        var se = (0, P.sprintf)((0, T._)("Expand row - %(rowLabelValue)s"), {
            rowLabelValue: ee
        });
        
        return r().createElement(oe, co({
            "data-test": "row",
            "data-test-selected": k ? j : undefined,
            $clickable: !!x,
            "data-has-movable-columns": w ? "true" : undefined,
            disabled: !!d,
            $expandable: !!v,
            ref: Q,
            tabIndex: x ? 0 : undefined
        }, g()(_, "data"), {
            onClick: x ? V : undefined,
            onKeyDown: U,
            $rowSelected: !!(k && j),
            style: K
        }), f && m != null &&  r().createElement(Er, co({
            "aria-label": (0, P.sprintf)((0, T._)("Reorder %(rowLabelValue)s"), {
                rowLabelValue: ee
            }),
            setActivatorNodeRef: W,
            listeners: H
        }, N)), k &&  r().createElement(Tr, {
            align: "center",
            appearance: x ? "rowLink" : "data",
            disabled: d,
            variant: "toggle",
            "data-movable-column": ae,
            rowSpan: ie,
            "data-test": "toggle"
        },  r().createElement(Wr, {
            "aria-label": (0, P.sprintf)((0, T._)("%(rowLabelValue)s %(selectedString)s"), {
                rowLabelValue: ee,
                selectedString: re
            }),
            disabled: d,
            onClick: G,
            selected: j
        })), v && h &&  r().createElement(Ye, {
            align: "center",
            appearance: "data",
            "data-movable-column": ae,
            "data-test": "expand",
            expand: b,
            rowSpan: ie,
            variant: "expand"
        },  r().createElement(mr, {
            expanded: b,
            onClick: X,
            title: b ? ce : se,
            "aria-controls": b ? y : undefined,
            "aria-expanded": b
        })), v && !h &&  r().createElement(Pr, {
            variant: "expand",
            "data-movable-column": ae
        }), Z, o && !i && !a &&  r().createElement(Ye, {
            align: "right",
            appearance: x ? "rowLink" : "data",
            "data-test": "row-actions",
            variant: "actions",
            "data-movable-column": ae
        }), (i || a) &&  r().createElement(Ye, {
            align: "right",
            appearance: "data",
            "data-test": "row-actions",
            variant: "actions",
            "data-movable-column": ae
        }, i && Y(), a &&  r().createElement(tr(), {
            toggle: le()
        }, J())));
    }
    vo.propTypes = uo;
    var bo =  function(e) {
        Gr(n, e);
        var t = Yr(n);
        function n() {
            Fr(this, n);
            return t.apply(this, arguments);
        }
        Ur(n, [ {
            key: "render",
            // @docs-props-type RowPropsBase
            value: function e() {
                
                return r().createElement(vo, this.props);
            }
        } ]);
        return n;
    }(n.Component);
    ro(bo, "splunkUiType", "Table.Row");
    ro(bo, "propTypes", uo);
    ro(bo, "defaultProps", fo);
    bo.propTypes = uo;
    /* harmony default export */    const yo = bo;
    // CONCATENATED MODULE: ./src/Table/HeadStyles.ts
    var ho = H().thead.withConfig({
        displayName: "HeadStyles__Styled",
        componentId: "iap21t-0"
    })([ "", ";" ], M.mixins.reset("table-header-group"));
    var mo = H()(Wn).withConfig({
        displayName: "HeadStyles__StyledToggleAll",
        componentId: "iap21t-1"
    })([ "width:", ";" ], (0, M.pick)({
        enterprise: "42px",
        prisma: "40px"
    }));
    var go = H()(Wn).withConfig({
        displayName: "HeadStyles__StyledInfo",
        componentId: "iap21t-2"
    })([ "width:", ";" ], (0, M.pick)({
        enterprise: "32px",
        prisma: "40px"
    }));
    var wo = H()(Wn).withConfig({
        displayName: "HeadStyles__StyledDragRow",
        componentId: "iap21t-3"
    })([ "width:", ";" ], (0, M.pick)({
        enterprise: "32px",
        prisma: "40px"
    }));
    // CONCATENATED MODULE: ./src/Table/Head.tsx
    function xo(e) {
        "@babel/helpers - typeof";
        return xo = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
            return typeof e;
        } : function(e) {
            return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
        }, xo(e);
    }
    function Co() {
        return Co = Object.assign ? Object.assign.bind() : function(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = arguments[t];
                for (var r in n) {
                    ({}).hasOwnProperty.call(n, r) && (e[r] = n[r]);
                }
            }
            return e;
        }, Co.apply(null, arguments);
    }
    function So(e, t) {
        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
    }
    function ko(e, t) {
        for (var n = 0; n < t.length; n++) {
            var r = t[n];
            r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), 
            Object.defineProperty(e, qo(r.key), r);
        }
    }
    function Oo(e, t, n) {
        return t && ko(e.prototype, t), n && ko(e, n), Object.defineProperty(e, "prototype", {
            writable: !1
        }), e;
    }
    function Eo(e, t) {
        if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function");
        e.prototype = Object.create(t && t.prototype, {
            constructor: {
                value: e,
                writable: !0,
                configurable: !0
            }
        }), Object.defineProperty(e, "prototype", {
            writable: !1
        }), t && Ro(e, t);
    }
    function Ro(e, t) {
        return Ro = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(e, t) {
            return e.__proto__ = t, e;
        }, Ro(e, t);
    }
    function jo(e) {
        var t = Po();
        return function() {
            var n, r = Do(e);
            if (t) {
                var o = Do(this).constructor;
                n = Reflect.construct(r, arguments, o);
            } else n = r.apply(this, arguments);
            return Io(this, n);
        };
    }
    function Io(e, t) {
        if (t && ("object" == xo(t) || "function" == typeof t)) return t;
        if (void 0 !== t) throw new TypeError("Derived constructors may only return object or undefined");
        return To(e);
    }
    function To(e) {
        if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return e;
    }
    function Po() {
        try {
            var e = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {})));
        } catch (e) {}
        return (Po = function t() {
            return !!e;
        })();
    }
    function Do(e) {
        return Do = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(e) {
            return e.__proto__ || Object.getPrototypeOf(e);
        }, Do(e);
    }
    function _o(e, t, n) {
        return (t = qo(t)) in e ? Object.defineProperty(e, t, {
            value: n,
            enumerable: !0,
            configurable: !0,
            writable: !0
        }) : e[t] = n, e;
    }
    function qo(e) {
        var t = Ao(e, "string");
        return "symbol" == xo(t) ? t : t + "";
    }
    function Ao(e, t) {
        if ("object" != xo(e) || !e) return e;
        var n = e[Symbol.toPrimitive];
        if (void 0 !== n) {
            var r = n.call(e, t || "default");
            if ("object" != xo(r)) return r;
            throw new TypeError("@@toPrimitive must return a primitive value.");
        }
        return ("string" === t ? String : Number)(e);
    }
    var zo = {
        /** @private. */
        actions: i().arrayOf(i().node),
        /** @private. */
        actionsColumnWidth: i().number,
        /** @private */
        cellMinWidth: i().number,
        children: i().node,
        /** @private. */
        dragPosition: i().number,
        /** @private. */
        dragIndex: i().number,
        elementRef: i().oneOfType([ i().func, i().object ]),
        /** @private. */
        hasDragColumn: i().bool,
        /** @private. */
        hasInfoColumn: i().bool,
        /** @private. */
        onAutosizeColumn: i().func,
        /** @private. */
        onDragStart: i().func,
        /** @private. */
        onRequestMoveColumn: i().func,
        /** @private. */
        onRequestResizeColumn: i().func,
        /** @private. */
        onRequestToggleAllRows: i().func,
        /** @private */
        resizableFillLayout: i().bool,
        /** @private. */
        rowSelection: i().oneOf([ "all", "some", "none" ])
    };
    var No = {
        cellMinWidth: 60,
        actions: []
    };
    var Ho = 3;
    var Mo = 2;
    var Lo = 1;
    var Bo =  function(e) {
        Eo(o, e);
        var t = jo(o);
        // @docs-props-type HeadPropsBase
                function o(e) {
            var r;
            So(this, o);
            r = t.call(this, e);
            _o(To(r), "cells", void 0);
            _o(To(r), "el", null);
            _o(To(r), "providedWidths", []);
            _o(To(r), "onRequestMoveColumn", (function(e) {
                var t = e.columnId, o = e.fromIndex, i = e.toIndex;
                if (i < n.Children.toArray(r.props.children).length) {
                    var a, l;
                    // HeadCell never requests less than zero
                                        (a = (l = r.props).onRequestMoveColumn) === null || a === void 0 ? void 0 : a.call(l, {
                        fromIndex: o,
                        toIndex: i,
                        columnId: t
                    });
                }
            }));
            _o(To(r), "manageResize", (function(e, t) {
                var n = t.columnId, o = t.id, i = t.index, a = t.width;
                var l = r.props, c = l.cellMinWidth, s = l.onRequestResizeColumn;
                var u = r.context.tableContainerWidthWithoutBorders;
                var d = r.getCellWidths();
                if (i >= d.length) {
                    s === null || s === void 0 ? void 0 : s(e, t);
                    return;
                }
                var f = d[i];
                var p = a - f;
                if (p <= 0) {
                    // handle shrinking
                    if (a >= c) {
                        s === null || s === void 0 ? void 0 : s(e, t);
                    } else {
                        // shrink the cell as small as we can
                        s === null || s === void 0 ? void 0 : s(e, {
                            columnId: n,
                            id: o,
                            index: i,
                            width: c
                        });
                    }
                } else {
                    // handle expansion
                    var v = [];
                    var b = 0;
                    var y = true;
                    if (r.providedWidths.length !== d.length) {
                        s === null || s === void 0 ? void 0 : s(e, t);
                        return;
                    }
                    r.providedWidths.forEach((function(e, t) {
                        if (e === "auto") {
                            b += 1;
                            v.push(t);
                        }
                    }));
                    if (b > 0) {
                        // if there are auto width cells, check if shrinking them by changePerEachAutoCell make them smaller than cellMinWidth
                        var h = p / b;
                        v.every((function(e) {
                            if (e < d.length && d[e] - h < c) {
                                y = false;
                                return false;
                            }
                            return true;
                        }));
                        if (y) {
                            s === null || s === void 0 ? void 0 : s(e, t);
                        } else {
                            // make the cell as big as we can without letting any cells go below cellMinWidth
                            // that means all auto cells are at cellMinWidth and all the set width cells stay the same size
                            var m = 0;
                            v.forEach((function(e) {
                                if (e < d.length) {
                                    m += Math.max(d[e] - c, 0);
                                }
                            }));
                            var g = d[i] + m;
                            s === null || s === void 0 ? void 0 : s(e, {
                                columnId: n,
                                id: o,
                                index: i,
                                width: g
                            });
                        }
                    } else if (u != null) {
                        // if there are no auto width cells, check if shrinking the last cell by requested change makes it smaller than cellMinWidth
                        /**
           * We need to calculate the percieved width of the last cell, because if the user modifies the size of the last head cell,
           * the width of the last cell will technically be whatever they made it, but the last cell will get cut off if it extends past
           * the table container's width.
           */
                        var w = d.slice(0, d.length - 1);
                        var x = w.reduce((function(e, t) {
                            return e + t;
                        }));
                        var C = u - x;
                        if (C - p >= c) {
                            s === null || s === void 0 ? void 0 : s(e, t);
                        } else {
                            // make the cell as big as we can without letting perceivedWidthOfLastCell go below cellMinWidth
                            var S = C - c;
                            var k = f + S;
                            s === null || s === void 0 ? void 0 : s(e, {
                                columnId: n,
                                id: o,
                                index: i,
                                width: k
                            });
                        }
                    } else {
                        /**
           * If tableContainerWidthWithoutBorders == null, there isn't a way to correctly calculate
           * the perceived width so this case will result in columns possibly going offscreen. In testing,
           * tableContainerWidthWithoutBorders attains a value quickly enough that it isn't a problem.
           */
                        s === null || s === void 0 ? void 0 : s(e, t);
                    }
                }
            }));
            _o(To(r), "handleMount", (function(e) {
                r.el = e;
                B(r.props.elementRef, e);
            }));
            _o(To(r), "handleDragStart", (function(e, t) {
                var n, o;
                var i = Ut();
                r.setState({
                    dragColumnId: t
                });
                i.addEventListener("dragend", r.handleDragEnd);
                (n = (o = r.props).onDragStart) === null || n === void 0 ? void 0 : n.call(o, {
                    dragIndex: e
                });
            }));
            _o(To(r), "handleDragEnd", (function() {
                var e = r.state.dragColumnId;
                var t = r.props.dragIndex;
                var n = r.calculateGuideIndex();
                // The new index is not necessarily the same as the guidelineIndex
                                var o = t !== undefined && t < n ? n - 1 : n;
                if (t !== undefined && t !== o) {
                    var i, a;
                    (i = (a = r.props).onRequestMoveColumn) === null || i === void 0 ? void 0 : i.call(a, {
                        fromIndex: t,
                        toIndex: o,
                        columnId: e
                    });
                }
                r.cleanupDrag();
            }));
            r.state = {
                dragColumnId: undefined
            };
            if (false) {}
            return r;
        }
        Oo(o, [ {
            key: "componentDidUpdate",
            value: function e() {
                if (false) {}
            }
        }, {
            key: "componentWillUnmount",
            value: function e() {
                this.cleanupDrag();
            }
        }, {
            key: "getCellWidths",
            value: function e() {
                var t, n, r;
                var o = Ut();
                var i = Array.from((t = (n = this.el) === null || n === void 0 ? void 0 : (r = n.firstElementChild) === null || r === void 0 ? void 0 : r.children) !== null && t !== void 0 ? t : []);
                var a = i.map((function(e) {
                    var t = o.getComputedStyle(e);
                    return e.clientWidth - parseFloat(t.getPropertyValue("padding-right")) - parseFloat(t.getPropertyValue("padding-left"));
                }));
                return a;
            }
        }, {
            key: "getClientHeight",
            // eslint-disable-next-line react/no-unused-class-component-methods
            value: function e() {
                var t;
                return (t = this.el) === null || t === void 0 ? void 0 : t.clientHeight;
            }
 // eslint-disable-next-line react/no-unused-class-component-methods
                }, {
            key: "getEl",
            value: function e() {
                return this.el;
            }
        }, {
            key: "calculateGuideIndex",
            value: function e() {
                var t, n, r;
                var o = this.props, i = o.dragIndex, a = o.dragPosition, l = o.hasInfoColumn, c = o.hasDragColumn, s = o.onRequestToggleAllRows;
                if (this.props.dragPosition === undefined || !this.el) {
                    return -1;
                }
                this.cells = Array.from((t = (n = this.el) === null || n === void 0 ? void 0 : (r = n.firstElementChild) === null || r === void 0 ? void 0 : r.children) !== null && t !== void 0 ? t : []).slice(l ? 1 : 0).slice(c ? 1 : 0).slice(s ? 1 : 0);
                var u = Qe()(this.cells, (function(e) {
                    var t = e.getBoundingClientRect();
                    return a !== undefined && a > t.left && a < t.right;
                }));
                if (u === -1) {
                    // must be too far left or right;
                    var d = this.el.getBoundingClientRect();
                    return a !== undefined && a < d.left ? 0 : this.cells.length;
                }
                if (i !== undefined && u > i) {
                    return u + 1;
                }
                return u;
            }
        }, {
            key: "cleanupDrag",
            value: function e() {
                var t = Ut();
                t.removeEventListener("dragend", this.handleDragEnd);
                this.cells = undefined;
            }
        }, {
            key: "render",
            value: function e() {
                var t = this;
                var i = this.props, a = i.actions, l = i.actionsColumnWidth, c = i.children, s = i.hasDragColumn, u = i.hasInfoColumn, d = i.onAutosizeColumn, f = i.onRequestMoveColumn, p = i.onRequestResizeColumn, v = i.onRequestToggleAllRows, b = i.rowSelection;
                var y = this.context, h = y.headType, m = y.resizableFillLayout;
                var w = this.calculateGuideIndex();
                var x = n.Children.toArray(c).filter(n.isValidElement);
                var C = x.length + (a.length || l ? 1 : 0);
                var S = [];
                var k = x.map((function(e, r, o) {
                    var i = "none";
                    if (w === o.length && r + 1 === o.length) {
                        i = "after";
                    } else if (w === r) {
                        i = "before";
                    }
                    S.push(e.props.width);
                    
                    return (0, n.cloneElement)(e, {
                        index: r,
                        showGuideline: i,
                        onRequestResize: m ? t.manageResize : p,
                        onDragStart: f ? t.handleDragStart : undefined,
                        onRequestMoveColumn: f ? t.onRequestMoveColumn : undefined,
                        onAutosizeColumn: d,
                        key: e.key || e.props.columnId || r,
                        zIndex: C - r
                    });
                }));
                this.providedWidths = S;
                var O = {
                    all: true,
                    none: false,
                    some: "some"
                };
                var E = b === undefined ? undefined : O[b];
                var R = l || 48;
                var j = h === "fixed" ? "fixed-head" : "head";
                var I = (0, T._)("No rows selected");
                if (E === "some") {
                    I = (0, T._)("Some rows selected");
                } else if (E) {
                    I = (0, T._)("All rows selected");
                }
                
                return r().createElement(ho, Co({
                    ref: this.handleMount,
                    "data-test": j
                }, g()(this.props, et()(o.propTypes))),  r().createElement(yo, null, s &&  r().createElement(wo, {
                    key: "drag_rows_head_cell",
                    "data-test": "drag-rows-head-cell",
                    align: "center",
                    resizable: false,
                    zIndex: C + Ho
                }), v &&  r().createElement(mo, {
                    key: "toggle_all",
                    resizable: false,
                    align: "center",
                    variant: "toggleAll",
                    truncate: false,
                    zIndex: C + Mo,
                    "data-test": "toggle-all"
                },  r().createElement(Wr, {
                    allRows: true,
                    "aria-label": I,
                    onClick: v,
                    selected: E
                })), u &&  r().createElement(go, {
                    key: "more_info_head_cell",
                    "data-test": "more-info-head-cell",
                    align: "center",
                    resizable: false,
                    variant: "info",
                    zIndex: C + Lo
                },  r().createElement(Gn, null)), k, a.length > 0 &&  r().createElement(Wn, {
                    hasActionsHead: true,
                    key: "actions_head_cell",
                    "data-test": "actions-head-cell",
                    align: "right",
                    resizable: false,
                    width: R,
                    style: {
                        minWidth: R
                    },
                    variant: "actions",
                    zIndex: 1
                }, a), a.length === 0 && l &&  r().createElement(Wn, {
                    key: "actions_head_cell",
                    "data-test": "actions-head-cell",
                    align: "right",
                    resizable: false,
                    width: l,
                    style: {
                        minWidth: l
                    },
                    variant: "actions",
                    zIndex: 1
                }, " ")));
            }
        } ], [ {
            key: "validateChildrenWidth",
            value: function e(t) {
                if (false) {
                    var n;
                }
            }
        } ]);
        return o;
    }(n.Component);
    _o(Bo, "contextType", mn);
    _o(Bo, "splunkUiType", "Table.Head");
    _o(Bo, "propTypes", zo);
    _o(Bo, "defaultProps", No);
    /* harmony default export */    const $o = Bo;
    // CONCATENATED MODULE: external "lodash/isFinite"
    const Wo = require("lodash/isFinite");
    var Ko =  e.n(Wo);
    // CONCATENATED MODULE: external "lodash/isFunction"
    const Fo = require("lodash/isFunction");
    var Vo =  e.n(Fo);
    // CONCATENATED MODULE: external "@splunk/react-ui/Popover"
    const Uo = require("@splunk/react-ui/Popover");
    var Go =  e.n(Uo);
    // CONCATENATED MODULE: ./src/Table/HeadDropdownCell.tsx
    function Xo(e) {
        "@babel/helpers - typeof";
        return Xo = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
            return typeof e;
        } : function(e) {
            return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
        }, Xo(e);
    }
    function Yo() {
        return Yo = Object.assign ? Object.assign.bind() : function(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = arguments[t];
                for (var r in n) {
                    ({}).hasOwnProperty.call(n, r) && (e[r] = n[r]);
                }
            }
            return e;
        }, Yo.apply(null, arguments);
    }
    function Jo(e) {
        return ti(e) || ei(e) || Zo(e) || Qo();
    }
    function Qo() {
        throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function Zo(e, t) {
        if (e) {
            if ("string" == typeof e) return ni(e, t);
            var n = {}.toString.call(e).slice(8, -1);
            return "Object" === n && e.constructor && (n = e.constructor.name), "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? ni(e, t) : void 0;
        }
    }
    function ei(e) {
        if ("undefined" != typeof Symbol && null != e[Symbol.iterator] || null != e["@@iterator"]) return Array.from(e);
    }
    function ti(e) {
        if (Array.isArray(e)) return ni(e);
    }
    function ni(e, t) {
        (null == t || t > e.length) && (t = e.length);
        for (var n = 0, r = Array(t); n < t; n++) {
            r[n] = e[n];
        }
        return r;
    }
    function ri(e, t) {
        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
    }
    function oi(e, t) {
        for (var n = 0; n < t.length; n++) {
            var r = t[n];
            r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), 
            Object.defineProperty(e, vi(r.key), r);
        }
    }
    function ii(e, t, n) {
        return t && oi(e.prototype, t), n && oi(e, n), Object.defineProperty(e, "prototype", {
            writable: !1
        }), e;
    }
    function ai(e, t) {
        if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function");
        e.prototype = Object.create(t && t.prototype, {
            constructor: {
                value: e,
                writable: !0,
                configurable: !0
            }
        }), Object.defineProperty(e, "prototype", {
            writable: !1
        }), t && li(e, t);
    }
    function li(e, t) {
        return li = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(e, t) {
            return e.__proto__ = t, e;
        }, li(e, t);
    }
    function ci(e) {
        var t = di();
        return function() {
            var n, r = fi(e);
            if (t) {
                var o = fi(this).constructor;
                n = Reflect.construct(r, arguments, o);
            } else n = r.apply(this, arguments);
            return si(this, n);
        };
    }
    function si(e, t) {
        if (t && ("object" == Xo(t) || "function" == typeof t)) return t;
        if (void 0 !== t) throw new TypeError("Derived constructors may only return object or undefined");
        return ui(e);
    }
    function ui(e) {
        if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return e;
    }
    function di() {
        try {
            var e = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {})));
        } catch (e) {}
        return (di = function t() {
            return !!e;
        })();
    }
    function fi(e) {
        return fi = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(e) {
            return e.__proto__ || Object.getPrototypeOf(e);
        }, fi(e);
    }
    function pi(e, t, n) {
        return (t = vi(t)) in e ? Object.defineProperty(e, t, {
            value: n,
            enumerable: !0,
            configurable: !0,
            writable: !0
        }) : e[t] = n, e;
    }
    function vi(e) {
        var t = bi(e, "string");
        return "symbol" == Xo(t) ? t : t + "";
    }
    function bi(e, t) {
        if ("object" != Xo(e) || !e) return e;
        var n = e[Symbol.toPrimitive];
        if (void 0 !== n) {
            var r = n.call(e, t || "default");
            if ("object" != Xo(r)) return r;
            throw new TypeError("@@toPrimitive must return a primitive value.");
        }
        return ("string" === t ? String : Number)(e);
    }
    /** @public */
    /** @public */
    /** @public */    var yi = [ "clickAway", "contentClick", "escapeKey", "offScreen", "tabKey", "toggleClick" ];
    var hi = {
        align: i().oneOf([ "left", "center", "right" ]),
        canCoverHead: i().bool,
        children: i().node.isRequired,
        closeReasons: i().arrayOf(i().oneOf(yi)),
        columnId: i().any,
        defaultPlacement: i().oneOf([ "above", "below", "left", "right", "vertical", "horizontal" ]),
        elementRef: i().oneOfType([ i().func, i().object ]),
        focusToggleReasons: i().arrayOf(i().oneOf(yi)),
        /** @private The index of the cell, skipping the info column. */
        index: i().number,
        label: i().node,
        /** @private. */
        onAutosizeColumn: i().func,
        /** @private. */
        onDragStart: i().func,
        /**
   * @private. This will be passed through, and will work as expected.
   */
        onKeyDown: i().func,
        onRequestClose: i().func,
        /** @private. */
        onRequestMoveColumn: i().func,
        onRequestOpen: i().func,
        /** @private. */
        onRequestResize: i().func,
        open: i().bool,
        repositionMode: i().oneOf([ "none", "flip", "any" ]),
        resizable: i().bool,
        retainFocus: i().bool,
        /** @private. */
        showGuideline: i().oneOf([ "none", "before", "after" ]),
        takeFocus: i().bool,
        truncate: i().bool,
        /**
   * @private
   * Used internally to suppress focus when this `HeadDropdownCell` is superseded by one in an
   * overlaid `HeadTable` for user interactions.
   */
        visible: i().bool,
        width: i().number,
        /** @private. */
        variant: i().oneOf([ "toggleAll", "info", "actions" ]),
        /** @private. */
        zIndex: i().number
    };
    var mi = {
        align: "left",
        canCoverHead: true,
        closeReasons: yi,
        defaultPlacement: "below",
        focusToggleReasons: [ "contentClick", "escapeKey", "toggleClick" ],
        repositionMode: "flip",
        resizable: true,
        retainFocus: false,
        takeFocus: true,
        truncate: true,
        visible: true,
        zIndex: 1
    };
    var gi =  function(e) {
        ai(n, e);
        var t = ci(n);
        // @docs-props-type HeadDropdownCellPropsBase
        /**
   * Enumeration of the possible reasons for closing the Select.
   * 'clickAway', 'escapeKey', and 'offScreen' are inherited from Popover, but repeated here for
   * docs extraction.
   */        function n(e) {
            var r;
            ri(this, n);
            r = t.call(this, e);
            pi(ui(r), "cellId", void 0);
            pi(ui(r), "controlledExternally", void 0);
            pi(ui(r), "popoverId", void 0);
            pi(ui(r), "handleMount", (function(e) {
                r.setState({
                    el: e
                });
                B(r.props.elementRef, e);
            }));
            pi(ui(r), "handleInnerButtonMount", (function(e) {
                r.setState({
                    innerButtonEl: e
                });
            }));
            pi(ui(r), "handleRequestClose", (function(e) {
                var t = e.reason, n = e.event;
                var o = r.props, i = o.closeReasons, a = o.columnId, l = o.focusToggleReasons, c = o.index, s = o.onRequestClose;
                if (t === "clickAway" && n !== undefined) {
                    var u = n.target;
                    while (u) {
                        // Ignore clicks on toggle.
                        if (u === r.state.innerButtonEl) {
                            return;
                        }
                        u = u.parentNode;
                    }
                }
                if (r.isOpen() && _()(i, t) && c !== undefined) {
                    if (_()(l, t)) {
                        r.focus();
                    }
                    if (!r.isControlled()) {
                        r.setState({
                            open: false
                        });
                    }
                    s === null || s === void 0 ? void 0 : s(n, {
                        index: c,
                        reason: t,
                        columnId: a
                    });
                }
            }));
            pi(ui(r), "handleClick", (function(e) {
                var t = r.props, n = t.columnId, o = t.index;
 // ignore clicks on the resize handle
                                if (e.target.getAttribute("data-test") === "resize") {
                    return;
                }
                if (!r.isOpen()) {
                    r.setState({
                        clientX: e.clientX || undefined
                    });
                }
                if (r.isOpen()) {
                    var i, a;
                    (i = (a = r).handleRequestClose) === null || i === void 0 ? void 0 : i.call(a, {
                        reason: "toggleClick",
                        event: e
                    });
                } else if (o !== undefined) {
                    var l, c;
                    (l = (c = r.props).onRequestOpen) === null || l === void 0 ? void 0 : l.call(c, e, {
                        reason: "toggleClick",
                        columnId: n,
                        index: o
                    });
                    if (!r.isControlled()) {
                        r.setState({
                            open: true
                        });
                    }
                }
            }));
            pi(ui(r), "handleKeyDown", (function(e) {
                var t = r.props, n = t.columnId, o = t.index, i = t.onKeyDown, a = t.onRequestMoveColumn;
                if (e.target.getAttribute("data-test") !== "resize") {
                    if ((0, E.keycode)(e.nativeEvent) === "left" && o !== undefined && o > 0) {
                        a === null || a === void 0 ? void 0 : a({
                            fromIndex: o,
                            toIndex: o - 1,
                            columnId: n
                        });
                    } else if ((0, E.keycode)(e.nativeEvent) === "right" && o !== undefined) {
                        a === null || a === void 0 ? void 0 : a({
                            fromIndex: o,
                            toIndex: o + 1,
                            columnId: n
                        });
                    }
                }
                if (o !== undefined) {
                    i === null || i === void 0 ? void 0 : i(e, {
                        index: o,
                        columnId: n
                    });
                }
            }));
            pi(ui(r), "handleContentClick", (function(e) {
                r.handleRequestClose({
                    reason: "contentClick",
                    event: e
                });
            }));
            pi(ui(r), "handleDragStart", (function(e, t) {
                var n, o;
                r.setState({
                    isDragging: true
                });
                (n = (o = r.props).onDragStart) === null || n === void 0 ? void 0 : n.call(o, e, t);
            }));
            pi(ui(r), "handleDragEnd", (function() {
                r.setState({
                    isDragging: false
                });
            }));
            r.state = {
                el: null,
                innerButtonEl: null,
                isDragging: false,
                open: false
            };
            r.controlledExternally = f()(e, "open");
            r.popoverId = (0, z.createDOMID)("popover");
            r.cellId = (0, z.createDOMID)("cellId");
            if (false) {}
            if (false) {}
            return r;
        }
        ii(n, [ {
            key: "componentDidUpdate",
            value: function e(t) {
                if (t.visible && !this.props.visible) {
                    this.handleRequestClose({
                        reason: "offScreen"
                    });
                }
                if (false) {}
            }
        }, {
            key: "focus",
            /**
     * Place focus on the toggle.
     */
            value: function e() {
                var t;
                (t = this.state.innerButtonEl) === null || t === void 0 ? void 0 : t.focus();
            }
        }, {
            key: "isOpen",
            value: function e() {
                return this.isControlled() ? this.props.open : this.state.open;
            }
        }, {
            key: "isControlled",
            value: function e() {
                return this.controlledExternally;
            }
        }, {
            key: "render",
            value: function e() {
                var t, o = this;
                var i = this.props, a = i.align, l = i.canCoverHead, c = i.children, s = i.closeReasons, u = i.columnId, d = i.defaultPlacement, f = i.id, p = i.index, v = i.label, b = i.onAutosizeColumn, y = i.onDragStart, h = i.onRequestResize, m = i.repositionMode, w = i.resizable, x = i.retainFocus, C = i.showGuideline, S = i.style, k = i.takeFocus, O = i.truncate, E = i.variant, R = i.visible, j = i.width, I = i.zIndex;
                var T = this.state, P = T.el, D = T.clientX;
                var q = f || this.cellId;
                var A = this.context.headType;
                
                return r().createElement(zt, Yo({
                    style: ot()(S, {
                        width: j
                    }),
                    "data-test": "head-cell",
                    $dragging: this.state.isDragging || undefined,
                    $variant: E,
                    id: R ? q : undefined,
                    ref: this.handleMount
                }, g()(this.props, [].concat(Jo(Object.keys(n.propTypes)), [ "id", "style" ])), {
                    onClick: this.handleClick,
                    onKeyDown: this.handleKeyDown,
                    $isFixed: A === "fixed",
                    $zIndex: I
                }),  r().createElement(yn, {
                    elementRef: this.handleInnerButtonMount,
                    label: v,
                    align: a,
                    columnId: u,
                    id: f,
                    index: p,
                    isMenu: true,
                    resizable: R && w,
                    onDragStart: y ? this.handleDragStart : undefined,
                    onDragEnd: y ? this.handleDragEnd : undefined,
                    onAutosizeColumn: b,
                    onRequestResize: h,
                    truncate: O,
                    width: j,
                    clickable: true,
                    "aria-haspopup": true,
                    "aria-owns": this.popoverId,
                    "aria-expanded": this.isOpen()
                }), C !== "none" &&  r().createElement(Nt, {
                    $position: C
                }),  r().createElement(Go(), {
                    align: "center",
                    open: !!P && this.isOpen(),
                    autoCloseWhenOffScreen: _()(s, "offScreen"),
                    anchor: P,
                    canCoverAnchor: l,
                    retainFocus: x,
                    defaultPlacement: d,
                    onRequestClose: this.handleRequestClose,
                    repositionMode: m,
                    id: this.popoverId,
                    "aria-labelledby": f || this.cellId,
                    takeFocus: k,
                    pointTo: D !== undefined && Ko()(D) ? {
                        x: D - ((t = P === null || P === void 0 ? void 0 : P.getBoundingClientRect().left) !== null && t !== void 0 ? t : 0)
                    } : undefined
                }, Vo()(c) ? function() {
                    
                    // eslint-disable-next-line jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions
                    return r().createElement("div", {
                        onClick: o.handleContentClick
                    }, c.apply(void 0, arguments));
                } : 
                
                // eslint-disable-next-line jsx-a11y/click-events-have-key-events, jsx-a11y/no-static-element-interactions
                r().createElement("div", {
                    onClick: this.handleContentClick
                }, c)));
            }
        } ]);
        return n;
    }(n.Component);
    pi(gi, "splunkUiType", "Table.HeadDropdownCell");
    pi(gi, "possibleCloseReasons", yi);
    pi(gi, "propTypes", hi);
    pi(gi, "defaultProps", mi);
    pi(gi, "contextType", mn);
    /* harmony default export */    const wi = gi;
    // CONCATENATED MODULE: ./src/Table/KeyboardSensor.ts
    function xi(e) {
        "@babel/helpers - typeof";
        return xi = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
            return typeof e;
        } : function(e) {
            return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
        }, xi(e);
    }
    function Ci(e, t) {
        return Oi(e) || ki(e, t) || ji(e, t) || Si();
    }
    function Si() {
        throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function ki(e, t) {
        var n = null == e ? null : "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
        if (null != n) {
            var r, o, i, a, l = [], c = !0, s = !1;
            try {
                if (i = (n = n.call(e)).next, 0 === t) {
                    if (Object(n) !== n) return;
                    c = !1;
                } else for (;!(c = (r = i.call(n)).done) && (l.push(r.value), l.length !== t); c = !0) {
                }
            } catch (e) {
                s = !0, o = e;
            } finally {
                try {
                    if (!c && null != n["return"] && (a = n["return"](), Object(a) !== a)) return;
                } finally {
                    if (s) throw o;
                }
            }
            return l;
        }
    }
    function Oi(e) {
        if (Array.isArray(e)) return e;
    }
    function Ei(e) {
        return Ti(e) || Ii(e) || ji(e) || Ri();
    }
    function Ri() {
        throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function ji(e, t) {
        if (e) {
            if ("string" == typeof e) return Pi(e, t);
            var n = {}.toString.call(e).slice(8, -1);
            return "Object" === n && e.constructor && (n = e.constructor.name), "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? Pi(e, t) : void 0;
        }
    }
    function Ii(e) {
        if ("undefined" != typeof Symbol && null != e[Symbol.iterator] || null != e["@@iterator"]) return Array.from(e);
    }
    function Ti(e) {
        if (Array.isArray(e)) return Pi(e);
    }
    function Pi(e, t) {
        (null == t || t > e.length) && (t = e.length);
        for (var n = 0, r = Array(t); n < t; n++) {
            r[n] = e[n];
        }
        return r;
    }
    function Di(e, t) {
        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
    }
    function _i(e, t) {
        for (var n = 0; n < t.length; n++) {
            var r = t[n];
            r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), 
            Object.defineProperty(e, zi(r.key), r);
        }
    }
    function qi(e, t, n) {
        return t && _i(e.prototype, t), n && _i(e, n), Object.defineProperty(e, "prototype", {
            writable: !1
        }), e;
    }
    function Ai(e, t, n) {
        return (t = zi(t)) in e ? Object.defineProperty(e, t, {
            value: n,
            enumerable: !0,
            configurable: !0,
            writable: !0
        }) : e[t] = n, e;
    }
    function zi(e) {
        var t = Ni(e, "string");
        return "symbol" == xi(t) ? t : t + "";
    }
    function Ni(e, t) {
        if ("object" != xi(e) || !e) return e;
        var n = e[Symbol.toPrimitive];
        if (void 0 !== n) {
            var r = n.call(e, t || "default");
            if ("object" != xi(r)) return r;
            throw new TypeError("@@toPrimitive must return a primitive value.");
        }
        return ("string" === t ? String : Number)(e);
    }
    // based on https://github.com/clauderic/dnd-kit/blob/694dcc2f62e5269541fc941fa6c9af46ccd682ad/packages/core/src/sensors/keyboard/KeyboardSensor.ts
    // eslint-disable-next-line max-classes-per-file
    // https://github.com/clauderic/dnd-kit/blob/694dcc2f62e5269541fc941fa6c9af46ccd682ad/packages/core/src/sensors/utilities/Listeners.ts
        var Hi =  function() {
        function e(t) {
            var n = this;
            Di(this, e);
            Ai(this, "listeners", []);
            Ai(this, "removeAll", (function() {
                n.listeners.forEach((function(e) {
                    var t;
                    return (t = n.target) === null || t === void 0 ? void 0 : t.removeEventListener.apply(t, Ei(e));
                }));
            }));
            this.target = t;
            this.target = t;
        }
        qi(e, [ {
            key: "add",
            value: function e(t, n, r) {
                var o;
                (o = this.target) === null || o === void 0 ? void 0 : o.addEventListener(t, n, r);
                this.listeners.push([ t, n, r ]);
            }
        } ]);
        return e;
    }();
    // https://github.com/clauderic/dnd-kit/blob/694dcc2f62e5269541fc941fa6c9af46ccd682ad/packages/core/src/utilities/transform/parseTransform.ts
        function Mi(e) {
        if (e.startsWith("matrix3d(")) {
            var t = e.slice(9, -1).split(/, /);
            return {
                x: +t[12],
                y: +t[13],
                scaleX: +t[0],
                scaleY: +t[5]
            };
        }
        if (e.startsWith("matrix(")) {
            var n = e.slice(7, -1).split(/, /);
            return {
                x: +n[4],
                y: +n[5],
                scaleX: +n[0],
                scaleY: +n[3]
            };
        }
        return null;
    }
    // https://github.com/clauderic/dnd-kit/blob/694dcc2f62e5269541fc941fa6c9af46ccd682ad/packages/core/src/utilities/transform/inverseTransform.ts
        function Li(e, t, n) {
        var r = Mi(t);
        if (!r) {
            return e;
        }
        var o = r.scaleX, i = r.scaleY, a = r.x, l = r.y;
        var c = e.left - a - (1 - o) * parseFloat(n);
        var s = e.top - l - (1 - i) * parseFloat(n.slice(n.indexOf(" ") + 1));
        var u = o ? e.width / o : e.width;
        var d = i ? e.height / i : e.height;
        return {
            width: u,
            height: d,
            top: s,
            right: c + u,
            bottom: s + d,
            left: c
        };
    }
    var Bi = {
        ignoreTransform: false
    };
    // https://github.com/clauderic/dnd-kit/blob/694dcc2f62e5269541fc941fa6c9af46ccd682ad/packages/core/src/utilities/rect/getRect.ts
        function $i(e) {
        var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Bi;
        var n = e.getBoundingClientRect();
        if (t.ignoreTransform) {
            var r = (0, Xn.getWindow)(e).getComputedStyle(e), o = r.transform, i = r.transformOrigin;
            if (o) {
                n = Li(n, o, i);
            }
        }
        var a = n, l = a.top, c = a.left, s = a.width, u = a.height, d = a.bottom, f = a.right;
        return {
            top: l,
            left: c,
            width: s,
            height: u,
            bottom: d,
            right: f
        };
    }
    function Wi(e) {
        if (e === document.scrollingElement) {
            var t = window, n = t.innerWidth, r = t.innerHeight;
            return {
                top: 0,
                left: 0,
                right: n,
                bottom: r,
                width: n,
                height: r
            };
        }
        var o = e.getBoundingClientRect(), i = o.top, a = o.left, l = o.right, c = o.bottom;
        return {
            top: i,
            left: a,
            right: l,
            bottom: c,
            width: e.clientWidth,
            height: e.clientHeight
        };
    }
    // https://github.com/clauderic/dnd-kit/blob/694dcc2f62e5269541fc941fa6c9af46ccd682ad/packages/core/src/utilities/scroll/documentScrollingElement.ts
        function Ki(e) {
        if (!Xn.canUseDOM || !e) {
            return false;
        }
        return e === document.scrollingElement;
    }
    // https://github.com/clauderic/dnd-kit/blob/694dcc2f62e5269541fc941fa6c9af46ccd682ad/packages/core/src/utilities/scroll/getScrollPosition.ts
        function Fi(e) {
        var t = {
            x: 0,
            y: 0
        };
        var n = Ki(e) ? {
            height: window.innerHeight,
            width: window.innerWidth
        } : {
            height: e.clientHeight,
            width: e.clientWidth
        };
        var r = {
            x: e.scrollWidth - n.width,
            y: e.scrollHeight - n.height
        };
        var o = e.scrollTop <= t.y;
        var i = e.scrollLeft <= t.x;
        var a = e.scrollTop >= r.y;
        var l = e.scrollLeft >= r.x;
        return {
            isTop: o,
            isLeft: i,
            isBottom: a,
            isRight: l,
            maxScroll: r,
            minScroll: t
        };
    }
    // https://github.com/clauderic/dnd-kit/blob/694dcc2f62e5269541fc941fa6c9af46ccd682ad/packages/core/src/utilities/coordinates/constants.ts
        var Vi = {
        x: 0,
        y: 0
    };
    // https://github.com/clauderic/dnd-kit/blob/694dcc2f62e5269541fc941fa6c9af46ccd682ad/packages/core/src/utilities/scroll/isFixed.ts
        function Ui(e) {
        var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : (0, 
        Xn.getWindow)(e).getComputedStyle(e);
        return t.position === "fixed";
    }
    // https://github.com/clauderic/dnd-kit/blob/694dcc2f62e5269541fc941fa6c9af46ccd682ad/packages/core/src/utilities/scroll/isScrollable.ts
        function Gi(e) {
        var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : (0, 
        Xn.getWindow)(e).getComputedStyle(e);
        var n = /(auto|scroll|overlay)/;
        var r = [ "overflow", "overflowX", "overflowY" ];
        return r.some((function(e) {
            var r = t[e];
            return typeof r === "string" ? n.test(r) : false;
        }));
    }
    // https://github.com/clauderic/dnd-kit/blob/694dcc2f62e5269541fc941fa6c9af46ccd682ad/packages/core/src/utilities/scroll/getScrollableAncestors.ts
        function Xi(e, t) {
        var n = [];
        function r(o) {
            if (t != null && n.length >= t) {
                return n;
            }
            if (!o) {
                return n;
            }
            if ((0, Xn.isDocument)(o) && o.scrollingElement != null && !n.includes(o.scrollingElement)) {
                n.push(o.scrollingElement);
                return n;
            }
            if (!(0, Xn.isHTMLElement)(o) || (0, Xn.isSVGElement)(o)) {
                return n;
            }
            if (n.includes(o)) {
                return n;
            }
            var i = (0, Xn.getWindow)(e).getComputedStyle(o);
            if (o !== e) {
                if (Gi(o, i)) {
                    n.push(o);
                }
            }
            if (Ui(o, i)) {
                return n;
            }
            return r(o.parentNode);
        }
        if (!e) {
            return n;
        }
        return r(e);
    }
    // https://github.com/clauderic/dnd-kit/blob/694dcc2f62e5269541fc941fa6c9af46ccd682ad/packages/core/src/utilities/scroll/getScrollableAncestors.ts
        function Yi(e) {
        var t = Xi(e, 1), n = Ci(t, 1), r = n[0];
        return r !== null && r !== void 0 ? r : null;
    }
    var Ji = {
        start: [ a.KeyboardCode.Space, a.KeyboardCode.Enter ],
        cancel: [ a.KeyboardCode.Esc ],
        end: [ a.KeyboardCode.Space, a.KeyboardCode.Enter ]
    };
    // https://github.com/clauderic/dnd-kit/blob/694dcc2f62e5269541fc941fa6c9af46ccd682ad/packages/core/src/utilities/scroll/scrollIntoViewIfNeeded.ts
        function Qi(e) {
        var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : $i;
        if (!e) {
            return;
        }
        var n = t(e), r = n.top, o = n.left, i = n.bottom, a = n.right;
        var l = Yi(e);
        if (!l) {
            return;
        }
        if (i <= 0 || a <= 0 || r >= window.innerHeight || o >= window.innerWidth) {
            e.scrollIntoView({
                block: "center",
                inline: "center"
            });
        }
    }
    var Zi =  function() {
        function e(t) {
            Di(this, e);
            Ai(this, "autoScrollEnabled", false);
            Ai(this, "referenceCoordinates", void 0);
            Ai(this, "listeners", void 0);
            Ai(this, "windowListeners", void 0);
            this.props = t;
            var n = t.event.target;
            this.props = t;
            this.listeners = new Hi((0, Xn.getOwnerDocument)(n));
            this.windowListeners = new Hi((0, Xn.getWindow)(n));
            this.handleKeyDown = this.handleKeyDown.bind(this);
            this.handleCancel = this.handleCancel.bind(this);
            this.attach();
        }
        qi(e, [ {
            key: "attach",
            value: function e() {
                var t = this;
                this.handleStart();
                this.windowListeners.add("resize", this.handleCancel);
                this.windowListeners.add("visibilitychange", this.handleCancel);
                setTimeout((function() {
                    return t.listeners.add("keydown", t.handleKeyDown);
                }));
            }
        }, {
            key: "handleStart",
            value: function e() {
                var t = this.props, n = t.activeNode, r = t.onStart;
                var o = n.node.current;
                if (o) {
                    Qi(o);
                }
                r(Vi);
            }
        }, {
            key: "handleKeyDown",
            value: function e(t) {
                if ((0, Xn.isKeyboardEvent)(t)) {
                    var n = this.props, r = n.active, o = n.context, i = n.options;
                    var l = i.keyboardCodes, c = l === void 0 ? Ji : l, s = i.coordinateGetter, u = i.scrollBehavior, d = u === void 0 ? "smooth" : u;
                    var f = t.code;
                    if (c.end.includes(f)) {
                        this.handleEnd(t);
                        return;
                    }
                    if (c.cancel.includes(f)) {
                        this.handleCancel(t);
                        return;
                    }
                    var p = o.current.collisionRect;
                    var v = p ? {
                        x: p.left,
                        y: p.top
                    } : Vi;
                    if (!this.referenceCoordinates) {
                        this.referenceCoordinates = v;
                    }
                    var b = s(t, {
                        active: r,
                        context: o.current,
                        currentCoordinates: v
                    });
                    if (b) {
                        var y = (0, Xn.subtract)(b, v);
                        var h = {
                            x: 0,
                            y: 0
                        };
                        var m = o.current.scrollableAncestors;
                        for (var g = 0; g < m.length; g += 1) {
                            var w = m[g];
                            var x = t.code;
                            var C = Fi(w), S = C.isTop, k = C.isRight, O = C.isLeft, E = C.isBottom, R = C.maxScroll, j = C.minScroll;
                            var I = Wi(w);
                            // isDraggableNodeVerticallyInView and isDraggableNodeHorizontallyInView are custom
                            // we want to scroll only when a dragging node will be out of view,
                            // originally it tries to always place a dragging node in the middle of the container
                                                        var T = I.top <= b.y && I.bottom >= b.y + ((p === null || p === void 0 ? void 0 : p.height) || 0);
                            var P = I.left <= b.x && I.right >= b.x + ((p === null || p === void 0 ? void 0 : p.width) || 0);
                            var D = (x === a.KeyboardCode.Right && !k || x === a.KeyboardCode.Left && !O) && !P;
                            var _ = (x === a.KeyboardCode.Down && !E || x === a.KeyboardCode.Up && !S) && !T;
                            if (D) {
                                var q = w.scrollLeft + y.x;
                                var A = x === a.KeyboardCode.Right && q <= R.x || x === a.KeyboardCode.Left && q >= j.x;
                                if (A && !y.y) {
                                    // We don't need to update coordinates, the scroll adjustment alone will trigger
                                    // logic to auto-detect the new container we are over
                                    w.scrollTo({
                                        left: q,
                                        behavior: d
                                    });
                                    return;
                                }
                                if (A) {
                                    h.x = w.scrollLeft - q;
                                } else {
                                    h.x = x === a.KeyboardCode.Right ? w.scrollLeft - R.x : w.scrollLeft - j.x;
                                }
                                if (h.x) {
                                    w.scrollBy({
                                        left: -h.x,
                                        behavior: d
                                    });
                                }
                                break;
                            } else if (_) {
                                var z = w.scrollTop + y.y;
                                var N = x === a.KeyboardCode.Down && z <= R.y || x === a.KeyboardCode.Up && z >= j.y;
                                if (N && !y.x) {
                                    // We don't need to update coordinates, the scroll adjustment alone will trigger
                                    // logic to auto-detect the new container we are over
                                    w.scrollTo({
                                        top: z,
                                        behavior: d
                                    });
                                    return;
                                }
                                if (N) {
                                    h.y = w.scrollTop - z;
                                } else {
                                    h.y = x === a.KeyboardCode.Down ? w.scrollTop - R.y : w.scrollTop - j.y;
                                }
                                if (h.y) {
                                    w.scrollBy({
                                        top: -h.y,
                                        behavior: d
                                    });
                                }
                                break;
                            }
                        }
                        this.handleMove(t, (0, Xn.add)((0, Xn.subtract)(b, this.referenceCoordinates), h));
                    }
                }
            }
        }, {
            key: "handleMove",
            value: function e(t, n) {
                var r = this.props.onMove;
                t.preventDefault();
                r(n);
            }
        }, {
            key: "handleEnd",
            value: function e(t) {
                var n = this.props.onEnd;
                t.preventDefault();
                this.detach();
                n();
            }
        }, {
            key: "handleCancel",
            value: function e(t) {
                var n = this.props.onCancel;
                t.preventDefault();
                this.detach();
                n();
            }
        }, {
            key: "detach",
            value: function e() {
                this.listeners.removeAll();
                this.windowListeners.removeAll();
            }
        } ]);
        return e;
    }();
    Ai(Zi, "activators", [ {
        eventName: "onKeyDown",
        handler: function e(t, n, r) {
            var o = n.keyboardCodes, i = o === void 0 ? Ji : o, a = n.onActivation;
            var l = r.active;
            var c = t.nativeEvent.code;
            if (i.start.includes(c)) {
                var s = l.activatorNode.current;
                if (s && t.target !== s) {
                    return false;
                }
                t.preventDefault();
                a === null || a === void 0 ? void 0 : a({
                    event: t.nativeEvent
                });
                return true;
            }
            return false;
        }
    } ]);
    // CONCATENATED MODULE: external "lodash/extend"
    const ea = require("lodash/extend");
    var ta =  e.n(ea);
    // CONCATENATED MODULE: ./src/Table/HeadTableStyles.ts
    var na = H()(me).withConfig({
        displayName: "HeadTableStyles__Styled",
        componentId: "g85wgf-0"
    })([ "min-width:0;table-layout:fixed;" ]);
    var ra = H().div.withConfig({
        displayName: "HeadTableStyles__StyledDockedContainer",
        componentId: "g85wgf-1"
    })([ "overflow:hidden;position:fixed;box-shadow:", ";z-index:", ";@media print{display:none;}" ], (0, 
    M.pick)({
        enterprise: M.variables.overlayShadow,
        prisma: "none"
    }), M.variables.zindexFixedNavbar);
    var oa = H()(ra).withConfig({
        displayName: "HeadTableStyles__StyledFixedContainer",
        componentId: "g85wgf-2"
    })([ "position:absolute;box-shadow:none;z-index:1;" ]);
    // CONCATENATED MODULE: ./src/Table/HeadTable.tsx
    function ia(e) {
        "@babel/helpers - typeof";
        return ia = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
            return typeof e;
        } : function(e) {
            return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
        }, ia(e);
    }
    function aa() {
        return aa = Object.assign ? Object.assign.bind() : function(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = arguments[t];
                for (var r in n) {
                    ({}).hasOwnProperty.call(n, r) && (e[r] = n[r]);
                }
            }
            return e;
        }, aa.apply(null, arguments);
    }
    function la(e, t) {
        if (null == e) return {};
        var n, r, o = ca(e, t);
        if (Object.getOwnPropertySymbols) {
            var i = Object.getOwnPropertySymbols(e);
            for (r = 0; r < i.length; r++) {
                n = i[r], t.includes(n) || {}.propertyIsEnumerable.call(e, n) && (o[n] = e[n]);
            }
        }
        return o;
    }
    function ca(e, t) {
        if (null == e) return {};
        var n = {};
        for (var r in e) {
            if ({}.hasOwnProperty.call(e, r)) {
                if (t.includes(r)) continue;
                n[r] = e[r];
            }
        }
        return n;
    }
    function sa(e, t) {
        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
    }
    function ua(e, t) {
        for (var n = 0; n < t.length; n++) {
            var r = t[n];
            r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), 
            Object.defineProperty(e, wa(r.key), r);
        }
    }
    function da(e, t, n) {
        return t && ua(e.prototype, t), n && ua(e, n), Object.defineProperty(e, "prototype", {
            writable: !1
        }), e;
    }
    function fa(e, t) {
        if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function");
        e.prototype = Object.create(t && t.prototype, {
            constructor: {
                value: e,
                writable: !0,
                configurable: !0
            }
        }), Object.defineProperty(e, "prototype", {
            writable: !1
        }), t && pa(e, t);
    }
    function pa(e, t) {
        return pa = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(e, t) {
            return e.__proto__ = t, e;
        }, pa(e, t);
    }
    function va(e) {
        var t = ha();
        return function() {
            var n, r = ma(e);
            if (t) {
                var o = ma(this).constructor;
                n = Reflect.construct(r, arguments, o);
            } else n = r.apply(this, arguments);
            return ba(this, n);
        };
    }
    function ba(e, t) {
        if (t && ("object" == ia(t) || "function" == typeof t)) return t;
        if (void 0 !== t) throw new TypeError("Derived constructors may only return object or undefined");
        return ya(e);
    }
    function ya(e) {
        if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return e;
    }
    function ha() {
        try {
            var e = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {})));
        } catch (e) {}
        return (ha = function t() {
            return !!e;
        })();
    }
    function ma(e) {
        return ma = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(e) {
            return e.__proto__ || Object.getPrototypeOf(e);
        }, ma(e);
    }
    function ga(e, t, n) {
        return (t = wa(t)) in e ? Object.defineProperty(e, t, {
            value: n,
            enumerable: !0,
            configurable: !0,
            writable: !0
        }) : e[t] = n, e;
    }
    function wa(e) {
        var t = xa(e, "string");
        return "symbol" == ia(t) ? t : t + "";
    }
    function xa(e, t) {
        if ("object" != ia(e) || !e) return e;
        var n = e[Symbol.toPrimitive];
        if (void 0 !== n) {
            var r = n.call(e, t || "default");
            if ("object" != ia(r)) return r;
            throw new TypeError("@@toPrimitive must return a primitive value.");
        }
        return ("string" === t ? String : Number)(e);
    }
    var Ca = {
        cellWidths: i().arrayOf(i().number).isRequired,
        dragIndex: i().number,
        elementRef: i().oneOfType([ i().func, i().object ]),
        hasDragColumn: i().bool,
        hasRowExpansion: i().bool,
        hasRowSelection: i().bool,
        headType: i().oneOf([ "docked", "fixed" ]).isRequired,
        horizontalOffset: i().number,
        isFixedColumn: i().bool,
        rowSelection: i().oneOf([ "all", "some", "none" ]),
        tableStyle: i().object,
        tableWidth: i().number.isRequired,
        tHead: i().element.isRequired,
        top: i().number.isRequired,
        width: i().number.isRequired
    };
    var Sa = {
        horizontalOffset: 0
    };
    /**
 * @private
 * HeadTable is an internal component that provides a detached table head that can
 * then be positioned in different ways outside of the main table.
 */    var ka =  function(e) {
        fa(o, e);
        var t = va(o);
        function o() {
            var e;
            sa(this, o);
            for (var n = arguments.length, r = new Array(n), i = 0; i < n; i++) {
                r[i] = arguments[i];
            }
            e = t.call.apply(t, [ this ].concat(r));
            ga(ya(e), "head", null);
            ga(ya(e), "handleHeadMount", (function(t) {
                e.head = t;
            }));
            return e;
        }
        da(o, [ {
            key: "getHead",
            // eslint-disable-next-line react/no-unused-class-component-methods
            value: function e() {
                return this.head;
            }
        }, {
            key: "render",
            value: function e() {
                var t = this.props, o = t.cellWidths, i = t.elementRef, a = t.hasDragColumn, l = t.hasRowExpansion, c = t.hasRowSelection, s = t.headType, u = t.horizontalOffset, d = t.isFixedColumn, f = t.tableStyle, p = t.tableWidth, v = t.tHead, b = t.top, y = t.width, h = la(t, [ "cellWidths", "elementRef", "hasDragColumn", "hasRowExpansion", "hasRowSelection", "headType", "horizontalOffset", "isFixedColumn", "tableStyle", "tableWidth", "tHead", "top", "width" ]);
                var m = s === "docked";
                var w = m ? ra : oa;
                var x = 0;
                if (l) {
                    x += 1;
                }
                if (c) {
                    x += 1;
                }
                if (a) {
                    x += 1;
                }
                // Set the widths of the head cells if not fixed column
                                var C = d ? n.Children.toArray(v.props.children) : n.Children.toArray(v.props.children).filter(n.isValidElement).map((function(e, t) {
                    
                    return (0, n.cloneElement)(e, {
                        style: ta()({}, e.props.style, {
                            width: o[t + x]
                        })
                    });
                }));
                var S =  (0, n.cloneElement)(v, {
                    ref: this.handleHeadMount,
                    "data-test": "".concat(s, "-head")
                }, C);
                
                return r().createElement(w, {
                    style: {
                        top: b,
                        width: y
                    },
                    ref: i
                },  r().createElement(na, aa({
                    "data-test": "".concat(s, "-head-table"),
                    "data-fixed-column": d ? "true" : undefined,
                    style: ta()({}, f, {
                        marginLeft: u,
                        width: d ? undefined : p
                    })
                }, g()(h, "dragIndex")), S));
            }
        } ]);
        return o;
    }(n.Component);
    ga(ka, "propTypes", Ca);
    ga(ka, "defaultProps", Sa);
    /* harmony default export */    const Oa = ka;
    // CONCATENATED MODULE: ./src/utils/types.ts
    // see https://github.com/DefinitelyTyped/DefinitelyTyped/issues/31245 for details
    // regarding the css prop. certain (versions of) libraries included in the compilation
    // - such as storybook->emotion - introduce the css prop using a global augmentation,
    // which causes the prop to end up in our declaration files (via JSX.IntrinsicElements).
    // it's difficult to control all nested dependencies and their types, which is why the
    // css prop is omitted in the two prop helpers above - this ensures the css prop isn't
    // erroneously included in react-ui's public api.
    // see https://github.com/microsoft/TypeScript/pull/12253
    // see https://www.typescriptlang.org/docs/handbook/release-notes/typescript-3-7.html
    function Ea(e, t) {
        if (e === undefined || e === null) {
            throw new Error(t !== null && t !== void 0 ? t : "Unexpected undefined or null");
        }
    }
    // CONCATENATED MODULE: ./src/Table/Table.tsx
    function Ra(e) {
        "@babel/helpers - typeof";
        return Ra = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
            return typeof e;
        } : function(e) {
            return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
        }, Ra(e);
    }
    function ja(e, t) {
        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
    }
    function Ia(e, t) {
        for (var n = 0; n < t.length; n++) {
            var r = t[n];
            r.enumerable = r.enumerable || !1, r.configurable = !0, "value" in r && (r.writable = !0), 
            Object.defineProperty(e, Ma(r.key), r);
        }
    }
    function Ta(e, t, n) {
        return t && Ia(e.prototype, t), n && Ia(e, n), Object.defineProperty(e, "prototype", {
            writable: !1
        }), e;
    }
    function Pa(e, t) {
        if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function");
        e.prototype = Object.create(t && t.prototype, {
            constructor: {
                value: e,
                writable: !0,
                configurable: !0
            }
        }), Object.defineProperty(e, "prototype", {
            writable: !1
        }), t && Da(e, t);
    }
    function Da(e, t) {
        return Da = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(e, t) {
            return e.__proto__ = t, e;
        }, Da(e, t);
    }
    function _a(e) {
        var t = za();
        return function() {
            var n, r = Na(e);
            if (t) {
                var o = Na(this).constructor;
                n = Reflect.construct(r, arguments, o);
            } else n = r.apply(this, arguments);
            return qa(this, n);
        };
    }
    function qa(e, t) {
        if (t && ("object" == Ra(t) || "function" == typeof t)) return t;
        if (void 0 !== t) throw new TypeError("Derived constructors may only return object or undefined");
        return Aa(e);
    }
    function Aa(e) {
        if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return e;
    }
    function za() {
        try {
            var e = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {})));
        } catch (e) {}
        return (za = function t() {
            return !!e;
        })();
    }
    function Na(e) {
        return Na = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(e) {
            return e.__proto__ || Object.getPrototypeOf(e);
        }, Na(e);
    }
    function Ha(e, t, n) {
        return (t = Ma(t)) in e ? Object.defineProperty(e, t, {
            value: n,
            enumerable: !0,
            configurable: !0,
            writable: !0
        }) : e[t] = n, e;
    }
    function Ma(e) {
        var t = La(e, "string");
        return "symbol" == Ra(t) ? t : t + "";
    }
    function La(e, t) {
        if ("object" != Ra(e) || !e) return e;
        var n = e[Symbol.toPrimitive];
        if (void 0 !== n) {
            var r = n.call(e, t || "default");
            if ("object" != Ra(r)) return r;
            throw new TypeError("@@toPrimitive must return a primitive value.");
        }
        return ("string" === t ? String : Number)(e);
    }
    function Ba() {
        return Ba = Object.assign ? Object.assign.bind() : function(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = arguments[t];
                for (var r in n) {
                    ({}).hasOwnProperty.call(n, r) && (e[r] = n[r]);
                }
            }
            return e;
        }, Ba.apply(null, arguments);
    }
    function $a(e) {
        return Fa(e) || Ka(e) || Ga(e) || Wa();
    }
    function Wa() {
        throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function Ka(e) {
        if ("undefined" != typeof Symbol && null != e[Symbol.iterator] || null != e["@@iterator"]) return Array.from(e);
    }
    function Fa(e) {
        if (Array.isArray(e)) return Xa(e);
    }
    function Va(e, t) {
        return Ja(e) || Ya(e, t) || Ga(e, t) || Ua();
    }
    function Ua() {
        throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function Ga(e, t) {
        if (e) {
            if ("string" == typeof e) return Xa(e, t);
            var n = {}.toString.call(e).slice(8, -1);
            return "Object" === n && e.constructor && (n = e.constructor.name), "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? Xa(e, t) : void 0;
        }
    }
    function Xa(e, t) {
        (null == t || t > e.length) && (t = e.length);
        for (var n = 0, r = Array(t); n < t; n++) {
            r[n] = e[n];
        }
        return r;
    }
    function Ya(e, t) {
        var n = null == e ? null : "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
        if (null != n) {
            var r, o, i, a, l = [], c = !0, s = !1;
            try {
                if (i = (n = n.call(e)).next, 0 === t) {
                    if (Object(n) !== n) return;
                    c = !1;
                } else for (;!(c = (r = i.call(n)).done) && (l.push(r.value), l.length !== t); c = !0) {
                }
            } catch (e) {
                s = !0, o = e;
            } finally {
                try {
                    if (!c && null != n["return"] && (a = n["return"](), Object(a) !== a)) return;
                } finally {
                    if (s) throw o;
                }
            }
            return l;
        }
    }
    function Ja(e) {
        if (Array.isArray(e)) return e;
    }
    function Qa(e, t) {
        if (null == e) return {};
        var n, r, o = Za(e, t);
        if (Object.getOwnPropertySymbols) {
            var i = Object.getOwnPropertySymbols(e);
            for (r = 0; r < i.length; r++) {
                n = i[r], t.includes(n) || {}.propertyIsEnumerable.call(e, n) && (o[n] = e[n]);
            }
        }
        return o;
    }
    function Za(e, t) {
        if (null == e) return {};
        var n = {};
        for (var r in e) {
            if ({}.hasOwnProperty.call(e, r)) {
                if (t.includes(r)) continue;
                n[r] = e[r];
            }
        }
        return n;
    }
    // Exposed as static members of the Table class
    // Internal Helper Modules
    /** @public */
    /** @public */
    /** @public */    var el = {
        actions: i().arrayOf(i().element),
        actionsColumnWidth: i().number,
        children: i().node,
        dockOffset: i().number,
        dockScrollBar: i().bool,
        elementRef: i().oneOfType([ i().func, i().object ]),
        headType: i().oneOf([ "docked", "fixed", "inline" ]),
        innerStyle: i().object,
        onRequestToggleAllRows: i().func,
        onScroll: i().func,
        outerStyle: i().object,
        primaryColumnIndex: i().number,
        rowExpansion: i().oneOf([ "single", "multi", "controlled", "none" ]),
        rowSelection: i().oneOf([ "all", "some", "none" ]),
        stripeRows: i().bool,
        tableStyle: i().object,
        onRequestMoveColumn: i().func,
        onRequestMoveRow: i().func,
        onRequestResizeColumn: i().func,
        resizableFillLayout: i().bool
    };
    var tl = {
        actions: [],
        dockOffset: 0,
        headType: "inline",
        rowExpansion: "none",
        rowSelection: "none",
        resizableFillLayout: false,
        primaryColumnIndex: 0
    };
    var nl = function e(t) {
        return t === "inline";
    };
    var rl = function e(t) {
        return t === "docked";
    };
    var ol = function e(t) {
        return t === "fixed";
    };
    var il = function e(t) {
        var n = Ut();
        var r = t.getBoundingClientRect();
        return {
            top: r.top + n.pageYOffset,
            left: r.left + n.pageXOffset
        };
    };
    var al = function e(t) {
        var n, r;
        var o = Wt();
        if (t === undefined || t === null) {
            return undefined;
        }
        var i = (n = t.getEl()) === null || n === void 0 ? void 0 : n.children[0].children;
        var a = v()(i, o.activeElement);
        if (a > -1) {
            return {
                target: "headCell",
                index: a
            };
        }
        var l = (r = t.getEl()) === null || r === void 0 ? void 0 : r.querySelectorAll("[data-test=resize]");
        var c = v()(l, o.activeElement);
        if (c > -1) {
            return {
                target: "resizeButton",
                index: c
            };
        }
        return undefined;
    };
    var ll = function e(t, n) {
        return t.indexOf(n) + 1;
    };
    var cl = {
        coordinateGetter: l.sortableKeyboardCoordinates
    };
    var sl = [ c.restrictToParentElement ];
    var ul = {
        draggable: (0, T._)("To pick up a sortable row, press space or enter.\n        Use the up and down arrow keys to update the position of the row.\n        Press space or enter again to drop the row in its new position, or press escape to cancel.")
    };
    /**
 * @private
 * @private
 * Applies the provided `headFocusState` to the provided `head`.
 * @param head - A reference to a mounted `Head` component.
 * @param {Object} headFocusState
 * @param {String} headFocusState.target - Focus can be applied to a 'headCell' or a
 * 'resizeButton'.
 * @param {Number} headFocusState.index - The index of the element to set focus on.
 */    function dl(e, t) {
        var n, r;
        var o = t.target, i = t.index;
        if (false) {}
        var a;
        if (o === "headCell") {
            var l;
            a = e === null || e === void 0 ? void 0 : (l = e.getEl()) === null || l === void 0 ? void 0 : l.children[0].children[i];
        } else if (o === "resizeButton") {
            var c;
            a = e === null || e === void 0 ? void 0 : (c = e.getEl()) === null || c === void 0 ? void 0 : c.querySelectorAll("[data-test=resize]")[i];
        }
        if (false) {}
        (n = a) === null || n === void 0 ? void 0 : (r = n.focus) === null || r === void 0 ? void 0 : r.call(n);
    }
    function fl(e) {
        var t = e.actions, o = e.actionsColumnWidth, i = e.children, c = e.dockOffset, s = e.dockScrollBar, d = e.elementRef, p = e.headType, v = e.innerStyle, b = e.onRequestMoveColumn, h = e.onRequestMoveRow, m = e.onRequestResizeColumn, w = e.onRequestToggleAllRows, C = e.onScroll, k = e.outerStyle, j = e.primaryColumnIndex, T = e.resizableFillLayout, D = e.rowExpansion, _ = e.rowSelection, q = e.stripeRows, A = e.tableStyle, z = Qa(e, [ "actions", "actionsColumnWidth", "children", "dockOffset", "dockScrollBar", "elementRef", "headType", "innerStyle", "onRequestMoveColumn", "onRequestMoveRow", "onRequestResizeColumn", "onRequestToggleAllRows", "onScroll", "outerStyle", "primaryColumnIndex", "resizableFillLayout", "rowExpansion", "rowSelection", "stripeRows", "tableStyle" ]);
        var N = (0, n.useState)([]), H = Va(N, 2), M = H[0], L = H[1];
        var B = (0, n.useState)(), $ = Va(B, 2), W = $[0], K = $[1];
        var F = (0, n.useState)(), V = Va(F, 2), U = V[0], G = V[1];
        var X = (0, n.useState)(), Y = Va(X, 2), J = Y[0], Q = Y[1];
        var Z = (0, n.useState)(), ee = Va(Z, 2), te = ee[0], ne = ee[1];
 // states are used with dragging effect
                var re = (0, n.useState)(), oe = Va(re, 2), ie = oe[0], ae = oe[1];
        var le = (0, n.useState)(), ce = Va(le, 2), se = ce[0], ue = ce[1];
        var de = (0, n.useRef)(true);
        var fe = (0, n.useContext)(R.ScrollContainerContext);
        var pe = (0, a.useSensors)((0, a.useSensor)(a.MouseSensor, {}), (0, a.useSensor)(a.TouchSensor, {}), (0, 
        a.useSensor)(Zi, cl));
        var ve = (0, n.useRef)(null);
        var be = (0, n.useRef)(null);
        var xe = (0, n.useRef)();
        var Ce = (0, n.useRef)(null);
        var Se = (0, n.useRef)(null);
        var ke = (0, n.useRef)();
        var Oe = (0, n.useRef)(null);
        var Ee = (0, n.useRef)(null);
        var Re = I()(p);
        var je = [];
        var Ie = [];
        var Te = (0, n.useCallback)((function() {
            var e = Ut();
            if (nl(p)) {
                return;
            }
            var t = Ee.current;
            var n = be.current;
            var r = Oe.current;
            if (!r || !n) {
                return;
            }
            var o = n.getCellWidths();
            var i = n.getClientHeight();
            var a = il(r).top - e.pageYOffset - (i || 0) + r.offsetHeight;
            var l = Math.min(a, Number(c));
            ne(t === null || t === void 0 ? void 0 : t.clientWidth);
            G(r === null || r === void 0 ? void 0 : r.clientWidth);
            L(o);
            Q(l);
        }), [ c, p ]);
        (0, n.useEffect)((function() {
            var e = be.current;
            var t = Ce.current;
            if (e && t) {
                var n = e.getCellWidths();
                if (!y()(M, n)) {
                    Te();
                }
            }
            if (Re === "inline" && p === "inline") {
                Te();
            }
            if (false) {}
        }), [ M, p, Re, e, Te ]);
        var Pe = (0, n.useCallback)((function(e) {
            var t = Ee.current;
            C === null || C === void 0 ? void 0 : C(e);
            if ((ol(p) || rl(p)) && t) {
                K(-t.scrollLeft);
            }
            if (ve.current && ke.current !== "dockedScrollBar" && t) {
                ke.current = "container";
                ve.current.scrollLeft = t.scrollLeft;
            } else {
                ke.current = undefined;
            }
        }), [ p, C ]);
        var De = function e() {
            var t = Ee.current;
            if (ke.current !== "container" && t && ve.current) {
                ke.current = "dockedScrollBar";
                t.scrollLeft = ve.current.scrollLeft;
            } else {
                ke.current = undefined;
            }
        };
        var _e = x()(Te, 0);
        var qe = x()(Te, 50);
        (0, n.useEffect)((function() {
            // Using the return value of useCallback to recreate componentWillUnmount
            return function() {
                _e.cancel();
                qe.cancel();
            };
        }));
        var Ae = function e(t) {
            be.current = t;
        };
        var ze = function e(t) {
            if (t) {
                // On mount, focus the applicable docked head cell if a primary head cell was focused.
                if (xe.current) {
                    dl(t.getHead(), xe.current);
                    xe.current = undefined;
                }
            } else {
                var n;
                // On unmount, focus the applicable primary head cell if a docked head cell was focused.
                                var r = al((n = Ce.current) === null || n === void 0 ? void 0 : n.getHead());
                if (r) {
                    dl(be.current, r);
                }
            }
            Ce.current = t;
        };
        var Ne = function e(t) {
            Se.current = t;
        };
        var He = function e(t) {
            var n = Ee.current;
            if (!Se.current || !n || (0, E.keycode)(t.nativeEvent) !== "tab") {
                return;
            }
            var r = Se.current.scrollLeft;
            if (r !== 0) {
                Se.current.scrollLeft = 0;
                n.scrollLeft += r;
            }
        };
        var Me = function e(t, n) {
            var r, o;
            var i = n.index, a = n.columnId;
            var l = Wt();
            if (i === undefined) {
                return;
            }
            var c = D === "none" ? 1 : 2;
            var s = (r = Ee.current) === null || r === void 0 ? void 0 : r.querySelectorAll("thead th:nth-child(".concat(i + c, "), tbody td:nth-child(").concat(i + c, ")"));
            var d = l.createElement("div");
            // TODO: find a styled-components compliant way to do this
                        d.style["float"] = "left";
            d.style.position = "fixed";
            d.style.top = "-100";
            d.style.left = "0";
            d.style.maxHeight = "10px";
            d.style.overflow = "hidden";
            u()(s, (function(e) {
                var t = e.cloneNode(true);
 // TS: this seems safe to assume?
                                t.style.display = "block";
                t.style.width = "auto";
                d.appendChild(t);
            }));
            l.body.appendChild(d);
            m === null || m === void 0 ? void 0 : m(t, {
                index: i,
                columnId: a,
                width: d.clientWidth + 1
            });
            (o = d.parentNode) === null || o === void 0 ? void 0 : o.removeChild(d);
        };
        var Le = (0, n.useCallback)((function(e) {
            ue(e);
        }), [ ue ]);
        var Be = x()(Le, 100, {
            trailing: false
        });
        var $e = function e(t) {
            t.preventDefault();
 // necessary for the drop event to fire
                        if (t.dataTransfer) {
                t.dataTransfer.dropEffect = "move";
            }
            Be(t.clientX);
        };
        var We = function e(t) {
            t.preventDefault();
 // necessary for the drop event to fire
                        ue(t.clientX);
        };
        var Ke = function e(t) {
            t.preventDefault();
 // necessary to prevent cell from animating to original position;
                };
        var Fe = function e() {
            ue(undefined);
            // eslint-disable-next-line @typescript-eslint/no-use-before-define
                        Ve();
        };
        var Ve = function e() {
            var t = Ut();
            t.removeEventListener("dragenter", We);
            t.removeEventListener("dragover", $e);
            t.removeEventListener("drop", Ke);
            t.removeEventListener("dragend", Fe);
            Be.cancel();
 // cancel throttle
                };
        (0, n.useEffect)((function() {
            // Using the return value of useCallback to recreate componentWillUnmount
            return function() {
                Ve();
            };
            // The warning can be safely ignored here, as we intend for the component to run only once when it unmounts,
            // rather than rerunning whenever dependencies change.
            // eslint-disable-next-line react-hooks/exhaustive-deps
                }), []);
        var Ue = function e(t) {
            var n = t.dragIndex;
            var r = Ut();
            ae(n);
            r.addEventListener("dragenter", We);
            r.addEventListener("dragover", $e);
            r.addEventListener("drop", Ke);
            r.addEventListener("dragend", Fe);
        };
        var Ge = function e(t) {
            var n = t.active, r = t.over;
            de.current = true;
            if (r && n.id !== r.id) {
                var o;
                var i = Ie.indexOf(n.id);
                var a = Ie.indexOf(r === null || r === void 0 ? void 0 : r.id);
                var l = (o = je[i]) === null || o === void 0 ? void 0 : o.props.dataId;
                h === null || h === void 0 ? void 0 : h({
                    fromIndex: i,
                    toIndex: a,
                    dataId: l
                });
            }
        };
        var Xe = function e() {
            de.current = true;
        };
        var Ye = function e(r) {
            var i = n.Children.toArray(r.props.children).filter(n.isValidElement);
            var a = t === null || t === void 0 ? void 0 : t.filter(n.isValidElement);
            var l =  (0, n.cloneElement)(r, {
                actions: a,
                actionsColumnWidth: o,
                dragIndex: ie,
                dragPosition: se,
                hasInfoColumn: D !== "none",
                hasDragColumn: !!h,
                onAutosizeColumn: Me,
                onDragStart: b ? Ue : undefined,
                onRequestMoveColumn: b,
                onRequestResizeColumn: m,
                onRequestToggleAllRows: w,
                ref: Ae,
                rowSelection: _
            }, i);
            return l;
        };
        var Je = function e(r) {
            var i = (t === null || t === void 0 ? void 0 : t.filter(n.isValidElement).length) > 0;
            var a = false;
            n.Children.toArray(r === null || r === void 0 ? void 0 : r.props.children).filter(n.isValidElement).forEach((function(e, t) {
                var r, o, i;
                var l = e.key || ((r = e.props) === null || r === void 0 ? void 0 : r.dataId) || t + 1;
                if (((o = e.props) === null || o === void 0 ? void 0 : o.actionPrimary) || ((i = e.props) === null || i === void 0 ? void 0 : i.actionsSecondary)) {
                    a = true;
                }
                je.push( (0, n.cloneElement)(e, {
                    index: t,
                    dataId: l
                }));
                Ie.push(l);
            }));
            var l = i || a || !!o;
            
            return (0, n.cloneElement)(r, {
                actions: l,
                movableColumns: !!b,
                onRequestMoveRow: h,
                primaryColumnIndex: j,
                rowExpansion: D,
                stripeRows: q
            }, je);
        };
        var Qe = function e() {
            var t = Ee.current;
            var n = Ut();
            if (!rl(p) || !Oe.current || !be.current || !t) {
                return false;
            }
            var r = il(t).top;
            return n.pageYOffset >= r - (c || 0);
        };
        var Ze = function e() {
            var t = Ut();
            var n = Ee.current;
            if (!s || !Oe.current || !n) {
                return false;
            }
            var r = n.getBoundingClientRect();
            return r.bottom > t.innerHeight && r.top < t.innerHeight;
        };
        var et = function e(t, o) {
            if (Qe()) {
                // FIXME: handle inline
                // Save the current head focus state so that it can be applied to the docked version
                // after the `HeadTable` mounts.
                xe.current = al(be.current);
                if (M === undefined || U === undefined || J === undefined || te === undefined) {
                    return false;
                }
                var i =  (0, n.cloneElement)(t, {
                    elementRef: null
                });
                
                return r().createElement(Oa, {
                    headType: "docked",
                    tHead: i,
                    cellWidths: M,
                    horizontalOffset: W,
                    tableWidth: U,
                    top: J,
                    width: te,
                    tableStyle: A,
                    isFixedColumn: o,
                    ref: ze,
                    onKeyUp: He,
                    elementRef: Ne,
                    hasDragColumn: !!h,
                    hasRowExpansion: D !== "none",
                    hasRowSelection: !!w
                });
            }
            return false;
        };
        var tt = function e() {
            var t = Ut();
            if (!Ze()) {
                return false;
            }
            var n = 0;
            if (ve.current && be.current && Oe.current && be.current) {
                var o, i, a, l;
                var c = t.innerHeight - (// eslint-disable-next-line no-unsafe-optional-chaining
                (o = Oe.current) === null || o === void 0 ? void 0 : o.getBoundingClientRect().top) - ((i = (a = be.current) === null || a === void 0 ? void 0 : (l = a.getEl()) === null || l === void 0 ? void 0 : l.offsetHeight) !== null && i !== void 0 ? i : 0);
                n = Math.min(c - ve.current.offsetHeight, 0);
            }
            
            return r().createElement(ge, {
                style: {
                    width: te,
                    marginBottom: n
                },
                onScroll: De,
                "data-test": "docked-scroll-bar",
                ref: ve
            },  r().createElement(we, {
                style: {
                    width: U
                },
                "data-test": "docked-scroll-content"
            }));
        };
        var nt = function e() {
            var t = be.current;
            var n = Ee.current;
            /**
     * there is slightly less space for the table than tableContainer's width,
     * because there is a 1 px border added to every column but the first
     */            if (t) {
                var r = t.getCellWidths();
                var o = r.length;
                var i = n === null || n === void 0 ? void 0 : n.clientWidth;
                if (i != null) {
                    var a = Math.max(0, o - 1);
                    return i - a;
                }
            }
            return null;
        };
        var rt;
        var ot;
        var it;
        var at = !!m;
        n.Children.toArray(i).forEach((function(e) {
            var t = e.type.splunkUiType;
            if (t === "Table.Head") {
                rt = Ye(e);
                if (!at) {
                    // if all the HeadCells are fixed width, then the table is fixed.
                    at = !n.Children.toArray(e.props.children).filter(n.isValidElement).some((function(e) {
                        return !f()(e.props, "width");
                    }));
                }
            } else if (t === "Table.Body") {
                ot = Je(e);
            } else if (t === "Table.Caption") {
                // the html spec mandates that a caption must be the first table child.
                // catch the caption here so that it can be placed first later. note: a
                // caption can be placed on the bottom side of a table by adjusting the
                // caption's side prop.
                it = e;
            }
        }));
        Ea(rt, "A Table.Head is required.");
        var lt = et(rt, at);
        // When a `headTable` is used, suppress focus interactions in the primary `Head`. Focus
        // interactions will be handled by the overlaid `headTable` instead.
                var ct = n.Children.toArray(rt.props.children).filter(n.isValidElement).map((function(e) {
            
            // TS: onClick is different for regular/dropdown head cells, that's ok
            return (0, n.cloneElement)(e, {
                visible: !lt
            });
        }));
        rt =  (0, n.cloneElement)(rt, {}, ct);
        var st = fe || Ut();
        var ut = ol(p) ? Ee.current : st;
        if (T) {
            at = false;
        }
        var dt = nt();
        var ft = (0, n.useMemo)((function() {
            return {
                headType: p,
                resizableFillLayout: T,
                tableContainerWidthWithoutBorders: dt
            };
        }), [ p, T, dt ]);
        var pt = {
            onDragStart: function e(t) {
                var n = t.active.id;
                return (0, P.sprintf)("Picked up sortable row in position %d of %d.", ll(Ie, n), Ie.length);
            },
            onDragOver: function e(t) {
                var n = t.active, r = t.over;
                // In this specific use-case, the picked up item's `id` is always the same as the first `over` id.
                // The first `onDragOver` event therefore doesn't need to be announced, because it is called
                // immediately after the `onDragStart` announcement and is redundant.
                                if (de.current) {
                    de.current = false;
                    return undefined;
                }
                return r ? (0, P.sprintf)("Row moved from position %d to position %d of %d.", ll(Ie, n.id), ll(Ie, r.id), Ie.length) : undefined;
            },
            onDragEnd: function e(t) {
                var n = t.over;
                return n ? (0, P.sprintf)("Row dropped at position %d of %d.", ll(Ie, n.id), Ie.length) : undefined;
            },
            onDragCancel: function e(t) {
                var n = t.active.id;
                return (0, P.sprintf)("Row returned to it's starting position of %d.", ll(Ie, n));
            }
        };
        
        return r().createElement(ye, Ba({
            "data-test": "table",
            ref: d,
            style: k,
            "data-test-row-selection": w ? _ : undefined
        }, g()(z, [].concat($a(Object.keys(el)), [ "style" ]))),  r().createElement(O(), {
            target: Ut(),
            eventType: "scroll",
            listener: _e,
            options: {
                passive: false,
                capture: true
            }
        }),  r().createElement(S(), {
            handleWidth: true,
            onResize: qe
        }),  r().createElement(mn.Provider, {
            value: ft
        }, lt,  r().createElement(he, {
            onScroll: Pe,
            ref: Ee,
            style: v
        },  r().createElement(R.ScrollContainerProvider, {
            value: ut
        },  r().createElement(a.DndContext, {
            accessibility: {
                screenReaderInstructions: ul,
                announcements: pt
            },
            sensors: pe,
            onDragEnd: Ge,
            onDragCancel: Xe,
            collisionDetection: a.closestCenter,
            modifiers: sl
        },  r().createElement(l.SortableContext, {
            items: Ie,
            strategy: l.verticalListSortingStrategy
        },  r().createElement(me, {
            ref: Oe,
            "data-test": "main-table",
            style: A,
            "data-fixed-column": at ? "true" : undefined,
            $resizableFillLayout: T
        }, it, rt, ot))))), tt()));
    }
    fl.propTypes = el;
    var pl =  function(e) {
        Pa(n, e);
        var t = _a(n);
        function n() {
            ja(this, n);
            return t.apply(this, arguments);
        }
        Ta(n, [ {
            key: "render",
            // @docs-props-type TablePropsBase
            value: function e() {
                
                return r().createElement(fl, this.props);
            }
        } ]);
        return n;
    }(n.Component);
    Ha(pl, "propTypes", el);
    Ha(pl, "defaultProps", tl);
    Ha(pl, "Caption", Re);
    Ha(pl, "Head", $o);
    Ha(pl, "HeadCell", Wn);
    Ha(pl, "HeadDropdownCell", wi);
    Ha(pl, "Body", be);
    Ha(pl, "Row", yo);
    Ha(pl, "Cell", Ye);
    pl.Caption = Re;
    pl.Head = $o;
    pl.HeadCell = Wn;
    pl.HeadDropdownCell = wi;
    pl.Body = be;
    pl.Row = yo;
    pl.Cell = Ye;
    /* harmony default export */    const vl = pl;
    // CONCATENATED MODULE: ./src/Table/index.ts
    module.exports = t;
    /******/})();