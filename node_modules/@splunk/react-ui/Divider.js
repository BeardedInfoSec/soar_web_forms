/******/ (() => {
    // webpackBootstrap
    /******/ "use strict";
    /******/ // The require scope
    /******/    var e = {};
    /******/
    /************************************************************************/
    /******/ /* webpack/runtime/compat get default export */
    /******/    (() => {
        /******/ // getDefaultExport function for compatibility with non-harmony modules
        /******/ e.n = r => {
            /******/ var t = r && r.__esModule ? 
            /******/ () => r["default"]
            /******/ : () => r
            /******/;
            e.d(t, {
                a: t
            });
            /******/            return t;
            /******/        };
        /******/    })();
    /******/
    /******/ /* webpack/runtime/define property getters */
    /******/    (() => {
        /******/ // define getter functions for harmony exports
        /******/ e.d = (r, t) => {
            /******/ for (var o in t) {
                /******/ if (e.o(t, o) && !e.o(r, o)) {
                    /******/ Object.defineProperty(r, o, {
                        enumerable: true,
                        get: t[o]
                    });
                    /******/                }
                /******/            }
            /******/        };
        /******/    })();
    /******/
    /******/ /* webpack/runtime/hasOwnProperty shorthand */
    /******/    (() => {
        /******/ e.o = (e, r) => Object.prototype.hasOwnProperty.call(e, r)
        /******/;
    })();
    /******/
    /******/ /* webpack/runtime/make namespace object */
    /******/    (() => {
        /******/ // define __esModule on exports
        /******/ e.r = e => {
            /******/ if (typeof Symbol !== "undefined" && Symbol.toStringTag) {
                /******/ Object.defineProperty(e, Symbol.toStringTag, {
                    value: "Module"
                });
                /******/            }
            /******/            Object.defineProperty(e, "__esModule", {
                value: true
            });
            /******/        };
        /******/    })();
    /******/
    /************************************************************************/    var r = {};
    // ESM COMPAT FLAG
        e.r(r);
    // EXPORTS
        e.d(r, {
        default: () => /* reexport */ h
    });
    // CONCATENATED MODULE: external "react"
    const t = require("react");
    var o =  e.n(t);
    // CONCATENATED MODULE: external "prop-types"
    const n = require("prop-types");
    var i =  e.n(n);
    // CONCATENATED MODULE: external "styled-components"
    const l = require("styled-components");
    var a =  e.n(l);
    // CONCATENATED MODULE: external "@splunk/themes"
    const c = require("@splunk/themes");
    // CONCATENATED MODULE: ./src/Divider/DividerStyles.ts
    var u = a().hr.withConfig({
        displayName: "DividerStyles__StyledRule",
        componentId: "gl6kyz-0"
    })([ "", ";", ";border-color:", ";" ], c.mixins.reset("block"), (0, c.pickVariant)("$orientation", {
        horizontal: (0, l.css)([ "border-top-style:solid;border-width:1px;" ]),
        vertical: (0, l.css)([ "display:inline;border-left-style:solid;border-width:1px;" ])
    }), (0, c.pick)({
        enterprise: c.variables.borderColor,
        prisma: c.variables.neutral200
    }));
    // CONCATENATED MODULE: ./src/Divider/Divider.tsx
    function f(e) {
        "@babel/helpers - typeof";
        return f = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
            return typeof e;
        } : function(e) {
            return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
        }, f(e);
    }
    function s() {
        return s = Object.assign ? Object.assign.bind() : function(e) {
            for (var r = 1; r < arguments.length; r++) {
                var t = arguments[r];
                for (var o in t) {
                    ({}).hasOwnProperty.call(t, o) && (e[o] = t[o]);
                }
            }
            return e;
        }, s.apply(null, arguments);
    }
    function p(e, r) {
        var t = Object.keys(e);
        if (Object.getOwnPropertySymbols) {
            var o = Object.getOwnPropertySymbols(e);
            r && (o = o.filter((function(r) {
                return Object.getOwnPropertyDescriptor(e, r).enumerable;
            }))), t.push.apply(t, o);
        }
        return t;
    }
    function b(e) {
        for (var r = 1; r < arguments.length; r++) {
            var t = null != arguments[r] ? arguments[r] : {};
            r % 2 ? p(Object(t), !0).forEach((function(r) {
                y(e, r, t[r]);
            })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : p(Object(t)).forEach((function(r) {
                Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));
            }));
        }
        return e;
    }
    function y(e, r, t) {
        return (r = d(r)) in e ? Object.defineProperty(e, r, {
            value: t,
            enumerable: !0,
            configurable: !0,
            writable: !0
        }) : e[r] = t, e;
    }
    function d(e) {
        var r = v(e, "string");
        return "symbol" == f(r) ? r : r + "";
    }
    function v(e, r) {
        if ("object" != f(e) || !e) return e;
        var t = e[Symbol.toPrimitive];
        if (void 0 !== t) {
            var o = t.call(e, r || "default");
            if ("object" != f(o)) return o;
            throw new TypeError("@@toPrimitive must return a primitive value.");
        }
        return ("string" === r ? String : Number)(e);
    }
    function m(e, r) {
        if (null == e) return {};
        var t, o, n = O(e, r);
        if (Object.getOwnPropertySymbols) {
            var i = Object.getOwnPropertySymbols(e);
            for (o = 0; o < i.length; o++) {
                t = i[o], r.includes(t) || {}.propertyIsEnumerable.call(e, t) && (n[t] = e[t]);
            }
        }
        return n;
    }
    function O(e, r) {
        if (null == e) return {};
        var t = {};
        for (var o in e) {
            if ({}.hasOwnProperty.call(e, o)) {
                if (r.includes(o)) continue;
                t[o] = e[o];
            }
        }
        return t;
    }
    var g = {
        elementRef: i().oneOfType([ i().func, i().object ]),
        decorative: i().bool,
        orientation: i().oneOf([ "horizontal", "vertical" ])
    };
    function j(e) {
        var r = e.elementRef, t = e.decorative, n = t === void 0 ? false : t, i = e.orientation, l = i === void 0 ? "horizontal" : i, a = m(e, [ "elementRef", "decorative", "orientation" ]);
        // @docs-props-type DividerPropsBase
                var c = b({
            "data-test": "divider",
            ref: r,
            $orientation: l
        }, a);
        // aria-orientation is not needed when decorative and div is used to have no semantics
                if (n) {
            
            return o().createElement(u, s({
                as: "div"
            }, c));
        }
        
        return o().createElement(u, s({
            "aria-orientation": l
        }, c));
    }
    j.propTypes = g;
    /* harmony default export */    const h = j;
    // CONCATENATED MODULE: ./src/Divider/index.ts
    module.exports = r;
    /******/})();