"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.clearGetThemeCache = exports["default"] = void 0;
var _memoize = _interopRequireDefault(require("lodash/memoize"));
var _enterprise = _interopRequireDefault(require("./enterprise"));
var _prisma = _interopRequireDefault(require("./prisma"));
var _utils = require("./utils");
function _interopRequireDefault(e) { return e && e.__esModule ? e : { "default": e }; }
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
/**
 * **NOTE:** Use cases for this function are limited. Instead, use `useSplunkTheme` in React components and `variables` in styled-components' CSS.
 * This function is for use outside of React and styled-components.
 * @file
 */

/**
 * The `getTheme` function returns all theme variables for a given theme. This function is memoized.
 *
 * ```js
 * import getTheme from '@splunk/themes/getTheme';
 *
 * const baseTheme = getTheme({family: 'prisma', colorScheme: 'light', density: 'compact' });
 *
 * console.log(baseTheme.family, baseTheme.focusColor);
 * ```
 * @param {object} [options] - The attributes of the theme as defined below.
 * @param {'prisma' | 'enterprise'} [options.family = 'prisma']
 * @param {'dark' | 'light'} [options.colorScheme = 'dark']
 * @param {'comfortable' | 'compact'} [options.density = 'comfortable']
 * @param {Boolean} [options.isPrisma = true]
 * @param {Boolean} [options.isEnterprise = false]
 * @param {Boolean} [options.isComfortable = true]
 * @param {Boolean} [options.isCompact = false]
 * @param {Boolean} [options.isDark = true]
 * @param {Boolean} [options.isLight = false]
 * @returns {object} A flat object of all variables and their values.
 * @public
 */
function getTheme() {
  var settings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  var _addThemeDefaults = (0, _utils.addThemeDefaults)(settings),
    family = _addThemeDefaults.family,
    colorScheme = _addThemeDefaults.colorScheme,
    density = _addThemeDefaults.density;
  var isPrisma = family === 'prisma';
  var isEnterprise = family === 'enterprise';
  var isComfortable = density === 'comfortable';
  var isCompact = density === 'compact';
  var isDark = colorScheme === 'dark';
  var isLight = colorScheme === 'light';
  return Object.freeze(_objectSpread({
    colorScheme: colorScheme,
    density: density,
    family: family,
    isPrisma: isPrisma,
    isEnterprise: isEnterprise,
    isComfortable: isComfortable,
    isCompact: isCompact,
    isDark: isDark,
    isLight: isLight
  }, family === 'enterprise' ? (0, _enterprise["default"])({
    colorScheme: colorScheme,
    density: density
  }) : (0, _prisma["default"])({
    colorScheme: colorScheme,
    density: density
  })));
}
var getThemeMemoized = (0, _memoize["default"])(getTheme, function () {
  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
    family = _ref.family,
    colorScheme = _ref.colorScheme,
    density = _ref.density;
  return "".concat(family).concat(colorScheme).concat(density);
});
var clearGetThemeCache = function clearGetThemeCache() {
  var _getThemeMemoized$cac, _getThemeMemoized$cac2;
  return (_getThemeMemoized$cac = (_getThemeMemoized$cac2 = getThemeMemoized.cache).clear) === null || _getThemeMemoized$cac === void 0 ? void 0 : _getThemeMemoized$cac.call(_getThemeMemoized$cac2);
};
exports.clearGetThemeCache = clearGetThemeCache;
var _default = getThemeMemoized;
exports["default"] = _default;