"use strict";

function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _react = require("react");
var _styledComponents = require("styled-components");
var _utils = require("./utils");
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var s = Object.getOwnPropertySymbols(e); for (r = 0; r < s.length; r++) { o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } } return i; }
function _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) { if ({}.hasOwnProperty.call(r, n)) { if (e.includes(n)) continue; t[n] = r[n]; } } return t; }
/**
 * React hook that allows theme variables to be easily used within a React functional component.
 * This includes the basic configuration of `family`, `colorScheme` and `density`,
 * as well as all the specific variables available in that theme.
 *
 * If no data `SplunkThemeProvider` was configured, the Prisma Dark Comfortable theme is returned.
 *
 * ```
 * import useSplunkTheme from '@splunk/themes/useSplunkTheme';
 * ...
 * export function() {
 *     const { isComfortable, focusColor } = useSplunkTheme();
 *
 *     const style = {
 *         color: focusColor,
 *         padding: isComfortable ? '10px' : '5px',
 *     }
 *
 *     ...
 *
 *     return (
 *         <div style={style}>
 *             Hello
 *         </div>
 *     )
 * }
 * ```
 * @public
 */
var useSplunkTheme = function useSplunkTheme() {
  var _ref = (0, _react.useContext)(_styledComponents.ThemeContext) || {},
    _ref$splunkThemeV = _ref.splunkThemeV1,
    splunkThemeV1 = _ref$splunkThemeV === void 0 ? {} : _ref$splunkThemeV,
    rest = _objectWithoutProperties(_ref, ["splunkThemeV1"]);
  var family = splunkThemeV1.family,
    colorScheme = splunkThemeV1.colorScheme,
    density = splunkThemeV1.density,
    customizer = splunkThemeV1.customizer;
  return _objectSpread(_objectSpread({}, rest), (0, _utils.getCustomizedTheme)({
    family: family,
    colorScheme: colorScheme,
    density: density
  }, customizer));
};
var _default = useSplunkTheme;
exports["default"] = _default;