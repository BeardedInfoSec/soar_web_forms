"use strict";

function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
var _react = _interopRequireDefault(require("react"));
var _react2 = require("@testing-library/react");
var _styledComponents = _interopRequireWildcard(require("styled-components"));
var _SplunkThemeProvider = _interopRequireDefault(require("@splunk/themes/SplunkThemeProvider"));
require("jest-styled-components");
var _typography = _interopRequireWildcard(require("../typography"));
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { "default": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) { if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } } return n["default"] = e, t && t.set(e, n), n; }
function _interopRequireDefault(e) { return e && e.__esModule ? e : { "default": e }; }
function _templateObject7() {
  var data = _taggedTemplateLiteral(["\n            ", "\n            ", ";\n            ", ";\n        "]);
  _templateObject7 = function _templateObject7() {
    return data;
  };
  return data;
}
function _templateObject6() {
  var data = _taggedTemplateLiteral(["\n            ", "\n        "]);
  _templateObject6 = function _templateObject6() {
    return data;
  };
  return data;
}
function _templateObject5() {
  var data = _taggedTemplateLiteral(["\n            ", "\n        "]);
  _templateObject5 = function _templateObject5() {
    return data;
  };
  return data;
}
function _templateObject4() {
  var data = _taggedTemplateLiteral(["\n            ", "\n        "]);
  _templateObject4 = function _templateObject4() {
    return data;
  };
  return data;
}
function _templateObject3() {
  var data = _taggedTemplateLiteral(["\n            ", "\n        "]);
  _templateObject3 = function _templateObject3() {
    return data;
  };
  return data;
}
function _templateObject2() {
  var data = _taggedTemplateLiteral(["\n                    ", "\n                "]);
  _templateObject2 = function _templateObject2() {
    return data;
  };
  return data;
}
function _templateObject() {
  var data = _taggedTemplateLiteral(["\n            ", "\n        "]);
  _templateObject = function _templateObject() {
    return data;
  };
  return data;
}
function _taggedTemplateLiteral(e, t) { return t || (t = e.slice(0)), Object.freeze(Object.defineProperties(e, { raw: { value: Object.freeze(t) } })); } /* eslint-env jest */
describe('typography', function () {
  function ThemeSettingsList(_ref) {
    var family = _ref.family,
      Component = _ref.component;
    return /*#__PURE__*/_react["default"].createElement(_react["default"].Fragment, null, /*#__PURE__*/_react["default"].createElement(_SplunkThemeProvider["default"], {
      family: family,
      colorScheme: "dark",
      density: "comfortable"
    }, /*#__PURE__*/_react["default"].createElement(Component, null, family, " dark comfortable")), /*#__PURE__*/_react["default"].createElement(_SplunkThemeProvider["default"], {
      family: family,
      colorScheme: "light",
      density: "comfortable"
    }, /*#__PURE__*/_react["default"].createElement(Component, null, family, " light comfortable")), /*#__PURE__*/_react["default"].createElement(_SplunkThemeProvider["default"], {
      family: family,
      colorScheme: "dark",
      density: "compact"
    }, /*#__PURE__*/_react["default"].createElement(Component, null, family, " dark compact")), /*#__PURE__*/_react["default"].createElement(_SplunkThemeProvider["default"], {
      family: family,
      colorScheme: "light",
      density: "compact"
    }, /*#__PURE__*/_react["default"].createElement(Component, null, family, " light compact")));
  }
  describe('uses default values based on theme family', function () {
    var Component = _styledComponents["default"].p(_templateObject(), (0, _typography["default"])());
    it('prisma', function () {
      var _render = (0, _react2.render)(/*#__PURE__*/_react["default"].createElement(ThemeSettingsList, {
          family: "prisma",
          component: Component
        })),
        container = _render.container;
      expect(container).toMatchInlineSnapshot("\n                .c0 {\n                  color: #b5b5b5;\n                  font-family: 'Splunk Platform Sans','Splunk Data Sans',Roboto,Droid,'Helvetica Neue',Helvetica,Arial,sans-serif;\n                  font-size: 14px;\n                  font-weight: normal;\n                  line-height: 20px;\n                }\n\n                .c1 {\n                  color: #4d4d4d;\n                  font-family: 'Splunk Platform Sans','Splunk Data Sans',Roboto,Droid,'Helvetica Neue',Helvetica,Arial,sans-serif;\n                  font-size: 14px;\n                  font-weight: normal;\n                  line-height: 20px;\n                }\n\n                <div>\n                  <p\n                    class=\"c0\"\n                  >\n                    prisma\n                     dark comfortable\n                  </p>\n                  <p\n                    class=\"c1\"\n                  >\n                    prisma\n                     light comfortable\n                  </p>\n                  <p\n                    class=\"c0\"\n                  >\n                    prisma\n                     dark compact\n                  </p>\n                  <p\n                    class=\"c1\"\n                  >\n                    prisma\n                     light compact\n                  </p>\n                </div>\n            ");
    });
    it('enterprise', function () {
      var _render2 = (0, _react2.render)(/*#__PURE__*/_react["default"].createElement(ThemeSettingsList, {
          family: "enterprise",
          component: Component
        })),
        container = _render2.container;
      expect(container).toMatchInlineSnapshot("\n                .c0 {\n                  color: #ffffff;\n                  font-family: 'Splunk Platform Sans','Proxima Nova',Roboto,Droid,'Helvetica Neue',Helvetica,Arial,sans-serif;\n                  font-size: 14px;\n                  font-weight: normal;\n                  line-height: 20px;\n                }\n\n                .c1 {\n                  color: #3c444d;\n                  font-family: 'Splunk Platform Sans','Proxima Nova',Roboto,Droid,'Helvetica Neue',Helvetica,Arial,sans-serif;\n                  font-size: 14px;\n                  font-weight: normal;\n                  line-height: 20px;\n                }\n\n                .c2 {\n                  color: #ffffff;\n                  font-family: 'Splunk Platform Sans','Proxima Nova',Roboto,Droid,'Helvetica Neue',Helvetica,Arial,sans-serif;\n                  font-size: 12px;\n                  font-weight: normal;\n                  line-height: 20px;\n                }\n\n                .c3 {\n                  color: #3c444d;\n                  font-family: 'Splunk Platform Sans','Proxima Nova',Roboto,Droid,'Helvetica Neue',Helvetica,Arial,sans-serif;\n                  font-size: 12px;\n                  font-weight: normal;\n                  line-height: 20px;\n                }\n\n                <div>\n                  <p\n                    class=\"c0\"\n                  >\n                    enterprise\n                     dark comfortable\n                  </p>\n                  <p\n                    class=\"c1\"\n                  >\n                    enterprise\n                     light comfortable\n                  </p>\n                  <p\n                    class=\"c2\"\n                  >\n                    enterprise\n                     dark compact\n                  </p>\n                  <p\n                    class=\"c3\"\n                  >\n                    enterprise\n                     light compact\n                  </p>\n                </div>\n            ");
    });
  });
  describe('support variants in each theme', function () {
    function testTypographyVariantForThemeFamily(variant, family) {
      it("".concat(variant), function () {
        var Component = _styledComponents["default"].p(_templateObject2(), (0, _typography["default"])(variant));
        var _render3 = (0, _react2.render)(/*#__PURE__*/_react["default"].createElement(ThemeSettingsList, {
            family: family,
            component: Component
          })),
          container = _render3.container;
        expect(container).toMatchSnapshot();
      });
    }
    describe('prisma', function () {
      _typography.typographyVariants.forEach(function (variant) {
        return testTypographyVariantForThemeFamily(variant, 'prisma');
      });
    });
    describe('enterprise', function () {
      _typography.typographyVariants.forEach(function (variant) {
        return testTypographyVariantForThemeFamily(variant, 'enterprise');
      });
    });
  });
  it('merges parameters with variant values', function () {
    var Component = _styledComponents["default"].p(_templateObject3(), (0, _typography["default"])('body', {
      color: 'muted',
      family: 'monospace'
    }));
    var _render4 = (0, _react2.render)(/*#__PURE__*/_react["default"].createElement(Component, null)),
      container = _render4.container;
    expect(container.firstChild).toMatchInlineSnapshot("\n            .c0 {\n              margin: 0;\n              padding: 0;\n              color: #909090;\n              font-family: 'Splunk Platform Mono','Roboto Mono',Consolas,'Droid Sans Mono',Monaco,'Courier New',Courier,monospace;\n              font-size: 14px;\n              font-weight: normal;\n              line-height: 20px;\n            }\n\n            <p\n              class=\"c0\"\n            />\n        ");
  });
  it('allows a variants values to be overridden', function () {
    var Component = _styledComponents["default"].p(_templateObject4(), (0, _typography["default"])('body', {
      color: 'muted',
      family: 'monospace',
      lineHeight: 64,
      size: 56,
      weight: 'extraBold',
      withReset: false
    }));
    var _render5 = (0, _react2.render)(/*#__PURE__*/_react["default"].createElement(Component, null)),
      container = _render5.container;
    expect(container.firstChild).toMatchInlineSnapshot("\n            .c0 {\n              color: #909090;\n              font-family: 'Splunk Platform Mono','Roboto Mono',Consolas,'Droid Sans Mono',Monaco,'Courier New',Courier,monospace;\n              font-size: 56px;\n              font-weight: 900;\n              line-height: 64px;\n            }\n\n            <p\n              class=\"c0\"\n            />\n        ");
  });
  it('allows default values to be overridden with params', function () {
    var Component = _styledComponents["default"].p(_templateObject5(), (0, _typography["default"])({
      color: 'muted',
      family: 'monospace',
      lineHeight: 64,
      size: 56,
      weight: 'extraBold',
      withReset: false
    }));
    var _render6 = (0, _react2.render)(/*#__PURE__*/_react["default"].createElement(Component, null)),
      container = _render6.container;
    expect(container.firstChild).toMatchInlineSnapshot("\n            .c0 {\n              color: #909090;\n              font-family: 'Splunk Platform Mono','Roboto Mono',Consolas,'Droid Sans Mono',Monaco,'Courier New',Courier,monospace;\n              font-size: 56px;\n              font-weight: 900;\n              line-height: 64px;\n            }\n\n            <p\n              class=\"c0\"\n            />\n        ");
  });
  it('transforms params that are shorthand properly to CSS', function () {
    var Component = _styledComponents["default"].p(_templateObject6(), (0, _typography["default"])({
      color: 'muted',
      family: 'monospace',
      lineHeight: 64,
      size: 56,
      weight: 'extraBold',
      withReset: false
    }));
    var _render7 = (0, _react2.render)(/*#__PURE__*/_react["default"].createElement(Component, null)),
      container = _render7.container;
    expect(container.firstChild).toMatchInlineSnapshot("\n            .c0 {\n              color: #909090;\n              font-family: 'Splunk Platform Mono','Roboto Mono',Consolas,'Droid Sans Mono',Monaco,'Courier New',Courier,monospace;\n              font-size: 56px;\n              font-weight: 900;\n              line-height: 64px;\n            }\n\n            <p\n              class=\"c0\"\n            />\n        ");
  });
  it.skip('passes TS verification', function () {
    (0, _typography["default"])();
    (0, _typography["default"])({});
    (0, _typography["default"])('title1');
    (0, _typography["default"])('title1', {
      color: 'disabled'
    });
    (0, _typography["default"])({
      family: 'monospace'
    });

    // @ts-expect-error
    (0, _typography["default"])('foo');
    // @ts-expect-error
    (0, _typography["default"])({
      family: 'monospace'
    }, true);
    // @ts-expect-error
    (0, _typography["default"])({
      family: 'monospace'
    }, {
      color: 'disabled'
    });
    // @ts-expect-error
    (0, _typography["default"])('');
    // @ts-expect-error
    (0, _typography["default"])({
      variant: 'title1'
    });
  });
});
describe('passes TS verification', function () {
  it.skip('allows mixins in styled-components css', function () {
    /* eslint-disable-next-line @typescript-eslint/no-unused-expressions */
    (0, _styledComponents.css)(_templateObject7(), (0, _typography["default"])('title1'), (0, _typography["default"])('title1', {
      color: 'disabled'
    }), (0, _typography["default"])({
      family: 'monospace'
    }));
  });
});