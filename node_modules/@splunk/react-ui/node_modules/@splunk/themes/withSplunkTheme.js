"use strict";

function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _react = _interopRequireWildcard(require("react"));
var _styledComponents = require("styled-components");
var _utils = require("./utils");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { "default": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) { if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } } return n["default"] = e, t && t.set(e, n), n; }
function _extends() { return _extends = Object.assign ? Object.assign.bind() : function (n) { for (var e = 1; e < arguments.length; e++) { var t = arguments[e]; for (var r in t) { ({}).hasOwnProperty.call(t, r) && (n[r] = t[r]); } } return n; }, _extends.apply(null, arguments); }
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function _objectWithoutProperties(e, t) { if (null == e) return {}; var o, r, i = _objectWithoutPropertiesLoose(e, t); if (Object.getOwnPropertySymbols) { var s = Object.getOwnPropertySymbols(e); for (r = 0; r < s.length; r++) { o = s[r], t.includes(o) || {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]); } } return i; }
function _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) { if ({}.hasOwnProperty.call(r, n)) { if (e.includes(n)) continue; t[n] = r[n]; } } return t; }
// thx: https://davidgomes.com/pick-omit-over-union-types-in-typescript/

// for class components

// for forwardRef components

// implementation for both
/**
 * `withSplunkTheme` allows theme variables to be used within a React class component.
 * This includes the basic configuration of `family`, `colorScheme` and `density`,
 * as well as all the specific variables available in that theme.
 *
 * If no data `SplunkThemeProvider` was configured, the Prisma Dark Comfortable theme is returned.
 *
 * ```
 * import React, { Component } from 'react';
 * import PropTypes from 'prop-types';
 * import withSplunkTheme from '@splunk/themes/withSplunkTheme';
 *
 *
 * class MyComponent extends Component {
 *     static propTypes = {
 *         splunkTheme: PropTypes.object,
 *     };
 *
 *     render() {
 *         const { isComfortable, focusColor } = this.props.splunkTheme;
 *
 *         const style = {
 *             color: focusColor,
 *             padding: isComfortable ? '10px' : '5px',
 *         }
 *
 *         return (
 *             <div style={style}>
 *                 Hello
 *             </div>
 *         )
 *     }
 * }
 *
 * const MyComponentWithTheme = withSplunkTheme(MyComponent);
 * MyComponentWithTheme.propTypes = MyComponent.propTypes;
 *
 * export default MyComponentWithTheme;
 *
 * ```
 * @name withSplunkTheme
 * @function
 * @public
 */
function withSplunkTheme(
// eslint-disable-line @typescript-eslint/explicit-module-boundary-types
Component) {
  var ComponentWithSplunkTheme = /*#__PURE__*/_react["default"].forwardRef(function (props, ref) {
    var _ref = (0, _react.useContext)(_styledComponents.ThemeContext) || {},
      splunkThemeV1 = _ref.splunkThemeV1,
      rest = _objectWithoutProperties(_ref, ["splunkThemeV1"]);
    var _ref2 = splunkThemeV1 || {},
      family = _ref2.family,
      colorScheme = _ref2.colorScheme,
      density = _ref2.density,
      customizer = _ref2.customizer;
    var themeSettings = (0, _utils.addThemeDefaults)({
      family: family,
      colorScheme: colorScheme,
      density: density
    });
    var splunkTheme = _objectSpread(_objectSpread({}, rest), (0, _utils.getCustomizedTheme)(themeSettings, customizer));
    return /*#__PURE__*/_react["default"].createElement(Component, _extends({}, props, {
      ref: ref,
      splunkTheme: splunkTheme
    }));
  });
  var displayName = Component.displayName || Component.name || 'Component';
  ComponentWithSplunkTheme.displayName = "withSplunkTheme(".concat(displayName, ")");
  return ComponentWithSplunkTheme;
}

// see https://github.com/Microsoft/TypeScript/issues/28938 for the two "as T" assertions above
var _default = withSplunkTheme;
exports["default"] = _default;