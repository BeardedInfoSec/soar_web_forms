"use strict";

function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SplunkThemesTool = void 0;
var _react = _interopRequireWildcard(require("react"));
var _managerApi = require("@storybook/manager-api");
var _components = require("@storybook/components");
var _constants = require("./constants");
var _themeOptions = require("./themeOptions");
var _themes = require("./themes");
var _util = require("./util");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != _typeof(e) && "function" != typeof e) return { "default": e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) { if ("default" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } } return n["default"] = e, t && t.set(e, n), n; }
function _toConsumableArray(r) { return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread(); }
function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _iterableToArray(r) { if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r); }
function _arrayWithoutHoles(r) { if (Array.isArray(r)) return _arrayLikeToArray(r); }
function _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); }
function _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }
function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) { n[e] = r[e]; } return n; }
function _iterableToArrayLimit(r, l) { var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0) { ; } } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }
function _arrayWithHoles(r) { if (Array.isArray(r)) return r; }
var SplunkThemesTool = /*#__PURE__*/(0, _react.memo)(function () {
  var _React$useState = _react["default"].useState(false),
    _React$useState2 = _slicedToArray(_React$useState, 2),
    isTooltipVisible = _React$useState2[0],
    setIsTooltipVisible = _React$useState2[1];
  var _useGlobals = (0, _managerApi.useGlobals)(),
    _useGlobals2 = _slicedToArray(_useGlobals, 2),
    globals = _useGlobals2[0],
    updateGlobals = _useGlobals2[1];
  var params = (0, _managerApi.useParameter)(_constants.PARAM_KEY, {});
  var disableDualTheme = (0, _managerApi.useParameter)(_constants.DISABLE_DUAL_THEME_KEY, false);
  var globalsTheme = globals[_constants.PARAM_KEY] || undefined;
  var currentTheme = (0, _util.normalizeThemeOptions)(params, globalsTheme);
  var updateTheme = (0, _react.useCallback)(function (newTheme) {
    var mergedTheme = (0, _util.getMergedTheme)(globalsTheme, newTheme);
    updateGlobals(_defineProperty({}, _constants.PARAM_KEY, mergedTheme));
  }, [globalsTheme, updateGlobals]);
  (0, _react.useEffect)(function () {
    if (disableDualTheme) {
      // eslint-disable-next-line no-console
      console.warn("This story has 'disableDualTheme' set to 'true', so 'both' option will not show in theme dropdown.");
    }
  }, [disableDualTheme]);
  return /*#__PURE__*/_react["default"].createElement(_components.WithTooltip, {
    placement: "top",
    trigger: "click",
    tooltip: function tooltip() {
      return Object.keys(_themeOptions.themeOptions).map(function (themeOptionKey) {
        var themeOptionValues = _themeOptions.themeOptions[themeOptionKey];

        // if story is passing disableDualTheme: true, don't display 'both' option in theme picker
        var dualThemeOptions = disableDualTheme ? [] : ['both'];
        return /*#__PURE__*/_react["default"].createElement(_react.Fragment, {
          key: themeOptionKey
        }, /*#__PURE__*/_react["default"].createElement(_themes.TooltipSectionTitle, null, themeOptionValues.name), /*#__PURE__*/_react["default"].createElement(_components.TooltipLinkList, {
          links: [].concat(_toConsumableArray(themeOptionValues.values), dualThemeOptions).map(function (themeValue) {
            var active = currentTheme[themeOptionKey] === themeValue;
            return {
              active: active,
              id: themeValue,
              onClick: function onClick(e, clickProps) {
                updateTheme(_defineProperty({}, themeOptionKey, clickProps.title));
              },
              right: active && /*#__PURE__*/_react["default"].createElement(_components.Icons, {
                icon: "check"
              }),
              title: themeValue
            };
          })
        }));
      });
    },
    closeOnOutsideClick: true,
    onVisibleChange: setIsTooltipVisible
  }, /*#__PURE__*/_react["default"].createElement(_components.IconButton, {
    key: "splunk-themes",
    title: "Set options for @splunk/themes",
    active: isTooltipVisible
  }, /*#__PURE__*/_react["default"].createElement(_components.Icons, {
    icon: "paintbrush"
  })));
});
exports.SplunkThemesTool = SplunkThemesTool;