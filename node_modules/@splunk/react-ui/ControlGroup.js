/******/ (() => {
    // webpackBootstrap
    /******/ "use strict";
    /******/ // The require scope
    /******/    var e = {};
    /******/
    /************************************************************************/
    /******/ /* webpack/runtime/compat get default export */
    /******/    (() => {
        /******/ // getDefaultExport function for compatibility with non-harmony modules
        /******/ e.n = t => {
            /******/ var r = t && t.__esModule ? 
            /******/ () => t["default"]
            /******/ : () => t
            /******/;
            e.d(r, {
                a: r
            });
            /******/            return r;
            /******/        };
        /******/    })();
    /******/
    /******/ /* webpack/runtime/define property getters */
    /******/    (() => {
        /******/ // define getter functions for harmony exports
        /******/ e.d = (t, r) => {
            /******/ for (var n in r) {
                /******/ if (e.o(r, n) && !e.o(t, n)) {
                    /******/ Object.defineProperty(t, n, {
                        enumerable: true,
                        get: r[n]
                    });
                    /******/                }
                /******/            }
            /******/        };
        /******/    })();
    /******/
    /******/ /* webpack/runtime/hasOwnProperty shorthand */
    /******/    (() => {
        /******/ e.o = (e, t) => Object.prototype.hasOwnProperty.call(e, t)
        /******/;
    })();
    /******/
    /******/ /* webpack/runtime/make namespace object */
    /******/    (() => {
        /******/ // define __esModule on exports
        /******/ e.r = e => {
            /******/ if (typeof Symbol !== "undefined" && Symbol.toStringTag) {
                /******/ Object.defineProperty(e, Symbol.toStringTag, {
                    value: "Module"
                });
                /******/            }
            /******/            Object.defineProperty(e, "__esModule", {
                value: true
            });
            /******/        };
        /******/    })();
    /******/
    /************************************************************************/    var t = {};
    // ESM COMPAT FLAG
        e.r(t);
    // EXPORTS
        e.d(t, {
        ControlGroupContext: () => /* reexport */ T,
        default: () => /* reexport */ ce
    });
    // CONCATENATED MODULE: external "react"
    const r = require("react");
    var n =  e.n(r);
    // CONCATENATED MODULE: external "prop-types"
    const o = require("prop-types");
    var i =  e.n(o);
    // CONCATENATED MODULE: external "lodash/find"
    const l = require("lodash/find");
    var a =  e.n(l);
    // CONCATENATED MODULE: external "lodash/isFinite"
    const s = require("lodash/isFinite");
    var p =  e.n(s);
    // CONCATENATED MODULE: external "@splunk/themes"
    const c = require("@splunk/themes");
    // CONCATENATED MODULE: external "@splunk/ui-utils/id"
    const u = require("@splunk/ui-utils/id");
    // CONCATENATED MODULE: external "@splunk/react-ui/Box"
    const f = require("@splunk/react-ui/Box");
    var d =  e.n(f);
    // CONCATENATED MODULE: external "@splunk/react-ui/ScreenReaderContent"
    const y = require("@splunk/react-ui/ScreenReaderContent");
    var b =  e.n(y);
    // CONCATENATED MODULE: external "styled-components"
    const h = require("styled-components");
    var m =  e.n(h);
    // CONCATENATED MODULE: external "@splunk/react-ui/Tooltip"
    const v = require("@splunk/react-ui/Tooltip");
    var g =  e.n(v);
    // CONCATENATED MODULE: ./src/ControlGroup/ControlGroupStyles.ts
    var O = m()(d()).withConfig({
        displayName: "ControlGroupStyles__StyledBox",
        componentId: "wjnyif-0"
    })([ "", " ", " max-width:600px;margin-bottom:", ";", " color:", ";", "" ], c.mixins.reset("block"), c.mixins.clearfix(), (0, 
    c.pick)({
        enterprise: c.variables.spacingMedium,
        prisma: {
            comfortable: c.variables.spacingLarge,
            compact: c.variables.spacingMedium
        }
    }), (0, c.pick)({
        prisma: {
            comfortable: (0, h.css)([ "&:first-child{margin-top:", ";}&:last-child{margin-bottom:", ";}" ], c.variables.spacingMedium, c.variables.spacingMedium),
            compact: (0, h.css)([ "&:first-child{margin-top:", ";}&:last-child{margin-bottom:", ";}" ], c.variables.spacingSmall, c.variables.spacingSmall)
        }
    }), (0, c.pick)({
        enterprise: c.variables.textColor,
        prisma: c.variables.contentColorMuted
    }), (function(e) {
        var t = e.$error;
        return t && (0, h.css)([ "color:", ";" ], (0, c.pick)({
            enterprise: {
                light: c.variables.errorColorD10,
                dark: c.variables.errorColorL20
            },
            prisma: c.variables.accentColorNegative
        }));
    }));
    var S = m()(d()).withConfig({
        displayName: "ControlGroupStyles__StyledControlsStackBox",
        componentId: "wjnyif-1"
    })([ "flex-direction:column;" ]);
    var w = m().div.withConfig({
        displayName: "ControlGroupStyles__StyledLabelWrapper",
        componentId: "wjnyif-2"
    })([ "display:inline-flex;align-items:center;", " ", "" ], (0, c.pick)({
        enterprise: (0, h.css)([ "justify-content:flex-end;" ])
    }), (function(e) {
        var t = e.$labelPosition;
        return t === "top" ? (0, h.css)([ "", "" ], (0, c.pick)({
            prisma: (0, h.css)([ "height:24px;padding-bottom:", ";" ], c.variables.spacingXSmall)
        })) : (0, h.css)([ "", "" ], (0, c.pick)({
            prisma: (0, h.css)([ "min-height:", ";" ], c.variables.inputHeight)
        }));
    }));
    var I = m()(w).withConfig({
        displayName: "ControlGroupStyles__StyledLabelWrapperLeft",
        componentId: "wjnyif-3"
    })([ "float:left;" ]);
    var x = m().label.withConfig({
        displayName: "ControlGroupStyles__StyledLabel",
        componentId: "wjnyif-4"
    })([ "padding:", ";word-wrap:break-word;color:inherit;text-align:", ";" ], (0, c.pick)({
        enterprise: {
            comfortable: "6px 0",
            compact: "4px 0"
        }
    }), (0, c.pick)({
        enterprise: "right",
        prisma: "left"
    }));
    var C = m()(g()).withConfig({
        displayName: "ControlGroupStyles__StyledTooltip",
        componentId: "wjnyif-5"
    })([ "", "" ], (function(e) {
        var t = e.$labelPosition;
        return t === "top" && (0, h.css)([ "button{", "}" ], (0, c.pick)({
            prisma: (0, h.css)([ "svg{width:20px;height:20px;}padding:4px;" ])
        }));
    }));
    var j = m().div.withConfig({
        displayName: "ControlGroupStyles__StyledHelp",
        componentId: "wjnyif-6"
    })([ "", ";font-size:", ";color:", ";margin-top:", ";", "" ], c.mixins.reset("block"), c.variables.fontSizeSmall, c.variables.contentColorMuted, (0, 
    c.pick)({
        enterprise: "2px",
        prisma: "4px"
    }), (function(e) {
        var t = e.$error;
        return t && (0, h.css)([ "color:inherit;" ]);
    }));
    var k = m().div.withConfig({
        displayName: "ControlGroupStyles__StyledErrorText",
        componentId: "wjnyif-7"
    })([ "", ";font-size:", ";[aria-invalid] > &{color:inherit;}", "" ], c.mixins.reset("block"), c.variables.fontSizeSmall, (function(e) {
        var t = e.$help;
        return !t && (0, h.css)([ "margin-top:", ";" ], (0, c.pick)({
            enterprise: "2px",
            prisma: "4px"
        }));
    }));
    var P = m().span.withConfig({
        displayName: "ControlGroupStyles__StyledAsterisk",
        componentId: "wjnyif-8"
    })([ "color:inherit;margin-right:2px;" ]);
    // CONCATENATED MODULE: ./src/ControlGroup/ControlGroupContext.tsx
    /**
 * A React context used to inform subcomponets of ControlGroup of parent component values.
 * The context interface is `ControlGroupContextValue`.
 * Defaults to `'{}'`.
 * @public
 */
    var _ =  n().createContext({});
    /* harmony default export */    const T = _;
    // CONCATENATED MODULE: ./src/ControlGroup/ControlGroup.tsx
    function L(e) {
        "@babel/helpers - typeof";
        return L = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
            return typeof e;
        } : function(e) {
            return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
        }, L(e);
    }
    function E() {
        return E = Object.assign ? Object.assign.bind() : function(e) {
            for (var t = 1; t < arguments.length; t++) {
                var r = arguments[t];
                for (var n in r) {
                    ({}).hasOwnProperty.call(r, n) && (e[n] = r[n]);
                }
            }
            return e;
        }, E.apply(null, arguments);
    }
    function D(e, t) {
        var r = Object.keys(e);
        if (Object.getOwnPropertySymbols) {
            var n = Object.getOwnPropertySymbols(e);
            t && (n = n.filter((function(t) {
                return Object.getOwnPropertyDescriptor(e, t).enumerable;
            }))), r.push.apply(r, n);
        }
        return r;
    }
    function q(e) {
        for (var t = 1; t < arguments.length; t++) {
            var r = null != arguments[t] ? arguments[t] : {};
            t % 2 ? D(Object(r), !0).forEach((function(t) {
                Z(e, t, r[t]);
            })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : D(Object(r)).forEach((function(t) {
                Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(r, t));
            }));
        }
        return e;
    }
    function M(e, t) {
        if (null == e) return {};
        var r, n, o = B(e, t);
        if (Object.getOwnPropertySymbols) {
            var i = Object.getOwnPropertySymbols(e);
            for (n = 0; n < i.length; n++) {
                r = i[n], t.includes(r) || {}.propertyIsEnumerable.call(e, r) && (o[r] = e[r]);
            }
        }
        return o;
    }
    function B(e, t) {
        if (null == e) return {};
        var r = {};
        for (var n in e) {
            if ({}.hasOwnProperty.call(e, n)) {
                if (t.includes(n)) continue;
                r[n] = e[n];
            }
        }
        return r;
    }
    function V(e, t) {
        return W(e) || N(e, t) || A(e, t) || $();
    }
    function $() {
        throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function A(e, t) {
        if (e) {
            if ("string" == typeof e) return G(e, t);
            var r = {}.toString.call(e).slice(8, -1);
            return "Object" === r && e.constructor && (r = e.constructor.name), "Map" === r || "Set" === r ? Array.from(e) : "Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? G(e, t) : void 0;
        }
    }
    function G(e, t) {
        (null == t || t > e.length) && (t = e.length);
        for (var r = 0, n = Array(t); r < t; r++) {
            n[r] = e[r];
        }
        return n;
    }
    function N(e, t) {
        var r = null == e ? null : "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
        if (null != r) {
            var n, o, i, l, a = [], s = !0, p = !1;
            try {
                if (i = (r = r.call(e)).next, 0 === t) {
                    if (Object(r) !== r) return;
                    s = !1;
                } else for (;!(s = (n = i.call(r)).done) && (a.push(n.value), a.length !== t); s = !0) {
                }
            } catch (e) {
                p = !0, o = e;
            } finally {
                try {
                    if (!s && null != r["return"] && (l = r["return"](), Object(l) !== l)) return;
                } finally {
                    if (p) throw o;
                }
            }
            return a;
        }
    }
    function W(e) {
        if (Array.isArray(e)) return e;
    }
    function R(e, t) {
        if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
    }
    function z(e, t) {
        for (var r = 0; r < t.length; r++) {
            var n = t[r];
            n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), 
            Object.defineProperty(e, ee(n.key), n);
        }
    }
    function F(e, t, r) {
        return t && z(e.prototype, t), r && z(e, r), Object.defineProperty(e, "prototype", {
            writable: !1
        }), e;
    }
    function J(e, t) {
        if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function");
        e.prototype = Object.create(t && t.prototype, {
            constructor: {
                value: e,
                writable: !0,
                configurable: !0
            }
        }), Object.defineProperty(e, "prototype", {
            writable: !1
        }), t && H(e, t);
    }
    function H(e, t) {
        return H = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(e, t) {
            return e.__proto__ = t, e;
        }, H(e, t);
    }
    function U(e) {
        var t = Q();
        return function() {
            var r, n = Y(e);
            if (t) {
                var o = Y(this).constructor;
                r = Reflect.construct(n, arguments, o);
            } else r = n.apply(this, arguments);
            return X(this, r);
        };
    }
    function X(e, t) {
        if (t && ("object" == L(t) || "function" == typeof t)) return t;
        if (void 0 !== t) throw new TypeError("Derived constructors may only return object or undefined");
        return K(e);
    }
    function K(e) {
        if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return e;
    }
    function Q() {
        try {
            var e = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {})));
        } catch (e) {}
        return (Q = function t() {
            return !!e;
        })();
    }
    function Y(e) {
        return Y = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(e) {
            return e.__proto__ || Object.getPrototypeOf(e);
        }, Y(e);
    }
    function Z(e, t, r) {
        return (t = ee(t)) in e ? Object.defineProperty(e, t, {
            value: r,
            enumerable: !0,
            configurable: !0,
            writable: !0
        }) : e[t] = r, e;
    }
    function ee(e) {
        var t = te(e, "string");
        return "symbol" == L(t) ? t : t + "";
    }
    function te(e, t) {
        if ("object" != L(e) || !e) return e;
        var r = e[Symbol.toPrimitive];
        if (void 0 !== r) {
            var n = r.call(e, t || "default");
            if ("object" != L(n)) return n;
            throw new TypeError("@@toPrimitive must return a primitive value.");
        }
        return ("string" === t ? String : Number)(e);
    }
    // props ControlGroup may access and/or override on children
        var re = {
        children: i().node,
        controlsLayout: i().oneOf([ "fill", "fillJoin", "none", "stack" ]),
        elementRef: i().oneOfType([ i().func, i().object ]),
        error: i().oneOfType([ i().bool, i().string ]),
        help: i().node,
        hideLabel: i().bool,
        label: i().string.isRequired,
        labelFor: i().string,
        labelPosition: i().oneOf([ "left", "top" ]),
        labelWidth: i().oneOfType([ i().number, i().string ]),
        required: i().bool,
        size: i().oneOf([ "small", "medium" ]),
        /** @private */
        splunkTheme: i().object,
        tooltip: i().node,
        tooltipDefaultPlacement: i().oneOf([ "above", "below", "left", "right", "theme" ])
    };
    var ne = {
        controlsLayout: "fill",
        error: false,
        hideLabel: false,
        labelPosition: "left",
        labelWidth: 120,
        required: false
    };
    // Style cloned onto child elements when fill behavior set.
        var oe = {
        flexGrow: 1
    };
    // Margin bootom values cloned onto child elements when the stacking behavior is needed.
        var ie = "0";
    var le = "16px";
    var ae = "12px";
    /**
 * `ControlGroup` places a label and optional help text around one or more controls. The `ControlGroup`
 * will automatically add aria attributes to associate the controls with the labels and help text to
 * address accessibility requirements.
 *
 * `ControlGroup` provides layouts to assist in aligning and laying out controls, but the defaults are
 * not helpful in all cases, nor will the layout options address all cases. Consider setting
 * `controlsLayout` to none and manually positioning the controls as required.
 *
 * `ControlGroup` uses the HTML `label` tag. The rules for determining which child component is linked
 * to the label's `for` attribute are:
 * 1. If one or more `children` are `Text` components, the first one is used.
 * 2. If there aren't any `Text` components, the first child is used.
 *
 * If the linked child supports an `inputId` prop and it's set, its value is used for the label's `for`
 * attribute. If `inputId` is supported but not set a generated id is used instead. If `inputId` isn't
 * supported `id` is used. The `labelFor` prop may be used to override the `for` attribute.
 */    var se =  function(e) {
        J(o, e);
        var t = U(o);
        // @docs-props-type ControlGroupPropsBase
                function o(e) {
            var r;
            R(this, o);
            r = t.call(this, e);
            Z(K(r), "errorId", void 0);
            Z(K(r), "helpId", void 0);
            Z(K(r), "labelId", void 0);
            Z(K(r), "contextValue", void 0);
            Z(K(r), "childIds", void 0);
            Z(K(r), "stackLayoutChildStyle", void 0);
            Z(K(r), "getChildID", (function(e, t) {
                var n = "".concat(e, "-").concat(t);
                var o = r.childIds[n];
                if (!o || !o.length) {
                    o = (0, u.createDOMID)(e);
                    r.childIds[n] = o;
                }
                return o;
            }));
            Z(K(r), "getStackLayoutChildStyle", (function(e, t) {
                if (e) {
                    if (t) {
                        r.stackLayoutChildStyle.marginBottom = ae;
                    }
                    r.stackLayoutChildStyle.marginBottom = le;
                } else {
                    r.stackLayoutChildStyle.marginBottom = ie;
                }
                return r.stackLayoutChildStyle;
            }));
            Z(K(r), "hasInputId", (function(e) {
                return e.type && e.type.propTypes && Object.prototype.hasOwnProperty.call(e.type.propTypes, "inputId");
            }));
            Z(K(r), "getLinkedId", (function(e) {
                if (e.length === 0) {
                    return undefined;
                }
                var t = V(e, 1), n = t[0];
                var o = a()(e, (function(e) {
                    return e.type && e.type.componentType === "Text";
                }));
                var i = r.hasInputId(n);
                // see class doc block for details
                                if (e.length === 1 && n && n.props) {
                    return i ? n.props.inputId : n.props.id;
                }
                if (o && o.props) {
                    return o.props.inputId;
                }
                if (n.props) {
                    return i ? n.props.inputId : n.props.id;
                }
                return undefined;
            }));
            r.errorId = (0, u.createDOMID)("error");
            r.helpId = (0, u.createDOMID)("help");
            r.labelId = (0, u.createDOMID)("label");
            r.contextValue = r.createContextValue();
            r.childIds = {};
            r.stackLayoutChildStyle = {};
            if (false) {}
            if (false) {}
            return r;
        }
        F(o, [ {
            key: "shouldComponentUpdate",
            value: function e(t) {
                if (n().Children.count(t.children) !== n().Children.count(this.props.children)) {
                    this.childIds = {};
                }
                return true;
            }
        }, {
            key: "createContextValue",
            value: function e() {
                return {
                    labelAttrs: {
                        text: this.props.label,
                        id: this.labelId
                    }
                };
            }
        }, {
            key: "getContextValue",
            value: function e() {
                var t, r;
                if (this.props.label !== ((t = this.contextValue.labelAttrs) === null || t === void 0 ? void 0 : t.text) || this.labelId !== ((r = this.contextValue.labelAttrs) === null || r === void 0 ? void 0 : r.id)) {
                    this.contextValue = this.createContextValue();
                }
                return this.contextValue;
            }
        }, {
            key: "render",
            value: function e() {
                var t = this;
                var o = this.props, i = o.children, l = o.controlsLayout, a = o.error, s = o.help, c = o.hideLabel, u = o.label, f = o.labelFor, y = o.labelPosition, h = o.labelWidth, m = o.required, v = o.splunkTheme, g = o.tooltip, _ = o.tooltipDefaultPlacement, L = M(o, [ "children", "controlsLayout", "error", "help", "hideLabel", "label", "labelFor", "labelPosition", "labelWidth", "required", "splunkTheme", "tooltip", "tooltipDefaultPlacement" ]);
                var D = v.isPrisma, B = v.isCompact;
                var V = r.Children.toArray(i).filter(r.isValidElement);
                var $ = V.length;
                var A = typeof a === "string";
                var G = A && a !== "";
                var N = A || a === true;
                // Clean the Children
                                var W = function e(n, o) {
                    var i = {
                        key: n.key || o
                    };
                    if (l === "fillJoin") {
                        if (o > 0) {
                            i.prepend = true;
                        }
                        if (o < $ - 1) {
                            i.append = true;
                        }
                        if (i.prepend || i.append) {
                            i.inline = false;
                        }
                    }
                    if (l === "fill" && $ > 1) {
                        i.inline = true;
                    }
                    if (l === "stack") {
                        i.inline = false;
                        if (o < $ - 1) {
                            // The spread operator is used as css styles are not nested, so there is no need for a deep copy.
                            var a = t.getStackLayoutChildStyle(D, B);
                            i.style = n.props.style ? q(q({}, n.props.style), a) : a;
                        }
                    }
                    i.labelledBy = t.labelId;
                    if (t.props.help && typeof t.props.error === "boolean") {
                        i.describedBy = t.helpId;
                    } else if (t.props.help && typeof t.props.error === "string") {
                        i.describedBy = "".concat(t.helpId, " ").concat(t.errorId);
                    } else if (!t.props.help && typeof t.props.error === "string") {
                        i.describedBy = t.errorId;
                    }
                    if (t.props.required) {
                        i.required = true;
                    }
                    // TODO: SUI-3402 refactor so that parent component doesn't have to know what it's child components are
                                        if (n.type.componentType === "Multiselect") {
                        var s = n;
                        if (s.props.compact === false) {
                            i.labelText = u;
                        }
                    } else {
                        i.labelText = u;
                    }
                    if ($ === 1 && (l === "fillJoin" || l === "fill")) {
                        // Some controls like Select do not grow by default, so flexGrow is applied
                        // The spread operator is used as css styles are not nested, so there is no need for a deep copy.
                        i.style = n.props.style ? q(q({}, n.props.style), oe) : oe;
                    }
                    if (!f && n) {
                        if (t.hasInputId(n)) {
                            i.inputId = n.props.inputId || t.getChildID("input-id", o);
                        } else {
                            i.id = n.props.id || t.getChildID("id", o);
                        }
                    }
                    if (G && n.props.error === true) {
                        i["aria-errormessage"] = t.errorId;
                    }
                    
                    return (0, r.cloneElement)(n, i);
                };
                var R = V.map(W);
                var z = this.getLinkedId(R);
                var F = y === "left" ? {
                    width: h
                } : undefined;
                var J = p()(h) ? "".concat(h, "px") : h;
                var H = D ? "16px" : "20px";
                var U = y === "left" ? {
                    marginLeft: "calc(".concat(J, " + ").concat(H, ")")
                } : undefined;
                var X = l === "stack" ? S : d();
                var K = y === "left" ? I : w;
                var Q =  n().createElement(K, {
                    style: F,
                    $labelPosition: y
                },  n().createElement(x, {
                    "data-test": "label",
                    id: this.labelId,
                    htmlFor: f || z,
                    $tooltip: !!g
                }, m &&  n().createElement(P, {
                    "aria-hidden": "true"
                }, "*"), u, !D && !c && g &&  n().createElement("span", null, " "), !c && g &&  n().createElement(b(), null, g)), !c && g &&  n().createElement(C, {
                    $labelPosition: y,
                    closeWhen: "notOnClick",
                    content: g,
                    defaultPlacement: _,
                    "aria-hidden": "true"
                }));
                
                return n().createElement(O, E({
                    "data-test": "control-group",
                    "data-test-required": m,
                    $error: N,
                    "aria-invalid": !!a || undefined
                }, L),  n().createElement(T.Provider, {
                    value: this.getContextValue()
                }, c ?  n().createElement(b(), null, Q) : Q,  n().createElement(X, {
                    "data-test": "controls",
                    flex: l !== "none",
                    style: U
                }, R), s &&  n().createElement(j, {
                    "data-test": "help",
                    id: this.helpId,
                    style: U,
                    $error: N && !G
                }, s), G &&  n().createElement(k, {
                    "data-test": "error",
                    id: this.errorId,
                    style: U,
                    $help: !!s
                }, a)));
            }
        } ]);
        return o;
    }(r.Component);
    Z(se, "propTypes", re);
    Z(se, "defaultProps", ne);
    var pe = (0, c.withSplunkTheme)(se);
    pe.propTypes = se.propTypes;
    /* harmony default export */    const ce = pe;
    // CONCATENATED MODULE: ./src/ControlGroup/index.ts
    module.exports = t;
    /******/})();