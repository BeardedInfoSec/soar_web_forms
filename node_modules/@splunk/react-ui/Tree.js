/******/ (() => {
    // webpackBootstrap
    /******/ "use strict";
    /******/    var e = {
        /***/ 3563: 
        /***/ e => {
            e.exports = require("@splunk/themes");
            /***/        },
        /***/ 5295: 
        /***/ e => {
            e.exports = require("@splunk/ui-utils/keyboard");
            /***/        },
        /***/ 23: 
        /***/ e => {
            e.exports = require("prop-types");
            /***/        },
        /***/ 9497: 
        /***/ e => {
            e.exports = require("react");
            /***/        },
        /***/ 232: 
        /***/ e => {
            e.exports = require("styled-components");
            /***/
            /******/        }
    };
    /************************************************************************/
    /******/ // The module cache
    /******/    var t = {};
    /******/
    /******/ // The require function
    /******/    function n(r) {
        /******/ // Check if module is in cache
        /******/ var o = t[r];
        /******/        if (o !== undefined) {
            /******/ return o.exports;
            /******/        }
        /******/ // Create a new module (and put it into the cache)
        /******/        var i = t[r] = {
            /******/ // no module.id needed
            /******/ // no module.loaded needed
            /******/ exports: {}
            /******/        };
        /******/
        /******/ // Execute the module function
        /******/        e[r](i, i.exports, n);
        /******/
        /******/ // Return the exports of the module
        /******/        return i.exports;
        /******/    }
    /******/
    /************************************************************************/
    /******/ /* webpack/runtime/compat get default export */
    /******/    (() => {
        /******/ // getDefaultExport function for compatibility with non-harmony modules
        /******/ n.n = e => {
            /******/ var t = e && e.__esModule ? 
            /******/ () => e["default"]
            /******/ : () => e
            /******/;
            n.d(t, {
                a: t
            });
            /******/            return t;
            /******/        };
        /******/    })();
    /******/
    /******/ /* webpack/runtime/define property getters */
    /******/    (() => {
        /******/ // define getter functions for harmony exports
        /******/ n.d = (e, t) => {
            /******/ for (var r in t) {
                /******/ if (n.o(t, r) && !n.o(e, r)) {
                    /******/ Object.defineProperty(e, r, {
                        enumerable: true,
                        get: t[r]
                    });
                    /******/                }
                /******/            }
            /******/        };
        /******/    })();
    /******/
    /******/ /* webpack/runtime/hasOwnProperty shorthand */
    /******/    (() => {
        /******/ n.o = (e, t) => Object.prototype.hasOwnProperty.call(e, t)
        /******/;
    })();
    /******/
    /******/ /* webpack/runtime/make namespace object */
    /******/    (() => {
        /******/ // define __esModule on exports
        /******/ n.r = e => {
            /******/ if (typeof Symbol !== "undefined" && Symbol.toStringTag) {
                /******/ Object.defineProperty(e, Symbol.toStringTag, {
                    value: "Module"
                });
                /******/            }
            /******/            Object.defineProperty(e, "__esModule", {
                value: true
            });
            /******/        };
        /******/    })();
    /******/
    /************************************************************************/    var r = {};
    // This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.
        (() => {
        // ESM COMPAT FLAG
        n.r(r);
        // EXPORTS
                n.d(r, {
            Item: () => /* reexport */ $,
            default: () => /* reexport */ ce
        });
        // EXTERNAL MODULE: external "react"
                var e = n(9497);
        var t =  n.n(e);
        // EXTERNAL MODULE: external "prop-types"
                var o = n(23);
        var i =  n.n(o);
        // EXTERNAL MODULE: external "@splunk/ui-utils/keyboard"
                var a = n(5295);
        // CONCATENATED MODULE: ./src/Tree/TreeContext.tsx
        var l =  (0, e.createContext)({
            defaultIndent: true
        });
        /* harmony default export */        const u = l;
        // EXTERNAL MODULE: external "styled-components"
                var c = n(232);
        var f =  n.n(c);
        // EXTERNAL MODULE: external "@splunk/themes"
                var s = n(3563);
        // CONCATENATED MODULE: ./src/Tree/ItemStyles.ts
        var d = f().span.withConfig({
            displayName: "ItemStyles__StyledTreeItemContentWrapper",
            componentId: "sc-1ig9nmy-0"
        })([ "display:inline-block;min-height:100%;" ]);
        var v = f().span.withConfig({
            displayName: "ItemStyles__StyledTreeItemIndent",
            componentId: "sc-1ig9nmy-1"
        })([ "display:inline;white-space:pre;" ]);
        var p = f().span.withConfig({
            displayName: "ItemStyles__StyledTreeItemContent",
            componentId: "sc-1ig9nmy-2"
        })([ "display:", ";min-height:100%;&:focus{outline:3px solid ", ";outline-offset:1px;&:active{outline:none;}}&:hover{background-color:", ";cursor:pointer;}" ], (function(e) {
            var t = e.$hasCustomIndent;
            return t ? "inline" : "inline-block";
        }), s.variables.focusColor, (0, s.pick)({
            dark: "rgba(255, 255, 255, 0.05)",
            light: "rgba(0, 0, 0, 0.03)"
        }));
        // CONCATENATED MODULE: ./src/Tree/TreeStyles.ts
        var y = f().ul.withConfig({
            displayName: "TreeStyles__StyledUnorderedList",
            componentId: "sc-13pokwt-0"
        })([ "", ";font-family:inherit;list-style:none;white-space:inherit;", ";" ], s.mixins.reset("ul"), (function(e) {
            var t = e.$defaultIndent;
            return t && (0, c.css)([ "padding-left:", ";" ], s.variables.spacingXXXLarge);
        }));
        // CONCATENATED MODULE: ./src/utils/updateReactRef.ts
        /**
 * Updates a React ref. Callback refs and object refs (from `createRef` and `useRef`) are supported.
 *
 * @param ref - The React callback or object ref. Can be `null` or `undefined`.
 * @param current - The new value of the ref.
 */
        function m(e, t) {
            if (e) {
                if (typeof e === "function") {
                    e(t);
                } else {
                    // the public signature of this util uses React.Ref<T> to mirror the way React types refs.
                    // the intention here is to signal "we will take care of setting 'current', not you".
                    e.current = t;
 // eslint-disable-line no-param-reassign
                                }
            }
        }
        // CONCATENATED MODULE: ./src/Tree/Item.tsx
        function b(e) {
            "@babel/helpers - typeof";
            return b = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                return typeof e;
            } : function(e) {
                return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
            }, b(e);
        }
        function g() {
            return g = Object.assign ? Object.assign.bind() : function(e) {
                for (var t = 1; t < arguments.length; t++) {
                    var n = arguments[t];
                    for (var r in n) {
                        ({}).hasOwnProperty.call(n, r) && (e[r] = n[r]);
                    }
                }
                return e;
            }, g.apply(null, arguments);
        }
        function h(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var r = Object.getOwnPropertySymbols(e);
                t && (r = r.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable;
                }))), n.push.apply(n, r);
            }
            return n;
        }
        function I(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = null != arguments[t] ? arguments[t] : {};
                t % 2 ? h(Object(n), !0).forEach((function(t) {
                    O(e, t, n[t]);
                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(n)) : h(Object(n)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(n, t));
                }));
            }
            return e;
        }
        function O(e, t, n) {
            return (t = S(t)) in e ? Object.defineProperty(e, t, {
                value: n,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = n, e;
        }
        function S(e) {
            var t = w(e, "string");
            return "symbol" == b(t) ? t : t + "";
        }
        function w(e, t) {
            if ("object" != b(e) || !e) return e;
            var n = e[Symbol.toPrimitive];
            if (void 0 !== n) {
                var r = n.call(e, t || "default");
                if ("object" != b(r)) return r;
                throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === t ? String : Number)(e);
        }
        function j(e, t) {
            return E(e) || C(e, t) || P(e, t) || k();
        }
        function k() {
            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }
        function P(e, t) {
            if (e) {
                if ("string" == typeof e) return x(e, t);
                var n = {}.toString.call(e).slice(8, -1);
                return "Object" === n && e.constructor && (n = e.constructor.name), "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? x(e, t) : void 0;
            }
        }
        function x(e, t) {
            (null == t || t > e.length) && (t = e.length);
            for (var n = 0, r = Array(t); n < t; n++) {
                r[n] = e[n];
            }
            return r;
        }
        function C(e, t) {
            var n = null == e ? null : "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
            if (null != n) {
                var r, o, i, a, l = [], u = !0, c = !1;
                try {
                    if (i = (n = n.call(e)).next, 0 === t) {
                        if (Object(n) !== n) return;
                        u = !1;
                    } else for (;!(u = (r = i.call(n)).done) && (l.push(r.value), l.length !== t); u = !0) {
                    }
                } catch (e) {
                    c = !0, o = e;
                } finally {
                    try {
                        if (!u && null != n["return"] && (a = n["return"](), Object(a) !== a)) return;
                    } finally {
                        if (c) throw o;
                    }
                }
                return l;
            }
        }
        function E(e) {
            if (Array.isArray(e)) return e;
        }
        function A(e, t) {
            if (null == e) return {};
            var n, r, o = T(e, t);
            if (Object.getOwnPropertySymbols) {
                var i = Object.getOwnPropertySymbols(e);
                for (r = 0; r < i.length; r++) {
                    n = i[r], t.includes(n) || {}.propertyIsEnumerable.call(e, n) && (o[n] = e[n]);
                }
            }
            return o;
        }
        function T(e, t) {
            if (null == e) return {};
            var n = {};
            for (var r in e) {
                if ({}.hasOwnProperty.call(e, r)) {
                    if (t.includes(r)) continue;
                    n[r] = e[r];
                }
            }
            return n;
        }
        var D = {
            id: i().string,
            children: i().node,
            content: i().node,
            customIndent: i().node,
            elementRef: i().oneOfType([ i().func, i().object ]),
            endAdornment: i().node,
            expanded: i().bool,
            onFocus: i().func,
            onKeyDown: i().func,
            onToggleSelection: i().func,
            onToggleExpansion: i().func
        };
        /** @public */
        /** @public */        function _(n) {
            var r = n.id, o = n.children, i = n.content, a = n.customIndent, l = n.elementRef, c = n.endAdornment, f = n.expanded, s = n.onFocus, b = n.onKeyDown, h = n.onToggleExpansion, O = n.onToggleSelection, S = A(n, [ "id", "children", "content", "customIndent", "elementRef", "endAdornment", "expanded", "onFocus", "onKeyDown", "onToggleExpansion", "onToggleSelection" ]);
            // @docs-props-type TreeItemPropsBase
                        var w = (0, e.useContext)(u), k = w.defaultIndent, P = k === void 0 ? true : k, x = w.onItemKeyDown, C = w.onItemClick, E = w.removeNode, T = w.setNode, D = w.itemPaths, _ = w.focusedItemId;
 // make first tree item tabbable
                        var $ = (0, e.useState)((D === null || D === void 0 ? void 0 : D.get("".concat(r))) === "0" ? 0 : -1), N = j($, 2), M = N[0], R = N[1];
            var K = (0, e.useRef)(null);
            var F = (0, e.useRef)(null);
            var q = e.Children.toArray(o).filter(e.isValidElement);
            q.forEach((function(e, t) {
                if (e.props.id) {
                    if (f && T) {
                        T("".concat(e.props.id), "".concat(D === null || D === void 0 ? void 0 : D.get("".concat(r)), "-").concat(t));
                    } else if (E) {
                        E(e.props.id);
                    }
                }
            }));
            var U = (0, e.useCallback)((function(e) {
                m(K, e);
                m(l, e);
            }), [ l ]);
            var X = (0, e.useCallback)((function(e) {
                var t;
                var n = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
                // For consistency, if not provided but found in the event then add it to `data` on callback.
                // This allows for common handling of both click and keyboard events in the consumer.
                                var r = I({}, n);
                if (!n.treeItemId && ((t = e.currentTarget) === null || t === void 0 ? void 0 : t.id)) {
                    r.treeItemId = e.currentTarget.id;
                }
                h === null || h === void 0 ? void 0 : h(e, r);
            }), [ h ]);
            var L = (0, e.useCallback)((function(e) {
                C === null || C === void 0 ? void 0 : C(e, r);
            }), [ r, C ]);
            var V = (0, e.useCallback)((function(e) {
                var t;
                e.stopPropagation();
                F === null || F === void 0 ? void 0 : (t = F.current) === null || t === void 0 ? void 0 : t.focus();
                s === null || s === void 0 ? void 0 : s(e);
            }), [ s ]);
            var B = (0, e.useCallback)((function() {
                if ((D === null || D === void 0 ? void 0 : D.get("".concat(r))) === "0") {
                    R(0);
                }
            }), [ r, D ]);
            (0, e.useEffect)((function() {
                if (_ === r) {
                    var e;
                    K === null || K === void 0 ? void 0 : (e = K.current) === null || e === void 0 ? void 0 : e.focus();
                }
            }), [ _, r, K ]);
            var W = (0, e.useCallback)((function(e) {
                e.stopPropagation();
            }), []);
            var z = (0, e.useCallback)((function(e) {
                e.stopPropagation();
                if (e.key === " ") {
                    e.preventDefault();
                    O === null || O === void 0 ? void 0 : O(e, {
                        treeItemId: r
                    });
                    return;
                }
                // Used to ensure first item in Tree is tab navigable, i.e. in JSONTree when focus is manually set to the root item,
                // this allows user to tab backwards to previous item. Tab index is reset to 0 onBlur.
                                if (e.shiftKey && e.key === "Tab" && (D === null || D === void 0 ? void 0 : D.get("".concat(r))) === "0") {
                    R(-1);
                }
                x === null || x === void 0 ? void 0 : x(e, r, f, q, X);
                b === null || b === void 0 ? void 0 : b(e);
            }), [ q, f, X, r, D, x, b, O ]);
            
            return t().createElement("li", g({
                "data-test": "tree-item"
            }, S, {
                id: r,
                ref: U,
                tabIndex: M,
                onBlur: B,
                onFocus: V,
                onKeyDown: z,
                role: "treeitem",
                "aria-expanded": q.length ? f || "false" : undefined
            }),  t().createElement(d, null,  t().createElement(v, null, a),  t().createElement(p, {
                $hasCustomIndent: !!a,
                "data-test": "tree-item-content",
                ref: F,
                tabIndex: -1,
                onFocus: W,
                onClick: L
            }, i, !f && c)), f &&  t().createElement(t().Fragment, null,  t().createElement(y, {
                role: "group",
                $defaultIndent: P
            }, o), c));
        }
        _.propTypes = D;
        /* harmony default export */        const $ = _;
        // CONCATENATED MODULE: ./src/Tree/treeUtils.ts
        function N(e, t) {
            return q(e) || F(e, t) || R(e, t) || M();
        }
        function M() {
            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }
        function R(e, t) {
            if (e) {
                if ("string" == typeof e) return K(e, t);
                var n = {}.toString.call(e).slice(8, -1);
                return "Object" === n && e.constructor && (n = e.constructor.name), "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? K(e, t) : void 0;
            }
        }
        function K(e, t) {
            (null == t || t > e.length) && (t = e.length);
            for (var n = 0, r = Array(t); n < t; n++) {
                r[n] = e[n];
            }
            return r;
        }
        function F(e, t) {
            var n = null == e ? null : "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
            if (null != n) {
                var r, o, i, a, l = [], u = !0, c = !1;
                try {
                    if (i = (n = n.call(e)).next, 0 === t) {
                        if (Object(n) !== n) return;
                        u = !1;
                    } else for (;!(u = (r = i.call(n)).done) && (l.push(r.value), l.length !== t); u = !0) {
                    }
                } catch (e) {
                    c = !0, o = e;
                } finally {
                    try {
                        if (!u && null != n["return"] && (a = n["return"](), Object(a) !== a)) return;
                    } finally {
                        if (c) throw o;
                    }
                }
                return l;
            }
        }
        function q(e) {
            if (Array.isArray(e)) return e;
        }
        /**
 * A helper function to get first key in Map that matches given value
 */        function U(e, t) {
            var n;
            var r = Array.from(e.entries());
            return (n = r.find((function(e) {
                var n = N(e, 2), r = n[1];
                return r === t;
            }))) === null || n === void 0 ? void 0 : n[0];
        }
        /**
 * A helper function to get parent path of current item path
 */        function X(e) {
            // remove last index number of the current item path string to get parent
            return e.split("-").slice(0, -1).join("-");
        }
        /**
 * A helper function to get next path of current item path in same level
 */        function L(e, t) {
            return e === null || e === void 0 ? void 0 : e.replace(/([^-]*)$/, "".concat(t + 1));
        }
        /**
 * A helper function to get the last index number of an item path string
 */        function V(e) {
            var t = e.split("-").pop();
            if (!t) {
                return 0;
            }
            return parseInt(t, 10) || 0;
        }
        function B(e, t) {
            var n = e.get(t);
            if (!n) {
                return t;
            }
            var r = X(n);
            return U(e, r) || t;
        }
        /**
 * A helper function for getNextTreeItem
 */        function W(e, t) {
            var n = X(t);
            if (!n) {
                return U(e, t);
            }
            // get next node in the parent level
                        var r = V(n);
            var o = L(n, r);
            var i = U(e, o);
            if (i) {
                return i;
            }
            // continue getting parents until find next node or reach root
                        return W(e, o);
        }
        function z(e, t) {
            var n = e.get(t);
            if (!n) {
                return t;
            }
            // case where next tree item is the first visible child
                        var r = U(e, "".concat(n, "-0"));
            if (r) {
                return r;
            }
            // case where next tree item is the next node in the same level
                        var o = V(n);
            var i = L(n, o);
            var a = U(e, i);
            if (a) {
                return a;
            }
            // case where next tree item is a higher level or does not exist
                        return W(e, n) || t;
        }
        /**
 * A helper function for getPrevTreeItem
 */        function G(e, t) {
            var n = U(e, "".concat(t, "-0"));
            if (!n) {
                return U(e, t);
            }
            var r = U(e, t);
            var o = "".concat(t, "-0");
            // get the last child in current node, and continue to find its children recursively
                        while (r) {
                var i = V(o);
                var a = L(o, i);
                r = U(e, a);
                if (r) {
                    o = a;
                }
            }
            return G(e, o);
        }
        function H(e, t) {
            var n = e.get(t);
            if (!n) {
                return t;
            }
            var r = V(n);
            // case where current is first child of parent or root item
                        if (r === 0) {
                return B(e, t);
            }
            // case where previous tree item is or is a child of previous node in same level
                        var o = n.replace(/[^-]+$/, "".concat(r - 1));
            return G(e, o) || t;
        }
        function J(e) {
            return U(e, "0");
        }
        function Q(e) {
            var t = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "0";
            var n = U(e, t);
            var r = t;
            // find last child in current node
                        while (n) {
                var o = V(r);
                n = U(e, L(r, o));
                if (n) {
                    r = L(r, o);
                }
            }
            // check if last child has children
                        var i = U(e, "".concat(r, "-0"));
            if (!i) {
                return U(e, r);
            }
            // continue to find its last child recursively
                        r = "".concat(r, "-0");
            return Q(e, r);
        }
        // CONCATENATED MODULE: ./src/Tree/Tree.tsx
        function Y() {
            return Y = Object.assign ? Object.assign.bind() : function(e) {
                for (var t = 1; t < arguments.length; t++) {
                    var n = arguments[t];
                    for (var r in n) {
                        ({}).hasOwnProperty.call(n, r) && (e[r] = n[r]);
                    }
                }
                return e;
            }, Y.apply(null, arguments);
        }
        function Z(e, t) {
            return oe(e) || re(e, t) || te(e, t) || ee();
        }
        function ee() {
            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }
        function te(e, t) {
            if (e) {
                if ("string" == typeof e) return ne(e, t);
                var n = {}.toString.call(e).slice(8, -1);
                return "Object" === n && e.constructor && (n = e.constructor.name), "Map" === n || "Set" === n ? Array.from(e) : "Arguments" === n || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n) ? ne(e, t) : void 0;
            }
        }
        function ne(e, t) {
            (null == t || t > e.length) && (t = e.length);
            for (var n = 0, r = Array(t); n < t; n++) {
                r[n] = e[n];
            }
            return r;
        }
        function re(e, t) {
            var n = null == e ? null : "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
            if (null != n) {
                var r, o, i, a, l = [], u = !0, c = !1;
                try {
                    if (i = (n = n.call(e)).next, 0 === t) {
                        if (Object(n) !== n) return;
                        u = !1;
                    } else for (;!(u = (r = i.call(n)).done) && (l.push(r.value), l.length !== t); u = !0) {
                    }
                } catch (e) {
                    c = !0, o = e;
                } finally {
                    try {
                        if (!u && null != n["return"] && (a = n["return"](), Object(a) !== a)) return;
                    } finally {
                        if (c) throw o;
                    }
                }
                return l;
            }
        }
        function oe(e) {
            if (Array.isArray(e)) return e;
        }
        function ie(e, t) {
            if (null == e) return {};
            var n, r, o = ae(e, t);
            if (Object.getOwnPropertySymbols) {
                var i = Object.getOwnPropertySymbols(e);
                for (r = 0; r < i.length; r++) {
                    n = i[r], t.includes(n) || {}.propertyIsEnumerable.call(e, n) && (o[n] = e[n]);
                }
            }
            return o;
        }
        function ae(e, t) {
            if (null == e) return {};
            var n = {};
            for (var r in e) {
                if ({}.hasOwnProperty.call(e, r)) {
                    if (t.includes(r)) continue;
                    n[r] = e[r];
                }
            }
            return n;
        }
        var le = {
            children: i().node,
            defaultIndent: i().bool,
            elementRef: i().oneOfType([ i().func, i().object ])
        };
        /**
 * Used to present a hierarchical list.
 */        function ue(n) {
            var r = n.children, o = n.defaultIndent, i = o === void 0 ? true : o, l = n.elementRef, c = ie(n, [ "children", "defaultIndent", "elementRef" ]);
            // @docs-props-type TreePropsBase
                        var f = (0, e.useState)(), s = Z(f, 2), d = s[0], v = s[1];
            var p = new Map;
            var m = function e(t, n, r, o, i) {
                t.stopPropagation();
                var l = (0, a.keycode)(t.nativeEvent);
                var u = r && (o === null || o === void 0 ? void 0 : o.length);
                switch (l) {
                  case "up":
                    t.preventDefault();
                    v(H(p, n));
                    break;

                  case "down":
                    t.preventDefault();
                    v(z(p, n));
                    break;

                  case "left":
                    t.preventDefault();
                    if (u) {
                        i(t, {
                            treeItemId: n
                        });
                    } else {
                        v(B(p, n));
                    }
                    break;

                  case "right":
                    t.preventDefault();
                    if (u) {
                        v(z(p, n));
                    } else {
                        i(t, {
                            treeItemId: n
                        });
                    }
                    break;

                  case "home":
                    t.preventDefault();
                    v(J(p));
                    break;

                  case "end":
                    t.preventDefault();
                    v(Q(p));
                    break;

                  case "enter":
                    t.preventDefault();
                    i(t, {
                        treeItemId: n
                    });
                    break;

                  default:
 // do nothing
                                }
            };
            var b = function e(t, n) {
                t.preventDefault();
                v(n);
            };
            var g = function e(t) {
                p["delete"](t);
            };
            var h = function e(t, n) {
                p.set(t, n);
            };
            var I = e.Children.toArray(r).filter(e.isValidElement);
            I.forEach((function(e, t) {
                if (e.props.id && h) {
                    h("".concat(e.props.id), "".concat(t));
                }
            }));
            var O = (0, e.useMemo)((function() {
                return {
                    defaultIndent: i,
                    onItemKeyDown: m,
                    onItemClick: b,
                    removeNode: g,
                    setNode: h,
                    itemPaths: p,
                    focusedItemId: d
                };
            }), [ i, d, p, m, g, h ]);
            
            return t().createElement(u.Provider, {
                value: O
            },  t().createElement(y, Y({
                "data-test": "tree",
                ref: l,
                role: "tree",
                $defaultIndent: i
            }, c), r));
        }
        ue.propTypes = le;
        ue.Item = $;
        /* harmony default export */        const ce = ue;
    }) // CONCATENATED MODULE: ./src/Tree/index.ts
    ();
    module.exports = r;
    /******/})();