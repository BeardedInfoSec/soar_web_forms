declare const getDecimalSeparatorByLocale: (locale: string) => "." | ",";
type LimitValueArgs = {
    val: number;
    min?: number;
    max?: number;
    roundTo: number;
};
declare const limitValue: ({ val, min, max, roundTo }: LimitValueArgs) => number;
type StringToNumberArgs = {
    str: string;
    locale: string;
    min?: number;
    max?: number;
    roundTo: number;
};
declare const stringToNumber: ({ str, locale, min, max, roundTo }: StringToNumberArgs) => number | undefined;
declare const numberToString: (number: number | undefined, locale: string) => string;
type GetIsIncrementDisabledArgs = {
    value?: number;
    max?: number;
};
declare const getIsIncrementDisabled: ({ value, max }: GetIsIncrementDisabledArgs) => boolean;
type GetIsDecrementDisabledArgs = {
    value?: number;
    min?: number;
};
declare const getIsDecrementDisabled: ({ value, min }: GetIsDecrementDisabledArgs) => boolean;
declare const validatePrependAppend: (append: boolean, prepend: boolean) => void;
export { getDecimalSeparatorByLocale, limitValue, stringToNumber, numberToString, getIsIncrementDisabled, getIsDecrementDisabled, validatePrependAppend, };
