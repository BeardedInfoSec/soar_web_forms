import React from 'react';
import PropTypes from 'prop-types';
import Clickable from '@splunk/react-ui/Clickable';
import Compact, { PaginatorCompactChangeHandler } from './Compact';
import PageControl, { PaginatorPageControlChangeHandler } from './PageControl';
import { ComponentProps } from '../utils/types';
/** @public */
type PaginatorChangeHandler = (event: React.MouseEvent<HTMLButtonElement>, data: {
    page: number;
}) => void;
/** @public */
type PaginatorGeneratePageProps = ({ page, }: {
    page: number;
}) => Partial<React.ComponentProps<typeof Clickable>> & React.ComponentProps<'a'> & React.ComponentProps<'button'>;
interface PaginatorPropsBase {
    /** Displays a link to the last page in a collection. */
    alwaysShowLastPageLink?: boolean;
    /**
     * Passes props to Paginator's pages and Prev/Next buttons.
     * Supports [Clickable](./Clickable) props (except for `onClick`) and global HTML attributes.
     * `generatePageProps` will not differentiate between Prev/Next buttons and its corresponding page.
     * For example, if page 5 is passed prop P and current is 6, the Prev button will also be passed prop P.
     */
    generatePageProps?: PaginatorGeneratePageProps;
    /** Currently selected page. */
    current?: number;
    /**
     * A React ref which is set to the DOM element when the component mounts and null when it unmounts.
     */
    elementRef?: React.Ref<HTMLElement>;
    /**
     * Number of pages to display. If greater than `totalPages`, `totalPages` is used instead.
     */
    numPageLinks?: number;
    /** Callback to handle page change. */
    onChange?: PaginatorChangeHandler;
    /** The total number of pages. */
    totalPages: number;
}
type PaginatorProps = ComponentProps<PaginatorPropsBase, 'nav'>;
declare function Paginator({ alwaysShowLastPageLink, generatePageProps, current, numPageLinks, onChange, totalPages, ...otherProps }: PaginatorProps): JSX.Element | null;
declare namespace Paginator {
    var Compact: typeof import("./Compact").default;
    var PageControl: typeof import("./PageControl").default;
    var propTypes: {
        alwaysShowLastPageLink: PropTypes.Requireable<boolean>;
        generatePageProps: PropTypes.Requireable<(...args: any[]) => any>;
        current: PropTypes.Requireable<number>;
        elementRef: PropTypes.Requireable<object>;
        numPageLinks: PropTypes.Requireable<number>;
        onChange: PropTypes.Requireable<(...args: any[]) => any>;
        totalPages: PropTypes.Requireable<number>;
    };
}
export default Paginator;
export { Compact, PageControl };
export type { PaginatorGeneratePageProps, PaginatorCompactChangeHandler, PaginatorChangeHandler, PaginatorPageControlChangeHandler, };
