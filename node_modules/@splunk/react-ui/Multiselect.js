/******/ (() => {
    // webpackBootstrap
    /******/ "use strict";
    /******/    var e = {
        /***/ 2907: 
        /***/ (e, t, r) => {
            // EXPORTS
            r.d(t, {
                default: () => /* reexport */ i
            });
            // EXTERNAL MODULE: external "react"
                        var n = r(9497);
            // EXTERNAL MODULE: external "lodash/has"
                        var o = r(5919);
            var a =  r.n(o);
            // CONCATENATED MODULE: ./src/useControlled/useControlled.tsx
            /**
 * This is a private component not intended for use outside @splunk/react-ui
 *
 * A hook that accepts a default value (as used in an uncontrolled component)
 * and validates that actions that aren't valid in an uncontrolled component
 * such as updating the default value, combining default value with value, etc.
 * are not happening.
 *
 * Return the controlled state of the component.
 */
            function l(e) {
                var t = e.componentProps, r = e.componentName, o = r === void 0 ? "this component" : r, l = e.defaultValuePropName, i = l === void 0 ? "defaultValue" : l, u = e.valuePropName, c = u === void 0 ? "value" : u;
                var s = (0, n.useRef)(a()(t, c));
                var f = (0, n.useRef)(t[i]);
                (0, n.useEffect)((function() {
                    if (false) {}
                }), [ o, t, i, c ]);
                (0, n.useEffect)((function() {
                    if (false) {}
                    if (false) {}
                }), [ o, t, i, c ]);
                return s.current;
            }
            /* harmony default export */            const i = l;
        } // CONCATENATED MODULE: ./src/useControlled/index.ts
        /***/ ,
        /***/ 5919: 
        /***/ e => {
            e.exports = require("lodash/has");
            /***/        },
        /***/ 9497: 
        /***/ e => {
            e.exports = require("react");
            /***/
            /******/        }
    };
    /************************************************************************/
    /******/ // The module cache
    /******/    var t = {};
    /******/
    /******/ // The require function
    /******/    function r(n) {
        /******/ // Check if module is in cache
        /******/ var o = t[n];
        /******/        if (o !== undefined) {
            /******/ return o.exports;
            /******/        }
        /******/ // Create a new module (and put it into the cache)
        /******/        var a = t[n] = {
            /******/ // no module.id needed
            /******/ // no module.loaded needed
            /******/ exports: {}
            /******/        };
        /******/
        /******/ // Execute the module function
        /******/        e[n](a, a.exports, r);
        /******/
        /******/ // Return the exports of the module
        /******/        return a.exports;
        /******/    }
    /******/
    /************************************************************************/
    /******/ /* webpack/runtime/compat get default export */
    /******/    (() => {
        /******/ // getDefaultExport function for compatibility with non-harmony modules
        /******/ r.n = e => {
            /******/ var t = e && e.__esModule ? 
            /******/ () => e["default"]
            /******/ : () => e
            /******/;
            r.d(t, {
                a: t
            });
            /******/            return t;
            /******/        };
        /******/    })();
    /******/
    /******/ /* webpack/runtime/define property getters */
    /******/    (() => {
        /******/ // define getter functions for harmony exports
        /******/ r.d = (e, t) => {
            /******/ for (var n in t) {
                /******/ if (r.o(t, n) && !r.o(e, n)) {
                    /******/ Object.defineProperty(e, n, {
                        enumerable: true,
                        get: t[n]
                    });
                    /******/                }
                /******/            }
            /******/        };
        /******/    })();
    /******/
    /******/ /* webpack/runtime/hasOwnProperty shorthand */
    /******/    (() => {
        /******/ r.o = (e, t) => Object.prototype.hasOwnProperty.call(e, t)
        /******/;
    })();
    /******/
    /******/ /* webpack/runtime/make namespace object */
    /******/    (() => {
        /******/ // define __esModule on exports
        /******/ r.r = e => {
            /******/ if (typeof Symbol !== "undefined" && Symbol.toStringTag) {
                /******/ Object.defineProperty(e, Symbol.toStringTag, {
                    value: "Module"
                });
                /******/            }
            /******/            Object.defineProperty(e, "__esModule", {
                value: true
            });
            /******/        };
        /******/    })();
    /******/
    /************************************************************************/    var n = {};
    // This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.
        (() => {
        // ESM COMPAT FLAG
        r.r(n);
        // EXPORTS
                r.d(n, {
            Divider: () => /* reexport */ f.Divider,
            Heading: () => /* reexport */ f.Heading,
            Option: () => /* reexport */ W,
            default: () => /* reexport */ An
        });
        // EXTERNAL MODULE: external "react"
                var e = r(9497);
        var t =  r.n(e);
        // CONCATENATED MODULE: external "prop-types"
        const o = require("prop-types");
        var a =  r.n(o);
        // EXTERNAL MODULE: external "lodash/has"
                var l = r(5919);
        var i =  r.n(l);
        // CONCATENATED MODULE: external "lodash/omit"
        const u = require("lodash/omit");
        var c =  r.n(u);
        // CONCATENATED MODULE: external "@splunk/ui-utils/i18n"
        const s = require("@splunk/ui-utils/i18n");
        // CONCATENATED MODULE: external "@splunk/react-ui/Menu"
        const f = require("@splunk/react-ui/Menu");
        // CONCATENATED MODULE: ./src/Select/OptionBase.tsx
        function p(e) {
            "@babel/helpers - typeof";
            return p = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                return typeof e;
            } : function(e) {
                return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
            }, p(e);
        }
        function d() {
            return d = Object.assign ? Object.assign.bind() : function(e) {
                for (var t = 1; t < arguments.length; t++) {
                    var r = arguments[t];
                    for (var n in r) {
                        ({}).hasOwnProperty.call(r, n) && (e[n] = r[n]);
                    }
                }
                return e;
            }, d.apply(null, arguments);
        }
        function v(e, t) {
            var r = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var n = Object.getOwnPropertySymbols(e);
                t && (n = n.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable;
                }))), r.push.apply(r, n);
            }
            return r;
        }
        function b(e) {
            for (var t = 1; t < arguments.length; t++) {
                var r = null != arguments[t] ? arguments[t] : {};
                t % 2 ? v(Object(r), !0).forEach((function(t) {
                    y(e, t, r[t]);
                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : v(Object(r)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(r, t));
                }));
            }
            return e;
        }
        function y(e, t, r) {
            return (t = m(t)) in e ? Object.defineProperty(e, t, {
                value: r,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = r, e;
        }
        function m(e) {
            var t = h(e, "string");
            return "symbol" == p(t) ? t : t + "";
        }
        function h(e, t) {
            if ("object" != p(e) || !e) return e;
            var r = e[Symbol.toPrimitive];
            if (void 0 !== r) {
                var n = r.call(e, t || "default");
                if ("object" != p(n)) return n;
                throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === t ? String : Number)(e);
        }
        function g(e, t) {
            if (null == e) return {};
            var r, n, o = O(e, t);
            if (Object.getOwnPropertySymbols) {
                var a = Object.getOwnPropertySymbols(e);
                for (n = 0; n < a.length; n++) {
                    r = a[n], t.includes(r) || {}.propertyIsEnumerable.call(e, r) && (o[r] = e[r]);
                }
            }
            return o;
        }
        function O(e, t) {
            if (null == e) return {};
            var r = {};
            for (var n in e) {
                if ({}.hasOwnProperty.call(e, n)) {
                    if (t.includes(n)) continue;
                    r[n] = e[n];
                }
            }
            return r;
        }
        var w = {
            /** @private */
            active: a().bool,
            children: a().node,
            description: a().string,
            descriptionPosition: a().oneOf([ "right", "bottom" ]),
            disabled: a().bool,
            elementRef: a().oneOfType([ a().func, a().object ]),
            hidden: a().bool,
            icon: a().node,
            label: a().string.isRequired,
            /**
   * @private Passed down from <BaseSelect>
   */
            multiple: a().bool,
            matchRanges: a().arrayOf(a().shape({
                start: a().number.isRequired,
                end: a().number.isRequired
            })),
            /** @private */
            onClick: a().func,
            /** @private */
            role: a().oneOf([ "menuitemcheckbox", "option" ]),
            /** @private */
            selected: a().oneOfType([ a().bool, a().oneOf([ "some" ]) ]),
            truncate: a().bool,
            value: a().oneOfType([ a().string, a().number, a().bool ]).isRequired
        };
        /**
 * An option within a `Multiselect`.
 */        function S(r) {
            var n = r.children, o = r.descriptionPosition, a = o === void 0 ? "bottom" : o, l = r.disabled, i = r.elementRef, u = r.icon, c = r.label, s = r.multiple, p = r.onClick, v = r.role, y = v === void 0 ? "option" : v, m = r.value, h = g(r, [ "children", "descriptionPosition", "disabled", "elementRef", "icon", "label", "multiple", "onClick", "role", "value" ]);
            // @docs-props-type OptionPropsBase
                        var O = (0, e.useCallback)((function(e) {
                if (!l) {
                    p === null || p === void 0 ? void 0 : p(e, {
                        value: m
                    });
                }
            }), [ l, p, m ]);
            var w = m.toString();
            var S = b({
                descriptionPosition: a,
                disabled: l
            }, h);
            
            return t().createElement(f.Item, d({
                "data-test-value": m,
                "data-test": "option",
                elementRef: i
            }, S, {
                selectable: true,
                selectableAppearance: s ? "checkbox" : "checkmark",
                startAdornment: u,
                onClick: O,
                role: y,
                value: w
            }), n || c);
        }
        S.propTypes = w;
        S.type = f.Item;
 // For components to distinguish if their children are Options or Headings/Dividers
        /* harmony default export */        const C = S;
        // CONCATENATED MODULE: ./src/utils/scrollIntoViewIfNeeded.ts
        // A utility that attempts to move an element into view by scrolling it's derived parent.
        var k = function e(t) {
            if (!t) {
                return;
            }
            var r = t.offsetParent;
            if (!r) {
                return;
            }
            // Below the bottom of the container.
                        if (r.scrollTop + r.clientHeight < t.offsetTop + t.clientHeight) {
                r.scrollTop = t.offsetTop + t.clientHeight - r.clientHeight;
                // Above the top of the container.
                        } else if (r.scrollTop > t.offsetTop) {
                r.scrollTop = t.offsetTop;
            }
        };
        // CONCATENATED MODULE: ./src/utils/updateReactRef.ts
        /**
 * Updates a React ref. Callback refs and object refs (from `createRef` and `useRef`) are supported.
 *
 * @param ref - The React callback or object ref. Can be `null` or `undefined`.
 * @param current - The new value of the ref.
 */
        function x(e, t) {
            if (e) {
                if (typeof e === "function") {
                    e(t);
                } else {
                    // the public signature of this util uses React.Ref<T> to mirror the way React types refs.
                    // the intention here is to signal "we will take care of setting 'current', not you".
                    e.current = t;
 // eslint-disable-line no-param-reassign
                                }
            }
        }
        // CONCATENATED MODULE: ./src/Multiselect/Option.tsx
        function j(e) {
            "@babel/helpers - typeof";
            return j = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                return typeof e;
            } : function(e) {
                return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
            }, j(e);
        }
        function P() {
            return P = Object.assign ? Object.assign.bind() : function(e) {
                for (var t = 1; t < arguments.length; t++) {
                    var r = arguments[t];
                    for (var n in r) {
                        ({}).hasOwnProperty.call(r, n) && (e[n] = r[n]);
                    }
                }
                return e;
            }, P.apply(null, arguments);
        }
        function E(e, t) {
            if (null == e) return {};
            var r, n, o = I(e, t);
            if (Object.getOwnPropertySymbols) {
                var a = Object.getOwnPropertySymbols(e);
                for (n = 0; n < a.length; n++) {
                    r = a[n], t.includes(r) || {}.propertyIsEnumerable.call(e, r) && (o[r] = e[r]);
                }
            }
            return o;
        }
        function I(e, t) {
            if (null == e) return {};
            var r = {};
            for (var n in e) {
                if ({}.hasOwnProperty.call(e, n)) {
                    if (t.includes(n)) continue;
                    r[n] = e[n];
                }
            }
            return r;
        }
        function R(e, t) {
            if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
        }
        function M(e, t) {
            for (var r = 0; r < t.length; r++) {
                var n = t[r];
                n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), 
                Object.defineProperty(e, F(n.key), n);
            }
        }
        function T(e, t, r) {
            return t && M(e.prototype, t), r && M(e, r), Object.defineProperty(e, "prototype", {
                writable: !1
            }), e;
        }
        function _(e, t) {
            if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function");
            e.prototype = Object.create(t && t.prototype, {
                constructor: {
                    value: e,
                    writable: !0,
                    configurable: !0
                }
            }), Object.defineProperty(e, "prototype", {
                writable: !1
            }), t && A(e, t);
        }
        function A(e, t) {
            return A = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(e, t) {
                return e.__proto__ = t, e;
            }, A(e, t);
        }
        function B(e) {
            var t = D();
            return function() {
                var r, n = N(e);
                if (t) {
                    var o = N(this).constructor;
                    r = Reflect.construct(n, arguments, o);
                } else r = n.apply(this, arguments);
                return q(this, r);
            };
        }
        function q(e, t) {
            if (t && ("object" == j(t) || "function" == typeof t)) return t;
            if (void 0 !== t) throw new TypeError("Derived constructors may only return object or undefined");
            return V(e);
        }
        function V(e) {
            if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return e;
        }
        function D() {
            try {
                var e = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {})));
            } catch (e) {}
            return (D = function t() {
                return !!e;
            })();
        }
        function N(e) {
            return N = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(e) {
                return e.__proto__ || Object.getPrototypeOf(e);
            }, N(e);
        }
        function L(e, t, r) {
            return (t = F(t)) in e ? Object.defineProperty(e, t, {
                value: r,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = r, e;
        }
        function F(e) {
            var t = K(e, "string");
            return "symbol" == j(t) ? t : t + "";
        }
        function K(e, t) {
            if ("object" != j(e) || !e) return e;
            var r = e[Symbol.toPrimitive];
            if (void 0 !== r) {
                var n = r.call(e, t || "default");
                if ("object" != j(n)) return n;
                throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === t ? String : Number)(e);
        }
        var H = {
            /** @private */
            active: a().bool,
            children: a().node,
            /**
   * @private this is passed down from Multiselect.
   */
            compact: a().bool,
            description: a().string,
            descriptionPosition: a().oneOf([ "right", "bottom" ]),
            disabled: a().bool,
            hidden: a().bool,
            icon: a().node,
            label: a().string.isRequired,
            matchRanges: a().arrayOf(a().shape({
                start: a().number.isRequired,
                end: a().number.isRequired
            })),
            /** @private */
            onClick: a().func,
            /** @private */
            role: a().oneOf([ "menuitemcheckbox", "option" ]),
            /** @private */
            selected: a().bool,
            selectedAppearance: a().oneOf([ "info", "success", "warning", "error" ]),
            selectedBackgroundColor: a().string,
            selectedForegroundColor: a().string,
            truncate: a().bool,
            value: a().oneOfType([ a().string, a().number, a().bool ]).isRequired
        };
        var $ = {
            compact: false,
            descriptionPosition: "bottom",
            disabled: false,
            selected: false,
            truncate: false
        };
        /**
 * An option within a `Multiselect`. This inherits from
 * [PureComponent](https://reactjs.org/docs/react-api.html#reactpurecomponent)
 * so any elements passed to it must also be pure.
 */        var z =  function(e) {
            _(n, e);
            var r = B(n);
            function n() {
                var e;
                R(this, n);
                for (var o = arguments.length, a = new Array(o), l = 0; l < o; l++) {
                    a[l] = arguments[l];
                }
                e = r.call.apply(r, [ this ].concat(a));
                L(V(e), "optionBaseRef",  t().createRef());
                L(V(e), "handleMount", (function(t) {
                    x(e.optionBaseRef, t);
                }));
                return e;
            }
 // @docs-props-type OptionPropsBase
                        T(n, [ {
                key: "scrollIntoViewIfNeeded",
                // eslint-disable-next-line react/no-unused-class-component-methods
                value: function e() {
                    k(this.optionBaseRef.current);
                }
                /**
     * Place focus on the button.
     */
                // eslint-disable-next-line react/no-unused-class-component-methods
                        }, {
                key: "focus",
                value: function e() {
                    var t, r;
                    (t = this.optionBaseRef) === null || t === void 0 ? void 0 : (r = t.current) === null || r === void 0 ? void 0 : r.focus();
                }
            }, {
                key: "render",
                value: function e() {
                    var r = this.props, n = r.compact, o = E(r, [ "compact" ]);
                    
                    return t().createElement(C, P({}, o, {
                        elementRef: this.handleMount,
                        multiple: n
                    }), this.props.children || this.props.label);
                }
            } ]);
            return n;
        }(e.PureComponent);
        L(z, "propTypes", H);
        L(z, "defaultProps", $);
        /* harmony default export */        const W = z;
        // CONCATENATED MODULE: external "lodash/castArray"
        const U = require("lodash/castArray");
        var G =  r.n(U);
        // CONCATENATED MODULE: external "lodash/find"
        const J = require("lodash/find");
        var X =  r.n(J);
        // CONCATENATED MODULE: external "lodash/forEachRight"
        const Q = require("lodash/forEachRight");
        var Y =  r.n(Q);
        // CONCATENATED MODULE: external "lodash/includes"
        const Z = require("lodash/includes");
        var ee =  r.n(Z);
        // CONCATENATED MODULE: external "lodash/memoize"
        const te = require("lodash/memoize");
        var re =  r.n(te);
        // CONCATENATED MODULE: external "lodash/pick"
        const ne = require("lodash/pick");
        var oe =  r.n(ne);
        // CONCATENATED MODULE: external "lodash/uniq"
        const ae = require("lodash/uniq");
        var le =  r.n(ae);
        // CONCATENATED MODULE: external "lodash/without"
        const ie = require("lodash/without");
        var ue =  r.n(ie);
        // CONCATENATED MODULE: external "@splunk/react-ui/Dropdown"
        const ce = require("@splunk/react-ui/Dropdown");
        var se =  r.n(ce);
        // CONCATENATED MODULE: external "@splunk/react-ui/Link"
        const fe = require("@splunk/react-ui/Link");
        var pe =  r.n(fe);
        // CONCATENATED MODULE: external "@splunk/react-ui/ResultsMenu"
        const de = require("@splunk/react-ui/ResultsMenu");
        var ve =  r.n(de);
        // CONCATENATED MODULE: external "@splunk/react-ui/Text"
        const be = require("@splunk/react-ui/Text");
        var ye =  r.n(be);
        // CONCATENATED MODULE: external "@splunk/react-ui/ScreenReaderContent"
        const me = require("@splunk/react-ui/ScreenReaderContent");
        var he =  r.n(me);
        // CONCATENATED MODULE: external "@splunk/react-ui/usePrevious"
        const ge = require("@splunk/react-ui/usePrevious");
        var Oe =  r.n(ge);
        // CONCATENATED MODULE: external "@splunk/ui-utils/filter"
        const we = require("@splunk/ui-utils/filter");
        // CONCATENATED MODULE: external "@splunk/ui-utils/id"
        const Se = require("@splunk/ui-utils/id");
        // CONCATENATED MODULE: external "@splunk/ui-utils/keyboard"
        const Ce = require("@splunk/ui-utils/keyboard");
        // CONCATENATED MODULE: external "@splunk/react-icons/CaretSmallDown"
        const ke = require("@splunk/react-icons/CaretSmallDown");
        var xe =  r.n(ke);
        // CONCATENATED MODULE: external "@splunk/react-icons/enterprise/Caret"
        const je = require("@splunk/react-icons/enterprise/Caret");
        var Pe =  r.n(je);
        // CONCATENATED MODULE: external "@splunk/themes"
        const Ee = require("@splunk/themes");
        // CONCATENATED MODULE: ./src/Select/icons/CaretSmallDown.tsx
        var Ie = function e() {
            var r = (0, Ee.useSplunkTheme)(), n = r.isEnterprise;
            var o = n ?  t().createElement(Pe(), {
                screenReaderText: null,
                hideDefaultTooltip: true,
                size: .5
            }) :  t().createElement(xe(), null);
            return o;
        };
        /* harmony default export */        const Re = Ie;
        // CONCATENATED MODULE: external "@splunk/react-icons/enterprise/Search"
        const Me = require("@splunk/react-icons/enterprise/Search");
        var Te =  r.n(Me);
        // CONCATENATED MODULE: external "@splunk/react-icons/Magnifier"
        const _e = require("@splunk/react-icons/Magnifier");
        var Ae =  r.n(_e);
        // CONCATENATED MODULE: ./src/Select/icons/Search.tsx
        var Be = function e() {
            var r = (0, Ee.useSplunkTheme)(), n = r.isEnterprise, o = r.isCompact;
            var a = (0, s._)("Search");
            var l = o ? "20px" : "24px";
            var i = n ?  t().createElement(Te(), {
                role: "presentation",
                size: "16px",
                screenReaderText: a,
                hideDefaultTooltip: true
            }) :  t().createElement(Ae(), {
                role: "presentation",
                "aria-label": a,
                width: l,
                height: l
            });
            return i;
        };
        /* harmony default export */        const qe = Be;
        // CONCATENATED MODULE: ./src/Select/SelectAllOption.tsx
        var Ve = {
            active: a().bool,
            changedToggle: a().bool,
            elementRef: a().oneOfType([ a().func, a().object ]),
            id: a().string,
            onClick: a().func,
            selectAllLabel: a().string,
            selected: a().oneOf([ false, true, "some" ]),
            totalCount: a().number
        };
        function De(e) {
            var r = e.active, n = e.elementRef, o = e.id, a = e.onClick, l = e.selectAllLabel, i = e.totalCount, u = e.changedToggle, c = e.selected;
            // When toggle is changed the total count is not displayed anymore so the count is now shown in the Select all menu item
                        var s = u ? " (".concat(i === null || i === void 0 ? void 0 : i.toString(), ")") : "";
            
            return t().createElement(C, {
                active: r,
                elementRef: n,
                "aria-keyshortcuts": "Control+A",
                "data-test": "select-all",
                description: "".concat(s, " Ctrl-a"),
                descriptionPosition: "right",
                id: o,
                key: "selectAll",
                label: l,
                multiple: true,
                onClick: a,
                role: "menuitemcheckbox",
                selected: c,
                tabIndex: -1,
                value: "selectAll"
            });
        }
        De.propTypes = Ve;
        /* harmony default export */        const Ne = De;
        // CONCATENATED MODULE: external "styled-components"
        const Le = require("styled-components");
        var Fe =  r.n(Le);
        // CONCATENATED MODULE: external "@splunk/react-ui/Button"
        const Ke = require("@splunk/react-ui/Button");
        var He =  r.n(Ke);
        // CONCATENATED MODULE: ./src/Select/SelectBaseStyles.ts
        var $e = Fe()(He()).withConfig({
            displayName: "SelectBaseStyles__StyledButton",
            componentId: "sc-16cj7sk-0"
        })([ "&[data-inline]{width:", ";}", "" ], (function(e) {
            var t = e.$multiple;
            return t ? "400px" : "auto";
        }), (function(e) {
            var t = e.$multiple;
            return !t && "flex-grow: 0;";
        }));
        var ze = Fe().span.withConfig({
            displayName: "SelectBaseStyles__StyledLinkIcon",
            componentId: "sc-16cj7sk-1"
        })([ "padding-right:2px;" ]);
        var We = Fe().span.withConfig({
            displayName: "SelectBaseStyles__StyledLinkCaret",
            componentId: "sc-16cj7sk-2"
        })([ "padding-left:2px;" ]);
        var Ue = Fe().div.withConfig({
            displayName: "SelectBaseStyles__StyledFilter",
            componentId: "sc-16cj7sk-3"
        })([ "padding:", ";min-width:160px;" ], (0, Ee.pick)({
            enterprise: "8px",
            prisma: "10px 16px"
        }));
        var Ge = Fe().span.withConfig({
            displayName: "SelectBaseStyles__StyledSearchIconWrapper",
            componentId: "sc-16cj7sk-4"
        })([ "color:", ";pointer-events:none;padding:", ";" ], (0, Ee.pick)({
            enterprise: {
                light: Ee.variables.gray60,
                dark: Ee.variables.white
            },
            prisma: Ee.variables.contentColorMuted
        }), (0, Ee.pick)({
            comfortable: "0 8px",
            compact: "0 6px"
        }));
        var Je = Fe().span.withConfig({
            displayName: "SelectBaseStyles__StyledCount",
            componentId: "sc-16cj7sk-5"
        })([ "padding-right:", ";" ], Ee.variables.spacingXSmall);
        var Xe = Fe()(pe()).withConfig({
            displayName: "SelectBaseStyles__StyledControlsLink",
            componentId: "sc-16cj7sk-6"
        })([ "margin-right:20px;", ";" ], (function(e) {
            var t = e.$disabled;
            return t && (0, Le.css)([ "color:", ";" ], Ee.variables.contentColorDisabled);
        }));
        var Qe = Fe().div.withConfig({
            displayName: "SelectBaseStyles__StyledToggleAllControls",
            componentId: "sc-16cj7sk-7"
        })([ "padding:", ";", "" ], (0, Ee.pick)({
            enterprise: "5px 8px",
            prisma: "10px 16px"
        }), (0, Ee.pickVariant)("$placement", {
            above: {
                enterprise: (0, Le.css)([ "border-top:", ";" ], Ee.variables.border),
                prisma: (0, Le.css)([ "border-top:1px solid ", ";" ], Ee.variables.neutral200)
            },
            below: {
                enterprise: (0, Le.css)([ "border-bottom:", ";" ], Ee.variables.border),
                prisma: (0, Le.css)([ "border-bottom:1px solid ", ";" ], Ee.variables.neutral200)
            }
        }));
        // EXTERNAL MODULE: ./src/useControlled/index.ts + 1 modules
                var Ye = r(2907);
        // CONCATENATED MODULE: ./src/utils/fuzzyMatch.ts
        // A utility for matching keyboard characters to list values
        var Ze = function e(t, r) {
            return t ? t.label.charAt(r).toLowerCase() : "";
        };
        var et = function e(t, r) {
            if (!t.length) {
                return t;
            }
            var n = null;
            var o = false;
            var a = t.filter((function(e) {
                var t = Ze(e, r.index);
                if (t === r.value) {
                    o = true;
                    return true;
                }
                // If we haven't found a match yet, keep track of the next closest match.
                // Secondary matching looks for the closest character of a higher value, and failing that, closest of a lower value.
                                if (!o) {
                    var a = Ze(n, r.index);
                    if (!a) {
                        n = e;
                    } else if (t > r.value) {
                        if (a < r.value) {
                            n = e;
                        } else if (a > t) {
                            n = e;
                        }
                    } else if (t > a) {
                        n = e;
                    }
                }
                return false;
            }));
            return a.length === 0 && n ? [ n ] : a;
        };
        // CONCATENATED MODULE: ./src/utils/ssrDocument.ts
        /* eslint-disable @typescript-eslint/no-empty-function */
        var tt = {
            body: {
                appendChild: function e() {
                    return [];
                }
            },
            addEventListener: function e() {},
            removeEventListener: function e() {},
            activeElement: {
                blur: function e() {},
                nodeName: ""
            },
            querySelector: function e() {
                return null;
            },
            querySelectorAll: function e() {
                return [];
            },
            getElementById: function e() {
                return null;
            },
            createEvent: function e() {
                return {
                    initEvent: function e() {}
                };
            },
            createElement: function e() {
                return {
                    children: [],
                    childNodes: [],
                    style: {},
                    setAttribute: function e() {},
                    getElementsByTagName: function e() {
                        return [];
                    }
                };
            },
            createElementNS: function e() {
                return {};
            },
            importNode: function e() {
                return null;
            },
            location: {
                hash: "",
                host: "",
                hostname: "",
                href: "",
                origin: "",
                pathname: "",
                protocol: "",
                search: ""
            }
        };
        function rt() {
            var e = typeof document !== "undefined" ? document : tt;
            return e;
        }
        var nt = rt();
        /* harmony default export */        const ot = /* unused pure expression or super */ null && nt;
        // CONCATENATED MODULE: ./src/utils/ssrWindow.ts
        /* eslint-disable @typescript-eslint/no-empty-function */
        var at = {
            document: tt,
            navigator: {
                userAgent: ""
            },
            location: {
                hash: "",
                host: "",
                hostname: "",
                href: "",
                origin: "",
                pathname: "",
                protocol: "",
                search: ""
            },
            history: {
                replaceState: function e() {},
                pushState: function e() {},
                go: function e() {},
                back: function e() {}
            },
            CustomEvent: function e() {
                return this;
            },
            addEventListener: function e() {},
            removeEventListener: function e() {},
            getComputedStyle: function e() {
                return {
                    getPropertyValue: function e() {
                        return "";
                    }
                };
            },
            Image: function e() {},
            Date: function e() {},
            screen: {},
            setTimeout: function e() {},
            clearTimeout: function e() {},
            matchMedia: function e() {
                return {};
            },
            requestAnimationFrame: function e(t) {
                if (typeof setTimeout === "undefined") {
                    t();
                    return null;
                }
                return setTimeout(t, 0);
            },
            cancelAnimationFrame: function e(t) {
                if (typeof setTimeout === "undefined") {
                    return;
                }
                clearTimeout(t);
            }
        };
        function lt() {
            var e = typeof window !== "undefined" ? window : at;
            return e;
        }
        var it = lt();
        /* harmony default export */        const ut = /* unused pure expression or super */ null && it;
        // CONCATENATED MODULE: ./src/Select/SelectBase.tsx
        function ct(e) {
            return pt(e) || ft(e) || yt(e) || st();
        }
        function st() {
            throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }
        function ft(e) {
            if ("undefined" != typeof Symbol && null != e[Symbol.iterator] || null != e["@@iterator"]) return Array.from(e);
        }
        function pt(e) {
            if (Array.isArray(e)) return mt(e);
        }
        function dt() {
            return dt = Object.assign ? Object.assign.bind() : function(e) {
                for (var t = 1; t < arguments.length; t++) {
                    var r = arguments[t];
                    for (var n in r) {
                        ({}).hasOwnProperty.call(r, n) && (e[n] = r[n]);
                    }
                }
                return e;
            }, dt.apply(null, arguments);
        }
        function vt(e, t) {
            return gt(e) || ht(e, t) || yt(e, t) || bt();
        }
        function bt() {
            throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }
        function yt(e, t) {
            if (e) {
                if ("string" == typeof e) return mt(e, t);
                var r = {}.toString.call(e).slice(8, -1);
                return "Object" === r && e.constructor && (r = e.constructor.name), "Map" === r || "Set" === r ? Array.from(e) : "Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? mt(e, t) : void 0;
            }
        }
        function mt(e, t) {
            (null == t || t > e.length) && (t = e.length);
            for (var r = 0, n = Array(t); r < t; r++) {
                n[r] = e[r];
            }
            return n;
        }
        function ht(e, t) {
            var r = null == e ? null : "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
            if (null != r) {
                var n, o, a, l, i = [], u = !0, c = !1;
                try {
                    if (a = (r = r.call(e)).next, 0 === t) {
                        if (Object(r) !== r) return;
                        u = !1;
                    } else for (;!(u = (n = a.call(r)).done) && (i.push(n.value), i.length !== t); u = !0) {
                    }
                } catch (e) {
                    c = !0, o = e;
                } finally {
                    try {
                        if (!u && null != r["return"] && (l = r["return"](), Object(l) !== l)) return;
                    } finally {
                        if (c) throw o;
                    }
                }
                return i;
            }
        }
        function gt(e) {
            if (Array.isArray(e)) return e;
        }
        function Ot(e, t) {
            if (null == e) return {};
            var r, n, o = wt(e, t);
            if (Object.getOwnPropertySymbols) {
                var a = Object.getOwnPropertySymbols(e);
                for (n = 0; n < a.length; n++) {
                    r = a[n], t.includes(r) || {}.propertyIsEnumerable.call(e, r) && (o[r] = e[r]);
                }
            }
            return o;
        }
        function wt(e, t) {
            if (null == e) return {};
            var r = {};
            for (var n in e) {
                if ({}.hasOwnProperty.call(e, n)) {
                    if (t.includes(n)) continue;
                    r[n] = e[n];
                }
            }
            return r;
        }
        function St(e) {
            "@babel/helpers - typeof";
            return St = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                return typeof e;
            } : function(e) {
                return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
            }, St(e);
        }
        function Ct(e, t) {
            var r = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var n = Object.getOwnPropertySymbols(e);
                t && (n = n.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable;
                }))), r.push.apply(r, n);
            }
            return r;
        }
        function kt(e) {
            for (var t = 1; t < arguments.length; t++) {
                var r = null != arguments[t] ? arguments[t] : {};
                t % 2 ? Ct(Object(r), !0).forEach((function(t) {
                    xt(e, t, r[t]);
                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : Ct(Object(r)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(r, t));
                }));
            }
            return e;
        }
        function xt(e, t, r) {
            return (t = jt(t)) in e ? Object.defineProperty(e, t, {
                value: r,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = r, e;
        }
        function jt(e) {
            var t = Pt(e, "string");
            return "symbol" == St(t) ? t : t + "";
        }
        function Pt(e, t) {
            if ("object" != St(e) || !e) return e;
            var r = e[Symbol.toPrimitive];
            if (void 0 !== r) {
                var n = r.call(e, t || "default");
                if ("object" != St(n)) return n;
                throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === t ? String : Number)(e);
        }
        var Et = {
            allowKeyMatching: a().bool,
            allowNewValues: a().bool,
            animateLoading: a().bool,
            appearance: a().oneOf([ "default", "link", "primary", "pill", "toggle", "flat", "subtle" ]),
            append: a().bool,
            children: a().node,
            defaultPlacement: a().oneOf([ "above", "below", "vertical" ]),
            defaultValues: a().array,
            describedBy: a().string,
            disabled: a().bool,
            elementRef: a().oneOfType([ a().func, a().object ]),
            error: a().bool,
            filter: a().oneOf([ false, true, "controlled" ]),
            footerMessage: a().node,
            inline: a().bool,
            inputId: a().string,
            inputRef: a().oneOfType([ a().func, a().object ]),
            isLoadingOptions: a().bool,
            labelledBy: a().string,
            labelText: a().string,
            loadingMessage: a().node,
            menuStyle: a().object,
            multiple: a().bool,
            name: a().string,
            noOptionsMessage: a().node,
            onChange: a().func,
            onClick: a().func,
            onClose: a().func,
            onFilterChange: a().func,
            onOpen: a().func,
            onScroll: a().func,
            onScrollBottom: a().func,
            /** @private. */
            required: a().bool,
            placeholder: a().string,
            prefixLabel: a().string,
            prepend: a().bool,
            repositionMode: a().oneOf([ "none", "flip" ]),
            selectAllAppearance: a().oneOf([ "buttongroup", "checkbox" ]),
            showSelectedValuesFirst: a().oneOf([ "nextOpen", "immediately", "never" ]),
            suffixLabel: a().string,
            tabConfirmsNewValue: a().bool,
            toggle: a().node,
            toggleContent: a().oneOf([ "optionChildren", "optionLabel" ]),
            values: a().array,
            /** @private. */
            virtualization: a().number
        };
        var It = re()((function(e) {
            return [ e ];
        }));
        // preserve separate widths for single vs. multi mode
                var Rt = re()((function(e) {
            var t = e.anchorWidth, r = e.isMultiple, n = e.maxHeight, o = e.menuStyle;
            return r ? kt({
                width: Math.max(t !== null && t !== void 0 ? t : 0, 200),
                maxHeight: n
            }, o) : kt({
                minWidth: t !== null && t !== void 0 ? t : undefined,
                maxWidth: Math.max(t !== null && t !== void 0 ? t : 0, 300),
                maxHeight: n
            }, o);
        }));
        var Mt = [ "clickAway", "escapeKey", "offScreen", "tabKey", "toggleClick" ];
        function Tt(e) {
            return e && i()(e.props, "value");
        }
        function _t(e, t) {
            return "".concat(St(e), "-").concat(e, "-").concat(t);
        }
        var At = [ "append", "error", "prepend" ];
        var Bt = (0, s._)("No matches");
        var qt = (0, s._)("Select...");
        var Vt = function e(r) {
            var n = r.activeItemId, o = r.filterA11yId, a = r.filterKeyword, l = r.hasChildren, i = r.inputId, u = r.inputRef, c = r.menuListboxId, f = r.multiple, p = r.onClearAll, d = r.onSelectAll, v = r.onTextBlur, b = r.onTextChange, y = r.onTextFocus, m = r.onTextKeyDown, h = r.optionSelection, g = r.placement, O = r.selectAllAppearance, w = r.textHasFocus;
            var S = (0, s._)("Select all options".concat(h.current === "all" ? " disabled" : ""));
            var C = (0, s._)("Clear all options".concat(h.current === "none" ? " disabled" : ""));
            // only visually disable these as opposed to fully disabling to avoid losing keyboard focus - see SUI-2731
                        var k =  t().createElement(Qe, {
                $placement: g,
                key: "selectAll"
            },  t().createElement(Xe, {
                $disabled: h.current === "all",
                "aria-label": S,
                onClick: d,
                "data-test": "select-all"
            }, a ? (0, s._)("Select all Matches") : (0, s._)("Select all")),  t().createElement(Xe, {
                $disabled: h.current === "none",
                "aria-label": C,
                onClick: p,
                "data-test": "clear-all"
            }, a ? (0, s._)("Clear all Matches") : (0, s._)("Clear all")));
            
            return t().createElement("div", {
                key: "controls"
            }, o &&  t().createElement(he(), {
                id: o
            }, (0, s._)("Type to filter")),  t().createElement(Ue, {
                key: "filter",
                "data-test": "filter"
            },  t().createElement(ye(), {
                value: a,
                autoCapitalize: "off",
                autoComplete: "off",
                autoCorrect: "off",
                spellCheck: false,
                onChange: b,
                onKeyDown: m,
                onFocus: y,
                onBlur: v,
                placeholder: (0, s._)("filter"),
                role: "combobox",
                "aria-expanded": "true",
                "aria-controls": c,
                "aria-owns": w && l ? n : undefined,
                "aria-label": (0, s._)("Filter"),
                "aria-autocomplete": "list",
                "aria-activedescendant": w && l ? n : undefined,
                inputRef: u,
                inputId: i,
                canClear: true,
                startAdornment:  t().createElement(Ge, null,  t().createElement(qe, null))
            })), f && l && O === "buttongroup" && k);
        };
        var Dt = false;
        var Nt = function e(t) {
            var r = t.prefixLabel, n = t.label, o = t.suffixLabel;
            var a = n;
            if (r) {
                a = [ "".concat(r, ": ") ].concat(a);
            }
            if (o) {
                a = G()(a).concat(" ".concat(o));
            }
            return a;
        };
        function Lt(r) {
            var n = r.appearance, o = r.append, a = r.children, l = r.currentValues, i = l === void 0 ? [] : l, u = r.describedBy, c = r.disabled, f = r.elementRef, p = r.error, d = r.inline, v = r.labelText, b = r.labelledBy, y = r.multiple, m = r.onClick, h = r.placeholder, g = r.prefixLabel, O = r.prepend, w = r.required, S = r.suffixLabel, C = r.toggle, k = r.toggleContent, x = Ot(r, [ "appearance", "append", "children", "currentValues", "describedBy", "disabled", "elementRef", "error", "inline", "labelText", "labelledBy", "multiple", "onClick", "placeholder", "prefixLabel", "prepend", "required", "suffixLabel", "toggle", "toggleContent" ]);
            var j;
            var P;
            var E = [];
            // Generate buttonLabels
                        var I = e.Children.toArray(a);
            var R = i.reduce((function(e, t, r, n) {
                var o = X()(I, (function(e) {
                    return Tt(e) && e.props.value === t;
                }));
                if (o) {
                    var a = o.props, l = a.children, u = a.icon, c = a.label;
                    var f = k !== "optionLabel" && l ? l : c;
                    e.push(f);
                    E.push(c);
                    // if not in multiple mode, add the icon
                                        if (!y && i.length === 1) {
                        j = u;
                    }
                } else if (y) {
                    // only add values that don't match an option in "multiple" mode to preserve old behaviour
                    e.push(t);
                    E.push(t.toString());
                }
                if (r < n.length - 1) {
                    e.push((0, s._)(", "));
                    E.push((0, s._)(", "));
                }
                return e;
            }), []);
            P = R;
            // only apply prefix / suffix if the label is not empty
                        if (P.length > 0) {
                // If there's more than one item selected, read out the selected total
                // rather than reading out each selected item
                E = Nt({
                    prefixLabel: g,
                    label: P.length > 1 ? [ "".concat(i.length, " items selected") ] : E,
                    suffixLabel: S
                });
                P = Nt({
                    prefixLabel: g,
                    label: P,
                    suffixLabel: S
                });
            }
            // single <Select> behaviour is to show the placeholder if all parts of the label
            // are empty strings so we replicate this behaviour here
                        if (P.length === 0 || !y && P.every((function(e) {
                return e === "";
            }))) {
                P = It(h);
                E = P;
            }
            var M = Object.keys(x).includes("aria-labelledby");
            var T = kt({
                "aria-describedby": u,
                "aria-label": b || M ? undefined : "".concat(v ? "".concat(v, ", ") : "").concat(E.join("")),
                // aria-labelledby takes precedence over aria-label, so existence of both is redundant
                "aria-labelledby": b,
                "aria-required": w,
                "data-select-appearance": n,
                append: o,
                prepend: O,
                onClick: m,
                role: "combobox",
                disabled: c,
                elementRef: f,
                error: p
            }, x);
            if (y) {
                T["data-test-values"] = JSON.stringify(i);
            } else {
                var _ = vt(i, 1), A = _[0];
                T["data-test-value"] = A;
            }
            if (C) {
                
                return (0, e.cloneElement)(C, T);
            }
            if (n === "link") {
                
                return t().createElement(pe(), dt({}, T, {
                    "data-select-appearance": "link"
                }), !!j &&  t().createElement(ze, null, j), P || h,  t().createElement(We, null,  t().createElement(Re, null)));
            }
            
            return t().createElement($e, dt({}, T, {
                $multiple: y,
                appearance: n,
                label: P,
                error: p,
                icon: j,
                inline: d,
                isMenu: true,
                onClick: m
            }, oe()(x, At)), !!i.length && y &&  t().createElement(Je, {
                "data-role": "count"
            }, "(", i.length, ")"));
        }
        Lt[ce.legacyRefMode] = true;
        function Ft(r) {
            var n = r.allowKeyMatching, o = n === void 0 ? true : n, a = r.animateLoading, l = r.appearance, i = l === void 0 ? "toggle" : l, u = r.append, c = r.allowNewValues, p = r.children, d = r.defaultPlacement, v = d === void 0 ? "vertical" : d, b = r.defaultValues, y = r.describedBy, m = r.disabled, h = r.elementRef, g = r.error, O = r.filter, w = r.footerMessage, S = r.inline, x = r.inputId, j = r.inputRef, P = r.isLoadingOptions, E = r.labelledBy, I = r.labelText, R = r.loadingMessage, M = r.menuStyle, T = M === void 0 ? {} : M, _ = r.multiple, A = r.name, B = r.noOptionsMessage, q = B === void 0 ? Bt : B, V = r.onChange, D = r.onScroll, N = r.onScrollBottom, L = r.onFilterChange, F = r.onClick, K = r.onClose, H = r.onOpen, $ = r.required, z = r.placeholder, W = z === void 0 ? qt : z, U = r.prefixLabel, G = r.prepend, J = r.repositionMode, Q = J === void 0 ? "flip" : J, Z = r.selectAllAppearance, te = Z === void 0 ? "buttongroup" : Z, re = r.showSelectedValuesFirst, ne = r.suffixLabel, oe = r.tabConfirmsNewValue, ae = r.values, ie = r.virtualization, ce = r.toggle, fe = r.toggleContent, pe = fe === void 0 ? "optionChildren" : fe, be = Ot(r, [ "allowKeyMatching", "animateLoading", "appearance", "append", "allowNewValues", "children", "defaultPlacement", "defaultValues", "describedBy", "disabled", "elementRef", "error", "filter", "footerMessage", "inline", "inputId", "inputRef", "isLoadingOptions", "labelledBy", "labelText", "loadingMessage", "menuStyle", "multiple", "name", "noOptionsMessage", "onChange", "onScroll", "onScrollBottom", "onFilterChange", "onClick", "onClose", "onOpen", "required", "placeholder", "prefixLabel", "prepend", "repositionMode", "selectAllAppearance", "showSelectedValuesFirst", "suffixLabel", "tabConfirmsNewValue", "values", "virtualization", "toggle", "toggleContent" ]);
            // @docs-props-type SelectBasePropsBase
                        var ye = (0, Ye["default"])({
                componentName: "SelectBase",
                /* eslint-disable-next-line prefer-rest-params */
                componentProps: arguments[0],
                // see SUI-7028
                defaultValuePropName: "defaultValues",
                valuePropName: "values"
            });
            // states
                        var me = (0, e.useState)((function() {
                return {
                    activeItemId: (0, Se.createDOMID)("active-item"),
                    menuListboxId: (0, Se.createDOMID)("menu-listbox")
                };
            })), he = vt(me, 1), ge = he[0], ke = ge.activeItemId, xe = ge.menuListboxId;
            var je = (0, e.useState)(0), Pe = vt(je, 2), Ee = Pe[0], Ie = Pe[1];
            var Re = (0, e.useState)(""), Me = vt(Re, 2), Te = Me[0], _e = Me[1];
            var Ae = (0, e.useState)(false), Be = vt(Ae, 2), qe = Be[0], Ve = Be[1];
            var De = (0, e.useState)(false), Le = vt(De, 2), Fe = Le[0], Ke = Le[1];
            var He = (0, e.useState)([]), $e = vt(He, 2), ze = $e[0], We = $e[1];
            var Ue = (0, e.useState)(b || []), Ge = vt(Ue, 2), Je = Ge[0], Xe = Ge[1];
 // previous state
                        var Qe = Oe()(Ee);
            // refs
                        var Ze = (0, e.useRef)(null);
            var tt = (0, e.useRef)(null);
            var rt = (0, e.useRef)(null);
            var nt = (0, e.useRef)([]);
            var ot = (0, e.useRef)([]);
            var at = (0, e.useRef)(Qe);
            var it = (0, e.useRef)();
            var ut = (0, e.useRef)({});
            var st = (0, e.useRef)(0);
            var ft = (0, e.useRef)([]);
            var pt = (0, e.useRef)(null);
            var bt = (0, e.useRef)();
            var yt = (0, e.useRef)(0);
            var mt = (0, e.useRef)("none");
            var ht = (0, e.useState)(O ? (0, Se.createDOMID)("filter") : undefined), gt = vt(ht, 1), wt = gt[0];
            (0, e.useEffect)((function() {
                if (false) {}
            }), [ i, u, g, G ]);
            var St = (0, e.useCallback)((function() {
                var e = ye ? ae : Je;
                return _ || e == null ? e : e.slice(0, 1);
            }), [ ye, _, ae, Je ]);
            var Ct = (0, e.useCallback)((function() {
                var e;
                // in non-multiple mode, don't move values to the top of the list
                                return _ && re !== "never" ? (e = St()) !== null && e !== void 0 ? e : [] : [];
            }), [ St, _, re ]);
            var kt = (0, e.useCallback)((function(e) {
                var t = Te;
                Ve(true);
                We(Ct());
                // SUI-3234: preserve existing behavior difference between <Select> and <Multiselect.Compact>
                                if (_) {
                    _e("");
                }
                if (t !== Te) {
                    L === null || L === void 0 ? void 0 : L(e, {
                        keyword: Te
                    });
                }
            }), [ Te, Ct, _, L ]);
            (0, e.useEffect)((function() {
                if (qe) {
                    H === null || H === void 0 ? void 0 : H();
                    if (pt.current && !O) {
                        pt.current.focus();
                    } else {
                        var e;
                        Ie((e = bt.current) !== null && e !== void 0 ? e : 0);
                    }
                }
            }), [ H, qe, ze, Te, O ]);
            var xt = (0, e.useCallback)((function() {
                Ve(false);
                Ie(0);
                at.current = null;
                K === null || K === void 0 ? void 0 : K();
            }), [ K ]);
            var jt = (0, e.useCallback)((function(e, t) {
                var r;
                var n = (r = St()) !== null && r !== void 0 ? r : [];
                var o = n.indexOf(t);
                var a;
                if (_) {
                    if (o >= 0) {
                        a = [].concat(ct(n.slice(0, o)), ct(n.slice(o + 1)));
                    } else {
                        a = n.concat([ t ]);
                    }
                } else {
                    // non-multiple mode must always have a value
                    a = [ t ];
                }
                var l = !ye;
                if (l) {
                    Xe(a);
                }
                if (_) {
                    // in uncontrolled multiple mode, keep the menu open
                    if (l) {
                        Ve(true);
                    }
                } else {
                    var i;
                    // non-multiple mode only supports a single selection
                    // so close the menu once a selection is made
                                        xt({
                        reason: "contentClick"
                    });
                    (i = Ze.current) === null || i === void 0 ? void 0 : i.focus();
                }
                V === null || V === void 0 ? void 0 : V(e, {
                    values: a,
                    name: A,
                    reason: "valueToggle"
                });
            }), [ St, xt, ye, _, A, V ]);
            var Pt = function e() {
                tt.current = null;
                nt.current = [];
                if (rt.current) {
                    clearTimeout(rt.current);
                }
            };
            var Et = (0, e.useCallback)((function(e) {
                var r;
                // this doesn't make sense if we can't select multiple values
                                if (!_) {
                    return;
                }
                var n = (r = St()) !== null && r !== void 0 ? r : [];
                var o = le()(n.concat(ft.current));
                o = t().Children.toArray(p).filter((function(e) {
                    return Tt(e) && ee()(o, e.props.value) && (!e.props.disabled || ee()(n, e.props.value));
                })).map((function(e) {
                    return e.props.value;
                }));
                if (!ye) {
                    Xe(o);
                }
                V === null || V === void 0 ? void 0 : V(e, {
                    values: o,
                    name: A,
                    reason: "selectAll"
                });
            }), [ p, St, ye, _, A, V ]);
            var It = (0, e.useCallback)((function(e) {
                var r;
                // this doesn't make sense if we can't select multiple values
                                if (!_) {
                    return;
                }
                var n = (r = St()) !== null && r !== void 0 ? r : [];
                var o = ue().apply(void 0, [ n ].concat(ct(ft.current)));
                // this will unselect all selected values unless those values are disabled or hidden by the filter
                                var a = t().Children.toArray(p).filter((function(e) {
                    return Tt(e) && (ee()(n, e.props.value) && e.props.disabled || ee()(o, e.props.value));
                })).map((function(e) {
                    return e.props.value;
                }));
                if (!ye) {
                    Xe(a);
                }
                V === null || V === void 0 ? void 0 : V(e, {
                    values: a,
                    name: A,
                    reason: "clearAll"
                });
            }), [ p, St, ye, _, A, V ]);
            var At = (0, e.useCallback)((function(e) {
                if (qe && !P) {
                    N === null || N === void 0 ? void 0 : N(e);
                }
            }), [ qe, P, N ]);
            var Nt = (0, e.useCallback)((function(t) {
                var r = (0, Ce.keycode)(t.nativeEvent);
                if (r === "tab") {
                    if (oe && it.current && st.current <= 1) {
                        t.preventDefault();
                        jt(t, it.current);
                    }
                }
                if (t.shiftKey || t.metaKey || t.ctrlKey) {
                    if (r === "a" && (t.ctrlKey || t.metaKey)) {
                        // handle control + A
                        if (mt.current === "all") {
                            It(t);
                        } else {
                            Et(t);
                        }
                    }
                    return;
                }
                if (r === "down") {
                    t.preventDefault();
                    Ie(Math.min(Ee + 1, te === "checkbox" ? st.current : st.current - 1));
                    if (p && N) {
                        var n;
                        var o = e.Children.toArray(p).length - (2 + ((n = St()) !== null && n !== void 0 ? n : []).length);
                        if (Ee === o) {
                            At(t);
                        }
                    }
                }
                if (r === "up") {
                    t.preventDefault();
                    Ie(Math.max(Ee - 1, 0));
                }
                if (r === "enter" && it.current && qe) {
                    if (it.current === "selectAll") {
                        if (mt.current === "all") {
                            It(t);
                        } else {
                            Et(t);
                        }
                    } else {
                        t.preventDefault();
                        jt(t, it.current);
                    }
                }
            }), [ Ee, p, St, It, At, Et, N, qe, te, oe, jt ]);
            var Ft = (0, e.useCallback)((function(e, t) {
                var r = t.value;
                e.preventDefault();
                if (!qe) {
                    return;
                }
                jt(e, r);
            }), [ qe, jt ]);
            var Kt = (0, e.useCallback)((function(e, t) {
                var r = e.nativeEvent.key;
                // Checking for a single character to avoid complications from double-byte languages and emojis.
                                if (r.length === 1) {
                    var n = [];
                    var o = {
                        index: 0,
                        value: r
                    };
                    if (!tt.current) {
                        if (r === " ") {
                            Pt();
                            return;
                        }
                        n = et(ot.current, o);
                    } else if (nt.current.length > 1) {
                        o.index = tt.current.index + 1;
                        n = et(nt.current, o);
                    }
                    if (n.length) {
                        var a;
                        var l = 0;
                        // If the active option is a first character match, cycle to the next matching option.
                                                if (o.index === 0 && n.length > 1) {
                            var i = n.indexOf(ot.current[t]);
                            if (i >= 0) {
                                l = i === n.length - 1 ? 0 : i + 1;
                            }
                        }
                        var u = n[l];
                        var c = u.value, s = u.label;
                        var f = ut.current[_t(c, s)];
                        f === null || f === void 0 ? void 0 : (a = f.focus) === null || a === void 0 ? void 0 : a.call(f);
                    }
                    nt.current = n;
                    tt.current = o;
                    if (rt.current) {
                        clearTimeout(rt.current);
                    }
                    rt.current = setTimeout(Pt, 500);
                    e.preventDefault();
                    e.stopPropagation();
                }
            }), []);
            var Ht = (0, e.useCallback)((function(e, t) {
                var r = t.value;
                _e(r);
                Ve(true);
                Ie(0);
                L === null || L === void 0 ? void 0 : L(e, {
                    keyword: r
                });
            }), [ L ]);
            var $t = (0, e.useCallback)((function() {
                Ke(true);
            }), []);
            var zt = (0, e.useCallback)((function() {
                Ke(false);
            }), []);
            var Wt = (0, e.useCallback)((function(e) {
                if (at.current !== Ee) {
                    k(e);
                }
            }), [ Ee ]);
            var Ut = (0, e.useCallback)((function(e, t, r) {
                if (r) {
                    pt.current = e;
                }
                if (e == null) {
                    delete ut.current[t];
                } else {
                    ut.current[t] = e;
                }
            }), [ ut ]);
            var Gt = (0, e.useCallback)((function(e) {
                Ze.current = e;
            }), [ Ze ]);
            var Jt = (0, e.useMemo)((function() {
                var e;
                return (e = St()) !== null && e !== void 0 ? e : [];
            }), [ St ]);
            var Xt = e.Children.toArray(p);
            var Qt = Jt.some((function(e) {
                var t = X()(Xt, (function(t) {
                    return Tt(t) && t.props.value === e;
                }));
                return t && !t.props.disabled;
            }));
            var Yt = re === "immediately" ? Ct() : ze;
            var Zt = (0, e.useMemo)((function() {
                st.current = 0;
                bt.current = undefined;
                yt.current = 0;
                it.current = undefined;
                ot.current = [];
                var r = function e(t, r) {
                    return function(e) {
                        return Ut(e, t, r);
                    };
                };
                var n;
                var a = 0;
                var l = false;
                // used to avoid overwriting the selected item ref in multiple mode
                                var i;
                var u = e.Children.toArray(p).reduce((function(u, c, s) {
                    // ignore Headings and Dividers
                    if (!Tt(c)) {
                        u.push(c);
                        return u;
                    }
                    var p = c.props, d = p.disabled, v = p.hidden, b = p.label, y = p.value;
 // Find out if the search string exactly matches a value
                                        if (y === Te) {
                        n = true;
                    }
                    var m = Jt && Jt.indexOf(y) >= 0;
                    var h = !!m && !d && !i;
                    var g = o && !_ && !O && !P && !N;
                    var w = _t(y, b);
                    var S = -1;
                    if (g && !d && !v) {
                        ot.current.push({
                            label: b,
                            value: y
                        });
                        S = ot.current.length - 1;
                    }
                    // Format the Menu.Item
                                        var C =  (0, e.cloneElement)(c, {
                        elementRef: r(w, h),
                        key: c.key || s,
                        onClick: Ft,
                        onKeyDown: g ? function(e) {
                            return Kt(e, S);
                        } : undefined,
                        selected: m,
                        multiple: _,
                        role: "option"
                    });
                    if (h) {
                        i = true;
                    }
                    if (Yt && Yt.indexOf(y) >= 0) {
                        if (a === 0) {
                            u.splice(a, 0,  t().createElement(f.Divider, {
                                key: "topDivider"
                            }));
                            l = true;
                        }
                        u.splice(a, 0, C);
                        a += 1;
                    } else {
                        u.push(C);
                    }
                    return u;
                }), []);
                // In multiple mode, add missing items
                                if (_) {
                    Y()(Jt, (function(e) {
                        var o = X()(u, (function(t) {
                            return Tt(t) && t.props && t.props.value === e;
                        }));
                        if (!o) {
                            if (e === Te) {
                                n = true;
                            }
                            var i = Yt && Yt.indexOf(e) >= 0;
                            var c = Yt.length;
                            if (a === 0) {
                                u.splice(0, 0,  t().createElement(f.Divider, {
                                    key: "topDivider"
                                }));
                                a += 1;
                                l = true;
                            }
                            var s = String(e);
                            var p = _t(e, s);
                            u.splice(i ? 0 : c + 1, 0,  t().createElement(C, {
                                elementRef: r(p),
                                label: s,
                                value: e,
                                key: "missing-value-".concat(e),
                                onClick: Ft,
                                multiple: _,
                                selected: true
                            }));
                            if (i) {
                                a += 1;
                            }
                        }
                    }));
                }
                var d = O === "controlled";
                // Filter the items
                                var v = (0, we.stringToKeywords)(Te);
                u = d ? u : u.filter((function(e) {
                    if (Tt(e)) {
                        return (0, we.testPhrase)(e.props.label, v);
                    }
                    return true;
 // Keep all headers and non-interactive options
                                })).map((function(t) {
                    if (!Tt(t)) {
                        return t;
                    }
                    // highlight matched text
                                        var r = v && (0, we.keywordLocations)(t.props.label, v);
                    
                    return (0, e.cloneElement)(t, {
                        matchRanges: r || undefined
                    });
                }));
                // Add the option to add the new value
                                if (c && !n && Te) {
                    var b = l ? a + 1 : a;
                    var y = "".concat(Te, " (new value)");
                    var m = _t(Te, y);
                    u.splice(b, 0,  t().createElement(C, {
                        elementRef: r(m),
                        label: y,
                        value: Te,
                        key: "newValue",
                        multiple: _,
                        onClick: Ft
                    }));
                }
                // When selectAll is a menu item, add an offset so that activeItem accounts for the extra selectAll option.
                                var h = te === "checkbox" && _ && u.length > 1 ? 1 : 0;
                var g = true;
                // Highlight the selected Items and remove hidden
                                u = u.reduce((function(t, r) {
                    // ignore Dividers & Headings
                    if (!Tt(r)) {
                        t.push(r);
                        return t;
                    }
                    // Ignore any hidden items
                                        if (r.props && r.props.hidden) {
                        return t;
                    }
                    if (r.props.selected && !r.props.disabled && bt.current == null) {
                        bt.current = st.current;
                    }
                    var n = h === Ee;
                    h += 1;
                    st.current += 1;
                    yt.current += r.props.selected ? 1 : 0;
                    if (r.key !== "newValue" && !r.props.disabled && !r.props.selected) {
                        g = false;
                    }
                    if (!n || !Fe) {
                        t.push(r);
                        return t;
                    }
                    if (!r.props.disabled) {
                        it.current = r.props.value;
                    }
                    var o =  (0, e.cloneElement)(r, {
                        active: n,
                        elementRef: Wt,
                        id: ke
                    });
                    t.push(o);
                    return t;
                }), []);
                mt.current = yt.current === 0 && "none" || g && "all" || "some";
                // add select all option
                                if (te === "checkbox" && _ && st.current > 0) {
                    var w;
                    if (mt.current === "all") {
                        if (Te === "") {
                            w = (0, s._)("Clear all");
                        } else {
                            w = (0, s._)("Clear all matches");
                        }
                    } else if (Te === "") {
                        w = (0, s._)("Select all");
                    } else {
                        w = (0, s._)("Select all matches");
                    }
                    if (Ee === 0 && Fe) {
                        it.current = "selectAll";
                    }
                    u.unshift( t().createElement(Ne, {
                        key: "select-all-option",
                        active: Ee === 0,
                        changedToggle: !!ce,
                        elementRef: Wt,
                        id: Ee === 0 ? ke : undefined,
                        onClick: mt.current === "all" ? It : Et,
                        selectAllLabel: w,
                        selected: mt.current === "all" || mt.current !== "none" && "some",
                        totalCount: Jt.length,
                        tabIndex: -1
                    }),  t().createElement(f.Divider, {
                        key: "selectAllDivider"
                    }));
                }
                ft.current = u.reduce((function(e, t) {
                    if (Tt(t)) {
                        e.push(t.props.value);
                    }
                    return e;
                }), []);
                Dt = u.some((function(e) {
                    return Tt(e);
                }));
                return u;
            }), [ Ee, ke, o, c, p, Jt, O, Te, Wt, It, Ft, Kt, Ut, Et, P, _, Yt, N, te, Fe, ce ]);
            var er = function e(r) {
                var n = r.anchorWidth, o = r.maxHeight, l = r.placement;
                var i = Rt({
                    anchorWidth: n,
                    isMultiple: _,
                    maxHeight: o,
                    menuStyle: T
                });
                var u = Jt.length > 0 && !Qt && !O ? 0 : undefined;
                var c = {
                    "aria-multiselectable": _ || undefined,
                    childrenStart: !!O &&  t().createElement(Vt, {
                        activeItemId: ke,
                        filterA11yId: wt,
                        filterKeyword: Te,
                        hasChildren: Dt,
                        inputId: x,
                        inputRef: j,
                        menuListboxId: xe,
                        multiple: _,
                        onClearAll: It,
                        onSelectAll: Et,
                        onTextBlur: zt,
                        onTextChange: Ht,
                        onTextFocus: $t,
                        onTextKeyDown: Nt,
                        optionSelection: mt,
                        placement: l,
                        selectAllAppearance: te,
                        textHasFocus: Fe
                    }),
                    focusMode: O ? "never" : undefined,
                    isLoading: P,
                    menuId: xe,
                    onScrollBottom: N ? At : undefined,
                    placement: l !== null && l !== void 0 ? l : undefined,
                    noOptionsMessage: q,
                    footerMessage: w,
                    animateLoading: a,
                    loadingMessage: R,
                    onScroll: D,
                    style: i,
                    tabIndex: u
                };
                if (ie) {
                    
                    return t().createElement(de.VirtualizedResultsMenu, dt({
                        virtualization: ie
                    }, c), Zt);
                }
                
                return t().createElement(ve(), c, Zt);
            };
            
            return t().createElement(se(), {
                closeReasons: Mt,
                inputId: x,
                "aria-labelledby": wt,
                toggle:  t().createElement(Lt, dt({
                    appearance: i,
                    append: u,
                    currentValues: St(),
                    "data-test": _ ? "multiselect" : "select",
                    describedBy: y,
                    disabled: m,
                    elementRef: h,
                    error: g,
                    inline: S,
                    labelText: I,
                    labelledBy: E,
                    multiple: _,
                    onClick: F,
                    placeholder: W,
                    prefixLabel: U,
                    prepend: G,
                    required: $,
                    suffixLabel: ne,
                    toggle: ce,
                    toggleContent: pe
                }, be), p),
                onRequestOpen: kt,
                onRequestClose: xt,
                open: qe,
                openWithArrowKeys: true,
                repositionMode: Q,
                defaultPlacement: O ? v : undefined,
                canCoverAnchor: lt().innerHeight < 500,
                ref: Gt,
                retainFocus: false,
                takeFocus: Jt.length === 0 || Jt.length > 0 && !Qt || !!O
            }, er);
        }
        Ft.propTypes = Et;
        Ft.componentType = "SelectBase";
        Ft.Option = C;
        Ft.Divider = f.Divider;
        Ft.Heading = f.Heading;
        /* harmony default export */        const Kt = Ft;
        // CONCATENATED MODULE: ./src/Multiselect/Compact.tsx
        function Ht(e) {
            "@babel/helpers - typeof";
            return Ht = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                return typeof e;
            } : function(e) {
                return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
            }, Ht(e);
        }
        function $t() {
            return $t = Object.assign ? Object.assign.bind() : function(e) {
                for (var t = 1; t < arguments.length; t++) {
                    var r = arguments[t];
                    for (var n in r) {
                        ({}).hasOwnProperty.call(r, n) && (e[n] = r[n]);
                    }
                }
                return e;
            }, $t.apply(null, arguments);
        }
        function zt(e, t) {
            if (null == e) return {};
            var r, n, o = Wt(e, t);
            if (Object.getOwnPropertySymbols) {
                var a = Object.getOwnPropertySymbols(e);
                for (n = 0; n < a.length; n++) {
                    r = a[n], t.includes(r) || {}.propertyIsEnumerable.call(e, r) && (o[r] = e[r]);
                }
            }
            return o;
        }
        function Wt(e, t) {
            if (null == e) return {};
            var r = {};
            for (var n in e) {
                if ({}.hasOwnProperty.call(e, n)) {
                    if (t.includes(n)) continue;
                    r[n] = e[n];
                }
            }
            return r;
        }
        function Ut(e, t) {
            if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
        }
        function Gt(e, t) {
            for (var r = 0; r < t.length; r++) {
                var n = t[r];
                n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), 
                Object.defineProperty(e, or(n.key), n);
            }
        }
        function Jt(e, t, r) {
            return t && Gt(e.prototype, t), r && Gt(e, r), Object.defineProperty(e, "prototype", {
                writable: !1
            }), e;
        }
        function Xt(e, t) {
            if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function");
            e.prototype = Object.create(t && t.prototype, {
                constructor: {
                    value: e,
                    writable: !0,
                    configurable: !0
                }
            }), Object.defineProperty(e, "prototype", {
                writable: !1
            }), t && Qt(e, t);
        }
        function Qt(e, t) {
            return Qt = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(e, t) {
                return e.__proto__ = t, e;
            }, Qt(e, t);
        }
        function Yt(e) {
            var t = tr();
            return function() {
                var r, n = rr(e);
                if (t) {
                    var o = rr(this).constructor;
                    r = Reflect.construct(n, arguments, o);
                } else r = n.apply(this, arguments);
                return Zt(this, r);
            };
        }
        function Zt(e, t) {
            if (t && ("object" == Ht(t) || "function" == typeof t)) return t;
            if (void 0 !== t) throw new TypeError("Derived constructors may only return object or undefined");
            return er(e);
        }
        function er(e) {
            if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return e;
        }
        function tr() {
            try {
                var e = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {})));
            } catch (e) {}
            return (tr = function t() {
                return !!e;
            })();
        }
        function rr(e) {
            return rr = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(e) {
                return e.__proto__ || Object.getPrototypeOf(e);
            }, rr(e);
        }
        function nr(e, t, r) {
            return (t = or(t)) in e ? Object.defineProperty(e, t, {
                value: r,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = r, e;
        }
        function or(e) {
            var t = ar(e, "string");
            return "symbol" == Ht(t) ? t : t + "";
        }
        function ar(e, t) {
            if ("object" != Ht(e) || !e) return e;
            var r = e[Symbol.toPrimitive];
            if (void 0 !== r) {
                var n = r.call(e, t || "default");
                if ("object" != Ht(n)) return n;
                throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === t ? String : Number)(e);
        }
        var lr = {
            allowNewValues: a().bool,
            animateLoading: a().bool,
            children: a().node,
            controlledFilter: a().bool,
            defaultPlacement: a().oneOf([ "above", "below", "vertical" ]),
            defaultValues: a().array,
            describedBy: a().string,
            disabled: a().bool,
            elementRef: a().oneOfType([ a().func, a().object ]),
            error: a().bool,
            filter: a().oneOf([ false, true, "controlled" ]),
            footerMessage: a().node,
            inline: a().bool,
            inputId: a().string,
            inputRef: a().oneOfType([ a().func, a().object ]),
            isLoadingOptions: a().bool,
            labelledBy: a().string,
            loadingMessage: a().node,
            menuStyle: a().object,
            name: a().string,
            noOptionsMessage: a().node,
            onChange: a().func,
            onClose: a().func,
            onFilterChange: a().func,
            onOpen: a().func,
            onScroll: a().func,
            onScrollBottom: a().func,
            placeholder: a().string,
            repositionMode: a().oneOf([ "none", "flip" ]),
            selectAllAppearance: a().oneOf([ "buttongroup", "checkbox" ]),
            showSelectedValuesFirst: a().oneOf([ "nextOpen", "immediately", "never" ]),
            tabConfirmsNewValue: a().bool,
            values: a().array,
            /** @private */
            virtualization: a().number
        };
        var ir = {
            allowNewValues: false,
            animateLoading: false,
            defaultPlacement: "vertical",
            disabled: false,
            inline: false,
            isLoadingOptions: false,
            menuStyle: {},
            noOptionsMessage: (0, s._)("No matches"),
            placeholder: (0, s._)("Select..."),
            showSelectedValuesFirst: "nextOpen",
            tabConfirmsNewValue: false
        };
        // TS: not typed controlled/uncontrolled, handled by Multiselect wrapper component
                var ur =  function(r) {
            Xt(o, r);
            var n = Yt(o);
            function o() {
                Ut(this, o);
                return n.apply(this, arguments);
            }
            Jt(o, [ {
                key: "render",
                // @docs-props-type CompactPropsBase
                value: function r() {
                    var n = this.props, o = n.defaultValues, a = n.children, l = n.controlledFilter, i = n.filter, u = n.values, c = zt(n, [ "defaultValues", "children", "controlledFilter", "filter", "values" ]);
                    var s = true;
                    if (i != null) {
                        s = i;
                        if (false) {}
                    } else {
                        s = l ? "controlled" : true;
                    }
                    var f = {
                        children: e.Children.toArray(a).map((function(e) {
                            if (Tt(e)) {
                                var r;
                                var n = (r = e.key) !== null && r !== void 0 ? r : "".concat(e.props.label, "-").concat(e.props.value);
                                
                                return t().createElement(C, $t({
                                    key: n
                                }, e.props, {
                                    multiple: true
                                }));
                            }
                            return e;
                        })),
                        filter: s
                    };
                    if (o != null) {
                        f.defaultValues = o;
                    }
                    if (u != null) {
                        f.values = u;
                    }
                    
                    return t().createElement(Kt, $t({}, c, f, {
                        multiple: true
                    }));
                }
            } ]);
            return o;
        }(e.Component);
        nr(ur, "propTypes", lr);
        nr(ur, "defaultProps", ir);
        nr(ur, "Option", W);
        nr(ur, "Divider", f.Divider);
        nr(ur, "Heading", f.Heading);
        /* harmony default export */        const cr = ur;
        // CONCATENATED MODULE: external "lodash/defer"
        const sr = require("lodash/defer");
        var fr =  r.n(sr);
        // CONCATENATED MODULE: external "lodash/extend"
        const pr = require("lodash/extend");
        var dr =  r.n(pr);
        // CONCATENATED MODULE: external "lodash/get"
        const vr = require("lodash/get");
        var br =  r.n(vr);
        // CONCATENATED MODULE: external "lodash/isString"
        const yr = require("lodash/isString");
        var mr =  r.n(yr);
        // CONCATENATED MODULE: external "lodash/isUndefined"
        const hr = require("lodash/isUndefined");
        var gr =  r.n(hr);
        // CONCATENATED MODULE: external "lodash/keys"
        const Or = require("lodash/keys");
        var wr =  r.n(Or);
        // CONCATENATED MODULE: external "lodash/last"
        const Sr = require("lodash/last");
        var Cr =  r.n(Sr);
        // CONCATENATED MODULE: external "lodash/pickBy"
        const kr = require("lodash/pickBy");
        var xr =  r.n(kr);
        // CONCATENATED MODULE: external "@splunk/react-ui/Chip"
        const jr = require("@splunk/react-ui/Chip");
        var Pr =  r.n(jr);
        // CONCATENATED MODULE: external "@splunk/react-ui/Popover"
        const Er = require("@splunk/react-ui/Popover");
        var Ir =  r.n(Er);
        // CONCATENATED MODULE: external "@splunk/ui-utils/format"
        const Rr = require("@splunk/ui-utils/format");
        // CONCATENATED MODULE: external "@splunk/react-ui/Box"
        const Mr = require("@splunk/react-ui/Box");
        var Tr =  r.n(Mr);
        // CONCATENATED MODULE: ./src/Multiselect/NormalStyles.ts
        var _r = Fe()(Tr()).withConfig({
            displayName: "NormalStyles__StyledBox",
            componentId: "sc-1uwwpco-0"
        })([ "border-radius:", ";align-items:", ";flex-wrap:wrap;min-height:", ";max-height:300px;overflow-y:auto;border:1px solid ", ";padding:", ";", " ", " ", " ", " ", " &[data-inline]{width:400px;}[data-inline='true'] + &{margin-left:", "}" ], Ee.variables.borderRadius, (0, 
        Ee.pick)({
            enterprise: "flex-start",
            prisma: "center"
        }), Ee.variables.inputHeight, (0, Ee.pick)({
            enterprise: {
                light: Ee.variables.gray60,
                dark: Ee.variables.borderColor
            },
            prisma: Ee.variables.interactiveColorBorder
        }), (0, Ee.pick)({
            enterprise: "2px 0 0 2px",
            prisma: "2px"
        }), (0, Ee.pick)({
            enterprise: {
                light: (0, Le.css)([ "background-color:", ";" ], Ee.variables.white),
                dark: (0, Le.css)([ "background-color:", ";" ], Ee.variables.gray22)
            }
        }), (function(e) {
            var t = e.$hasfocus;
            return t && (0, Ee.pick)({
                enterprise: (0, Le.css)([ "box-shadow:", ";" ], Ee.variables.focusShadow),
                prisma: (0, Le.css)([ "border-color:", ";" ], Ee.variables.focusColor)
            });
        }), (function(e) {
            var t = e.$error;
            return t && (0, Le.css)([ "border-color:", ";color:", ";" ], Ee.variables.accentColorNegative, Ee.variables.accentColorNegative);
        }), (function(e) {
            var t = e.$disabled, r = e.$hasfocus;
            return t ? (0, Ee.pick)({
                enterprise: {
                    light: (0, Le.css)([ "background-color:", ";border-color:", ";cursor:not-allowed;" ], Ee.variables.gray96, Ee.variables.gray92),
                    dark: (0, Le.css)([ "background-color:", ";border-color:", ";cursor:not-allowed;" ], Ee.variables.gray22, Ee.variables.gray30)
                },
                prisma: (0, Le.css)([ "border-color:", ";cursor:not-allowed;" ], Ee.variables.interactiveColorBorderDisabled)
            }) : !r && (0, Le.css)([ "&:hover{border-color:", ";}" ], (0, Ee.pick)({
                enterprise: Ee.variables.borderColor,
                prisma: Ee.variables.interactiveColorBorderHover
            }));
        }), (function(e) {
            var t = e.$popoverOpen;
            return t && (0, Le.css)([ "position:relative;z-index:calc(", " - 2);" ], Ee.variables.zindexFixedNavbar);
        }), Ee.variables.spacingSmall);
        var Ar = Fe().span.withConfig({
            displayName: "NormalStyles__StyledButtonsWrapper",
            componentId: "sc-1uwwpco-1"
        })([ "display:contents;" ]);
        var Br = Fe().input.withConfig({
            displayName: "NormalStyles__StyledInput",
            componentId: "sc-1uwwpco-2"
        })([ "", ";flex:1 0 auto;max-width:100%;line-height:12px;", "" ], Ee.mixins.reset("block"), (0, 
        Ee.pick)({
            enterprise: {
                comfortable: (0, Le.css)([ "padding:", ";" ], Ee.variables.spacingXSmall),
                compact: (0, Le.css)([ "padding:3px;" ])
            },
            prisma: {
                comfortable: (0, Le.css)([ "padding:7px 10px;" ]),
                compact: (0, Le.css)([ "padding:3px;" ])
            }
        }));
        var qr = Fe().div.withConfig({
            displayName: "NormalStyles__StyledOverlay",
            componentId: "sc-1uwwpco-3"
        })([ "", "" ], (function(e) {
            var t = e.$popoveropen;
            return t && (0, Le.css)([ "position:fixed;top:0;left:0;width:100%;height:100%;z-index:calc(", " - 2);" ], Ee.variables.zindexFixedNavbar);
        }));
        // CONCATENATED MODULE: ./src/Multiselect/Normal.tsx
        function Vr(e) {
            "@babel/helpers - typeof";
            return Vr = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                return typeof e;
            } : function(e) {
                return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
            }, Vr(e);
        }
        function Dr(e) {
            return Kr(e) || Fr(e) || Lr(e) || Nr();
        }
        function Nr() {
            throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
        }
        function Lr(e, t) {
            if (e) {
                if ("string" == typeof e) return Hr(e, t);
                var r = {}.toString.call(e).slice(8, -1);
                return "Object" === r && e.constructor && (r = e.constructor.name), "Map" === r || "Set" === r ? Array.from(e) : "Arguments" === r || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r) ? Hr(e, t) : void 0;
            }
        }
        function Fr(e) {
            if ("undefined" != typeof Symbol && null != e[Symbol.iterator] || null != e["@@iterator"]) return Array.from(e);
        }
        function Kr(e) {
            if (Array.isArray(e)) return Hr(e);
        }
        function Hr(e, t) {
            (null == t || t > e.length) && (t = e.length);
            for (var r = 0, n = Array(t); r < t; r++) {
                n[r] = e[r];
            }
            return n;
        }
        function $r(e, t) {
            var r = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var n = Object.getOwnPropertySymbols(e);
                t && (n = n.filter((function(t) {
                    return Object.getOwnPropertyDescriptor(e, t).enumerable;
                }))), r.push.apply(r, n);
            }
            return r;
        }
        function zr(e) {
            for (var t = 1; t < arguments.length; t++) {
                var r = null != arguments[t] ? arguments[t] : {};
                t % 2 ? $r(Object(r), !0).forEach((function(t) {
                    an(e, t, r[t]);
                })) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(r)) : $r(Object(r)).forEach((function(t) {
                    Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(r, t));
                }));
            }
            return e;
        }
        function Wr(e, t) {
            if (null == e) return {};
            var r, n, o = Ur(e, t);
            if (Object.getOwnPropertySymbols) {
                var a = Object.getOwnPropertySymbols(e);
                for (n = 0; n < a.length; n++) {
                    r = a[n], t.includes(r) || {}.propertyIsEnumerable.call(e, r) && (o[r] = e[r]);
                }
            }
            return o;
        }
        function Ur(e, t) {
            if (null == e) return {};
            var r = {};
            for (var n in e) {
                if ({}.hasOwnProperty.call(e, n)) {
                    if (t.includes(n)) continue;
                    r[n] = e[n];
                }
            }
            return r;
        }
        function Gr() {
            return Gr = Object.assign ? Object.assign.bind() : function(e) {
                for (var t = 1; t < arguments.length; t++) {
                    var r = arguments[t];
                    for (var n in r) {
                        ({}).hasOwnProperty.call(r, n) && (e[n] = r[n]);
                    }
                }
                return e;
            }, Gr.apply(null, arguments);
        }
        function Jr(e, t) {
            if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
        }
        function Xr(e, t) {
            for (var r = 0; r < t.length; r++) {
                var n = t[r];
                n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), 
                Object.defineProperty(e, ln(n.key), n);
            }
        }
        function Qr(e, t, r) {
            return t && Xr(e.prototype, t), r && Xr(e, r), Object.defineProperty(e, "prototype", {
                writable: !1
            }), e;
        }
        function Yr(e, t) {
            if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function");
            e.prototype = Object.create(t && t.prototype, {
                constructor: {
                    value: e,
                    writable: !0,
                    configurable: !0
                }
            }), Object.defineProperty(e, "prototype", {
                writable: !1
            }), t && Zr(e, t);
        }
        function Zr(e, t) {
            return Zr = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(e, t) {
                return e.__proto__ = t, e;
            }, Zr(e, t);
        }
        function en(e) {
            var t = nn();
            return function() {
                var r, n = on(e);
                if (t) {
                    var o = on(this).constructor;
                    r = Reflect.construct(n, arguments, o);
                } else r = n.apply(this, arguments);
                return tn(this, r);
            };
        }
        function tn(e, t) {
            if (t && ("object" == Vr(t) || "function" == typeof t)) return t;
            if (void 0 !== t) throw new TypeError("Derived constructors may only return object or undefined");
            return rn(e);
        }
        function rn(e) {
            if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return e;
        }
        function nn() {
            try {
                var e = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {})));
            } catch (e) {}
            return (nn = function t() {
                return !!e;
            })();
        }
        function on(e) {
            return on = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(e) {
                return e.__proto__ || Object.getPrototypeOf(e);
            }, on(e);
        }
        function an(e, t, r) {
            return (t = ln(t)) in e ? Object.defineProperty(e, t, {
                value: r,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = r, e;
        }
        function ln(e) {
            var t = un(e, "string");
            return "symbol" == Vr(t) ? t : t + "";
        }
        function un(e, t) {
            if ("object" != Vr(e) || !e) return e;
            var r = e[Symbol.toPrimitive];
            if (void 0 !== r) {
                var n = r.call(e, t || "default");
                if ("object" != Vr(n)) return n;
                throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === t ? String : Number)(e);
        }
        var cn = {
            allowNewValues: a().bool,
            animateLoading: a().bool,
            children: a().node,
            controlledFilter: a().bool,
            defaultPlacement: a().oneOf([ "above", "below", "vertical" ]),
            defaultValues: a().array,
            describedBy: a().string,
            disabled: a().bool,
            elementRef: a().oneOfType([ a().func, a().object ]),
            error: a().bool,
            footerMessage: a().node,
            inline: a().bool,
            inputId: a().string,
            inputRef: a().oneOfType([ a().func, a().object ]),
            isLoadingOptions: a().bool,
            labelledBy: a().string,
            loadingMessage: a().node,
            menuStyle: a().object,
            name: a().string,
            noOptionsMessage: a().node,
            onChange: a().func,
            onClose: a().func,
            onFilterChange: a().func,
            onOpen: a().func,
            onScroll: a().func,
            onScrollBottom: a().func,
            placeholder: a().string,
            /** @private. */
            required: a().bool,
            repositionMode: a().oneOf([ "none", "flip" ]),
            tabConfirmsNewValue: a().bool,
            useClickawayOverlay: a().bool,
            values: a().array
        };
        var sn = {
            allowNewValues: false,
            animateLoading: false,
            defaultPlacement: "vertical",
            disabled: false,
            inline: false,
            isLoadingOptions: false,
            menuStyle: {},
            noOptionsMessage: (0, s._)("No matches"),
            placeholder: (0, s._)("Select..."),
            tabConfirmsNewValue: false,
            useClickawayOverlay: false
        };
        var fn = re()((function(e) {
            return {
                flexBasis: e,
                width: e
            };
        }));
        var pn = re()((function(e) {
            var t = e.anchorWidth, r = e.maxHeight, n = e.menuStyle;
            return dr()({
                maxHeight: r,
                overflow: "auto",
                width: Math.max(t !== null && t !== void 0 ? t : 0, 200)
            }, n);
        }));
        // TS: not typed controlled/uncontrolled, handled by Multiselect wrapper component
                var dn =  function(r) {
            Yr(o, r);
            var n = en(o);
            // @docs-props-type NormalPropsBase
                        function o(r) {
                var a;
                Jr(this, o);
                a = n.call(this, r);
                an(rn(a), "activeItemId", void 0);
                an(rn(a), "activeValue", void 0);
                an(rn(a), "availableOptionCount", void 0);
                an(rn(a), "children", void 0);
                an(rn(a), "controlledExternally", void 0);
                an(rn(a), "input", null);
                an(rn(a), "popoverId", void 0);
                an(rn(a), "previousActiveIndex", null);
                an(rn(a), "handleClick", (function() {
                    if (a.state.hasFocus) {
                        a.open({
                            resetFilterKeyword: false
                        });
                    } else {
                        var e;
                        (e = a.input) === null || e === void 0 ? void 0 : e.focus();
                    }
                }));
                an(rn(a), "handleRequestRemove", (function(e, t) {
                    var r = t.value;
                    fr()((function() {
                        return a.removeValue(e, r);
                    }));
 // allow the event to bubble before removing.
                                }));
                an(rn(a), "open", (function(e) {
                    var t = e.resetFilterKeyword;
                    if (!a.state.open) {
                        a.setState((function(e) {
                            return {
                                filterKeyword: t ? "" : e.filterKeyword,
                                hasFocus: true,
                                open: true
                            };
                        }), (function() {
                            var e, t;
                            (e = (t = a.props).onOpen) === null || e === void 0 ? void 0 : e.call(t);
                        }));
                    }
                }));
                an(rn(a), "handleInputFocus", (function(e) {
                    if (a.state.filterKeyword !== "") {
                        var t, r;
                        (t = (r = a.props).onFilterChange) === null || t === void 0 ? void 0 : t.call(r, e, {
                            keyword: ""
                        });
                    }
                    a.open({
                        resetFilterKeyword: true
                    });
                }));
                an(rn(a), "handleInputKeyDown", (function(t) {
                    var r, n;
                    var o = a.props, l = o.children, i = o.onScrollBottom, u = o.tabConfirmsNewValue;
                    var c = (0, Ce.keycode)(t.nativeEvent);
                    if (c === "tab" && a.state.open) {
                        if (u && !gr()(a.activeValue) && a.availableOptionCount <= 1) {
                            var s;
                            t.preventDefault();
                            a.addValue(t, a.activeValue);
                            (s = a.input) === null || s === void 0 ? void 0 : s.focus();
                        } else {
                            a.setState({
                                open: false
                            });
                        }
                    }
                    if (t.shiftKey || t.metaKey || t.ctrlKey) {
                        return;
                    }
                    if (c === "end" && a.state.open) {
                        t.preventDefault();
                        a.setState({
                            activeIndex: a.availableOptionCount - 1
                        });
                    }
                    if (c === "home" && a.state.open) {
                        t.preventDefault();
                        a.setState({
                            activeIndex: 0
                        });
                    }
                    if (c === "down") {
                        t.preventDefault();
                        if (a.state.open) {
                            a.setState((function(e) {
                                return {
                                    activeIndex: Math.min(e.activeIndex + 1, a.availableOptionCount - 1)
                                };
                            }));
                        } else {
                            a.setState({
                                activeIndex: 0,
                                open: true
                            });
                        }
                        if (l && i) {
                            var f;
                            var p = e.Children.toArray(l).length - (2 + ((f = a.getCurrentValues()) !== null && f !== void 0 ? f : []).length);
                            if (a.state.activeIndex === p) {
                                a.handleScrollBottom(t);
                            }
                        }
                    }
                    if (c === "up") {
                        t.preventDefault();
                        if (a.state.open) {
                            a.setState((function(e) {
                                return {
                                    activeIndex: Math.max(e.activeIndex - 1, 0)
                                };
                            }));
                        } else {
                            a.setState({
                                activeIndex: 0,
                                open: true
                            });
                        }
                    }
                    if (c === "enter" && !gr()(a.activeValue) && a.state.open) {
                        a.addValue(t, a.activeValue);
                    }
                    if (c === "backspace" && ((r = a.input) === null || r === void 0 ? void 0 : r.value) === "" && ((n = a.getCurrentValues()) === null || n === void 0 ? void 0 : n.length)) {
                        a.removeValue(t, Cr()(a.getCurrentValues()));
                    }
                }));
                an(rn(a), "handleInputChange", (function(e) {
                    var t, r;
                    a.setState({
                        filterKeyword: e.target.value,
                        open: true,
                        activeIndex: 0
                    });
                    (t = (r = a.props).onFilterChange) === null || t === void 0 ? void 0 : t.call(r, e, {
                        keyword: e.target.value
                    });
                }));
                an(rn(a), "handleMenuOptionClick", (function(e, t) {
                    var r;
                    var n = t.value;
                    e.stopPropagation();
                    a.addValue(e, n);
                    (r = a.input) === null || r === void 0 ? void 0 : r.focus();
                }));
                an(rn(a), "handleInputBlur", (function(e) {
                    var t = document.getElementById(a.popoverId);
                    var r = e.relatedTarget || document.activeElement;
 // IE11 doesn't support relatedTarget but sets activeElement
                                        var n = t && r && t.contains(r);
 // TS: target as Node is an unsafe assumption
                                        a.setState((function(e) {
                        return {
                            filterKeyword: n ? e.filterKeyword : "",
                            hasFocus: false
                        };
                    }));
                    if (!n) {
                        var o, l;
                        (o = (l = a.props).onFilterChange) === null || o === void 0 ? void 0 : o.call(l, e, {
                            keyword: ""
                        });
                    }
                }));
                an(rn(a), "handleRequestClose", (function(e) {
                    var t;
                    var r = e.reason, n = e.event;
                    if (r === "escapeKey" || r === "offScreen" || r === "clickAway" && n !== undefined && !((t = a.state.el) === null || t === void 0 ? void 0 : t.contains(n.target))) {
                        a.setState({
                            open: false
                        }, (function() {
                            var e, t;
                            a.previousActiveIndex = null;
                            (e = (t = a.props).onClose) === null || e === void 0 ? void 0 : e.call(t);
                        }));
                    }
                    if (r === "escapeKey") {
                        var o;
                        (o = a.input) === null || o === void 0 ? void 0 : o.focus();
                    }
                }));
                an(rn(a), "handleScrollBottom", (function(e) {
                    if (a.state.open && !a.props.isLoadingOptions) {
                        var t, r;
                        (t = (r = a.props).onScrollBottom) === null || t === void 0 ? void 0 : t.call(r, e);
                        a.setState({
                            loadingMoreMessage: "".concat(a.availableOptionCount, " options, loading more options")
                        });
                    }
                }));
                an(rn(a), "handleMount", (function(e) {
                    a.setState({
                        el: e
                    });
                    x(a.props.elementRef, e);
                }));
                an(rn(a), "handleInputMount", (function(e) {
                    a.input = e;
                    x(a.props.inputRef, e);
                }));
                an(rn(a), "handleActiveOptionMount", (function(e) {
                    if (a.previousActiveIndex !== a.state.activeIndex) {
                        e === null || e === void 0 ? void 0 : e.scrollIntoViewIfNeeded();
                    }
                }));
                an(rn(a), "renderMenu", (function(e) {
                    var r = e.anchorWidth, n = e.maxHeight, o = e.placement;
                    var l = pn({
                        anchorWidth: r,
                        maxHeight: n,
                        menuStyle: a.props.menuStyle
                    });
                    
                    return t().createElement(ve(), Gr({
                        focusMode: "never",
                        placement: o !== null && o !== void 0 ? o : undefined,
                        isLoading: a.props.isLoadingOptions,
                        onScrollBottom: a.props.onScrollBottom ? a.handleScrollBottom : undefined
                    }, oe()(a.props, "noOptionsMessage", "footerMessage", "animateLoading", "loadingMessage", "onScroll"), {
                        style: l
                    }), a.children);
                }));
                an(rn(a), "getSelectedItemsContent", (function(e) {
                    return e.map((function(e) {
                        var r = e;
 // TS: faking props here
                                                var n = r.props;
                        if (n != null) {
                            var o = n.children, a = n.label, l = n.value;
                            
                            return t().createElement("span", {
                                key: l.toString()
                            }, o || a, (0, Rr.sprintf)((0, s._)(" selected")));
                        }
                        
                        return t().createElement("span", {
                            key: (0, Se.createGUID)()
                        },  t().createElement(t().Fragment, null, r, (0, Rr.sprintf)((0, s._)(" selected"))));
                    }));
                }));
                a.state = {
                    activeIndex: 0,
                    el: null,
                    filterKeyword: "",
                    hasFocus: false,
                    open: false,
                    values: r.defaultValues || [],
                    loadingMoreMessage: ""
                };
                a.availableOptionCount = 0;
                a.children = [];
                a.controlledExternally = i()(r, "values");
                a.activeItemId = (0, Se.createDOMID)("active-item");
                a.popoverId = (0, Se.createDOMID)("popover");
                if (false) {}
                if (false) {}
                return a;
            }
            Qr(o, [ {
                key: "componentDidUpdate",
                value: function e(t, r) {
                    if (false) {}
                    if (false) {}
                    this.previousActiveIndex = r.activeIndex;
                    if (this.isControlled() && t.values !== this.props.values) {
                        // eslint-disable-next-line react/no-did-update-set-state
                        this.setState({
                            filterKeyword: "",
                            activeIndex: 0
                        });
                    }
                }
            }, {
                key: "getCurrentValues",
                value: function e() {
                    return this.isControlled() ? this.props.values : this.state.values;
                }
            }, {
                key: "isControlled",
                value: function e() {
                    return this.controlledExternally;
                }
                /**
     * Place focus on the text input.
     */
                // eslint-disable-next-line react/no-unused-class-component-methods
                        }, {
                key: "focus",
                value: function e() {
                    if (this.input) {
                        this.input.focus();
                    }
                }
            }, {
                key: "addValue",
                value: function e(t, r) {
                    var n, o, a;
                    if (!this.state.open) {
                        return;
                    }
                    var l = ((n = this.getCurrentValues()) !== null && n !== void 0 ? n : []).concat([ r ]);
                    var i = this.props.name;
                    if (!this.isControlled()) {
                        this.setState({
                            values: l,
                            activeIndex: 0,
                            open: true,
                            filterKeyword: ""
                        });
                    }
                    (o = (a = this.props).onChange) === null || o === void 0 ? void 0 : o.call(a, t, {
                        values: l,
                        name: i
                    });
                }
            }, {
                key: "removeValue",
                value: function e(t, r) {
                    var n, o;
                    var a = ue()(this.getCurrentValues(), r);
                    var l = this.props.name;
                    if (!this.isControlled()) {
                        this.setState({
                            values: a
                        });
                    }
                    (n = (o = this.props).onChange) === null || n === void 0 ? void 0 : n.call(o, t, {
                        values: a,
                        name: l
                    });
                }
            }, {
                key: "renderButtons",
                value: function e(r) {
                    var n = this;
                    // selectedItems may contain items or unmatched values at this point
                                        return r.map((function(e) {
                        var r = e;
 // TS: faking props here
                                                var o = r.props;
                        if (o != null) {
                            var a = o.children, l = o.icon, i = o.label, u = o.selectedAppearance, c = o.selectedBackgroundColor, s = o.selectedForegroundColor, f = o.value;
                            
                            return t().createElement(Pr(), {
                                "aria-selected": true,
                                disabled: n.props.disabled,
                                icon: l,
                                key: f.toString(),
                                "data-test": "selected-option",
                                onRequestRemove: n.handleRequestRemove,
                                role: "option",
                                value: f,
                                appearance: u,
                                backgroundColor: c,
                                foregroundColor: s
                            }, a || i);
                        }
                        
                        return t().createElement(Pr(), {
                            "aria-selected": true,
                            disabled: n.props.disabled,
                            key: (0, Se.createGUID)(),
                            "data-test": "selected-option",
                            onRequestRemove: n.handleRequestRemove,
                            role: "option",
                            value: r
                        },  t().createElement(t().Fragment, null, r));
                    }));
                }
 // eslint-disable-next-line react/no-unused-class-component-methods
                        }, {
                key: "render",
                value: function r() {
                    var n, o = this;
                    var a = this.props, l = a.allowNewValues, u = a.children, f = a.controlledFilter, p = a.defaultPlacement, d = a.describedBy, v = a.disabled, b = a.error, y = a.inline, m = a.inputId, h = a.labelledBy, g = a.placeholder, O = a.required, w = a.repositionMode, S = a.useClickawayOverlay, C = Wr(a, [ "allowNewValues", "children", "controlledFilter", "defaultPlacement", "describedBy", "disabled", "error", "inline", "inputId", "labelledBy", "placeholder", "required", "repositionMode", "useClickawayOverlay" ]);
                    var k = zr(zr({}, xr()(C, (function(e, t) {
                        return t === "role" || t.indexOf("aria-") === 0;
                    }))), {}, {
                        "aria-describedby": d,
                        "aria-labelledby": h,
                        "aria-invalid": b || undefined
                    });
                    var x = zr({}, xr()(C, (function(e, t) {
                        return t === "aria-label" || t === "aria-describedby";
                    })));
                    var j = (n = this.getCurrentValues()) !== null && n !== void 0 ? n : [];
                    var P = j.slice(0);
                    var E = j.indexOf(this.state.filterKeyword) >= 0;
                    // Map Options to selected values
                                        if (j && j.length) {
                        e.Children.toArray(u).filter(e.isValidElement).filter((function(e) {
                            return e.type === W;
                        })).forEach((function(e) {
                            if (e.type === W) {
                                var t = j.indexOf(e.props.value);
                                if (t !== -1) {
                                    P[t] = e;
                                }
                            }
                        }));
                    }
                    // Filter the items
                                        var I = (0, we.stringToKeywords)(this.state.filterKeyword);
                    var R = f ? e.Children.toArray(u) : e.Children.toArray(u).filter((function(e) {
                        if (br()(e, [ "props", "label" ], false)) {
                            return (0, we.testPhrase)(e.props.label, I);
                        }
                        return true;
 // Keep all headers and non-interactive options
                                        }));
                    this.availableOptionCount = 0;
                    this.activeValue = undefined;
                    this.children = e.Children.map(R, (function(t, r) {
                        var n = t.props;
                        if (!n || !i()(n, "value")) {
                            // ignore Headings and Dividers
                            return t;
                        }
                        var a = t;
                        var l = a.props, u = l.children, c = l.label, s = l.matchRanges, p = l.value;
 // find out if the search string exactly matches a value
                                                if (p === o.state.filterKeyword) {
                            E = true;
                        }
                        // remove items that are already selected
                                                var d = j.indexOf(p);
                        if (d >= 0) {
                            return null;
                        }
                        // highlight matched text
                                                var v = u === undefined || mr()(u);
                        var b = v && !f && !s && I && (0, we.keywordLocations)(c, I);
                        // clone item
                                                var y =  (0, e.cloneElement)(a, {
                            // eslint-disable-next-line react/no-array-index-key
                            key: r,
                            onClick: o.handleMenuOptionClick,
                            matchRanges: v && (s || b) || undefined
                        });
                        return y;
                    })).filter((function(e) {
                        return e !== null;
                    }));
                    // Add the option to add the new value
                                        if (l && !E && this.state.filterKeyword) {
                        this.children.unshift( t().createElement(W, {
                            label: "".concat(this.state.filterKeyword),
                            description: (0, s._)("(New value)"),
                            descriptionPosition: "right",
                            value: this.state.filterKeyword,
                            key: "newValue",
                            onClick: this.handleMenuOptionClick
                        }));
                    }
                    if (this.state.open) {
                        // highlight the selected Item
                        this.children = e.Children.map(this.children, (function(t) {
                            var r = t.props;
                            if (!r || !i()(r, "value")) {
                                // ignore Headings and Dividers
                                return t;
                            }
                            var n = t;
                            var a = n.props, l = a.disabled, u = a.value;
                            var c = o.availableOptionCount === o.state.activeIndex;
                            o.availableOptionCount += 1;
                            if (!c) {
                                return n;
                            }
                            if (!l) {
                                o.activeValue = u;
                            }
                            var s =  (0, e.cloneElement)(n, {
                                active: c,
                                id: o.activeItemId,
                                ref: o.handleActiveOptionMount
                            });
                            return s;
                        }));
                    }
                    var M = fn("".concat(this.state.filterKeyword.length * .8, "em"));
                    
                    return t().createElement(t().Fragment, null,  t().createElement(_r, Gr({
                        key: "control",
                        "data-test-values": JSON.stringify(j),
                        inline: y,
                        $hasfocus: this.state.hasFocus
                    }, c().apply(void 0, [ C, "animateLoading", "controlledFilter", "defaultValues", "footerMessage", "inputRef", "isLoadingOptions", "labelledBy", "menuStyle", "noOptionsMessage", "onChange", "onFilterChange", "onScroll", "onScrollBottom", "onClose", "onOpen", "values", "useClickawayOverlay" ].concat(Dr(wr()(k)))), {
                        onClick: v ? undefined : this.handleClick,
                        $disabled: v,
                        $error: b,
                        "data-test-popover-id": this.popoverId,
                        $popoverOpen: this.state.open,
                        flex: true,
                        elementRef: this.handleMount,
                        role: "group",
                        "aria-disabled": v || undefined,
                        "aria-labelledby": h
                    }, x),  t().createElement(Ar, {
                        role: "listbox",
                        "aria-invalid": b,
                        "aria-multiselectable": "true"
                    }, this.renderButtons(P)), !v &&  t().createElement(Br, Gr({
                        role: "combobox",
                        "data-test": "textbox",
                        id: m,
                        ref: this.handleInputMount,
                        onBlur: this.handleInputBlur,
                        onFocus: this.handleInputFocus,
                        onChange: this.handleInputChange,
                        onKeyDown: this.handleInputKeyDown,
                        value: this.state.filterKeyword,
                        autoCapitalize: "off",
                        autoComplete: "off",
                        autoCorrect: "off",
                        spellCheck: false,
                        style: M,
                        placeholder: j.length ? "" : g,
                        required: O,
                        "aria-activedescendant": this.state.open && this.availableOptionCount > 0 ? this.activeItemId : undefined,
                        "aria-autocomplete": "list",
                        "aria-controls": this.state.open ? this.popoverId : undefined,
                        "aria-owns": this.state.open ? this.popoverId : undefined,
                        "aria-expanded": this.state.open,
                        "aria-haspopup": true
                    }, k)),  t().createElement(Ir(), {
                        open: this.state.open && !!this.state.el,
                        autoCloseWhenOffScreen: true,
                        anchor: this.state.el,
                        onRequestClose: this.handleRequestClose,
                        canCoverAnchor: false,
                        defaultPlacement: p,
                        repositionMode: w,
                        id: this.popoverId
                    }, this.renderMenu)),  t().createElement(he(), {
                        role: "status",
                        "aria-relevant": "text"
                    }, this.state.loadingMoreMessage), S && this.state.open ?  t().createElement(qr, {
                        key: "overlay",
                        $popoveropen: this.state.open,
                        "data-test": "overlay"
                    }) : null,  t().createElement(he(), {
                        role: "alert",
                        "aria-relevant": "additions"
                    }, this.getSelectedItemsContent(P)));
                }
            } ]);
            return o;
        }(e.Component);
        an(dn, "propTypes", cn);
        an(dn, "defaultProps", sn);
        an(dn, "Option", W);
        an(dn, "Divider", f.Divider);
        an(dn, "Heading", f.Heading);
        /* harmony default export */        const vn = dn;
        // CONCATENATED MODULE: ./src/Multiselect/Multiselect.tsx
        function bn(e) {
            "@babel/helpers - typeof";
            return bn = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                return typeof e;
            } : function(e) {
                return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e;
            }, bn(e);
        }
        function yn() {
            return yn = Object.assign ? Object.assign.bind() : function(e) {
                for (var t = 1; t < arguments.length; t++) {
                    var r = arguments[t];
                    for (var n in r) {
                        ({}).hasOwnProperty.call(r, n) && (e[n] = r[n]);
                    }
                }
                return e;
            }, yn.apply(null, arguments);
        }
        function mn(e, t) {
            if (!(e instanceof t)) throw new TypeError("Cannot call a class as a function");
        }
        function hn(e, t) {
            for (var r = 0; r < t.length; r++) {
                var n = t[r];
                n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), 
                Object.defineProperty(e, En(n.key), n);
            }
        }
        function gn(e, t, r) {
            return t && hn(e.prototype, t), r && hn(e, r), Object.defineProperty(e, "prototype", {
                writable: !1
            }), e;
        }
        function On(e, t) {
            if ("function" != typeof t && null !== t) throw new TypeError("Super expression must either be null or a function");
            e.prototype = Object.create(t && t.prototype, {
                constructor: {
                    value: e,
                    writable: !0,
                    configurable: !0
                }
            }), Object.defineProperty(e, "prototype", {
                writable: !1
            }), t && wn(e, t);
        }
        function wn(e, t) {
            return wn = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(e, t) {
                return e.__proto__ = t, e;
            }, wn(e, t);
        }
        function Sn(e) {
            var t = xn();
            return function() {
                var r, n = jn(e);
                if (t) {
                    var o = jn(this).constructor;
                    r = Reflect.construct(n, arguments, o);
                } else r = n.apply(this, arguments);
                return Cn(this, r);
            };
        }
        function Cn(e, t) {
            if (t && ("object" == bn(t) || "function" == typeof t)) return t;
            if (void 0 !== t) throw new TypeError("Derived constructors may only return object or undefined");
            return kn(e);
        }
        function kn(e) {
            if (void 0 === e) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
            return e;
        }
        function xn() {
            try {
                var e = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], (function() {})));
            } catch (e) {}
            return (xn = function t() {
                return !!e;
            })();
        }
        function jn(e) {
            return jn = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(e) {
                return e.__proto__ || Object.getPrototypeOf(e);
            }, jn(e);
        }
        function Pn(e, t, r) {
            return (t = En(t)) in e ? Object.defineProperty(e, t, {
                value: r,
                enumerable: !0,
                configurable: !0,
                writable: !0
            }) : e[t] = r, e;
        }
        function En(e) {
            var t = In(e, "string");
            return "symbol" == bn(t) ? t : t + "";
        }
        function In(e, t) {
            if ("object" != bn(e) || !e) return e;
            var r = e[Symbol.toPrimitive];
            if (void 0 !== r) {
                var n = r.call(e, t || "default");
                if ("object" != bn(n)) return n;
                throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return ("string" === t ? String : Number)(e);
        }
        /** @public */
        /** @public */
        /** @public */        var Rn = {
            allowNewValues: a().bool,
            animateLoading: a().bool,
            children: a().node,
            compact: a().bool,
            controlledFilter: a().bool,
            defaultPlacement: a().oneOf([ "above", "below", "vertical" ]),
            defaultValues: a().array,
            describedBy: a().string,
            disabled: a().bool,
            elementRef: a().oneOfType([ a().func, a().object ]),
            error: a().bool,
            filter: a().oneOf([ false, true, "controlled" ]),
            footerMessage: a().node,
            inline: a().bool,
            inputId: a().string,
            inputRef: a().oneOfType([ a().func, a().object ]),
            isLoadingOptions: a().bool,
            labelledBy: a().string,
            loadingMessage: a().node,
            menuStyle: a().object,
            name: a().string,
            noOptionsMessage: a().node,
            onChange: a().func,
            onClose: a().func,
            onFilterChange: a().func,
            onOpen: a().func,
            onScroll: a().func,
            onScrollBottom: a().func,
            placeholder: a().string,
            repositionMode: a().oneOf([ "none", "flip" ]),
            selectAllAppearance: a().oneOf([ "buttongroup", "checkbox" ]),
            showSelectedValuesFirst: a().oneOf([ "nextOpen", "immediately", "never" ]),
            tabConfirmsNewValue: a().bool,
            useClickawayOverlay: a().bool,
            values: a().array,
            /** @private */
            virtualization: a().number
        };
        var Mn = {
            allowNewValues: false,
            animateLoading: false,
            compact: false,
            defaultPlacement: "vertical",
            disabled: false,
            inline: false,
            isLoadingOptions: false,
            menuStyle: {},
            noOptionsMessage: (0, s._)("No matches"),
            placeholder: (0, s._)("Select..."),
            repositionMode: "flip",
            tabConfirmsNewValue: false,
            useClickawayOverlay: false
        };
        function Tn(e) {
            return (e === null || e === void 0 ? void 0 : e.compact) === true;
        }
        var _n =  function(e) {
            On(n, e);
            var r = Sn(n);
            function n() {
                mn(this, n);
                return r.apply(this, arguments);
            }
            gn(n, [ {
                key: "render",
                // @docs-props-type MultiselectPropsBase
                // TODO: SUI-3402, this can be removed when ControlGroup no longer needs to inspect componentType
                value: function e() {
                    if (Tn(this.props)) {
                        
                        return t().createElement(cr, yn({
                            "data-test": "multiselect"
                        }, c()(this.props, "compact")));
                    }
                    if (false) {}
                    if (false) {}
                    
                    return t().createElement(vn, yn({
                        "data-test": "multiselect"
                    }, c()(this.props, "compact")));
                }
            } ]);
            return n;
        }(e.Component);
        Pn(_n, "propTypes", Rn);
        Pn(_n, "defaultProps", Mn);
        Pn(_n, "componentType", "Multiselect");
        Pn(_n, "Option", W);
        Pn(_n, "Heading", f.Heading);
        Pn(_n, "Divider", f.Divider);
        /* harmony default export */        const An = _n;
    }) // CONCATENATED MODULE: ./src/Multiselect/index.ts
    ();
    module.exports = n;
    /******/})();