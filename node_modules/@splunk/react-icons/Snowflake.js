/******/ (() => {
    // webpackBootstrap
    /******/ "use strict";
    /******/ // The require scope
    /******/    var e = {};
    /******/
    /************************************************************************/
    /******/ /* webpack/runtime/compat get default export */
    /******/    (() => {
        /******/ // getDefaultExport function for compatibility with non-harmony modules
        /******/ e.n = r => {
            /******/ var t = r && r.__esModule ? 
            /******/ () => r["default"]
            /******/ : () => r
            /******/;
            e.d(t, {
                a: t
            });
            /******/            return t;
            /******/        };
        /******/    })();
    /******/
    /******/ /* webpack/runtime/define property getters */
    /******/    (() => {
        /******/ // define getter functions for harmony exports
        /******/ e.d = (r, t) => {
            /******/ for (var L in t) {
                /******/ if (e.o(t, L) && !e.o(r, L)) {
                    /******/ Object.defineProperty(r, L, {
                        enumerable: true,
                        get: t[L]
                    });
                    /******/                }
                /******/            }
            /******/        };
        /******/    })();
    /******/
    /******/ /* webpack/runtime/hasOwnProperty shorthand */
    /******/    (() => {
        /******/ e.o = (e, r) => Object.prototype.hasOwnProperty.call(e, r)
        /******/;
    })();
    /******/
    /******/ /* webpack/runtime/make namespace object */
    /******/    (() => {
        /******/ // define __esModule on exports
        /******/ e.r = e => {
            /******/ if (typeof Symbol !== "undefined" && Symbol.toStringTag) {
                /******/ Object.defineProperty(e, Symbol.toStringTag, {
                    value: "Module"
                });
                /******/            }
            /******/            Object.defineProperty(e, "__esModule", {
                value: true
            });
            /******/        };
        /******/    })();
    /******/
    /************************************************************************/    var r = {};
    // ESM COMPAT FLAG
        e.r(r);
    // EXPORTS
        e.d(r, {
        default: () => /* binding */ v
    });
    // CONCATENATED MODULE: external "react"
    const t = require("react");
    var L =  e.n(t);
    // CONCATENATED MODULE: external "@splunk/react-icons/SVG"
    const n = require("@splunk/react-icons/SVG");
    var C =  e.n(n);
    // CONCATENATED MODULE: external "@splunk/react-icons/IconProvider"
    const o = require("@splunk/react-icons/IconProvider");
    // CONCATENATED MODULE: ./src/icons/Snowflake.tsx
    function a(e, r) {
        if (e == null) return {};
        var t = l(e, r);
        var L, n;
        if (Object.getOwnPropertySymbols) {
            var C = Object.getOwnPropertySymbols(e);
            for (n = 0; n < C.length; n++) {
                L = C[n];
                if (r.indexOf(L) >= 0) continue;
                if (!Object.prototype.propertyIsEnumerable.call(e, L)) continue;
                t[L] = e[L];
            }
        }
        return t;
    }
    function l(e, r) {
        if (e == null) return {};
        var t = {};
        var L = Object.keys(e);
        var n, C;
        for (C = 0; C < L.length; C++) {
            n = L[C];
            if (r.indexOf(n) >= 0) continue;
            t[n] = e[n];
        }
        return t;
    }
    var u = new Map;
    u.set("outlined", (function() {
        
        return L().createElement(L().Fragment, null,  L().createElement("path", {
            d: "M6.88091 3.13389C7.3592 2.85775 7.97079 3.02163 8.24693 3.49993L9.36577 5.43785L9.79878 5.18785C10.2771 4.91171 10.8887 5.07558 11.1648 5.55387C11.4409 6.03217 11.2771 6.64376 10.7988 6.9199L10.3658 7.1699L11.9995 9.99967L13.6333 7.1699L13.2003 6.9199C12.722 6.64376 12.5581 6.03217 12.8343 5.55388C13.1104 5.07558 13.722 4.91171 14.2003 5.18785L14.6333 5.43785L15.7522 3.49994C16.0283 3.02165 16.6399 2.85778 17.1182 3.13392C17.5965 3.41007 17.7604 4.02166 17.4842 4.49995L16.3654 6.43785L16.7984 6.68785C17.2767 6.96399 17.4405 7.57558 17.1644 8.05388C16.8883 8.53217 16.2767 8.69604 15.7984 8.4199L15.3654 8.1699L13.7314 11H17.0004V10.5C17.0004 9.94771 17.4481 9.5 18.0004 9.5C18.5527 9.5 19.0004 9.94771 19.0004 10.5V11L21.238 11C21.7902 11 22.238 11.4477 22.238 12C22.238 12.5523 21.7903 13 21.238 13L19.0004 13V13.5C19.0004 14.0523 18.5527 14.5 18.0004 14.5C17.4481 14.5 17.0004 14.0523 17.0004 13.5V13H13.7318L15.3658 15.8302L15.7988 15.5802C16.2771 15.304 16.8887 15.4679 17.1648 15.9462C17.4409 16.4245 17.2771 17.0361 16.7988 17.3122L16.3658 17.5622L17.4846 19.5C17.7607 19.9783 17.5968 20.5899 17.1185 20.866C16.6403 21.1421 16.0287 20.9783 15.7525 20.5L14.6337 18.5622L14.2007 18.8122C13.7224 19.0883 13.1108 18.9245 12.8347 18.4462C12.5585 17.9679 12.7224 17.3563 13.2007 17.0802L13.6337 16.8302L11.9995 13.9997L10.3654 16.8302L10.7984 17.0802C11.2767 17.3563 11.4405 17.9679 11.1644 18.4462C10.8883 18.9245 10.2767 19.0883 9.79837 18.8122L9.36536 18.5622L8.2466 20.5C7.97046 20.9783 7.35887 21.1422 6.88057 20.866C6.40228 20.5899 6.2384 19.9783 6.51454 19.5L7.63331 17.5622L7.20029 17.3122C6.722 17.0361 6.55813 16.4245 6.83427 15.9462C7.11041 15.4679 7.722 15.304 8.20029 15.5802L8.63331 15.8302L10.2673 13H7.00041V13.5C7.00041 14.0523 6.55269 14.5 6.00041 14.5C5.44812 14.5 5.00041 14.0523 5.00041 13.5V13L2.76269 13C2.2104 13 1.76269 12.5523 1.7627 12C1.7627 11.4477 2.21042 11 2.7627 11L5.00041 11L5.00041 10.5C5.00041 9.94771 5.44812 9.5 6.00041 9.5C6.55269 9.5 7.00041 9.94771 7.00041 10.5V11H10.2677L8.63372 8.1699L8.2007 8.4199C7.72241 8.69604 7.11082 8.53217 6.83468 8.05388C6.55853 7.57558 6.72241 6.96399 7.2007 6.68785L7.63372 6.43785L6.51487 4.49992C6.23874 4.02162 6.40262 3.41003 6.88091 3.13389Z"
        }));
    }));
    u.set("filled", (function() {
        
        return L().createElement(L().Fragment, null,  L().createElement("path", {
            fillRule: "evenodd",
            clipRule: "evenodd",
            d: "M6.51443 3.49991C6.69306 3.19049 7.0232 2.99988 7.38048 2.99988L16.6178 2.9999C16.975 2.9999 17.3051 3.19047 17.4838 3.49984L22.1033 11.4999C22.282 11.8093 22.282 12.1905 22.1034 12.5L17.4841 20.5C17.3055 20.8093 16.9754 20.9999 16.6181 20.9999L7.38015 21C7.02285 21 6.69271 20.8093 6.51408 20.4999L1.89602 12.4999C1.71743 12.1905 1.71744 11.8093 1.89604 11.5L6.51443 3.49991ZM7.95896 4.99989L7.45385 5.87484L8.05344 6.91337L7.61963 7.16383C7.20112 7.40546 7.05773 7.9406 7.29935 8.3591C7.54098 8.77761 8.07612 8.921 8.49463 8.67938L8.92843 8.42892L10.485 11.1249H7.37316L7.37316 10.624C7.37316 10.1408 6.98141 9.74901 6.49816 9.74901C6.01491 9.74901 5.62316 10.1408 5.62316 10.624V11.1249L4.42301 11.1249L3.91785 12L4.42292 12.8749L5.62316 12.8749V13.3758C5.62316 13.8591 6.01491 14.2508 6.49816 14.2508C6.98141 14.2508 7.37316 13.8591 7.37316 13.3758L7.37316 12.8749H10.4851L8.92853 15.571L8.49472 15.3206C8.07622 15.0789 7.54107 15.2223 7.29945 15.6408C7.05782 16.0593 7.20122 16.5945 7.61972 16.8361L8.05353 17.0866L7.45378 18.1254L7.95864 19L8.96957 19L9.56908 17.9616L10.0029 18.212C10.4214 18.4536 10.9565 18.3103 11.1981 17.8918C11.4398 17.4732 11.2964 16.9381 10.8779 16.6965L10.4441 16.446L12.0006 13.7501L13.5571 16.446L13.1233 16.6965C12.7048 16.9381 12.5614 17.4732 12.803 17.8917C13.0446 18.3102 13.5798 18.4536 13.9983 18.212L14.4321 17.9615L15.0316 19L16.0419 18.9999L16.5471 18.1249L15.9476 17.0865L16.3814 16.8361C16.7999 16.5945 16.9433 16.0593 16.7017 15.6408C16.4601 15.2223 15.9249 15.0789 15.5064 15.3205L15.0726 15.571L13.5161 12.8749H16.6305V13.3758C16.6305 13.8591 17.0222 14.2508 17.5055 14.2508C17.9887 14.2508 18.3805 13.8591 18.3805 13.3758V12.8749L19.5785 12.8749L20.0837 12L19.5784 11.1249L18.3805 11.1249V10.624C18.3805 10.1408 17.9887 9.74901 17.5055 9.74901C17.0222 9.74901 16.6305 10.1408 16.6305 10.624V11.1249H13.5162L15.0727 8.42895L15.5065 8.67941C15.925 8.92103 16.4602 8.77764 16.7018 8.35913C16.9434 7.94063 16.8 7.40549 16.3815 7.16386L15.9477 6.91341L16.5471 5.87532L16.0416 4.99991L15.0318 4.99991L14.4322 6.03841L13.9984 5.78795C13.5799 5.54632 13.0447 5.68971 12.8031 6.10822C12.5615 6.52673 12.7049 7.06187 13.1234 7.30349L13.5572 7.55395L12.0006 10.2501L10.444 7.55392L10.8778 7.30346C11.2963 7.06184 11.4397 6.52669 11.1981 6.10819C10.9564 5.68968 10.4213 5.54629 10.0028 5.78792L9.56898 6.03837L8.96942 4.99989L7.95896 4.99989Z"
        }));
    }));
    var i = [ "default", "outlined", "filled" ];
    var c = function e(r) {
        return i.indexOf(r) >= 0;
    };
    var f = function e(r) {
        return r === "default" || r && !c(r) ? "outlined" : r;
    };
    /**
 * @description Cold weather, snow and ice, low temperature, frozen, Objects, freezer, freezing, crystal
 *
 *
 * @variants outlined,filled
 */    var d = function e(r) {
        var n = r.children, l = r.variant, i = l === void 0 ? "default" : l, c = a(r, [ "children", "variant" ]);
        var d = f(i);
        var v = "snowflake-".concat(d);
        var s = (0, t.useContext)(o.IconContext);
        var p = u.get(d);
        if (false) {}
        if (s && p) {
            var m = s.toRender, y = s.addIcon;
            y(v, p());
            if (!m) {
                return null;
            }
        }
        
        return L().createElement(C(), c, n, s ?  L().createElement("use", {
            href: "#".concat(v)
        }) : !!p && p());
    };
    /* harmony default export */    const v = d;
    module.exports = r;
    /******/})();