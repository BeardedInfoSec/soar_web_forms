/******/ (() => {
    // webpackBootstrap
    /******/ "use strict";
    /******/ // The require scope
    /******/    var e = {};
    /******/
    /************************************************************************/
    /******/ /* webpack/runtime/compat get default export */
    /******/    (() => {
        /******/ // getDefaultExport function for compatibility with non-harmony modules
        /******/ e.n = C => {
            /******/ var t = C && C.__esModule ? 
            /******/ () => C["default"]
            /******/ : () => C
            /******/;
            e.d(t, {
                a: t
            });
            /******/            return t;
            /******/        };
        /******/    })();
    /******/
    /******/ /* webpack/runtime/define property getters */
    /******/    (() => {
        /******/ // define getter functions for harmony exports
        /******/ e.d = (C, t) => {
            /******/ for (var r in t) {
                /******/ if (e.o(t, r) && !e.o(C, r)) {
                    /******/ Object.defineProperty(C, r, {
                        enumerable: true,
                        get: t[r]
                    });
                    /******/                }
                /******/            }
            /******/        };
        /******/    })();
    /******/
    /******/ /* webpack/runtime/hasOwnProperty shorthand */
    /******/    (() => {
        /******/ e.o = (e, C) => Object.prototype.hasOwnProperty.call(e, C)
        /******/;
    })();
    /******/
    /******/ /* webpack/runtime/make namespace object */
    /******/    (() => {
        /******/ // define __esModule on exports
        /******/ e.r = e => {
            /******/ if (typeof Symbol !== "undefined" && Symbol.toStringTag) {
                /******/ Object.defineProperty(e, Symbol.toStringTag, {
                    value: "Module"
                });
                /******/            }
            /******/            Object.defineProperty(e, "__esModule", {
                value: true
            });
            /******/        };
        /******/    })();
    /******/
    /************************************************************************/    var C = {};
    // ESM COMPAT FLAG
        e.r(C);
    // EXPORTS
        e.d(C, {
        default: () => /* binding */ H
    });
    // CONCATENATED MODULE: external "react"
    const t = require("react");
    var r =  e.n(t);
    // CONCATENATED MODULE: external "@splunk/react-icons/SVG"
    const n = require("@splunk/react-icons/SVG");
    var a =  e.n(n);
    // CONCATENATED MODULE: external "@splunk/react-icons/IconProvider"
    const l = require("@splunk/react-icons/IconProvider");
    // CONCATENATED MODULE: ./src/icons/FileSvg.tsx
    function o(e, C) {
        if (null == e) return {};
        var t, r, n = u(e, C);
        if (Object.getOwnPropertySymbols) {
            var a = Object.getOwnPropertySymbols(e);
            for (r = 0; r < a.length; r++) {
                t = a[r], C.includes(t) || {}.propertyIsEnumerable.call(e, t) && (n[t] = e[t]);
            }
        }
        return n;
    }
    function u(e, C) {
        if (null == e) return {};
        var t = {};
        for (var r in e) {
            if ({}.hasOwnProperty.call(e, r)) {
                if (C.includes(r)) continue;
                t[r] = e[r];
            }
        }
        return t;
    }
    var c = new Map;
    c.set("outlined", (function() {
        
        return r().createElement(r().Fragment, null,  r().createElement("path", {
            fillRule: "evenodd",
            clipRule: "evenodd",
            d: "M7 3.99805V12.998H5V3.49805C5 2.66962 5.67157 1.99805 6.5 1.99805H13.3486C13.7464 1.99805 14.128 2.15609 14.4093 2.4374L18.5607 6.58895C18.842 6.87025 19.0001 7.25178 19.0001 7.6496V12.998H17.0001V8.99799H13.3889C12.5605 8.99799 11.8889 8.32641 11.8889 7.49799V3.99805H7ZM13.8889 4.74549L16.1414 6.99799H13.8889V4.74549Z"
        }),  r().createElement("path", {
            d: "M3.20508 19.9751H5.10408C5.15208 20.1851 5.23908 20.3501 5.36508 20.4701C5.49708 20.5841 5.68308 20.6411 5.92308 20.6411C6.11508 20.6411 6.27108 20.6021 6.39108 20.5241C6.51108 20.4461 6.57108 20.3321 6.57108 20.1821C6.57108 20.0501 6.52008 19.9511 6.41808 19.8851C6.32208 19.8131 6.17208 19.7591 5.96808 19.7231L5.40108 19.6241C4.68708 19.4981 4.15608 19.2761 3.80808 18.9581C3.46608 18.6401 3.29508 18.2201 3.29508 17.6981C3.29508 17.2361 3.40908 16.8551 3.63708 16.5551C3.87108 16.2551 4.18008 16.0331 4.56408 15.8891C4.94808 15.7391 5.36508 15.6641 5.81508 15.6641C6.30708 15.6641 6.74508 15.7451 7.12908 15.9071C7.51308 16.0691 7.81608 16.2971 8.03808 16.5911C8.26608 16.8851 8.38308 17.2331 8.38908 17.6351H6.48108C6.43908 17.4731 6.35208 17.3531 6.22008 17.2751C6.09408 17.1971 5.95008 17.1581 5.78808 17.1581C5.63208 17.1581 5.50008 17.1941 5.39208 17.2661C5.28408 17.3381 5.23008 17.4431 5.23008 17.5811C5.23008 17.6531 5.26008 17.7341 5.32008 17.8241C5.38608 17.9081 5.53008 17.9711 5.75208 18.0131L6.30108 18.1121C7.07508 18.2501 7.63608 18.4721 7.98408 18.7781C8.33208 19.0781 8.50608 19.4951 8.50608 20.0291C8.50608 20.4731 8.39808 20.8511 8.18208 21.1631C7.97208 21.4751 7.67208 21.7151 7.28208 21.8831C6.89208 22.0451 6.43608 22.1261 5.91408 22.1261C5.35008 22.1261 4.86708 22.0331 4.46508 21.8471C4.06908 21.6611 3.76308 21.4061 3.54708 21.0821C3.33708 20.7581 3.22308 20.3891 3.20508 19.9751Z"
        }),  r().createElement("path", {
            d: "M10.9172 22.0001L8.91023 15.7901H10.8992L11.8622 19.7951C11.8742 19.8551 11.8892 19.8971 11.9072 19.9211C11.9312 19.9391 11.9582 19.9481 11.9882 19.9481C12.0182 19.9481 12.0452 19.9391 12.0692 19.9211C12.0932 19.8971 12.1112 19.8551 12.1232 19.7951L13.0682 15.7901H15.0212L13.0322 22.0001H10.9172Z"
        }),  r().createElement("path", {
            d: "M19.6007 21.3791L19.7087 22.0001H21.2207V18.4721H18.4937V19.7141H19.5197V19.7411C19.5197 19.9391 19.4657 20.1011 19.3577 20.2271C19.2557 20.3531 19.1207 20.4461 18.9527 20.5061C18.7847 20.5661 18.6077 20.5961 18.4217 20.5961C17.9837 20.5961 17.6627 20.4461 17.4587 20.1461C17.2547 19.8461 17.1527 19.4321 17.1527 18.9041C17.1527 18.3341 17.2637 17.9051 17.4857 17.6171C17.7137 17.3291 18.0107 17.1851 18.3767 17.1851C18.6227 17.1851 18.8207 17.2391 18.9707 17.3471C19.1207 17.4551 19.2257 17.5961 19.2857 17.7701H21.1937C21.1397 17.3321 20.9867 16.9571 20.7347 16.6451C20.4827 16.3271 20.1557 16.0841 19.7537 15.9161C19.3577 15.7481 18.9017 15.6641 18.3857 15.6641C17.7857 15.6641 17.2547 15.7901 16.7927 16.0421C16.3367 16.2881 15.9797 16.6541 15.7217 17.1401C15.4637 17.6261 15.3347 18.2231 15.3347 18.9311C15.3347 19.6391 15.4547 20.2301 15.6947 20.7041C15.9347 21.1781 16.2557 21.5351 16.6577 21.7751C17.0597 22.0091 17.4977 22.1261 17.9717 22.1261C18.3557 22.1261 18.6887 22.0571 18.9707 21.9191C19.2527 21.7811 19.4627 21.6011 19.6007 21.3791Z"
        }));
    }));
    c.set("filled", (function() {
        
        return r().createElement(r().Fragment, null,  r().createElement("path", {
            d: "M3.20508 19.9751H5.10408C5.15208 20.1851 5.23908 20.3501 5.36508 20.4701C5.49708 20.5841 5.68308 20.6411 5.92308 20.6411C6.11508 20.6411 6.27108 20.6021 6.39108 20.5241C6.51108 20.4461 6.57108 20.3321 6.57108 20.1821C6.57108 20.0501 6.52008 19.9511 6.41808 19.8851C6.32208 19.8131 6.17208 19.7591 5.96808 19.7231L5.40108 19.6241C4.68708 19.4981 4.15608 19.2761 3.80808 18.9581C3.46608 18.6401 3.29508 18.2201 3.29508 17.6981C3.29508 17.2361 3.40908 16.8551 3.63708 16.5551C3.87108 16.2551 4.18008 16.0331 4.56408 15.8891C4.94808 15.7391 5.36508 15.6641 5.81508 15.6641C6.30708 15.6641 6.74508 15.7451 7.12908 15.9071C7.51308 16.0691 7.81608 16.2971 8.03808 16.5911C8.26608 16.8851 8.38308 17.2331 8.38908 17.6351H6.48108C6.43908 17.4731 6.35208 17.3531 6.22008 17.2751C6.09408 17.1971 5.95008 17.1581 5.78808 17.1581C5.63208 17.1581 5.50008 17.1941 5.39208 17.2661C5.28408 17.3381 5.23008 17.4431 5.23008 17.5811C5.23008 17.6531 5.26008 17.7341 5.32008 17.8241C5.38608 17.9081 5.53008 17.9711 5.75208 18.0131L6.30108 18.1121C7.07508 18.2501 7.63608 18.4721 7.98408 18.7781C8.33208 19.0781 8.50608 19.4951 8.50608 20.0291C8.50608 20.4731 8.39808 20.8511 8.18208 21.1631C7.97208 21.4751 7.67208 21.7151 7.28208 21.8831C6.89208 22.0451 6.43608 22.1261 5.91408 22.1261C5.35008 22.1261 4.86708 22.0331 4.46508 21.8471C4.06908 21.6611 3.76308 21.4061 3.54708 21.0821C3.33708 20.7581 3.22308 20.3891 3.20508 19.9751Z"
        }),  r().createElement("path", {
            d: "M10.9172 22.0001L8.91023 15.7901H10.8992L11.8622 19.7951C11.8742 19.8551 11.8892 19.8971 11.9072 19.9211C11.9312 19.9391 11.9582 19.9481 11.9882 19.9481C12.0182 19.9481 12.0452 19.9391 12.0692 19.9211C12.0932 19.8971 12.1112 19.8551 12.1232 19.7951L13.0682 15.7901H15.0212L13.0322 22.0001H10.9172Z"
        }),  r().createElement("path", {
            d: "M19.6007 21.3791L19.7087 22.0001H21.2207V18.4721H18.4937V19.7141H19.5197V19.7411C19.5197 19.9391 19.4657 20.1011 19.3577 20.2271C19.2557 20.3531 19.1207 20.4461 18.9527 20.5061C18.7847 20.5661 18.6077 20.5961 18.4217 20.5961C17.9837 20.5961 17.6627 20.4461 17.4587 20.1461C17.2547 19.8461 17.1527 19.4321 17.1527 18.9041C17.1527 18.3341 17.2637 17.9051 17.4857 17.6171C17.7137 17.3291 18.0107 17.1851 18.3767 17.1851C18.6227 17.1851 18.8207 17.2391 18.9707 17.3471C19.1207 17.4551 19.2257 17.5961 19.2857 17.7701H21.1937C21.1397 17.3321 20.9867 16.9571 20.7347 16.6451C20.4827 16.3271 20.1557 16.0841 19.7537 15.9161C19.3577 15.7481 18.9017 15.6641 18.3857 15.6641C17.7857 15.6641 17.2547 15.7901 16.7927 16.0421C16.3367 16.2881 15.9797 16.6541 15.7217 17.1401C15.4637 17.6261 15.3347 18.2231 15.3347 18.9311C15.3347 19.6391 15.4547 20.2301 15.6947 20.7041C15.9347 21.1781 16.2557 21.5351 16.6577 21.7751C17.0597 22.0091 17.4977 22.1261 17.9717 22.1261C18.3557 22.1261 18.6887 22.0571 18.9707 21.9191C19.2527 21.7811 19.4627 21.6011 19.6007 21.3791Z"
        }),  r().createElement("path", {
            d: "M19.0001 8.99799H13.5C12.6716 8.99799 12 8.32641 12 7.49799V1.99805H6.5C5.67157 1.99805 5 2.66962 5 3.49805V12.998H19.0001V8.99799Z"
        }),  r().createElement("path", {
            d: "M18.8511 6.99799H14V2.14687C14.1504 2.21936 14.289 2.31711 14.4093 2.4374L18.5607 6.58895C18.681 6.70917 18.7787 6.8477 18.8511 6.99799Z"
        }));
    }));
    var i = [ "default", "outlined", "filled" ];
    var d = function e(C) {
        return i.indexOf(C) >= 0;
    };
    var f = function e(C) {
        return C === "default" || C && !d(C) ? "outlined" : C;
    };
    /**
 * @description File SVG is one of vector image formats
 * @category File Extensions
 * @keywords document format
 * @variants outlined,filled
 */    var v = function e(C) {
        var n = C.children, u = C.variant, i = u === void 0 ? "default" : u, d = o(C, [ "children", "variant" ]);
        var v = f(i);
        var H = "filesvg-".concat(v);
        var p = (0, t.useContext)(l.IconContext);
        var s = c.get(v);
        if (false) {}
        if (p && s) {
            var m = p.toRender, L = p.addIcon;
            L(H, s());
            if (!m) {
                return null;
            }
        }
        
        return r().createElement(a(), d, n, p ?  r().createElement("use", {
            href: "#".concat(H)
        }) : !!s && s());
    };
    /* harmony default export */    const H = v;
    module.exports = C;
    /******/})();