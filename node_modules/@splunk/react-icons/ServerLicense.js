/******/ (() => {
    // webpackBootstrap
    /******/ "use strict";
    /******/ // The require scope
    /******/    var e = {};
    /******/
    /************************************************************************/
    /******/ /* webpack/runtime/compat get default export */
    /******/    (() => {
        /******/ // getDefaultExport function for compatibility with non-harmony modules
        /******/ e.n = C => {
            /******/ var L = C && C.__esModule ? 
            /******/ () => C["default"]
            /******/ : () => C
            /******/;
            e.d(L, {
                a: L
            });
            /******/            return L;
            /******/        };
        /******/    })();
    /******/
    /******/ /* webpack/runtime/define property getters */
    /******/    (() => {
        /******/ // define getter functions for harmony exports
        /******/ e.d = (C, L) => {
            /******/ for (var t in L) {
                /******/ if (e.o(L, t) && !e.o(C, t)) {
                    /******/ Object.defineProperty(C, t, {
                        enumerable: true,
                        get: L[t]
                    });
                    /******/                }
                /******/            }
            /******/        };
        /******/    })();
    /******/
    /******/ /* webpack/runtime/hasOwnProperty shorthand */
    /******/    (() => {
        /******/ e.o = (e, C) => Object.prototype.hasOwnProperty.call(e, C)
        /******/;
    })();
    /******/
    /******/ /* webpack/runtime/make namespace object */
    /******/    (() => {
        /******/ // define __esModule on exports
        /******/ e.r = e => {
            /******/ if (typeof Symbol !== "undefined" && Symbol.toStringTag) {
                /******/ Object.defineProperty(e, Symbol.toStringTag, {
                    value: "Module"
                });
                /******/            }
            /******/            Object.defineProperty(e, "__esModule", {
                value: true
            });
            /******/        };
        /******/    })();
    /******/
    /************************************************************************/    var C = {};
    // ESM COMPAT FLAG
        e.r(C);
    // EXPORTS
        e.d(C, {
        default: () => /* binding */ v
    });
    // CONCATENATED MODULE: external "react"
    const L = require("react");
    var t =  e.n(L);
    // CONCATENATED MODULE: external "@splunk/react-icons/SVG"
    const r = require("@splunk/react-icons/SVG");
    var n =  e.n(r);
    // CONCATENATED MODULE: external "@splunk/react-icons/IconProvider"
    const l = require("@splunk/react-icons/IconProvider");
    // CONCATENATED MODULE: ./src/icons/ServerLicense.tsx
    function a(e, C) {
        if (null == e) return {};
        var L, t, r = o(e, C);
        if (Object.getOwnPropertySymbols) {
            var n = Object.getOwnPropertySymbols(e);
            for (t = 0; t < n.length; t++) {
                L = n[t], C.includes(L) || {}.propertyIsEnumerable.call(e, L) && (r[L] = e[L]);
            }
        }
        return r;
    }
    function o(e, C) {
        if (null == e) return {};
        var L = {};
        for (var t in e) {
            if ({}.hasOwnProperty.call(e, t)) {
                if (C.includes(t)) continue;
                L[t] = e[t];
            }
        }
        return L;
    }
    var u = new Map;
    u.set("outlined", (function() {
        
        return t().createElement(t().Fragment, null,  t().createElement("path", {
            d: "M7.4001 7.20005C6.73736 7.20005 6.2001 6.66279 6.2001 6.00005C6.2001 5.33731 6.73736 4.80005 7.4001 4.80005C8.06284 4.80005 8.6001 5.33731 8.6001 6.00005C8.6001 6.66279 8.06284 7.20005 7.4001 7.20005Z"
        }),  t().createElement("path", {
            fillRule: "evenodd",
            clipRule: "evenodd",
            d: "M17.5 2C18.3284 2 19 2.67157 19 3.5V8.5C19 8.55246 18.9973 8.6043 18.9921 8.65537C18.202 8.40319 17.3348 8.45799 16.5782 8.81979C16.5358 8.84006 16.494 8.86152 16.4528 8.88414C16.4013 8.91246 16.3504 8.94061 16.303 8.96684L16.3016 8.9676C15.8811 9.20019 15.687 9.29944 15.5189 9.3565L14.7528 9.57665C14.6897 9.59479 14.6273 9.61542 14.5658 9.63848C14.3181 9.73133 14.0847 9.85323 13.8697 10H4.5C3.67157 10 3 9.32843 3 8.5V3.5C3 2.67157 3.67157 2 4.5 2H17.5ZM17 8V4H5V8H17Z"
        }),  t().createElement("path", {
            d: "M4.5 12H12.5081L12.344 12.5831C12.3175 12.6714 12.2573 12.8001 12.0278 13.2084L12.0252 13.213C11.9825 13.2889 11.9329 13.3771 11.8833 13.4674C11.8603 13.5094 11.8384 13.5521 11.8178 13.5954C11.755 13.7273 11.7016 13.8625 11.6574 14H5V18H12.5085L12.5804 18.2487C12.5967 18.3051 12.6149 18.3608 12.6351 18.4158C12.8732 19.0648 13.3107 19.6175 13.8728 20H4.5C3.67157 20 3 19.3284 3 18.5V13.5C3 12.6716 3.67157 12 4.5 12Z"
        }),  t().createElement("path", {
            d: "M6.2001 16C6.2001 16.6628 6.73736 17.2 7.4001 17.2C8.06284 17.2 8.6001 16.6628 8.6001 16C8.6001 15.3373 8.06284 14.8 7.4001 14.8C6.73736 14.8 6.2001 15.3373 6.2001 16Z"
        }),  t().createElement("path", {
            d: "M19.8017 15.1345C20.1522 14.8017 20.1665 14.2479 19.8337 13.8975C19.501 13.5471 18.9471 13.5327 18.5967 13.8655L17.6615 14.7535L17.3431 14.4075C17.0159 14.0519 16.4623 14.0289 16.1067 14.3561C15.7511 14.6834 15.7281 15.2369 16.0554 15.5925L16.9757 16.5926C17.1344 16.7651 17.3558 16.8667 17.5901 16.8746C17.8244 16.8825 18.0521 16.796 18.2221 16.6346L19.8017 15.1345Z"
        }),  t().createElement("path", {
            fillRule: "evenodd",
            clipRule: "evenodd",
            d: "M15.3652 21.88V18.9063L15.191 18.8572L15.1639 18.8476C14.7013 18.684 14.3297 18.3168 14.1607 17.8561L14.1501 17.8272L13.9126 17.0053C13.7972 16.6488 13.6181 16.3249 13.3882 15.909L13.3084 15.7644L13.2959 15.7417L13.2848 15.7184C13.0717 15.2705 13.0717 14.7418 13.285 14.294L13.2958 14.2713L13.3079 14.2492C13.3619 14.1509 13.413 14.0596 13.4611 13.9736C13.6656 13.6083 13.8166 13.3385 13.9057 13.0322L14.1408 12.1971L14.1491 12.173C14.3099 11.7078 14.6756 11.3328 15.1362 11.1601L15.1685 11.148L15.998 10.9096C16.3541 10.7944 16.678 10.6157 17.0943 10.3861L17.2354 10.3083L17.257 10.2964L17.2793 10.2858C17.7275 10.0714 18.2573 10.0714 18.7056 10.2857L18.7282 10.2966L19.4703 10.7052C19.7578 10.8588 20.0615 10.9415 20.4663 11.0517C20.5741 11.081 20.6892 11.1123 20.813 11.1474L20.8596 11.1606L20.9044 11.1789C21.3346 11.3542 21.677 11.7078 21.838 12.1445L21.8488 12.174L22.0866 12.9969C22.1995 13.3501 22.3803 13.6775 22.6102 14.0938L22.6897 14.2381L22.7015 14.2595L22.7121 14.2816C22.9267 14.7296 22.9267 15.2593 22.7121 15.7073L22.7014 15.7297L22.6894 15.7515C22.6368 15.847 22.5869 15.936 22.5397 16.0199C22.3334 16.3877 22.1806 16.6599 22.0905 16.968L21.8546 17.8061L21.8439 17.8356C21.6762 18.3008 21.3035 18.6728 20.838 18.8395L20.8115 18.849L20.6352 18.8997V21.88C20.6352 22.1445 20.5156 22.3948 20.3098 22.5609C20.104 22.727 19.8341 22.7911 19.5756 22.7353L18 22.3951L16.425 22.7353C16.1664 22.7911 15.8965 22.727 15.6907 22.5609C15.4849 22.3948 15.3652 22.1445 15.3652 21.88ZM17.1152 20.7958V19.6231C17.1546 19.6452 17.195 19.6678 17.2367 19.691L17.2572 19.7024L17.2783 19.7127C17.7317 19.9338 18.2586 19.9309 18.7047 19.7184L18.7304 19.7061L18.8852 19.6196V20.7959L18.1847 20.6446C18.0629 20.6183 17.937 20.6183 17.8153 20.6446L17.1152 20.7958ZM17.9926 11.8892L17.9352 11.9211C17.5358 12.1425 17.054 12.4096 16.5185 12.5805L16.5064 12.5843L15.792 12.7896L15.5875 13.5159C15.4368 14.0367 15.1647 14.5184 14.9548 14.8898C14.9321 14.93 14.91 14.9691 14.889 15.0066L14.9216 15.0652C15.1426 15.463 15.4095 15.9434 15.5807 16.4763L15.5866 16.4945L15.7929 17.2086L16.5131 17.4113C17.0388 17.5641 17.521 17.8393 17.8936 18.052L17.9973 18.111L18.6442 17.7494L18.6651 17.7391C18.9211 17.6133 19.1874 17.5047 19.4627 17.4163L19.4755 17.4122L20.2066 17.202L20.4091 16.4827C20.561 15.9604 20.834 15.4784 21.0449 15.1059L21.1081 14.9941L21.0762 14.9367C20.8552 14.5384 20.5838 14.0495 20.4148 13.5143L20.4116 13.504L20.2068 12.7955L20.0902 12.7641C19.6702 12.6515 19.1265 12.5057 18.6455 12.2486L18.6312 12.241L17.9926 11.8892Z"
        }));
    }));
    u.set("filled", (function() {
        
        return t().createElement(t().Fragment, null,  t().createElement("path", {
            fillRule: "evenodd",
            clipRule: "evenodd",
            d: "M19 3.5C19 2.67157 18.3284 2 17.5 2H4.5C3.67157 2 3 2.67157 3 3.5V8.5C3 9.32843 3.67157 10 4.5 10H13.8697C14.0847 9.85323 14.3181 9.73133 14.5658 9.63848C14.6273 9.61542 14.6897 9.59479 14.7528 9.57665L15.5189 9.3565C15.687 9.29944 15.8811 9.20019 16.3016 8.9676L16.303 8.96684C16.3504 8.94061 16.4013 8.91246 16.4528 8.88414C16.494 8.86152 16.5358 8.84006 16.5782 8.81979C17.3348 8.45799 18.202 8.40319 18.9921 8.65537C18.9973 8.6043 19 8.55246 19 8.5V3.5ZM6.2002 5.99999C6.2002 6.66273 6.73745 7.19999 7.4002 7.19999C8.06294 7.19999 8.6002 6.66273 8.6002 5.99999C8.6002 5.33725 8.06294 4.79999 7.4002 4.79999C6.73745 4.79999 6.2002 5.33725 6.2002 5.99999Z"
        }),  t().createElement("path", {
            fillRule: "evenodd",
            clipRule: "evenodd",
            d: "M4.5 12H12.5081L12.344 12.5831C12.3175 12.6714 12.2573 12.8001 12.0278 13.2084L12.0252 13.213C11.9825 13.2889 11.9329 13.3771 11.8833 13.4674C11.8603 13.5094 11.8384 13.5521 11.8178 13.5954C11.3942 14.485 11.3941 15.5268 11.8174 16.4165C11.8386 16.461 11.861 16.5048 11.8848 16.548C11.9137 16.6005 11.9425 16.6524 11.9692 16.7007L11.9699 16.7019C12.2034 17.1233 12.3027 17.3172 12.3599 17.4856L12.5804 18.2487C12.5967 18.3051 12.6149 18.3608 12.6351 18.4158C12.8732 19.0648 13.3107 19.6175 13.8728 20H4.5C3.67157 20 3 19.3284 3 18.5V13.5C3 12.6716 3.67157 12 4.5 12ZM6.2002 16C6.2002 16.6627 6.73745 17.2 7.4002 17.2C8.06294 17.2 8.6002 16.6627 8.6002 16C8.6002 15.3372 8.06294 14.8 7.4002 14.8C6.73745 14.8 6.2002 15.3372 6.2002 16Z"
        }),  t().createElement("path", {
            fillRule: "evenodd",
            clipRule: "evenodd",
            d: "M18.7056 10.2857C18.2573 10.0714 17.7275 10.0714 17.2793 10.2858L17.257 10.2964L17.2354 10.3083L17.0943 10.3861C16.678 10.6157 16.3541 10.7944 15.998 10.9096L15.1685 11.148L15.1362 11.1601C14.6756 11.3328 14.3099 11.7078 14.1491 12.173L14.1408 12.1971L13.9057 13.0322C13.8166 13.3385 13.6656 13.6083 13.4611 13.9736C13.413 14.0596 13.3618 14.151 13.3079 14.2492L13.2958 14.2713L13.285 14.294C13.0717 14.7418 13.0717 15.2705 13.2848 15.7184L13.2959 15.7417L13.3084 15.7644L13.3882 15.9089C13.6181 16.3248 13.7972 16.6488 13.9126 17.0053L14.1501 17.8272L14.1607 17.8561C14.3297 18.3168 14.7013 18.684 15.1639 18.8476L15.191 18.8572L15.3652 18.9063V21.8801C15.3652 22.1446 15.4849 22.3949 15.6907 22.561C15.8965 22.7271 16.1664 22.7912 16.425 22.7354L18 22.3952L19.5756 22.7354C19.8341 22.7912 20.104 22.7271 20.3098 22.561C20.5156 22.3949 20.6352 22.1446 20.6352 21.8801V18.8997L20.8115 18.849L20.838 18.8395C21.3035 18.6728 21.6762 18.3008 21.8439 17.8356L21.8546 17.8061L22.0905 16.968C22.1806 16.6599 22.3332 16.388 22.5396 16.0202C22.5867 15.9362 22.6367 15.8471 22.6894 15.7515L22.7014 15.7297L22.7121 15.7073C22.9267 15.2593 22.9267 14.7296 22.7121 14.2816L22.7015 14.2595L22.6897 14.2381L22.6102 14.0938C22.3803 13.6775 22.1995 13.3501 22.0866 12.9969L21.8488 12.174L21.838 12.1445C21.677 11.7078 21.3346 11.3542 20.9044 11.1789L20.8596 11.1606L20.813 11.1474C20.6892 11.1123 20.5741 11.081 20.4663 11.0517C20.0615 10.9415 19.7578 10.8588 19.4703 10.7052L18.7282 10.2966L18.7056 10.2857ZM17.1152 19.6231C17.1546 19.6452 17.195 19.6678 17.2367 19.691L17.2572 19.7024L17.2783 19.7127C17.7317 19.9338 18.2586 19.9309 18.7047 19.7184L18.7304 19.7061L18.8852 19.6196V20.796L18.1847 20.6447C18.0629 20.6184 17.937 20.6184 17.8153 20.6447L17.1152 20.7959V19.6231ZM19.8337 13.8975C20.1665 14.2479 20.1522 14.8017 19.8017 15.1345L18.2221 16.6346C18.0521 16.796 17.8244 16.8825 17.5901 16.8746C17.3558 16.8667 17.1344 16.7651 16.9757 16.5926L16.0554 15.5925C15.7281 15.2369 15.7511 14.6834 16.1067 14.3561C16.4623 14.0289 17.0159 14.0519 17.3431 14.4075L17.6615 14.7535L18.5967 13.8655C18.9471 13.5327 19.501 13.5471 19.8337 13.8975Z"
        }));
    }));
    var d = [ "default", "outlined", "filled" ];
    var c = function e(C) {
        return d.indexOf(C) >= 0;
    };
    var i = function e(C) {
        return C === "default" || C && !c(C) ? "outlined" : C;
    };
    /**
     * @description License server, licensed server, certificated server
Data Type
settings, licesing, checked, flower, badge, gear, award, certification
     * 
     * 
     * @variants outlined,filled
     */    var f = function e(C) {
        var r = C.children, o = C.variant, d = o === void 0 ? "default" : o, c = a(C, [ "children", "variant" ]);
        var f = i(d);
        var v = "serverlicense-".concat(f);
        var p = (0, L.useContext)(l.IconContext);
        var s = u.get(f);
        if (false) {}
        if (p && s) {
            var m = p.toRender, M = p.addIcon;
            M(v, s());
            if (!m) {
                return null;
            }
        }
        
        return t().createElement(n(), c, r, p ?  t().createElement("use", {
            href: "#".concat(v)
        }) : !!s && s());
    };
    /* harmony default export */    const v = f;
    module.exports = C;
    /******/})();