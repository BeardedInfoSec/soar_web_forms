{"ast":null,"code":"// src/components/FormDisplay.js\nimport React,{useEffect,useState}from'react';import{useParams}from'react-router-dom';import'./FormDisplay.css';// Initial hardcoded authInfo\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";let authInfo={token:'',server:'',sslVerification:true// Default to true; will be updated from the configuration\n};const FormDisplay=()=>{const{formName}=useParams();// Get form name from the URL\nconst[formData,setFormData]=useState(null);const[formValues,setFormValues]=useState({});// Store user input\n// Function to fetch auth info from the configuration table\nconst fetchAuthInfo=async()=>{try{const response=await fetch('http://localhost:5000/api/configuration');// Call the API endpoint\nif(!response.ok){throw new Error('Failed to fetch auth info');}const data=await response.json();// Update authInfo with fetched values\nauthInfo={token:data.ph_auth_token,server:data.server};}catch(error){console.error('Error fetching auth info:',error);}};useEffect(()=>{fetchAuthInfo();// Fetch auth info when the component mounts\n},[]);const parseXML=xmlString=>{var _xmlDoc$querySelector,_xmlDoc$querySelector2;const parser=new DOMParser();const xmlDoc=parser.parseFromString(xmlString,'application/xml');const name=((_xmlDoc$querySelector=xmlDoc.querySelector('form > name'))===null||_xmlDoc$querySelector===void 0?void 0:_xmlDoc$querySelector.textContent)||'Unnamed Form';const label=((_xmlDoc$querySelector2=xmlDoc.querySelector('form > label'))===null||_xmlDoc$querySelector2===void 0?void 0:_xmlDoc$querySelector2.textContent)||'event_data';const elements=Array.from(xmlDoc.querySelectorAll('elements > element')).map(el=>{var _el$querySelector,_el$querySelector2,_el$querySelector3,_el$querySelector4,_el$querySelector5,_el$querySelector6;const type=((_el$querySelector=el.querySelector('type'))===null||_el$querySelector===void 0?void 0:_el$querySelector.textContent)||'text';const optionsNode=el.querySelector('dropdownOptions');const options=optionsNode?Array.from(optionsNode.querySelectorAll('option')).map(opt=>opt.textContent):[];// Extract CSV data if present\nconst csvData=Array.from(el.querySelectorAll('settings > csvData > row')).map(row=>Array.from(row.querySelectorAll('cell')).map(cell=>cell.textContent));return{type,key:((_el$querySelector2=el.querySelector('key'))===null||_el$querySelector2===void 0?void 0:_el$querySelector2.textContent)||'',label:((_el$querySelector3=el.querySelector('label'))===null||_el$querySelector3===void 0?void 0:_el$querySelector3.textContent)||'',required:((_el$querySelector4=el.querySelector('required'))===null||_el$querySelector4===void 0?void 0:_el$querySelector4.textContent)==='true',placeholder:((_el$querySelector5=el.querySelector('placeholder'))===null||_el$querySelector5===void 0?void 0:_el$querySelector5.textContent)||'',alignment:((_el$querySelector6=el.querySelector('alignment'))===null||_el$querySelector6===void 0?void 0:_el$querySelector6.textContent)||'center',options:options,settings:{csvData:csvData.length>0?csvData:[]// Ensure csvData is set correctly\n}};});return{name,label,elements};};useEffect(()=>{const fetchFormData=async()=>{try{const response=await fetch(`http://localhost:5000/forms/${encodeURIComponent(formName)}`,{headers:{'Authorization':`Bearer ${authInfo.token}`,// Use the updated token\n'Content-Type':'application/json'}});// Log the response for debugging\nconst responseText=await response.text();// Check if response is valid JSON\nif(!response.ok){throw new Error('Form not found');}const data=JSON.parse(responseText);// Attempt parsing only if the response is correct\nif(data.xml_data){const parsedData=parseXML(data.xml_data);setFormData(parsedData);}else{console.error('No XML data found in the response');}}catch(error){console.error('Error fetching form data:',error);}};fetchFormData();},[formName]);const handleInputChange=(key,value)=>{setFormValues(prev=>({...prev,[key]:value}));};const handleFileChange=(key,file)=>{if(file){const reader=new FileReader();reader.onload=e=>{setFormValues(prev=>({...prev,[`file_${key}`]:e.target.result,// Store base64 encoded file\n[`file_name_${key}`]:file.name,[`file_path_${key}`]:file.webkitRelativePath||file.name,[`file_size_${key}`]:file.size,[`file_type_${key}`]:file.type,[`file_last_modified_${key}`]:new Date(file.lastModified).toISOString()}));};reader.readAsDataURL(file);}};const handleSubmit=async event=>{event.preventDefault();// Prevent default form submission\ntry{const containerResponse=await createContainer(formData.name,formData.label);const containerId=containerResponse.id;console.log('Container created successfully:',containerResponse);// Add artifacts for each form field and table data\nconst aggregatedCEF={};formData.elements.forEach(element=>{if(element.type==='table'&&element.settings.csvData){// Extract headers and transpose data by columns\nconst headers=element.settings.csvData[0];const columns=headers.reduce((acc,header,colIndex)=>{acc[header]=element.settings.csvData.slice(1).map(row=>row[colIndex]).filter(cell=>cell!==undefined&&cell!=='');return acc;},{});// Merge column data into the aggregated CEF\nObject.assign(aggregatedCEF,columns);}else if(!element.type.startsWith('file')&&formValues[element.key]!==undefined){// Include non-file form data\naggregatedCEF[element.key]=formValues[element.key];}});if(Object.keys(aggregatedCEF).length>0){const artifactResponse=await addArtifact(containerId,aggregatedCEF,`${formData.name} Artifact`);console.log('Artifact added successfully:',artifactResponse);}// Upload files to the vault and add file metadata as artifacts\nfor(const key in formValues){if(key.startsWith('file_')){const fileData=formValues[key];const fileNameKey=`file_name_${key.split('_')[1]}`;const fileName=formValues[fileNameKey];const fileType=formValues[`file_type_${key.split('_')[1]}`];const fileSize=formValues[`file_size_${key.split('_')[1]}`];const fileSizeInKB=(fileSize/1024).toFixed(2);const fileSizeFormatted=fileSizeInKB>1024?`${(fileSizeInKB/1024).toFixed(2)} MB`:`${fileSizeInKB} KB`;if(fileData&&fileName){const fileResponse=await uploadFileToVault(containerId,fileData,fileName);console.log('File uploaded successfully:',fileResponse);// Add file metadata as artifact\nconst fileArtifactData={hash:fileResponse.hash,filename:fileName,filetype:fileType,filesize:fileSizeFormatted};const fileArtifactResponse=await addArtifact(containerId,fileArtifactData,`${fileName} Metadata Artifact`);console.log('File metadata artifact added successfully:',fileArtifactResponse);}else{console.error('Missing file data or file name for:',key);}}}alert('Form submitted and data sent to Splunk SOAR successfully!');}catch(error){console.error('Error submitting form:',error);alert('Failed to submit form data to Splunk SOAR.');}};const createContainer=async(name,label)=>{const response=await fetch(`${authInfo.server}/rest/container`,{method:'POST',headers:{'Content-Type':'application/json','ph-auth-token':authInfo.token},body:JSON.stringify({name,label,description:`${name} container created via API`})});if(!response.ok){const errorText=await response.text();console.error('Failed to create container:',errorText);throw new Error('Failed to create container');}return response.json();};const addArtifact=async(containerId,cefData,artifactName)=>{const response=await fetch(`${authInfo.server}/rest/artifact`,{method:'POST',headers:{'Content-Type':'application/json','ph-auth-token':authInfo.token},body:JSON.stringify({container_id:containerId,cef:cefData,// Aggregated form data\nname:artifactName,label:'event_data',description:'Artifact created via API with aggregated form data'})});if(!response.ok){const errorText=await response.text();console.error('Failed to add artifact:',errorText);throw new Error('Failed to add artifact');}return response.json();};const uploadFileToVault=async(containerId,fileData,fileKey)=>{const response=await fetch(`${authInfo.server}/rest/container_attachment`,{method:'POST',headers:{'ph-auth-token':authInfo.token,'Content-Type':'application/json'},body:JSON.stringify({container_id:containerId,file_content:fileData.split(',')[1],// Extract base64 content\nfile_name:fileKey})});if(!response.ok){const errorText=await response.text();console.error('Failed to upload the file to the vault:',errorText);throw new Error('Failed to upload the file to the vault');}return response.json();};if(!formData){return/*#__PURE__*/_jsx(\"h2\",{children:\"Form not found\"});}const renderElement=(element,index)=>{var _element$settings;switch(element.type){case'boolean':return/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",style:{textAlign:element.alignment,marginBottom:'15px'},children:[element.label&&/*#__PURE__*/_jsx(\"label\",{style:{display:'block',marginBottom:'5px',fontWeight:'bold',color:'#ffffff',textAlign:element.alignment},children:element.label}),/*#__PURE__*/_jsxs(\"select\",{required:element.required,onChange:e=>handleInputChange(element.key,e.target.value),style:{padding:'10px',borderRadius:'6px',width:'100%',maxWidth:'400px'},children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select an option\"}),/*#__PURE__*/_jsx(\"option\",{value:\"true\",children:\"True\"}),/*#__PURE__*/_jsx(\"option\",{value:\"false\",children:\"False\"})]})]},index);case'dateTime':return/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",style:{textAlign:element.alignment,marginBottom:'15px'},children:[element.label&&/*#__PURE__*/_jsx(\"label\",{style:{display:'block',marginBottom:'5px',fontWeight:'bold',color:'#ffffff',textAlign:element.alignment},children:element.label}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",placeholder:element.placeholder,required:element.required,onChange:e=>handleInputChange(element.key,e.target.value),style:{padding:'10px',borderRadius:'6px',width:'100%',maxWidth:'400px'}})]},index);case'number':return/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",style:{textAlign:element.alignment,marginBottom:'15px'},children:[element.label&&/*#__PURE__*/_jsx(\"label\",{style:{display:'block',marginBottom:'5px',fontWeight:'bold',color:'#ffffff',textAlign:element.alignment},children:element.label}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",placeholder:element.placeholder,required:element.required,onChange:e=>handleInputChange(element.key,e.target.value),style:{padding:'10px',borderRadius:'6px',width:'100%',maxWidth:'400px'}})]},index);case'dropdown':return/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",style:{textAlign:element.alignment,marginBottom:'15px'},children:[element.label&&/*#__PURE__*/_jsx(\"label\",{style:{display:'block',marginBottom:'5px',fontWeight:'bold',color:'#ffffff',textAlign:element.alignment},children:element.label}),/*#__PURE__*/_jsxs(\"select\",{required:element.required,onChange:e=>handleInputChange(element.key,e.target.value),style:{padding:'10px',borderRadius:'6px',width:'100%',maxWidth:'400px'},children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select an option\"}),element.options.map((option,idx)=>/*#__PURE__*/_jsx(\"option\",{value:option,children:option},idx))]})]},index);case'divider':return/*#__PURE__*/_jsx(\"hr\",{className:\"form-divider\",style:{width:'100%',borderTop:'1px solid #444',margin:'20px 0'}},index);case'button':if(element.key==='Submit'){return null;// Do not render this button here, as we will use the form's submit button instead\n}return/*#__PURE__*/_jsx(\"div\",{className:\"form-group\",style:{textAlign:element.alignment,marginBottom:'15px'},children:/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:()=>alert(`${element.label} button clicked!`),style:{padding:'10px 20px',borderRadius:'6px',backgroundColor:'#007bff',color:'white',border:'none',cursor:'pointer'},children:element.label||'Button'})},index);case'text':return/*#__PURE__*/_jsx(\"div\",{className:\"form-group\",style:{textAlign:element.alignment,marginBottom:'15px'},children:element.label&&/*#__PURE__*/_jsx(\"label\",{style:{display:'block',marginBottom:'5px',fontWeight:'bold',color:'#ffffff',textAlign:element.alignment},children:element.label})},index);case'heading':return/*#__PURE__*/_jsx(\"div\",{className:\"form-group\",style:{textAlign:element.alignment,marginBottom:'15px'},children:element.label&&/*#__PURE__*/_jsx(\"h1\",{style:{marginBottom:'5px',fontWeight:'bold',color:'#ffffff',textAlign:element.alignment},children:element.label})},index);case'file':return/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",style:{textAlign:element.alignment,marginBottom:'15px'},children:[element.label&&/*#__PURE__*/_jsx(\"label\",{style:{display:'block',marginBottom:'5px',fontWeight:'bold',color:'#ffffff',textAlign:element.alignment},children:element.label}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",required:element.required,onChange:e=>handleFileChange(element.key,e.target.files[0]),style:{padding:'10px',borderRadius:'6px',width:'100%',maxWidth:'400px'}})]},index);case'table':const tableData=((_element$settings=element.settings)===null||_element$settings===void 0?void 0:_element$settings.csvData)||[];if(!Array.isArray(tableData)||tableData.length===0){return/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",style:{textAlign:element.alignment,marginBottom:'15px'},children:[/*#__PURE__*/_jsx(\"label\",{style:{display:'block',marginBottom:'5px',fontWeight:'bold',color:'#ffffff',textAlign:element.alignment},children:element.label}),/*#__PURE__*/_jsx(\"div\",{children:\"No CSV data to display\"})]},index);}return/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",style:{textAlign:element.alignment,marginBottom:'15px'},children:[element.label&&/*#__PURE__*/_jsx(\"label\",{style:{display:'block',marginBottom:'5px',fontWeight:'bold',color:'#ffffff',textAlign:element.alignment},children:element.label}),/*#__PURE__*/_jsxs(\"table\",{className:\"csv-table\",style:{width:'100%',borderCollapse:'collapse'},children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsx(\"tr\",{children:Array.isArray(tableData[0])&&tableData[0].map((header,headerIndex)=>/*#__PURE__*/_jsx(\"th\",{style:{border:'1px solid #ccc',padding:'8px',backgroundColor:'#333',color:'#fff'},children:header},headerIndex))})}),/*#__PURE__*/_jsx(\"tbody\",{children:tableData.slice(1).map((row,rowIndex)=>/*#__PURE__*/_jsx(\"tr\",{children:Array.isArray(row)&&row.map((cell,cellIndex)=>/*#__PURE__*/_jsx(\"td\",{style:{border:'1px solid #ccc',padding:'8px',textAlign:'center'},children:cell},cellIndex))},rowIndex))})]})]},index);default:return/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",style:{textAlign:element.alignment,marginBottom:'15px'},children:[element.label&&/*#__PURE__*/_jsx(\"label\",{style:{display:'block',marginBottom:'5px',fontWeight:'bold',color:'#ffffff',textAlign:element.alignment},children:element.label}),/*#__PURE__*/_jsx(\"input\",{type:element.type,placeholder:element.placeholder,required:element.required,onChange:e=>handleInputChange(element.key,e.target.value),style:{padding:'10px',borderRadius:'6px',width:'100%',maxWidth:'400px'}})]},index);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"form-container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:formData.name}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,style:{maxHeight:'80vh',overflowY:'auto'},children:[formData.elements.map((element,index)=>renderElement(element,index)),/*#__PURE__*/_jsx(\"div\",{className:\"form-group\",style:{textAlign:'center',marginTop:'20px'},children:/*#__PURE__*/_jsx(\"button\",{type:\"submit\",id:\"submit-button\",style:{padding:'10px 20px',borderRadius:'6px',backgroundColor:'#007bff',color:'white',border:'none',cursor:'pointer',textAlign:(formData===null||formData===void 0?void 0:formData.alignment)||'center'},children:\"Submit\"})})]})]});};export default FormDisplay;","map":{"version":3,"names":["React","useEffect","useState","useParams","jsx","_jsx","jsxs","_jsxs","authInfo","token","server","sslVerification","FormDisplay","formName","formData","setFormData","formValues","setFormValues","fetchAuthInfo","response","fetch","ok","Error","data","json","ph_auth_token","error","console","parseXML","xmlString","_xmlDoc$querySelector","_xmlDoc$querySelector2","parser","DOMParser","xmlDoc","parseFromString","name","querySelector","textContent","label","elements","Array","from","querySelectorAll","map","el","_el$querySelector","_el$querySelector2","_el$querySelector3","_el$querySelector4","_el$querySelector5","_el$querySelector6","type","optionsNode","options","opt","csvData","row","cell","key","required","placeholder","alignment","settings","length","fetchFormData","encodeURIComponent","headers","responseText","text","JSON","parse","xml_data","parsedData","handleInputChange","value","prev","handleFileChange","file","reader","FileReader","onload","e","target","result","webkitRelativePath","size","Date","lastModified","toISOString","readAsDataURL","handleSubmit","event","preventDefault","containerResponse","createContainer","containerId","id","log","aggregatedCEF","forEach","element","columns","reduce","acc","header","colIndex","slice","filter","undefined","Object","assign","startsWith","keys","artifactResponse","addArtifact","fileData","fileNameKey","split","fileName","fileType","fileSize","fileSizeInKB","toFixed","fileSizeFormatted","fileResponse","uploadFileToVault","fileArtifactData","hash","filename","filetype","filesize","fileArtifactResponse","alert","method","body","stringify","description","errorText","cefData","artifactName","container_id","cef","fileKey","file_content","file_name","children","renderElement","index","_element$settings","className","style","textAlign","marginBottom","display","fontWeight","color","onChange","padding","borderRadius","width","maxWidth","option","idx","borderTop","margin","onClick","backgroundColor","border","cursor","files","tableData","isArray","borderCollapse","headerIndex","rowIndex","cellIndex","onSubmit","maxHeight","overflowY","marginTop"],"sources":["C:/Users/abarbas/Desktop/soar_web_forms/src/components/FormDisplay.js"],"sourcesContent":["// src/components/FormDisplay.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport './FormDisplay.css';\r\n\r\n// Initial hardcoded authInfo\r\nlet authInfo = {\r\n    token: '',\r\n    server: '',\r\n    sslVerification: true, // Default to true; will be updated from the configuration\r\n};\r\n\r\n\r\nconst FormDisplay = () => {\r\n    const { formName } = useParams(); // Get form name from the URL\r\n    const [formData, setFormData] = useState(null);\r\n    const [formValues, setFormValues] = useState({}); // Store user input\r\n\r\n    // Function to fetch auth info from the configuration table\r\n    const fetchAuthInfo = async () => {\r\n        try {\r\n            const response = await fetch('http://localhost:5000/api/configuration'); // Call the API endpoint\r\n            if (!response.ok) {\r\n                throw new Error('Failed to fetch auth info');\r\n            }\r\n            const data = await response.json();\r\n            // Update authInfo with fetched values\r\n            authInfo = {\r\n                token: data.ph_auth_token,\r\n                server: data.server,\r\n            };\r\n        } catch (error) {\r\n            console.error('Error fetching auth info:', error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchAuthInfo(); // Fetch auth info when the component mounts\r\n    }, []);\r\n\r\n    const parseXML = (xmlString) => {\r\n        const parser = new DOMParser();\r\n        const xmlDoc = parser.parseFromString(xmlString, 'application/xml');\r\n        const name = xmlDoc.querySelector('form > name')?.textContent || 'Unnamed Form';\r\n        const label = xmlDoc.querySelector('form > label')?.textContent || 'event_data';\r\n    \r\n        const elements = Array.from(xmlDoc.querySelectorAll('elements > element')).map((el) => {\r\n            const type = el.querySelector('type')?.textContent || 'text';\r\n            const optionsNode = el.querySelector('dropdownOptions');\r\n            const options = optionsNode ? Array.from(optionsNode.querySelectorAll('option')).map(opt => opt.textContent) : [];\r\n    \r\n            // Extract CSV data if present\r\n            const csvData = Array.from(el.querySelectorAll('settings > csvData > row')).map(row =>\r\n                Array.from(row.querySelectorAll('cell')).map(cell => cell.textContent)\r\n            );\r\n    \r\n            return {\r\n                type,\r\n                key: el.querySelector('key')?.textContent || '',\r\n                label: el.querySelector('label')?.textContent || '',\r\n                required: el.querySelector('required')?.textContent === 'true',\r\n                placeholder: el.querySelector('placeholder')?.textContent || '',\r\n                alignment: el.querySelector('alignment')?.textContent || 'center',\r\n                options: options,\r\n                settings: {\r\n                    csvData: csvData.length > 0 ? csvData : [] // Ensure csvData is set correctly\r\n                }\r\n            };\r\n        });\r\n    \r\n        return { name, label, elements };\r\n    };\r\n    \r\n\r\n    useEffect(() => {\r\n        const fetchFormData = async () => {\r\n            try {\r\n                const response = await fetch(`http://localhost:5000/forms/${encodeURIComponent(formName)}`, {\r\n                    headers: {\r\n                        'Authorization': `Bearer ${authInfo.token}`, // Use the updated token\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                });\r\n\r\n                // Log the response for debugging\r\n                const responseText = await response.text();\r\n\r\n                // Check if response is valid JSON\r\n                if (!response.ok) {\r\n                    throw new Error('Form not found');\r\n                }\r\n\r\n                const data = JSON.parse(responseText); // Attempt parsing only if the response is correct\r\n                if (data.xml_data) {\r\n                    const parsedData = parseXML(data.xml_data);\r\n                    setFormData(parsedData);\r\n                } else {\r\n                    console.error('No XML data found in the response');\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching form data:', error);\r\n            }\r\n        };\r\n\r\n        fetchFormData();\r\n    }, [formName]);\r\n\r\n    const handleInputChange = (key, value) => {\r\n        setFormValues((prev) => ({ ...prev, [key]: value }));\r\n    };\r\n\r\n    const handleFileChange = (key, file) => {\r\n        if (file) {\r\n            const reader = new FileReader();\r\n            reader.onload = (e) => {\r\n                setFormValues((prev) => ({\r\n                    ...prev,\r\n                    [`file_${key}`]: e.target.result, // Store base64 encoded file\r\n                    [`file_name_${key}`]: file.name,\r\n                    [`file_path_${key}`]: file.webkitRelativePath || file.name,\r\n                    [`file_size_${key}`]: file.size,\r\n                    [`file_type_${key}`]: file.type,\r\n                    [`file_last_modified_${key}`]: new Date(file.lastModified).toISOString(),\r\n                }));\r\n            };\r\n            reader.readAsDataURL(file);\r\n        }\r\n    };\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault(); // Prevent default form submission\r\n        try {\r\n            const containerResponse = await createContainer(formData.name, formData.label);\r\n            const containerId = containerResponse.id;\r\n            console.log('Container created successfully:', containerResponse);\r\n    \r\n            // Add artifacts for each form field and table data\r\n            const aggregatedCEF = {};\r\n            formData.elements.forEach((element) => {\r\n                if (element.type === 'table' && element.settings.csvData) {\r\n                    // Extract headers and transpose data by columns\r\n                    const headers = element.settings.csvData[0];\r\n                    const columns = headers.reduce((acc, header, colIndex) => {\r\n                        acc[header] = element.settings.csvData.slice(1).map(row => row[colIndex]).filter(cell => cell !== undefined && cell !== '');\r\n                        return acc;\r\n                    }, {});\r\n    \r\n                    // Merge column data into the aggregated CEF\r\n                    Object.assign(aggregatedCEF, columns);\r\n                } else if (!element.type.startsWith('file') && formValues[element.key] !== undefined) {\r\n                    // Include non-file form data\r\n                    aggregatedCEF[element.key] = formValues[element.key];\r\n                }\r\n            });\r\n    \r\n            if (Object.keys(aggregatedCEF).length > 0) {\r\n                const artifactResponse = await addArtifact(containerId, aggregatedCEF, `${formData.name} Artifact`);\r\n                console.log('Artifact added successfully:', artifactResponse);\r\n            }\r\n    \r\n            // Upload files to the vault and add file metadata as artifacts\r\n            for (const key in formValues) {\r\n                if (key.startsWith('file_')) {\r\n                    const fileData = formValues[key];\r\n                    const fileNameKey = `file_name_${key.split('_')[1]}`;\r\n                    const fileName = formValues[fileNameKey];\r\n                    const fileType = formValues[`file_type_${key.split('_')[1]}`];\r\n                    const fileSize = formValues[`file_size_${key.split('_')[1]}`];\r\n                    const fileSizeInKB = (fileSize / 1024).toFixed(2);\r\n                    const fileSizeFormatted = fileSizeInKB > 1024 ? `${(fileSizeInKB / 1024).toFixed(2)} MB` : `${fileSizeInKB} KB`;\r\n    \r\n                    if (fileData && fileName) {\r\n                        const fileResponse = await uploadFileToVault(containerId, fileData, fileName);\r\n                        console.log('File uploaded successfully:', fileResponse);\r\n    \r\n                        // Add file metadata as artifact\r\n                        const fileArtifactData = {\r\n                            hash: fileResponse.hash,\r\n                            filename: fileName,\r\n                            filetype: fileType,\r\n                            filesize: fileSizeFormatted,\r\n                        };\r\n                        const fileArtifactResponse = await addArtifact(containerId, fileArtifactData, `${fileName} Metadata Artifact`);\r\n                        console.log('File metadata artifact added successfully:', fileArtifactResponse);\r\n                    } else {\r\n                        console.error('Missing file data or file name for:', key);\r\n                    }\r\n                }\r\n            }\r\n    \r\n            alert('Form submitted and data sent to Splunk SOAR successfully!');\r\n        } catch (error) {\r\n            console.error('Error submitting form:', error);\r\n            alert('Failed to submit form data to Splunk SOAR.');\r\n        }\r\n    };\r\n    \r\n    \r\n    const createContainer = async (name, label) => {\r\n        const response = await fetch(`${authInfo.server}/rest/container`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'ph-auth-token': authInfo.token,\r\n            },\r\n            body: JSON.stringify({\r\n                name,\r\n                label,\r\n                description: `${name} container created via API`,\r\n            }),\r\n        });\r\n        if (!response.ok) {\r\n            const errorText = await response.text();\r\n            console.error('Failed to create container:', errorText);\r\n            throw new Error('Failed to create container');\r\n        }\r\n        return response.json();\r\n    };\r\n    \r\n    const addArtifact = async (containerId, cefData, artifactName) => {\r\n        const response = await fetch(`${authInfo.server}/rest/artifact`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'ph-auth-token': authInfo.token,\r\n            },\r\n            body: JSON.stringify({\r\n                container_id: containerId,\r\n                cef: cefData, // Aggregated form data\r\n                name: artifactName,\r\n                label: 'event_data',\r\n                description: 'Artifact created via API with aggregated form data',\r\n            }),\r\n        });\r\n        if (!response.ok) {\r\n            const errorText = await response.text();\r\n            console.error('Failed to add artifact:', errorText);\r\n            throw new Error('Failed to add artifact');\r\n        }\r\n        return response.json();\r\n    };\r\n\r\n    const uploadFileToVault = async (containerId, fileData, fileKey) => {\r\n        const response = await fetch(`${authInfo.server}/rest/container_attachment`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'ph-auth-token': authInfo.token,\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                container_id: containerId,\r\n                file_content: fileData.split(',')[1], // Extract base64 content\r\n                file_name: fileKey,\r\n            }),\r\n        });\r\n        if (!response.ok) {\r\n            const errorText = await response.text();\r\n            console.error('Failed to upload the file to the vault:', errorText);\r\n            throw new Error('Failed to upload the file to the vault');\r\n        }\r\n        return response.json();\r\n    };\r\n\r\n    if (!formData) {\r\n        return <h2>Form not found</h2>;\r\n    }\r\n\r\n    const renderElement = (element, index) => {\r\n        switch (element.type) {\r\n            case 'boolean':\r\n                return (\r\n                    <div key={index} className=\"form-group\" style={{ textAlign: element.alignment, marginBottom: '15px' }}>\r\n                        {element.label && (\r\n                            <label\r\n                                style={{\r\n                                    display: 'block',\r\n                                    marginBottom: '5px',\r\n                                    fontWeight: 'bold',\r\n                                    color: '#ffffff',\r\n                                    textAlign: element.alignment,\r\n                                }}\r\n                            >\r\n                                {element.label}\r\n                            </label>\r\n                        )}\r\n                        <select\r\n                            required={element.required}\r\n                            onChange={(e) => handleInputChange(element.key, e.target.value)}\r\n                            style={{ padding: '10px', borderRadius: '6px', width: '100%', maxWidth: '400px' }}\r\n                        >\r\n                            <option value=\"\">Select an option</option>\r\n                            <option value=\"true\">True</option>\r\n                            <option value=\"false\">False</option>\r\n                        </select>\r\n                    </div>\r\n                );\r\n            case 'dateTime':\r\n                return (\r\n                    <div key={index} className=\"form-group\" style={{ textAlign: element.alignment, marginBottom: '15px' }}>\r\n                        {element.label && (\r\n                            <label\r\n                                style={{\r\n                                    display: 'block',\r\n                                    marginBottom: '5px',\r\n                                    fontWeight: 'bold',\r\n                                    color: '#ffffff',\r\n                                    textAlign: element.alignment,\r\n                                }}\r\n                            >\r\n                                {element.label}\r\n                            </label>\r\n                        )}\r\n                        <input\r\n                            type=\"date\"\r\n                            placeholder={element.placeholder}\r\n                            required={element.required}\r\n                            onChange={(e) => handleInputChange(element.key, e.target.value)}\r\n                            style={{ padding: '10px', borderRadius: '6px', width: '100%', maxWidth: '400px' }}\r\n                        />\r\n                    </div>\r\n                );\r\n            case 'number':\r\n                return (\r\n                    <div key={index} className=\"form-group\" style={{ textAlign: element.alignment, marginBottom: '15px' }}>\r\n                        {element.label && (\r\n                            <label\r\n                                style={{\r\n                                    display: 'block',\r\n                                    marginBottom: '5px',\r\n                                    fontWeight: 'bold',\r\n                                    color: '#ffffff',\r\n                                    textAlign: element.alignment,\r\n                                }}\r\n                            >\r\n                                {element.label}\r\n                            </label>\r\n                        )}\r\n                        <input\r\n                            type=\"number\"\r\n                            placeholder={element.placeholder}\r\n                            required={element.required}\r\n                            onChange={(e) => handleInputChange(element.key, e.target.value)}\r\n                            style={{ padding: '10px', borderRadius: '6px', width: '100%', maxWidth: '400px' }}\r\n                        />\r\n                    </div>\r\n                );\r\n            case 'dropdown':\r\n                return (\r\n                    <div key={index} className=\"form-group\" style={{ textAlign: element.alignment, marginBottom: '15px' }}>\r\n                        {element.label && (\r\n                            <label\r\n                                style={{\r\n                                    display: 'block',\r\n                                    marginBottom: '5px',\r\n                                    fontWeight: 'bold',\r\n                                    color: '#ffffff',\r\n                                    textAlign: element.alignment,\r\n                                }}\r\n                            >\r\n                                {element.label}\r\n                            </label>\r\n                        )}\r\n                        <select\r\n                            required={element.required}\r\n                            onChange={(e) => handleInputChange(element.key, e.target.value)}\r\n                            style={{ padding: '10px', borderRadius: '6px', width: '100%', maxWidth: '400px' }}\r\n                        >\r\n                            <option value=\"\">Select an option</option>\r\n                            {element.options.map((option, idx) => (\r\n                                <option key={idx} value={option}>{option}</option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                );\r\n            case 'divider':\r\n                return (\r\n                    <hr key={index} className=\"form-divider\" style={{ width: '100%', borderTop: '1px solid #444', margin: '20px 0' }} />\r\n                );\r\n            case 'button':\r\n                if (element.key === 'Submit') {\r\n                    return null; // Do not render this button here, as we will use the form's submit button instead\r\n                }\r\n                return (\r\n                    <div key={index} className=\"form-group\" style={{ textAlign: element.alignment, marginBottom: '15px' }}>\r\n                        <button\r\n                            type=\"button\"\r\n                            onClick={() => alert(`${element.label} button clicked!`)}\r\n                            style={{\r\n                                padding: '10px 20px',\r\n                                borderRadius: '6px',\r\n                                backgroundColor: '#007bff',\r\n                                color: 'white',\r\n                                border: 'none',\r\n                                cursor: 'pointer',\r\n                            }}\r\n                        >\r\n                            {element.label || 'Button'}\r\n                        </button>\r\n                    </div>\r\n                );\r\n            case 'text':\r\n                return (\r\n                    <div key={index} className=\"form-group\" style={{ textAlign: element.alignment, marginBottom: '15px' }}>\r\n                        {element.label && (\r\n                            <label\r\n                                style={{\r\n                                    display: 'block',\r\n                                    marginBottom: '5px',\r\n                                    fontWeight: 'bold',\r\n                                    color: '#ffffff',\r\n                                    textAlign: element.alignment,\r\n                                }}\r\n                            >\r\n                                {element.label}\r\n                            </label>\r\n                        )}\r\n                    </div>\r\n                );\r\n            case 'heading':\r\n                return (\r\n                    <div key={index} className=\"form-group\" style={{ textAlign: element.alignment, marginBottom: '15px' }}>\r\n                        {element.label && (\r\n                            <h1\r\n                                style={{\r\n                                    marginBottom: '5px',\r\n                                    fontWeight: 'bold',\r\n                                    color: '#ffffff',\r\n                                    textAlign: element.alignment,\r\n                                }}\r\n                            >\r\n                                {element.label}\r\n                            </h1>\r\n                        )}\r\n                    </div>\r\n                );\r\n            case 'file':\r\n                return (\r\n                    <div key={index} className=\"form-group\" style={{ textAlign: element.alignment, marginBottom: '15px' }}>\r\n                        {element.label && (\r\n                            <label\r\n                                style={{\r\n                                    display: 'block',\r\n                                    marginBottom: '5px',\r\n                                    fontWeight: 'bold',\r\n                                    color: '#ffffff',\r\n                                    textAlign: element.alignment,\r\n                                }}\r\n                            >\r\n                                {element.label}\r\n                            </label>\r\n                        )}\r\n                        <input\r\n                            type=\"file\"\r\n                            required={element.required}\r\n                            onChange={(e) => handleFileChange(element.key, e.target.files[0])}\r\n                            style={{ padding: '10px', borderRadius: '6px', width: '100%', maxWidth: '400px' }}\r\n                        />\r\n                    </div>\r\n                );\r\n\r\n        case 'table':\r\n            const tableData = element.settings?.csvData || [];\r\n\r\n            if (!Array.isArray(tableData) || tableData.length === 0) {\r\n                return (\r\n                    <div key={index} className=\"form-group\" style={{ textAlign: element.alignment, marginBottom: '15px' }}>\r\n                        <label\r\n                            style={{\r\n                                display: 'block',\r\n                                marginBottom: '5px',\r\n                                fontWeight: 'bold',\r\n                                color: '#ffffff',\r\n                                textAlign: element.alignment,\r\n                            }}\r\n                        >\r\n                            {element.label}\r\n                        </label>\r\n                        <div>No CSV data to display</div>\r\n                    </div>\r\n                );\r\n            }\r\n\r\n            return (\r\n                <div key={index} className=\"form-group\" style={{ textAlign: element.alignment, marginBottom: '15px' }}>\r\n                    {element.label && (\r\n                        <label\r\n                            style={{\r\n                                display: 'block',\r\n                                marginBottom: '5px',\r\n                                fontWeight: 'bold',\r\n                                color: '#ffffff',\r\n                                textAlign: element.alignment,\r\n                            }}\r\n                        >\r\n                            {element.label}\r\n                        </label>\r\n                    )}\r\n                    <table className=\"csv-table\" style={{ width: '100%', borderCollapse: 'collapse' }}>\r\n                        <thead>\r\n                            <tr>\r\n                                {Array.isArray(tableData[0]) && tableData[0].map((header, headerIndex) => (\r\n                                    <th key={headerIndex} style={{ border: '1px solid #ccc', padding: '8px', backgroundColor: '#333', color: '#fff' }}>\r\n                                        {header}\r\n                                    </th>\r\n                                ))}\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {tableData.slice(1).map((row, rowIndex) => (\r\n                                <tr key={rowIndex}>\r\n                                    {Array.isArray(row) && row.map((cell, cellIndex) => (\r\n                                        <td key={cellIndex} style={{ border: '1px solid #ccc', padding: '8px', textAlign: 'center' }}>\r\n                                            {cell}\r\n                                        </td>\r\n                                    ))}\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            );\r\n            default:\r\n                return (\r\n                    <div key={index} className=\"form-group\" style={{ textAlign: element.alignment, marginBottom: '15px' }}>\r\n                        {element.label && (\r\n                            <label\r\n                                style={{\r\n                                    display: 'block',\r\n                                    marginBottom: '5px',\r\n                                    fontWeight: 'bold',\r\n                                    color: '#ffffff',\r\n                                    textAlign: element.alignment,\r\n                                }}\r\n                            >\r\n                                {element.label}\r\n                            </label>\r\n                        )}\r\n                        <input\r\n                            type={element.type}\r\n                            placeholder={element.placeholder}\r\n                            required={element.required}\r\n                            onChange={(e) => handleInputChange(element.key, e.target.value)}\r\n                            style={{ padding: '10px', borderRadius: '6px', width: '100%', maxWidth: '400px' }}\r\n                        />\r\n                    </div>\r\n                );\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"form-container\">\r\n            <h2>{formData.name}</h2>\r\n            <form onSubmit={handleSubmit} style={{ maxHeight: '80vh', overflowY: 'auto' }}>\r\n                {formData.elements.map((element, index) => renderElement(element, index))}\r\n                <div className=\"form-group\" style={{ textAlign: 'center', marginTop: '20px' }}>\r\n                    <button\r\n                        type=\"submit\"\r\n                        id=\"submit-button\"\r\n                        style={{\r\n                            padding: '10px 20px',\r\n                            borderRadius: '6px',\r\n                            backgroundColor: '#007bff',\r\n                            color: 'white',\r\n                            border: 'none',\r\n                            cursor: 'pointer',\r\n                            textAlign: formData?.alignment || 'center',\r\n                        }}\r\n                    >\r\n                        Submit\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FormDisplay;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}