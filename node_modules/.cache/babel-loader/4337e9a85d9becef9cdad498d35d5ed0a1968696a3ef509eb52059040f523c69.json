{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abarbas\\\\Desktop\\\\soar_web_forms\\\\src\\\\components\\\\FormBuilder.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { DndContext, DragOverlay, closestCenter } from '@dnd-kit/core';\nimport { arrayMove, SortableContext, useSortable, rectSortingStrategy } from '@dnd-kit/sortable';\nimport Papa from 'papaparse';\nimport './FormBuilder.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ELEMENT_TYPES = [{\n  id: 'heading',\n  label: 'Heading'\n}, {\n  id: 'text',\n  label: 'Text'\n}, {\n  id: 'divider',\n  label: 'Divider'\n}, {\n  id: 'table',\n  label: 'Table'\n}];\nconst INPUT_FIELDS = [{\n  id: 'inputText',\n  label: 'Input Text',\n  type: 'text'\n}, {\n  id: 'email',\n  label: 'Email',\n  type: 'email'\n}, {\n  id: 'dateTime',\n  label: 'Date or Time',\n  type: 'datetime-local'\n}, {\n  id: 'dropdown',\n  label: 'Dropdown',\n  type: 'dropdown'\n}, {\n  id: 'boolean',\n  label: 'Boolean',\n  type: 'dropdown'\n}, {\n  id: 'number',\n  label: 'Number',\n  type: 'number'\n}, {\n  id: 'file',\n  label: 'File Upload',\n  type: 'file'\n}];\nconst FormBuilder = () => {\n  _s();\n  const [formElements, setFormElements] = useState([]);\n  const [formName, setFormName] = useState('');\n  const [formLabel, setFormLabel] = useState('');\n  const [formTags, setFormTags] = useState('');\n  const [savedForms, setSavedForms] = useState([]);\n  const [selectedForm, setSelectedForm] = useState('');\n  const [selectedElement, setSelectedElement] = useState(null);\n  const [draftSettings, setDraftSettings] = useState(null);\n  const [draggingElement, setDraggingElement] = useState(null);\n  const [formToLoad, setFormToLoad] = useState(null);\n  const formContainerRef = useRef(null);\n  const [selectedFileName, setSelectedFileName] = useState('');\n  const SUBMIT_BUTTON_ID = 'submit-button';\n  useEffect(() => {\n    console.log('Form Elements Updated:', formElements);\n    const tableElement = formElements.find(el => el.type === 'table');\n    if (tableElement) {\n      console.log('Table Element Found:', tableElement);\n      console.log('CSV Data in State:', tableElement.settings.csvData);\n    }\n  }, [formElements]);\n  useEffect(() => {\n    if (!formElements.some(el => el.id === SUBMIT_BUTTON_ID)) {\n      addSubmitButton();\n    }\n  }, [formElements]);\n  useEffect(() => {\n    loadSavedForms();\n  }, []);\n  const loadSavedForms = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/forms');\n      if (!response.ok) {\n        throw new Error(`Failed to fetch forms: ${response.status}`);\n      }\n      const data = await response.json();\n      const loadedForms = data.map(form => ({\n        id: form.id,\n        name: form.name\n      }));\n      setSavedForms(loadedForms);\n    } catch (error) {\n      console.error('Error loading forms:', error);\n    }\n  };\n  const loadForm = () => {\n    if (!selectedForm) {\n      alert('Please select a form to load.');\n      return;\n    }\n    setFormElements([]);\n    const formToFetch = savedForms.find(form => form.name === selectedForm);\n    if (!formToFetch) {\n      alert(`No form found for the name \"${selectedForm}\"`);\n      return;\n    }\n    fetch(`http://localhost:5000/forms/${formToFetch.id}`).then(response => response.json()).then(formData => {\n      var _xmlDoc$querySelector, _xmlDoc$querySelector2;\n      const parser = new DOMParser();\n      const xmlDoc = parser.parseFromString(formData.xml_data, 'application/xml');\n      const loadedName = ((_xmlDoc$querySelector = xmlDoc.querySelector('form > name')) === null || _xmlDoc$querySelector === void 0 ? void 0 : _xmlDoc$querySelector.textContent) || '';\n      const loadedLabel = ((_xmlDoc$querySelector2 = xmlDoc.querySelector('form > label')) === null || _xmlDoc$querySelector2 === void 0 ? void 0 : _xmlDoc$querySelector2.textContent) || '';\n      const loadedTags = Array.from(xmlDoc.querySelectorAll('form > tags > tag')).map(tag => tag.textContent);\n      const elements = Array.from(xmlDoc.querySelectorAll('elements > element')).map((el, index) => {\n        var _el$querySelector, _el$querySelector2, _el$querySelector3, _el$querySelector4, _el$querySelector5, _el$querySelector6, _el$querySelector7;\n        const type = ((_el$querySelector = el.querySelector('type')) === null || _el$querySelector === void 0 ? void 0 : _el$querySelector.textContent) || 'text';\n        const optionsNode = el.querySelector('dropdownOptions');\n        const options = optionsNode ? Array.from(optionsNode.querySelectorAll('option')).map(opt => opt.textContent) : [];\n        return {\n          id: `element-${Date.now()}-${index}`,\n          type,\n          key: ((_el$querySelector2 = el.querySelector('key')) === null || _el$querySelector2 === void 0 ? void 0 : _el$querySelector2.textContent) || '',\n          label: ((_el$querySelector3 = el.querySelector('label')) === null || _el$querySelector3 === void 0 ? void 0 : _el$querySelector3.textContent) || '',\n          required: ((_el$querySelector4 = el.querySelector('required')) === null || _el$querySelector4 === void 0 ? void 0 : _el$querySelector4.textContent) === 'true',\n          alignment: ((_el$querySelector5 = el.querySelector('alignment')) === null || _el$querySelector5 === void 0 ? void 0 : _el$querySelector5.textContent) || 'center',\n          settings: {\n            headerLevel: ((_el$querySelector6 = el.querySelector('headerLevel')) === null || _el$querySelector6 === void 0 ? void 0 : _el$querySelector6.textContent) || 'h1',\n            placeholder: ((_el$querySelector7 = el.querySelector('placeholder')) === null || _el$querySelector7 === void 0 ? void 0 : _el$querySelector7.textContent) || '',\n            dropdownOptions: options\n          }\n        };\n      }).filter(el => el.type !== 'button');\n      setFormName(loadedName);\n      setFormLabel(loadedLabel);\n      setFormTags(loadedTags.join(', '));\n      setFormElements(elements);\n      setFormToLoad(null);\n    }).catch(error => {\n      console.error('Error loading form:', error);\n      alert('Failed to load form data.');\n      setFormToLoad(null);\n    });\n  };\n  const addSubmitButton = () => {\n    setFormElements(prev => [...prev, {\n      id: SUBMIT_BUTTON_ID,\n      type: 'button',\n      key: 'Submit',\n      label: 'Submit',\n      alignment: 'center',\n      required: false,\n      settings: {}\n    }]);\n  };\n\n  // Other methods and JSX remain the same...\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-builder-container\",\n    style: {\n      height: '100vh',\n      overflow: 'hidden'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-name-section\",\n        style: {\n          marginBottom: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"form-name\",\n          className: \"sidebar-label\",\n          children: \"Form Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"form-name\",\n          type: \"text\",\n          value: formName,\n          onChange: e => setFormName(e.target.value),\n          placeholder: \"Enter form name\",\n          className: \"form-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-label-section\",\n        style: {\n          marginBottom: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"form-label\",\n          className: \"sidebar-label\",\n          children: \"Label (Required):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"form-label\",\n          type: \"text\",\n          value: formLabel,\n          onChange: e => setFormLabel(e.target.value),\n          placeholder: \"Enter form label\",\n          className: \"form-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"load-section\",\n        style: {\n          marginBottom: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"saved-forms\",\n          className: \"sidebar-label\",\n          children: \"Load Saved Form:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"saved-forms\",\n          value: selectedForm,\n          onChange: e => setSelectedForm(e.target.value),\n          className: \"sidebar-select\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"-- Select a Form --\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this), savedForms.map(form => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: form.name,\n            children: form.name\n          }, form.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: loadForm,\n          className: \"load-form-button\",\n          children: \"Load Form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: saveForm,\n        className: \"save-form-button\",\n        children: \"Save Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleResetForm,\n        className: \"reset-form-button\",\n        children: \"Reset Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-builder\",\n      ref: formContainerRef,\n      style: {\n        height: '100%',\n        overflowY: 'auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(DndContext, {\n        collisionDetection: closestCenter,\n        onDragEnd: handleDragEnd,\n        onDragStart: handleDragStart,\n        children: [/*#__PURE__*/_jsxDEV(SortableContext, {\n          items: formElements,\n          strategy: rectSortingStrategy,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-preview\",\n            children: formElements.map(element => /*#__PURE__*/_jsxDEV(SortableFormElement, {\n              element: element,\n              handleEditClick: handleEditClick,\n              renderElementContent: renderElementContent\n            }, element.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 11\n        }, this), draggingElement && /*#__PURE__*/_jsxDEV(DragOverlay, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dragging-overlay\",\n            children: \"Dragging\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this), selectedElement && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"element-editor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, this);\n};\n_s(FormBuilder, \"Eunv3FmUSEx8WGU758m5dDR5+bw=\");\n_c = FormBuilder;\nconst SortableFormElement = ({\n  element,\n  handleEditClick,\n  renderElementContent\n}) => {\n  _s2();\n  var _element$settings;\n  const {\n    attributes,\n    listeners,\n    setNodeRef,\n    transform,\n    transition\n  } = useSortable({\n    id: element.id\n  });\n  const style = {\n    transform: transform ? `translate3d(${transform.x}px, ${transform.y}px, 0)` : undefined,\n    transition,\n    backgroundColor: ((_element$settings = element.settings) === null || _element$settings === void 0 ? void 0 : _element$settings.backgroundColor) || 'inherit'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: setNodeRef,\n    style: style,\n    className: \"form-element\",\n    onClick: () => handleEditClick(element),\n    children: [renderElementContent(element), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"drag-handle\",\n      ...listeners,\n      ...attributes,\n      onMouseDown: e => e.stopPropagation(),\n      children: \"Drag\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 231,\n    columnNumber: 5\n  }, this);\n};\n_s2(SortableFormElement, \"FTUh0JV0KNM2MI3tYtLrQh0rr1U=\", false, function () {\n  return [useSortable];\n});\n_c2 = SortableFormElement;\nexport default FormBuilder;\nvar _c, _c2;\n$RefreshReg$(_c, \"FormBuilder\");\n$RefreshReg$(_c2, \"SortableFormElement\");","map":{"version":3,"names":["React","useState","useRef","useEffect","DndContext","DragOverlay","closestCenter","arrayMove","SortableContext","useSortable","rectSortingStrategy","Papa","jsxDEV","_jsxDEV","ELEMENT_TYPES","id","label","INPUT_FIELDS","type","FormBuilder","_s","formElements","setFormElements","formName","setFormName","formLabel","setFormLabel","formTags","setFormTags","savedForms","setSavedForms","selectedForm","setSelectedForm","selectedElement","setSelectedElement","draftSettings","setDraftSettings","draggingElement","setDraggingElement","formToLoad","setFormToLoad","formContainerRef","selectedFileName","setSelectedFileName","SUBMIT_BUTTON_ID","console","log","tableElement","find","el","settings","csvData","some","addSubmitButton","loadSavedForms","response","fetch","ok","Error","status","data","json","loadedForms","map","form","name","error","loadForm","alert","formToFetch","then","formData","_xmlDoc$querySelector","_xmlDoc$querySelector2","parser","DOMParser","xmlDoc","parseFromString","xml_data","loadedName","querySelector","textContent","loadedLabel","loadedTags","Array","from","querySelectorAll","tag","elements","index","_el$querySelector","_el$querySelector2","_el$querySelector3","_el$querySelector4","_el$querySelector5","_el$querySelector6","_el$querySelector7","optionsNode","options","opt","Date","now","key","required","alignment","headerLevel","placeholder","dropdownOptions","filter","join","catch","prev","className","style","height","overflow","children","marginBottom","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","onClick","saveForm","handleResetForm","ref","overflowY","collisionDetection","onDragEnd","handleDragEnd","onDragStart","handleDragStart","items","strategy","element","SortableFormElement","handleEditClick","renderElementContent","_c","_s2","_element$settings","attributes","listeners","setNodeRef","transform","transition","x","y","undefined","backgroundColor","onMouseDown","stopPropagation","_c2","$RefreshReg$"],"sources":["C:/Users/abarbas/Desktop/soar_web_forms/src/components/FormBuilder.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { DndContext, DragOverlay, closestCenter } from '@dnd-kit/core';\r\nimport { arrayMove, SortableContext, useSortable, rectSortingStrategy } from '@dnd-kit/sortable';\r\nimport Papa from 'papaparse';\r\nimport './FormBuilder.css';\r\n\r\nconst ELEMENT_TYPES = [\r\n  { id: 'heading', label: 'Heading' },\r\n  { id: 'text', label: 'Text' },\r\n  { id: 'divider', label: 'Divider' },\r\n  { id: 'table', label: 'Table' }\r\n];\r\n\r\nconst INPUT_FIELDS = [\r\n  { id: 'inputText', label: 'Input Text', type: 'text' },\r\n  { id: 'email', label: 'Email', type: 'email' },\r\n  { id: 'dateTime', label: 'Date or Time', type: 'datetime-local' },\r\n  { id: 'dropdown', label: 'Dropdown', type: 'dropdown' },\r\n  { id: 'boolean', label: 'Boolean', type: 'dropdown' },\r\n  { id: 'number', label: 'Number', type: 'number' },\r\n  { id: 'file', label: 'File Upload', type: 'file' }\r\n];\r\n\r\nconst FormBuilder = () => {\r\n  const [formElements, setFormElements] = useState([]);\r\n  const [formName, setFormName] = useState('');\r\n  const [formLabel, setFormLabel] = useState('');\r\n  const [formTags, setFormTags] = useState('');\r\n  const [savedForms, setSavedForms] = useState([]);\r\n  const [selectedForm, setSelectedForm] = useState('');\r\n  const [selectedElement, setSelectedElement] = useState(null);\r\n  const [draftSettings, setDraftSettings] = useState(null);\r\n  const [draggingElement, setDraggingElement] = useState(null);\r\n  const [formToLoad, setFormToLoad] = useState(null);\r\n  const formContainerRef = useRef(null);\r\n  const [selectedFileName, setSelectedFileName] = useState('');\r\n  const SUBMIT_BUTTON_ID = 'submit-button';\r\n\r\n  useEffect(() => {\r\n    console.log('Form Elements Updated:', formElements);\r\n    const tableElement = formElements.find((el) => el.type === 'table');\r\n    if (tableElement) {\r\n      console.log('Table Element Found:', tableElement);\r\n      console.log('CSV Data in State:', tableElement.settings.csvData);\r\n    }\r\n  }, [formElements]);\r\n\r\n  useEffect(() => {\r\n    if (!formElements.some(el => el.id === SUBMIT_BUTTON_ID)) {\r\n      addSubmitButton();\r\n    }\r\n  }, [formElements]);\r\n\r\n  useEffect(() => {\r\n    loadSavedForms();\r\n  }, []);\r\n\r\n  const loadSavedForms = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/forms');\r\n      if (!response.ok) {\r\n        throw new Error(`Failed to fetch forms: ${response.status}`);\r\n      }\r\n      const data = await response.json();\r\n      const loadedForms = data.map(form => ({\r\n        id: form.id,\r\n        name: form.name\r\n      }));\r\n      setSavedForms(loadedForms);\r\n    } catch (error) {\r\n      console.error('Error loading forms:', error);\r\n    }\r\n  };\r\n\r\n  const loadForm = () => {\r\n    if (!selectedForm) {\r\n      alert('Please select a form to load.');\r\n      return;\r\n    }\r\n\r\n    setFormElements([]);\r\n\r\n    const formToFetch = savedForms.find(form => form.name === selectedForm);\r\n    if (!formToFetch) {\r\n      alert(`No form found for the name \"${selectedForm}\"`);\r\n      return;\r\n    }\r\n\r\n    fetch(`http://localhost:5000/forms/${formToFetch.id}`)\r\n      .then(response => response.json())\r\n      .then(formData => {\r\n        const parser = new DOMParser();\r\n        const xmlDoc = parser.parseFromString(formData.xml_data, 'application/xml');\r\n        const loadedName = xmlDoc.querySelector('form > name')?.textContent || '';\r\n        const loadedLabel = xmlDoc.querySelector('form > label')?.textContent || '';\r\n        const loadedTags = Array.from(xmlDoc.querySelectorAll('form > tags > tag')).map(tag => tag.textContent);\r\n\r\n        const elements = Array.from(xmlDoc.querySelectorAll('elements > element'))\r\n          .map((el, index) => {\r\n            const type = el.querySelector('type')?.textContent || 'text';\r\n            const optionsNode = el.querySelector('dropdownOptions');\r\n            const options = optionsNode ? Array.from(optionsNode.querySelectorAll('option')).map(opt => opt.textContent) : [];\r\n\r\n            return {\r\n              id: `element-${Date.now()}-${index}`,\r\n              type,\r\n              key: el.querySelector('key')?.textContent || '',\r\n              label: el.querySelector('label')?.textContent || '',\r\n              required: el.querySelector('required')?.textContent === 'true',\r\n              alignment: el.querySelector('alignment')?.textContent || 'center',\r\n              settings: {\r\n                headerLevel: el.querySelector('headerLevel')?.textContent || 'h1',\r\n                placeholder: el.querySelector('placeholder')?.textContent || '',\r\n                dropdownOptions: options,\r\n              }\r\n            };\r\n          })\r\n          .filter(el => el.type !== 'button');\r\n\r\n        setFormName(loadedName);\r\n        setFormLabel(loadedLabel);\r\n        setFormTags(loadedTags.join(', '));\r\n        setFormElements(elements);\r\n        setFormToLoad(null);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error loading form:', error);\r\n        alert('Failed to load form data.');\r\n        setFormToLoad(null);\r\n      });\r\n  };\r\n\r\n  const addSubmitButton = () => {\r\n    setFormElements(prev => [\r\n      ...prev,\r\n      {\r\n        id: SUBMIT_BUTTON_ID,\r\n        type: 'button',\r\n        key: 'Submit',\r\n        label: 'Submit',\r\n        alignment: 'center',\r\n        required: false,\r\n        settings: {},\r\n      },\r\n    ]);\r\n  };\r\n\r\n  // Other methods and JSX remain the same...\r\n  \r\n  return (\r\n    <div className=\"form-builder-container\" style={{ height: '100vh', overflow: 'hidden' }}>\r\n      <div className=\"sidebar\">\r\n        <div className=\"form-name-section\" style={{ marginBottom: '20px' }}>\r\n          <label htmlFor=\"form-name\" className=\"sidebar-label\">Form Name:</label>\r\n          <input\r\n            id=\"form-name\"\r\n            type=\"text\"\r\n            value={formName}\r\n            onChange={(e) => setFormName(e.target.value)}\r\n            placeholder=\"Enter form name\"\r\n            className=\"form-input\"\r\n          />\r\n        </div>\r\n        <div className=\"form-label-section\" style={{ marginBottom: '20px' }}>\r\n          <label htmlFor=\"form-label\" className=\"sidebar-label\">Label (Required):</label>\r\n          <input\r\n            id=\"form-label\"\r\n            type=\"text\"\r\n            value={formLabel}\r\n            onChange={(e) => setFormLabel(e.target.value)}\r\n            placeholder=\"Enter form label\"\r\n            className=\"form-input\"\r\n          />\r\n        </div>\r\n        <div className=\"load-section\" style={{ marginBottom: '20px' }}>\r\n          <label htmlFor=\"saved-forms\" className=\"sidebar-label\">Load Saved Form:</label>\r\n          <select\r\n            id=\"saved-forms\"\r\n            value={selectedForm}\r\n            onChange={(e) => setSelectedForm(e.target.value)}\r\n            className=\"sidebar-select\"\r\n          >\r\n            <option value=\"\">-- Select a Form --</option>\r\n            {savedForms.map((form) => (\r\n              <option key={form.id} value={form.name}>\r\n                {form.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          <button onClick={loadForm} className=\"load-form-button\">Load Form</button>\r\n        </div>\r\n        <button onClick={saveForm} className=\"save-form-button\">Save Form</button>\r\n        <button onClick={handleResetForm} className=\"reset-form-button\">Reset Form</button>\r\n      </div>\r\n      {/* Main form builder content */}\r\n      <div className=\"form-builder\" ref={formContainerRef} style={{ height: '100%', overflowY: 'auto' }}>\r\n        <DndContext collisionDetection={closestCenter} onDragEnd={handleDragEnd} onDragStart={handleDragStart}>\r\n          <SortableContext items={formElements} strategy={rectSortingStrategy}>\r\n            <div className=\"form-preview\">\r\n              {formElements.map((element) => (\r\n                <SortableFormElement key={element.id} element={element} handleEditClick={handleEditClick} renderElementContent={renderElementContent} />\r\n              ))}\r\n            </div>\r\n          </SortableContext>\r\n          {draggingElement && (\r\n            <DragOverlay>\r\n              <div className=\"dragging-overlay\">Dragging</div>\r\n            </DragOverlay>\r\n          )}\r\n        </DndContext>\r\n      </div>\r\n      {selectedElement && (\r\n        <div className=\"element-editor\">\r\n          {/* Element editor content */}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SortableFormElement = ({ element, handleEditClick, renderElementContent }) => {\r\n  const { attributes, listeners, setNodeRef, transform, transition } = useSortable({ id: element.id });\r\n\r\n  const style = {\r\n    transform: transform ? `translate3d(${transform.x}px, ${transform.y}px, 0)` : undefined,\r\n    transition,\r\n    backgroundColor: element.settings?.backgroundColor || 'inherit',\r\n  };\r\n\r\n  return (\r\n    <div ref={setNodeRef} style={style} className=\"form-element\" onClick={() => handleEditClick(element)}>\r\n      {renderElementContent(element)}\r\n      <button className=\"drag-handle\" {...listeners} {...attributes} onMouseDown={(e) => e.stopPropagation()}>Drag</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormBuilder;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}