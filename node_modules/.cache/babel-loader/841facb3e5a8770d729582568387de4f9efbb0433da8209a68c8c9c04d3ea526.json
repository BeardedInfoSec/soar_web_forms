{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abarbas\\\\Desktop\\\\soar_web_forms\\\\src\\\\components\\\\FormBuilder.js\",\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { DndContext, DragOverlay, closestCenter } from '@dnd-kit/core';\nimport { arrayMove, SortableContext, useSortable, rectSortingStrategy } from '@dnd-kit/sortable';\nimport Papa from 'papaparse';\nimport './FormBuilder.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ELEMENT_TYPES = [{\n  id: 'heading',\n  label: 'Heading'\n}, {\n  id: 'text',\n  label: 'Text'\n}, {\n  id: 'divider',\n  label: 'Divider'\n},\n//{ id: 'button', label: 'Button' },\n//{ id: 'image', label: 'Image' },\n{\n  id: 'table',\n  label: 'Table'\n}];\nconst INPUT_FIELDS = [{\n  id: 'inputText',\n  label: 'Input Text',\n  type: 'text'\n}, {\n  id: 'email',\n  label: 'Email',\n  type: 'email'\n},\n//{ id: 'password', label: 'Password', type: 'password' }, \n{\n  id: 'dateTime',\n  label: 'Date or Time',\n  type: 'datetime-local'\n}, {\n  id: 'dropdown',\n  label: 'Dropdown',\n  type: 'dropdown'\n}, {\n  id: 'boolean',\n  label: 'Boolean',\n  type: 'dropdown'\n}, {\n  id: 'number',\n  label: 'Number',\n  type: 'number'\n}, {\n  id: 'file',\n  label: 'File Upload',\n  type: 'file'\n}];\nconst FormBuilder = () => {\n  _s2();\n  var _s = $RefreshSig$(),\n    _draftSettings$dropdo;\n  const [formElements, setFormElements] = useState([]);\n  const [formName, setFormName] = useState('');\n  const [formLabel, setFormLabel] = useState('');\n  const [formTags, setFormTags] = useState('');\n  const [savedForms, setSavedForms] = useState([]); // Add state to store list of saved forms\n  const [selectedForm, setSelectedForm] = useState(''); // Add state to track selected form\n  const [selectedElement, setSelectedElement] = useState(null);\n  const [draftSettings, setDraftSettings] = useState(null);\n  const [draggingElement, setDraggingElement] = useState(null);\n  const formContainerRef = useRef(null);\n  const [selectedFileName, setSelectedFileName] = useState('');\n  const SUBMIT_BUTTON_ID = 'submit-button';\n  const [formToLoad, setFormToLoad] = useState(null); // Hold the form name to load after clearing\n\n  useEffect(() => {\n    console.log('Form Elements Updated:', formElements);\n    const tableElement = formElements.find(el => el.type === 'table');\n    if (tableElement) {\n      console.log('Table Element Found:', tableElement);\n      console.log('CSV Data in State:', tableElement.settings.csvData);\n    }\n  }, [formElements]);\n  useEffect(() => {\n    if (!formElements.some(el => el.id === SUBMIT_BUTTON_ID)) {\n      addSubmitButton();\n    }\n  }, [formElements]);\n  useEffect(() => {\n    loadSavedForms();\n  }, []);\n  const loadSavedForms = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/forms');\n      if (!response.ok) {\n        throw new Error(`Failed to fetch forms: ${response.status}`);\n      }\n      const data = await response.json();\n      const loadedForms = data.map(form => ({\n        id: form.id,\n        // Ensure this is present\n        name: form.name // Ensure this is present\n      }));\n      setSavedForms(loadedForms); // Set the forms to state\n    } catch (error) {\n      console.error('Error loading forms:', error);\n    }\n  };\n  const loadForm = async () => {\n    if (!selectedForm) {\n      alert('Please select a form to load.');\n      return;\n    }\n    try {\n      var _xmlDoc$querySelector, _xmlDoc$querySelector2;\n      // Use the endpoint that searches by form name\n      const response = await fetch(`http://localhost:5000/forms/${encodeURIComponent(selectedForm)}`);\n      if (!response.ok) {\n        throw new Error(`Failed to load form: ${response.status}`);\n      }\n      const formData = await response.json();\n      const parser = new DOMParser();\n      const xmlDoc = parser.parseFromString(formData.xml_data, 'application/xml');\n      const loadedName = ((_xmlDoc$querySelector = xmlDoc.querySelector('form > name')) === null || _xmlDoc$querySelector === void 0 ? void 0 : _xmlDoc$querySelector.textContent) || '';\n      const loadedLabel = ((_xmlDoc$querySelector2 = xmlDoc.querySelector('form > label')) === null || _xmlDoc$querySelector2 === void 0 ? void 0 : _xmlDoc$querySelector2.textContent) || '';\n      const loadedTags = Array.from(xmlDoc.querySelectorAll('form > tags > tag')).map(tag => tag.textContent);\n      const elements = Array.from(xmlDoc.querySelectorAll('elements > element')).map((el, index) => {\n        var _el$querySelector, _el$querySelector2, _el$querySelector3, _el$querySelector4, _el$querySelector5, _el$querySelector6, _el$querySelector7;\n        const type = ((_el$querySelector = el.querySelector('type')) === null || _el$querySelector === void 0 ? void 0 : _el$querySelector.textContent) || 'text';\n        const optionsNode = el.querySelector('dropdownOptions');\n        const options = optionsNode ? Array.from(optionsNode.querySelectorAll('option')).map(opt => opt.textContent) : [];\n        return {\n          id: `element-${Date.now()}-${index}`,\n          type,\n          key: ((_el$querySelector2 = el.querySelector('key')) === null || _el$querySelector2 === void 0 ? void 0 : _el$querySelector2.textContent) || '',\n          label: ((_el$querySelector3 = el.querySelector('label')) === null || _el$querySelector3 === void 0 ? void 0 : _el$querySelector3.textContent) || '',\n          required: ((_el$querySelector4 = el.querySelector('required')) === null || _el$querySelector4 === void 0 ? void 0 : _el$querySelector4.textContent) === 'true',\n          alignment: ((_el$querySelector5 = el.querySelector('alignment')) === null || _el$querySelector5 === void 0 ? void 0 : _el$querySelector5.textContent) || 'center',\n          settings: {\n            headerLevel: ((_el$querySelector6 = el.querySelector('headerLevel')) === null || _el$querySelector6 === void 0 ? void 0 : _el$querySelector6.textContent) || 'h1',\n            placeholder: ((_el$querySelector7 = el.querySelector('placeholder')) === null || _el$querySelector7 === void 0 ? void 0 : _el$querySelector7.textContent) || '',\n            dropdownOptions: options\n          }\n        };\n      }).filter(el => el.type !== 'button'); // Exclude submit button\n\n      setFormName(loadedName);\n      setFormLabel(loadedLabel);\n      setFormTags(loadedTags.join(', '));\n      setFormElements(elements);\n      console.log(`Form \"${selectedForm}\" loaded successfully!`);\n    } catch (error) {\n      console.error('Error loading form:', error);\n      alert('Failed to load form data.');\n    }\n  };\n  const addSubmitButton = () => {\n    setFormElements(prev => [...prev, {\n      id: SUBMIT_BUTTON_ID,\n      type: 'button',\n      key: 'Submit',\n      label: 'Submit',\n      alignment: 'center',\n      required: false,\n      settings: {}\n    }]);\n  };\n  const generateKey = type => {\n    // Replace spaces with underscores and lowercase the type for consistency\n    const formattedType = type.replace(/\\s+/g, '_').toLowerCase();\n\n    // Count existing elements of this type\n    const existingCount = formElements.filter(el => el.type === type).length + 1;\n\n    // Return a formatted key such as \"heading_1\", \"email_2\"\n    return `${formattedType}_${existingCount}`;\n  };\n  const addElement = type => {\n    const newKey = generateKey(type);\n    const newElement = {\n      id: newKey,\n      // Use the generated key as ID\n      type,\n      key: newKey,\n      label: type,\n      // Default label as the type name\n      alignment: 'center',\n      settings: {\n        headerLevel: 'h1',\n        placeholder: type === 'email' ? 'Email Address' : 'Enter text here...',\n        useCurrentDate: false,\n        defaultBoolean: 'true',\n        dropdownOptions: [],\n        min: '',\n        max: '',\n        step: '',\n        defaultValue: '',\n        showPasswordOption: false,\n        passwordLength: '',\n        requireSymbols: false,\n        requireNumbers: false,\n        csvData: []\n      },\n      required: false,\n      textColor: '#ffffff',\n      fontFamily: 'Arial'\n    };\n\n    // Ensure new elements are added before the Submit button\n    setFormElements(prev => {\n      const submitIndex = prev.findIndex(el => el.id === SUBMIT_BUTTON_ID);\n      const newFormElements = [...prev];\n      newFormElements.splice(submitIndex, 0, newElement);\n      return newFormElements;\n    });\n  };\n  const isKeyUnique = key => {\n    return !formElements.some(el => el.key === key && el.id !== (selectedElement === null || selectedElement === void 0 ? void 0 : selectedElement.id));\n  };\n  const handleSubmit = () => {\n    const formData = formElements.filter(el => el.id !== SUBMIT_BUTTON_ID); // Exclude submit button from data\n    console.log('Form submitted:', formData);\n    // Example API call\n    fetch('/api/submit-form', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        elements: formData\n      })\n    }).then(response => response.json()).then(data => console.log('Form submission response:', data)).catch(error => console.error('Error submitting form:', error));\n  };\n  const saveForm = async () => {\n    if (!formName) {\n      alert('Please enter a name for the form.');\n      return;\n    }\n    const formData = {\n      name: formName,\n      label: formLabel,\n      tags: formTags ? formTags.split(',').map(tag => tag.trim()) : [],\n      elements: formElements // Includes the populated csvData\n    };\n\n    // Convert form data to XML\n    const convertToXML = obj => {\n      let xml = '';\n      for (let key in obj) {\n        if (Array.isArray(obj[key])) {\n          xml += `<${key}>`;\n          obj[key].forEach(element => {\n            if (Array.isArray(element)) {\n              // Handle CSV data as rows and cells\n              xml += '<row>';\n              element.forEach(cell => {\n                xml += `<cell>${cell}</cell>`;\n              });\n              xml += '</row>';\n            } else {\n              xml += `<element>${convertToXML(element)}</element>`;\n            }\n          });\n          xml += `</${key}>`;\n        } else if (typeof obj[key] === 'object') {\n          xml += `<${key}>${convertToXML(obj[key])}</${key}>`;\n        } else {\n          xml += `<${key}>${obj[key]}</${key}>`;\n        }\n      }\n      return xml;\n    };\n    const xmlData = `<form>${convertToXML(formData)}</form>`;\n\n    // Send form data to backend\n    try {\n      const response = await fetch('http://localhost:5000/save_form', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: formName,\n          label: formLabel,\n          tags: formTags ? formTags.split(',').map(tag => tag.trim()) : [],\n          elements: formElements,\n          xmlData: xmlData // Include XML data in the request\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`Failed to save form: ${response.status} ${response.statusText}`);\n      }\n      alert(`Form \"${formName}\" saved successfully!`);\n      localStorage.setItem(formName, xmlData); // Optional: save XML to local storage\n\n      // Refresh saved forms after saving\n      loadSavedForms();\n    } catch (error) {\n      console.error('Error:', error);\n      alert(`Error saving form: ${error.message}`);\n    }\n  };\n  const EditElement = ({\n    selectedElement,\n    setSelectedElement,\n    draftSettings,\n    setDraftSettings,\n    updateElementSettings,\n    removeElement\n  }) => {\n    _s();\n    const editorRef = useRef(null);\n\n    // Close editor when clicking outside\n    useEffect(() => {\n      const handleClickOutside = event => {\n        if (editorRef.current && !editorRef.current.contains(event.target)) {\n          setSelectedElement(null);\n        }\n      };\n      document.addEventListener('mousedown', handleClickOutside);\n      return () => {\n        document.removeEventListener('mousedown', handleClickOutside);\n      };\n    }, [setSelectedElement]);\n\n    // Handle updates for each field dynamically\n    const handleFieldChange = (field, value) => {\n      setDraftSettings(prev => ({\n        ...prev,\n        [field]: value\n      }));\n      updateElementSettings(selectedElement.id, {\n        ...draftSettings,\n        [field]: value\n      });\n    };\n\n    // Render additional fields based on element type\n    const renderAdditionalFields = () => {\n      switch (selectedElement.type) {\n        case 'dropdown':\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Dropdown Options:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 15\n            }, this), draftSettings.dropdownOptions.map((option, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                alignItems: 'center',\n                marginBottom: '10px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: option,\n                onChange: e => {\n                  const updatedOptions = [...draftSettings.dropdownOptions];\n                  updatedOptions[idx] = e.target.value;\n                  handleFieldChange('dropdownOptions', updatedOptions);\n                },\n                style: {\n                  flexGrow: 1,\n                  padding: '8px',\n                  borderRadius: '4px',\n                  marginRight: '10px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  const updatedOptions = draftSettings.dropdownOptions.filter((_, index) => index !== idx);\n                  handleFieldChange('dropdownOptions', updatedOptions);\n                },\n                children: \"Remove\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 19\n              }, this)]\n            }, idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 17\n            }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleFieldChange('dropdownOptions', [...draftSettings.dropdownOptions, 'New Option']),\n              children: \"Add Option\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 13\n          }, this);\n        case 'inputText':\n        case 'email':\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Placeholder:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: draftSettings.placeholder || '',\n                onChange: e => handleFieldChange('placeholder', e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 353,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 13\n          }, this);\n        case 'number':\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Minimum:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: draftSettings.min || '',\n                onChange: e => handleFieldChange('min', e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Maximum:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                value: draftSettings.max || '',\n                onChange: e => handleFieldChange('max', e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 374,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 13\n          }, this);\n        default:\n          return null;\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: editorRef,\n      className: \"element-editor\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"element-editor-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Edit Element\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            if (window.confirm('Are you sure you want to delete this element?')) {\n              removeElement(selectedElement.id);\n            }\n          },\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Key:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: draftSettings.key || '',\n          onChange: e => handleFieldChange('key', e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Label:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: draftSettings.label || '',\n          onChange: e => handleFieldChange('label', e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Alignment:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: draftSettings.alignment || 'center',\n          onChange: e => handleFieldChange('alignment', e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"left\",\n            children: \"Left\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"center\",\n            children: \"Center\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"right\",\n            children: \"Right\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 9\n      }, this), renderAdditionalFields()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 7\n    }, this);\n  };\n  _s(EditElement, \"FXGU5sRik9TpAO5B+Yli91RwFDk=\");\n  const removeElement = id => {\n    if (id === SUBMIT_BUTTON_ID) return; // Prevent deletion of the Submit button\n    setFormElements(prev => prev.filter(el => el.id !== id));\n    if ((selectedElement === null || selectedElement === void 0 ? void 0 : selectedElement.id) === id) {\n      setSelectedElement(null);\n    }\n  };\n  const handleEditClick = element => {\n    var _element$settings, _element$settings2, _element$settings3;\n    setSelectedElement(element);\n    setDraftSettings({\n      ...element.settings,\n      key: element.key || '',\n      label: element.label,\n      alignment: element.alignment,\n      required: element.required,\n      requirement: ((_element$settings = element.settings) === null || _element$settings === void 0 ? void 0 : _element$settings.requirement) || false,\n      // Add this line\n      placeholder: (_element$settings2 = element.settings) === null || _element$settings2 === void 0 ? void 0 : _element$settings2.placeholder,\n      csvData: ((_element$settings3 = element.settings) === null || _element$settings3 === void 0 ? void 0 : _element$settings3.csvData) || []\n    });\n  };\n  const updateElementSettings = (id, newSettings) => {\n    setFormElements(prev => prev.map(el => el.id === id.toString() ? {\n      ...el,\n      ...newSettings,\n      settings: {\n        ...el.settings,\n        ...newSettings,\n        requirement: newSettings.requirement !== undefined ? newSettings.requirement : el.settings.requirement // Preserve existing requirement if not changed\n      }\n    } : el));\n  };\n  const handleDragStart = ({\n    active\n  }) => {\n    setDraggingElement(active.id);\n  };\n  const handleDragEnd = ({\n    active,\n    over\n  }) => {\n    if (over && active.id !== over.id) {\n      const oldIndex = formElements.findIndex(el => el.id === active.id);\n      const newIndex = formElements.findIndex(el => el.id === over.id);\n      setFormElements(prev => arrayMove(prev, oldIndex, newIndex));\n    }\n    setDraggingElement(null);\n  };\n  const handleCSVUpload = (event, elementId) => {\n    const file = event.target.files[0];\n    if (file) {\n      if (!file.name.endsWith('.csv')) {\n        alert('Please upload a valid .csv file.');\n        return;\n      }\n      Papa.parse(file, {\n        complete: result => {\n          const csvData = result.data;\n          console.log('Parsed CSV Data:', csvData);\n          setFormElements(prev => prev.map(el => el.id === elementId ? {\n            ...el,\n            csvData,\n            // Update the csvData property\n            settings: {\n              ...el.settings,\n              csvData\n            }\n          } : el));\n        },\n        header: false // Adjust as needed\n      });\n    }\n  };\n  const handleResetForm = () => {\n    if (window.confirm('Are you sure you want to reset the form?')) {\n      setFormElements([]);\n      setFormName('');\n      setFormLabel('');\n    }\n  };\n  const validatePassword = (password, settings) => {\n    if (settings !== null && settings !== void 0 && settings.passwordLength && password.length < settings.passwordLength) {\n      return false;\n    }\n    if (settings !== null && settings !== void 0 && settings.requireSymbols && !/[!@#$%^&*(),.?\":{}|<>]/.test(password)) {\n      return false;\n    }\n    if (settings !== null && settings !== void 0 && settings.requireNumbers && !/[0-9]/.test(password)) {\n      return false;\n    }\n    return true;\n  };\n  const renderElementContent = element => {\n    var _element$settings4, _settings$dropdownOpt;\n    const isBeingEdited = (selectedElement === null || selectedElement === void 0 ? void 0 : selectedElement.id) === element.id;\n    const settings = isBeingEdited ? draftSettings : element.settings;\n    const alignmentStyle = {\n      textAlign: (settings === null || settings === void 0 ? void 0 : settings.alignment) || 'center'\n    };\n    const wrapperStyle = {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: (settings === null || settings === void 0 ? void 0 : settings.alignment) === 'left' ? 'flex-start' : (settings === null || settings === void 0 ? void 0 : settings.alignment) === 'right' ? 'flex-end' : 'center',\n      width: '100%',\n      marginBottom: '10px'\n    };\n    const renderLabel = label => label && /*#__PURE__*/_jsxDEV(\"label\", {\n      style: {\n        marginBottom: '5px',\n        fontWeight: 'bold'\n      },\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 559,\n      columnNumber: 16\n    }, this);\n    switch (element.type) {\n      case 'heading':\n        {\n          const HeaderTag = (settings === null || settings === void 0 ? void 0 : settings.headerLevel) || 'h1';\n          const alignmentStyle = {\n            textAlign: (settings === null || settings === void 0 ? void 0 : settings.alignment) || 'center',\n            width: '100%',\n            margin: '0 auto' // Ensures it's centered\n          };\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              justifyContent: 'center',\n              width: '100%'\n            },\n            children: /*#__PURE__*/_jsxDEV(HeaderTag, {\n              style: alignmentStyle,\n              children: (settings === null || settings === void 0 ? void 0 : settings.label) || element.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 573,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 572,\n            columnNumber: 11\n          }, this);\n        }\n      case 'text':\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          style: alignmentStyle,\n          children: settings.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 580,\n          columnNumber: 16\n        }, this);\n      case 'button':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: element.alignment || 'center',\n            width: '100%'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: element.id === SUBMIT_BUTTON_ID ? handleSubmit : undefined // Submit button triggers API\n            ,\n            className: \"custom-button\",\n            style: {\n              padding: '10px 20px',\n              borderRadius: '6px',\n              margin: '5px',\n              backgroundColor: '#007bff',\n              color: 'white'\n            },\n            children: element.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 584,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 583,\n          columnNumber: 11\n        }, this);\n      case 'inputText':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: wrapperStyle,\n          children: [renderLabel((settings === null || settings === void 0 ? void 0 : settings.label) || element.label), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: (settings === null || settings === void 0 ? void 0 : settings.placeholder) || '',\n            required: settings === null || settings === void 0 ? void 0 : settings.required,\n            style: {\n              borderRadius: '8px',\n              padding: '10px',\n              border: '1px solid #ced4da',\n              textAlign: 'center'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 597,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 595,\n          columnNumber: 9\n        }, this);\n      case 'email':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: wrapperStyle,\n          children: [renderLabel((settings === null || settings === void 0 ? void 0 : settings.label) || element.label), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            placeholder: (settings === null || settings === void 0 ? void 0 : settings.placeholder) || '',\n            required: settings === null || settings === void 0 ? void 0 : settings.required,\n            style: {\n              borderRadius: '8px',\n              padding: '10px',\n              border: (settings === null || settings === void 0 ? void 0 : settings.isValid) === false ? '2px solid #ff0000' : '1px solid #ced4da',\n              boxShadow: (settings === null || settings === void 0 ? void 0 : settings.isValid) === false ? '0 0 5px #ff0000' : 'none',\n              textAlign: 'center'\n            },\n            onBlur: e => {\n              if (e.target.value.trim() !== '') {\n                const isValid = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(e.target.value);\n                updateElementSettings(element.id, {\n                  ...settings,\n                  isValid\n                });\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 614,\n            columnNumber: 13\n          }, this), !(settings !== null && settings !== void 0 && settings.isValid) && (settings === null || settings === void 0 ? void 0 : settings.isValid) !== undefined && /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: '#ff0000',\n              fontSize: '0.8em',\n              marginTop: '5px'\n            },\n            children: \"Invalid email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 633,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 612,\n          columnNumber: 9\n        }, this);\n      case 'divider':\n        return /*#__PURE__*/_jsxDEV(\"hr\", {\n          style: {\n            ...alignmentStyle,\n            width: '100%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 638,\n          columnNumber: 16\n        }, this);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: wrapperStyle,\n          children: [renderLabel((settings === null || settings === void 0 ? void 0 : settings.label) || element.label), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"custom-file-label\",\n            children: [\"Choose Image\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              className: \"custom-file-input\",\n              accept: \"image/*\",\n              onChange: e => handleImageUpload(e, element.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 644,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 642,\n            columnNumber: 15\n          }, this), settings !== null && settings !== void 0 && settings.imageSrc ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: settings.imageSrc,\n            alt: \"Uploaded\",\n            style: {\n              maxWidth: '100%',\n              height: 'auto',\n              borderRadius: '8px',\n              marginTop: '10px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 652,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"https://via.placeholder.com/150\",\n            alt: \"Placeholder\",\n            style: {\n              maxWidth: '100%',\n              height: 'auto',\n              borderRadius: '8px',\n              marginTop: '10px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 658,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 640,\n          columnNumber: 11\n        }, this);\n      case 'file':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: wrapperStyle,\n          children: [renderLabel((settings === null || settings === void 0 ? void 0 : settings.label) || element.label), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"custom-file-label\",\n            children: [\"Upload File\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              className: \"custom-file-input\",\n              onChange: e => handleCSVUpload(e, element.id),\n              accept: \".csv\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 672,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 670,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"file-name\",\n            children: \"No file chosen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 679,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 668,\n          columnNumber: 11\n        }, this);\n      case 'table':\n        const tableData = ((_element$settings4 = element.settings) === null || _element$settings4 === void 0 ? void 0 : _element$settings4.csvData) || [];\n        console.log('Rendering Table with Data:', tableData);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: wrapperStyle,\n          children: [renderLabel((settings === null || settings === void 0 ? void 0 : settings.label) || element.label), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginBottom: '10px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                accept: \".csv\",\n                id: `file-upload-${element.id}`,\n                onChange: e => handleCSVUpload(e, element.id),\n                style: {\n                  display: 'none'\n                } // Hide default input\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 692,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: `file-upload-${element.id}`,\n                style: {\n                  backgroundColor: '#007bff',\n                  color: 'white',\n                  padding: '10px 20px',\n                  borderRadius: '6px',\n                  cursor: 'pointer',\n                  display: 'inline-block'\n                },\n                children: \"Upload CSV File\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 699,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  marginLeft: '10px'\n                },\n                children: selectedFileName || 'No file chosen'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 712,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 691,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n              style: {\n                margin: '0 auto',\n                borderCollapse: 'collapse',\n                width: '100%'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: tableData.length > 0 ? tableData.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: row.map((cell, cellIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n                    style: {\n                      border: '1px solid #ddd',\n                      padding: '8px'\n                    },\n                    children: cell\n                  }, `cell-${rowIndex}-${cellIndex}`, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 723,\n                    columnNumber: 29\n                  }, this))\n                }, `row-${rowIndex}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 721,\n                  columnNumber: 25\n                }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    style: {\n                      textAlign: 'center'\n                    },\n                    children: \"No Data Available\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 734,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 733,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 718,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 717,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 689,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 687,\n          columnNumber: 11\n        }, this);\n      case 'dateTime':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: wrapperStyle,\n          children: [renderLabel((settings === null || settings === void 0 ? void 0 : settings.label) || element.label), settings !== null && settings !== void 0 && settings.useCurrentDate ? /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: new Date().toLocaleDateString('en-US'),\n            readOnly: true,\n            style: {\n              borderRadius: '8px',\n              padding: '10px',\n              border: '1px solid #ced4da',\n              textAlign: 'center'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 747,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            style: {\n              borderRadius: '8px',\n              padding: '10px',\n              border: '1px solid #ced4da',\n              textAlign: 'center'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 759,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 744,\n          columnNumber: 11\n        }, this);\n      case 'dropdown':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: wrapperStyle,\n          children: [renderLabel((settings === null || settings === void 0 ? void 0 : settings.label) || element.label), /*#__PURE__*/_jsxDEV(\"select\", {\n            style: {\n              borderRadius: '8px',\n              padding: '10px',\n              border: '1px solid #ced4da',\n              textAlign: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select an option\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 783,\n              columnNumber: 15\n            }, this), settings === null || settings === void 0 ? void 0 : (_settings$dropdownOpt = settings.dropdownOptions) === null || _settings$dropdownOpt === void 0 ? void 0 : _settings$dropdownOpt.map((option, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option,\n              children: option\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 785,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 775,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 773,\n          columnNumber: 11\n        }, this);\n      case 'boolean':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: wrapperStyle,\n          children: [renderLabel((settings === null || settings === void 0 ? void 0 : settings.label) || element.label), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: (settings === null || settings === void 0 ? void 0 : settings.defaultBoolean) || 'true',\n            onChange: e => updateElementSettings(element.id, {\n              ...settings,\n              defaultBoolean: e.target.value\n            }),\n            style: {\n              borderRadius: '8px',\n              padding: '10px',\n              border: '1px solid #ced4da',\n              textAlign: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"true\",\n              children: \"True\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 806,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"false\",\n              children: \"False\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 807,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 796,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 794,\n          columnNumber: 9\n        }, this);\n      case 'number':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: wrapperStyle,\n          children: [renderLabel((settings === null || settings === void 0 ? void 0 : settings.label) || element.label), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            min: settings === null || settings === void 0 ? void 0 : settings.min,\n            max: settings === null || settings === void 0 ? void 0 : settings.max,\n            step: settings === null || settings === void 0 ? void 0 : settings.step,\n            defaultValue: settings === null || settings === void 0 ? void 0 : settings.defaultValue,\n            required: settings === null || settings === void 0 ? void 0 : settings.required,\n            style: {\n              borderRadius: '8px',\n              padding: '10px',\n              border: '1px solid #ced4da',\n              textAlign: 'center'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 815,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 813,\n          columnNumber: 9\n        }, this);\n      case 'password':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '100%',\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: (settings === null || settings === void 0 ? void 0 : settings.alignment) === 'left' ? 'flex-start' : (settings === null || settings === void 0 ? void 0 : settings.alignment) === 'right' ? 'flex-end' : 'center',\n            justifyContent: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: wrapperStyle,\n            children: [renderLabel((settings === null || settings === void 0 ? void 0 : settings.label) || element.label), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: settings !== null && settings !== void 0 && settings.showPasswordOption && settings !== null && settings !== void 0 && settings.showPassword ? 'text' : 'password',\n              placeholder: (settings === null || settings === void 0 ? void 0 : settings.placeholder) || 'Enter password',\n              required: settings === null || settings === void 0 ? void 0 : settings.required,\n              onBlur: e => {\n                const isValid = validatePassword(e.target.value, settings);\n                updateElementSettings(element.id, {\n                  ...settings,\n                  isValid\n                });\n              },\n              style: {\n                borderRadius: '8px',\n                padding: '10px',\n                width: '300px',\n                border: (settings === null || settings === void 0 ? void 0 : settings.isValid) === false ? '2px solid #ff0000' : '1px solid #ced4da',\n                textAlign: 'left',\n                marginRight: '10px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 844,\n              columnNumber: 11\n            }, this), (settings === null || settings === void 0 ? void 0 : settings.showPasswordOption) && /*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                display: 'flex',\n                alignItems: 'center',\n                marginLeft: '10px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: (settings === null || settings === void 0 ? void 0 : settings.showPassword) || false,\n                onChange: e => updateElementSettings(element.id, {\n                  ...settings,\n                  showPassword: e.target.checked\n                }),\n                style: {\n                  marginRight: '5px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 863,\n                columnNumber: 17\n              }, this), \"Show Password\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 862,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 842,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: '10px',\n              textAlign: (settings === null || settings === void 0 ? void 0 : settings.alignment) || 'center',\n              width: '100%',\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: (settings === null || settings === void 0 ? void 0 : settings.alignment) === 'left' ? 'flex-start' : (settings === null || settings === void 0 ? void 0 : settings.alignment) === 'right' ? 'flex-end' : 'center'\n            },\n            children: [(settings === null || settings === void 0 ? void 0 : settings.passwordLength) && /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                marginBottom: '5px'\n              },\n              children: [\"Requires Minimum Length: \", settings.passwordLength]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 874,\n              columnNumber: 42\n            }, this), (settings === null || settings === void 0 ? void 0 : settings.requireSymbols) && /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                marginBottom: '5px'\n              },\n              children: \"Requires Symbols: Yes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 875,\n              columnNumber: 42\n            }, this), (settings === null || settings === void 0 ? void 0 : settings.requireNumbers) && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Requires Numbers: Yes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 876,\n              columnNumber: 42\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 873,\n            columnNumber: 11\n          }, this), !(settings !== null && settings !== void 0 && settings.isValid) && (settings === null || settings === void 0 ? void 0 : settings.isValid) !== undefined && /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: '#ff0000',\n              fontSize: '0.8em',\n              marginTop: '5px'\n            },\n            children: \"Password does not meet requirements\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 879,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 833,\n          columnNumber: 9\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(\"input\", {\n          type: element.type,\n          placeholder: (settings === null || settings === void 0 ? void 0 : settings.placeholder) || '',\n          required: settings === null || settings === void 0 ? void 0 : settings.required,\n          style: alignmentStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 885,\n          columnNumber: 11\n        }, this);\n    }\n  };\n  const areRequiredFieldsFilled = () => {\n    return formElements.every(el => {\n      if (el.required) {\n        return el.settings.label && el.settings.label.trim() !== '';\n      }\n      return true;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-builder-container\",\n    style: {\n      height: '100vh',\n      overflow: 'hidden'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-name-section\",\n        style: {\n          marginBottom: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"form-name\",\n          className: \"sidebar-label\",\n          children: \"Form Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 910,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"form-name\",\n          type: \"text\",\n          value: formName,\n          onChange: e => setFormName(e.target.value),\n          placeholder: \"Enter form name\",\n          className: \"form-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 911,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 909,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-label-section\",\n        style: {\n          marginBottom: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"form-label\",\n          className: \"sidebar-label\",\n          children: \"Label (Required):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 923,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"form-label\",\n          type: \"text\",\n          value: formLabel,\n          onChange: e => setFormLabel(e.target.value),\n          placeholder: \"Enter form label\",\n          className: \"form-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 924,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 922,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"element-input-wrapper\",\n        style: {\n          display: 'flex',\n          gap: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"element-selector\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Elements\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 936,\n            columnNumber: 7\n          }, this), ELEMENT_TYPES.map(element => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => addElement(element.id),\n            className: \"element-button\",\n            children: element.label\n          }, element.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 938,\n            columnNumber: 9\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 935,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-selector\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Input Fields\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 949,\n            columnNumber: 7\n          }, this), INPUT_FIELDS.map(input => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => addElement(input.id),\n            className: \"input-button\",\n            children: input.label\n          }, input.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 951,\n            columnNumber: 9\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 948,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 934,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"load-section\",\n        style: {\n          marginBottom: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"saved-forms\",\n          className: \"sidebar-label\",\n          children: \"Load Saved Form:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 962,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"saved-forms\",\n          value: selectedForm,\n          onChange: e => setSelectedForm(e.target.value),\n          className: \"sidebar-select\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"-- Select a Form --\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 969,\n            columnNumber: 5\n          }, this), savedForms.map(form => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: form.name,\n            children: [\" \", form.name, \" \"]\n          }, form.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 971,\n            columnNumber: 7\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 963,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: loadForm,\n          className: \"load-form-button\",\n          children: \"Load Form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 976,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 961,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: saveForm,\n        className: \"save-form-button\",\n        children: \"Save Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 978,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleResetForm,\n        className: \"reset-form-button\",\n        children: \"Reset Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 979,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 906,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-builder\",\n      ref: formContainerRef,\n      style: {\n        height: '100%',\n        overflowY: 'auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(DndContext, {\n        collisionDetection: closestCenter,\n        onDragEnd: handleDragEnd,\n        onDragStart: handleDragStart,\n        children: [/*#__PURE__*/_jsxDEV(SortableContext, {\n          items: formElements,\n          strategy: rectSortingStrategy,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-preview\",\n            children: formElements.map(element => /*#__PURE__*/_jsxDEV(SortableFormElement, {\n              element: element,\n              handleEditClick: handleEditClick,\n              renderElementContent: renderElementContent\n            }, element.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 991,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 989,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 988,\n          columnNumber: 11\n        }, this), draggingElement && /*#__PURE__*/_jsxDEV(DragOverlay, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dragging-overlay\",\n            children: \"Dragging\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1002,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1001,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 983,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 982,\n      columnNumber: 3\n    }, this), selectedElement && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"element-editor\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"element-editor-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Edit Element\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1011,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            if (window.confirm('Are you sure you want to delete this element?')) {\n              removeElement(selectedElement.id);\n            }\n          },\n          className: \"delete-element\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1012,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1010,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Key:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: (draftSettings === null || draftSettings === void 0 ? void 0 : draftSettings.key) || '',\n          onChange: e => {\n            const updatedKey = e.target.value;\n            setDraftSettings(prev => ({\n              ...prev,\n              key: updatedKey\n            }));\n            updateElementSettings(selectedElement.id, {\n              ...draftSettings,\n              key: updatedKey\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1026,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1024,\n        columnNumber: 5\n      }, this), selectedElement.type === 'dropdown' && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Dropdown Options:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1041,\n          columnNumber: 9\n        }, this), draftSettings === null || draftSettings === void 0 ? void 0 : (_draftSettings$dropdo = draftSettings.dropdownOptions) === null || _draftSettings$dropdo === void 0 ? void 0 : _draftSettings$dropdo.map((option, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center',\n            marginBottom: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: option,\n            onChange: e => {\n              const updatedOptions = [...draftSettings.dropdownOptions];\n              updatedOptions[idx] = e.target.value;\n              setDraftSettings(prev => ({\n                ...prev,\n                dropdownOptions: updatedOptions\n              }));\n              updateElementSettings(selectedElement.id, {\n                ...draftSettings,\n                dropdownOptions: updatedOptions\n              });\n            },\n            style: {\n              flexGrow: 1,\n              padding: '8px',\n              borderRadius: '4px',\n              border: '1px solid #505158',\n              backgroundColor: '#26282c',\n              color: '#b5b5b5',\n              marginRight: '10px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1044,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              const updatedOptions = draftSettings.dropdownOptions.filter((_, index) => index !== idx);\n              setDraftSettings(prev => ({\n                ...prev,\n                dropdownOptions: updatedOptions\n              }));\n              updateElementSettings(selectedElement.id, {\n                ...draftSettings,\n                dropdownOptions: updatedOptions\n              });\n            },\n            className: \"remove-option\",\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1063,\n            columnNumber: 13\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1043,\n          columnNumber: 11\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            const updatedOptions = [...((draftSettings === null || draftSettings === void 0 ? void 0 : draftSettings.dropdownOptions) || []), 'New Option'];\n            setDraftSettings(prev => ({\n              ...prev,\n              dropdownOptions: updatedOptions\n            }));\n            updateElementSettings(selectedElement.id, {\n              ...draftSettings,\n              dropdownOptions: updatedOptions\n            });\n          },\n          className: \"add-option-button\",\n          children: \"Add Option\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1075,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1040,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1009,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 905,\n    columnNumber: 1\n  }, this);\n};\n_s2(FormBuilder, \"2d8C2Jk3XBI+PWREG2Gg9YN3+iw=\");\n_c = FormBuilder;\nconst SortableFormElement = ({\n  element,\n  handleEditClick,\n  renderElementContent\n}) => {\n  _s3();\n  var _element$settings5;\n  const {\n    attributes,\n    listeners,\n    setNodeRef,\n    transform,\n    transition\n  } = useSortable({\n    id: element.id\n  });\n  const style = {\n    transform: transform ? `translate3d(${transform.x}px, ${transform.y}px, 0)` : undefined,\n    transition,\n    backgroundColor: ((_element$settings5 = element.settings) === null || _element$settings5 === void 0 ? void 0 : _element$settings5.backgroundColor) || 'inherit'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: setNodeRef,\n    style: style,\n    className: \"form-element\",\n    onClick: () => handleEditClick(element),\n    children: [renderElementContent(element), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"drag-handle\",\n      ...listeners,\n      ...attributes,\n      onMouseDown: e => e.stopPropagation(),\n      children: \"Drag\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1107,\n    columnNumber: 5\n  }, this);\n};\n_s3(SortableFormElement, \"FTUh0JV0KNM2MI3tYtLrQh0rr1U=\", false, function () {\n  return [useSortable];\n});\n_c2 = SortableFormElement;\nexport default FormBuilder;\nvar _c, _c2;\n$RefreshReg$(_c, \"FormBuilder\");\n$RefreshReg$(_c2, \"SortableFormElement\");","map":{"version":3,"names":["React","useState","useRef","useEffect","DndContext","DragOverlay","closestCenter","arrayMove","SortableContext","useSortable","rectSortingStrategy","Papa","jsxDEV","_jsxDEV","ELEMENT_TYPES","id","label","INPUT_FIELDS","type","FormBuilder","_s2","_s","$RefreshSig$","_draftSettings$dropdo","formElements","setFormElements","formName","setFormName","formLabel","setFormLabel","formTags","setFormTags","savedForms","setSavedForms","selectedForm","setSelectedForm","selectedElement","setSelectedElement","draftSettings","setDraftSettings","draggingElement","setDraggingElement","formContainerRef","selectedFileName","setSelectedFileName","SUBMIT_BUTTON_ID","formToLoad","setFormToLoad","console","log","tableElement","find","el","settings","csvData","some","addSubmitButton","loadSavedForms","response","fetch","ok","Error","status","data","json","loadedForms","map","form","name","error","loadForm","alert","_xmlDoc$querySelector","_xmlDoc$querySelector2","encodeURIComponent","formData","parser","DOMParser","xmlDoc","parseFromString","xml_data","loadedName","querySelector","textContent","loadedLabel","loadedTags","Array","from","querySelectorAll","tag","elements","index","_el$querySelector","_el$querySelector2","_el$querySelector3","_el$querySelector4","_el$querySelector5","_el$querySelector6","_el$querySelector7","optionsNode","options","opt","Date","now","key","required","alignment","headerLevel","placeholder","dropdownOptions","filter","join","prev","generateKey","formattedType","replace","toLowerCase","existingCount","length","addElement","newKey","newElement","useCurrentDate","defaultBoolean","min","max","step","defaultValue","showPasswordOption","passwordLength","requireSymbols","requireNumbers","textColor","fontFamily","submitIndex","findIndex","newFormElements","splice","isKeyUnique","handleSubmit","method","headers","body","JSON","stringify","then","catch","saveForm","tags","split","trim","convertToXML","obj","xml","isArray","forEach","element","cell","xmlData","statusText","localStorage","setItem","message","EditElement","updateElementSettings","removeElement","editorRef","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","handleFieldChange","field","value","renderAdditionalFields","children","fileName","_jsxFileName","lineNumber","columnNumber","option","idx","style","display","alignItems","marginBottom","onChange","e","updatedOptions","flexGrow","padding","borderRadius","marginRight","onClick","_","ref","className","window","confirm","handleEditClick","_element$settings","_element$settings2","_element$settings3","requirement","newSettings","toString","undefined","handleDragStart","active","handleDragEnd","over","oldIndex","newIndex","handleCSVUpload","elementId","file","files","endsWith","parse","complete","result","header","handleResetForm","validatePassword","password","test","renderElementContent","_element$settings4","_settings$dropdownOpt","isBeingEdited","alignmentStyle","textAlign","wrapperStyle","flexDirection","width","renderLabel","fontWeight","HeaderTag","margin","justifyContent","backgroundColor","color","border","isValid","boxShadow","onBlur","fontSize","marginTop","accept","handleImageUpload","imageSrc","src","alt","maxWidth","height","tableData","htmlFor","cursor","marginLeft","borderCollapse","row","rowIndex","cellIndex","toLocaleDateString","readOnly","showPassword","checked","areRequiredFieldsFilled","every","overflow","gap","input","overflowY","collisionDetection","onDragEnd","onDragStart","items","strategy","SortableFormElement","updatedKey","_c","_s3","_element$settings5","attributes","listeners","setNodeRef","transform","transition","x","y","onMouseDown","stopPropagation","_c2","$RefreshReg$"],"sources":["C:/Users/abarbas/Desktop/soar_web_forms/src/components/FormBuilder.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { DndContext, DragOverlay, closestCenter } from '@dnd-kit/core';\r\nimport { arrayMove, SortableContext, useSortable, rectSortingStrategy } from '@dnd-kit/sortable';\r\nimport Papa from 'papaparse';\r\nimport './FormBuilder.css';\r\n\r\nconst ELEMENT_TYPES = [\r\n  { id: 'heading', label: 'Heading' },\r\n  { id: 'text', label: 'Text' },\r\n  { id: 'divider', label: 'Divider' },\r\n  //{ id: 'button', label: 'Button' },\r\n  //{ id: 'image', label: 'Image' },\r\n  { id: 'table', label: 'Table' }\r\n];\r\n\r\nconst INPUT_FIELDS = [\r\n  { id: 'inputText', label: 'Input Text', type: 'text' },\r\n  { id: 'email', label: 'Email', type: 'email' },\r\n  //{ id: 'password', label: 'Password', type: 'password' }, \r\n  { id: 'dateTime', label: 'Date or Time', type: 'datetime-local' },\r\n  { id: 'dropdown', label: 'Dropdown', type: 'dropdown' },\r\n  { id: 'boolean', label: 'Boolean', type: 'dropdown' },\r\n  { id: 'number', label: 'Number', type: 'number' },\r\n  { id: 'file', label: 'File Upload', type: 'file' }\r\n\r\n];\r\n\r\nconst FormBuilder = () => {\r\n  const [formElements, setFormElements] = useState([]);\r\n  const [formName, setFormName] = useState('');\r\n  const [formLabel, setFormLabel] = useState('');\r\n  const [formTags, setFormTags] = useState('');\r\n  const [savedForms, setSavedForms] = useState([]); // Add state to store list of saved forms\r\n  const [selectedForm, setSelectedForm] = useState(''); // Add state to track selected form\r\n  const [selectedElement, setSelectedElement] = useState(null);\r\n  const [draftSettings, setDraftSettings] = useState(null);\r\n  const [draggingElement, setDraggingElement] = useState(null);\r\n  const formContainerRef = useRef(null);\r\n  const [selectedFileName, setSelectedFileName] = useState('');\r\n  const SUBMIT_BUTTON_ID = 'submit-button';\r\n  const [formToLoad, setFormToLoad] = useState(null); // Hold the form name to load after clearing\r\n  \r\n\r\nuseEffect(() => {\r\n  console.log('Form Elements Updated:', formElements);\r\n  const tableElement = formElements.find((el) => el.type === 'table');\r\n  if (tableElement) {\r\n    console.log('Table Element Found:', tableElement);\r\n    console.log('CSV Data in State:', tableElement.settings.csvData);\r\n  }\r\n}, [formElements]);\r\n\r\nuseEffect(() => {\r\n  if (!formElements.some(el => el.id === SUBMIT_BUTTON_ID)) {\r\n    addSubmitButton();\r\n  }\r\n}, [formElements]);\r\n\r\nuseEffect(() => {\r\n  loadSavedForms();\r\n}, []);\r\n\r\nconst loadSavedForms = async () => {\r\n  try {\r\n    const response = await fetch('http://localhost:5000/forms');\r\n    if (!response.ok) {\r\n      throw new Error(`Failed to fetch forms: ${response.status}`);\r\n    }\r\n    const data = await response.json();\r\n    const loadedForms = data.map(form => ({\r\n      id: form.id, // Ensure this is present\r\n      name: form.name // Ensure this is present\r\n    }));\r\n    setSavedForms(loadedForms); // Set the forms to state\r\n  } catch (error) {\r\n    console.error('Error loading forms:', error);\r\n  }\r\n};\r\n\r\nconst loadForm = async () => {\r\n  if (!selectedForm) {\r\n    alert('Please select a form to load.');\r\n    return;\r\n  }\r\n\r\n  try {\r\n    // Use the endpoint that searches by form name\r\n    const response = await fetch(`http://localhost:5000/forms/${encodeURIComponent(selectedForm)}`);\r\n    if (!response.ok) {\r\n      throw new Error(`Failed to load form: ${response.status}`);\r\n    }\r\n\r\n    const formData = await response.json();\r\n    const parser = new DOMParser();\r\n    const xmlDoc = parser.parseFromString(formData.xml_data, 'application/xml');\r\n    const loadedName = xmlDoc.querySelector('form > name')?.textContent || '';\r\n    const loadedLabel = xmlDoc.querySelector('form > label')?.textContent || '';\r\n    const loadedTags = Array.from(xmlDoc.querySelectorAll('form > tags > tag')).map(tag => tag.textContent);\r\n\r\n    const elements = Array.from(xmlDoc.querySelectorAll('elements > element')).map((el, index) => {\r\n      const type = el.querySelector('type')?.textContent || 'text';\r\n      const optionsNode = el.querySelector('dropdownOptions');\r\n      const options = optionsNode ? Array.from(optionsNode.querySelectorAll('option')).map(opt => opt.textContent) : [];\r\n\r\n      return {\r\n        id: `element-${Date.now()}-${index}`,\r\n        type,\r\n        key: el.querySelector('key')?.textContent || '',\r\n        label: el.querySelector('label')?.textContent || '',\r\n        required: el.querySelector('required')?.textContent === 'true',\r\n        alignment: el.querySelector('alignment')?.textContent || 'center',\r\n        settings: {\r\n          headerLevel: el.querySelector('headerLevel')?.textContent || 'h1',\r\n          placeholder: el.querySelector('placeholder')?.textContent || '',\r\n          dropdownOptions: options,\r\n        }\r\n      };\r\n    }).filter(el => el.type !== 'button'); // Exclude submit button\r\n\r\n    setFormName(loadedName);\r\n    setFormLabel(loadedLabel);\r\n    setFormTags(loadedTags.join(', '));\r\n    setFormElements(elements);\r\n\r\n    console.log(`Form \"${selectedForm}\" loaded successfully!`);\r\n  } catch (error) {\r\n    console.error('Error loading form:', error);\r\n    alert('Failed to load form data.');\r\n  }\r\n};\r\n\r\nconst addSubmitButton = () => {\r\n  setFormElements(prev => [\r\n    ...prev,\r\n    {\r\n      id: SUBMIT_BUTTON_ID,\r\n      type: 'button',\r\n      key: 'Submit',\r\n      label: 'Submit',\r\n      alignment: 'center',\r\n      required: false,\r\n      settings: {},\r\n    },\r\n  ]);\r\n};\r\n\r\nconst generateKey = (type) => {\r\n  // Replace spaces with underscores and lowercase the type for consistency\r\n  const formattedType = type.replace(/\\s+/g, '_').toLowerCase();\r\n\r\n  // Count existing elements of this type\r\n  const existingCount = formElements.filter((el) => el.type === type).length + 1;\r\n\r\n  // Return a formatted key such as \"heading_1\", \"email_2\"\r\n  return `${formattedType}_${existingCount}`;\r\n};\r\n\r\nconst addElement = (type) => {\r\n  const newKey = generateKey(type);\r\n  const newElement = {\r\n    id: newKey, // Use the generated key as ID\r\n    type,\r\n    key: newKey,\r\n    label: type, // Default label as the type name\r\n    alignment: 'center',\r\n    settings: {\r\n      headerLevel: 'h1',\r\n      placeholder: type === 'email' ? 'Email Address' : 'Enter text here...',\r\n      useCurrentDate: false,\r\n      defaultBoolean: 'true',\r\n      dropdownOptions: [],\r\n      min: '',\r\n      max: '',\r\n      step: '',\r\n      defaultValue: '',\r\n      showPasswordOption: false,\r\n      passwordLength: '',\r\n      requireSymbols: false,\r\n      requireNumbers: false,\r\n      csvData: [],\r\n    },\r\n    required: false,\r\n    textColor: '#ffffff',\r\n    fontFamily: 'Arial',\r\n  };\r\n\r\n  // Ensure new elements are added before the Submit button\r\n  setFormElements((prev) => {\r\n    const submitIndex = prev.findIndex((el) => el.id === SUBMIT_BUTTON_ID);\r\n    const newFormElements = [...prev];\r\n    newFormElements.splice(submitIndex, 0, newElement);\r\n    return newFormElements;\r\n  });\r\n};\r\n\r\nconst isKeyUnique = (key) => {\r\n    return !formElements.some((el) => el.key === key && el.id !== selectedElement?.id);\r\n};\r\nconst handleSubmit = () => {\r\n  const formData = formElements.filter(el => el.id !== SUBMIT_BUTTON_ID); // Exclude submit button from data\r\n  console.log('Form submitted:', formData);\r\n  // Example API call\r\n  fetch('/api/submit-form', {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify({ elements: formData }),\r\n  })\r\n    .then(response => response.json())\r\n    .then(data => console.log('Form submission response:', data))\r\n    .catch(error => console.error('Error submitting form:', error));\r\n};\r\n\r\nconst saveForm = async () => {\r\nif (!formName) {\r\n  alert('Please enter a name for the form.');\r\n      return;\r\n    }\r\n  \r\n    const formData = {\r\n      name: formName,\r\n      label: formLabel,\r\n      tags: formTags ? formTags.split(',').map(tag => tag.trim()) : [],\r\n      elements: formElements, // Includes the populated csvData\r\n    };\r\n  \r\n    // Convert form data to XML\r\n    const convertToXML = (obj) => {\r\n      let xml = '';\r\n      for (let key in obj) {\r\n        if (Array.isArray(obj[key])) {\r\n          xml += `<${key}>`;\r\n          obj[key].forEach((element) => {\r\n            if (Array.isArray(element)) {\r\n              // Handle CSV data as rows and cells\r\n              xml += '<row>';\r\n              element.forEach((cell) => {\r\n                xml += `<cell>${cell}</cell>`;\r\n              });\r\n              xml += '</row>';\r\n            } else {\r\n              xml += `<element>${convertToXML(element)}</element>`;\r\n            }\r\n          });\r\n          xml += `</${key}>`;\r\n        } else if (typeof obj[key] === 'object') {\r\n          xml += `<${key}>${convertToXML(obj[key])}</${key}>`;\r\n        } else {\r\n          xml += `<${key}>${obj[key]}</${key}>`;\r\n        }\r\n      }\r\n      return xml;\r\n    };\r\n  \r\n    const xmlData = `<form>${convertToXML(formData)}</form>`;\r\n  \r\n    // Send form data to backend\r\n    try {\r\n      const response = await fetch('http://localhost:5000/save_form', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          name: formName,\r\n          label: formLabel,\r\n          tags: formTags ? formTags.split(',').map(tag => tag.trim()) : [],\r\n          elements: formElements,\r\n          xmlData: xmlData, // Include XML data in the request\r\n        }),\r\n      });\r\n  \r\n      if (!response.ok) {\r\n        throw new Error(`Failed to save form: ${response.status} ${response.statusText}`);\r\n      }\r\n  \r\n      alert(`Form \"${formName}\" saved successfully!`);\r\n      localStorage.setItem(formName, xmlData); // Optional: save XML to local storage\r\n  \r\n      // Refresh saved forms after saving\r\n      loadSavedForms();\r\n  \r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      alert(`Error saving form: ${error.message}`);\r\n    }\r\n  };\r\n  \r\n  const EditElement = ({ selectedElement, setSelectedElement, draftSettings, setDraftSettings, updateElementSettings, removeElement }) => {\r\n    const editorRef = useRef(null);\r\n  \r\n    // Close editor when clicking outside\r\n    useEffect(() => {\r\n      const handleClickOutside = (event) => {\r\n        if (editorRef.current && !editorRef.current.contains(event.target)) {\r\n          setSelectedElement(null);\r\n        }\r\n      };\r\n  \r\n      document.addEventListener('mousedown', handleClickOutside);\r\n      return () => {\r\n        document.removeEventListener('mousedown', handleClickOutside);\r\n      };\r\n    }, [setSelectedElement]);\r\n  \r\n    // Handle updates for each field dynamically\r\n    const handleFieldChange = (field, value) => {\r\n      setDraftSettings((prev) => ({ ...prev, [field]: value }));\r\n      updateElementSettings(selectedElement.id, { ...draftSettings, [field]: value });\r\n    };\r\n  \r\n    // Render additional fields based on element type\r\n    const renderAdditionalFields = () => {\r\n      switch (selectedElement.type) {\r\n        case 'dropdown':\r\n          return (\r\n            <div>\r\n              <label>Dropdown Options:</label>\r\n              {draftSettings.dropdownOptions.map((option, idx) => (\r\n                <div key={idx} style={{ display: 'flex', alignItems: 'center', marginBottom: '10px' }}>\r\n                  <input\r\n                    type=\"text\"\r\n                    value={option}\r\n                    onChange={(e) => {\r\n                      const updatedOptions = [...draftSettings.dropdownOptions];\r\n                      updatedOptions[idx] = e.target.value;\r\n                      handleFieldChange('dropdownOptions', updatedOptions);\r\n                    }}\r\n                    style={{ flexGrow: 1, padding: '8px', borderRadius: '4px', marginRight: '10px' }}\r\n                  />\r\n                  <button\r\n                    onClick={() => {\r\n                      const updatedOptions = draftSettings.dropdownOptions.filter((_, index) => index !== idx);\r\n                      handleFieldChange('dropdownOptions', updatedOptions);\r\n                    }}\r\n                  >\r\n                    Remove\r\n                  </button>\r\n                </div>\r\n              ))}\r\n              <button\r\n                onClick={() => handleFieldChange('dropdownOptions', [...draftSettings.dropdownOptions, 'New Option'])}\r\n              >\r\n                Add Option\r\n              </button>\r\n            </div>\r\n          );\r\n        case 'inputText':\r\n        case 'email':\r\n          return (\r\n            <div>\r\n              <label>\r\n                Placeholder:\r\n                <input\r\n                  type=\"text\"\r\n                  value={draftSettings.placeholder || ''}\r\n                  onChange={(e) => handleFieldChange('placeholder', e.target.value)}\r\n                />\r\n              </label>\r\n            </div>\r\n          );\r\n        case 'number':\r\n          return (\r\n            <div>\r\n              <label>\r\n                Minimum:\r\n                <input\r\n                  type=\"number\"\r\n                  value={draftSettings.min || ''}\r\n                  onChange={(e) => handleFieldChange('min', e.target.value)}\r\n                />\r\n              </label>\r\n              <label>\r\n                Maximum:\r\n                <input\r\n                  type=\"number\"\r\n                  value={draftSettings.max || ''}\r\n                  onChange={(e) => handleFieldChange('max', e.target.value)}\r\n                />\r\n              </label>\r\n            </div>\r\n          );\r\n        default:\r\n          return null;\r\n      }\r\n    };\r\n  \r\n    return (\r\n      <div ref={editorRef} className=\"element-editor\">\r\n        <div className=\"element-editor-header\">\r\n          <h3>Edit Element</h3>\r\n          <button\r\n            onClick={() => {\r\n              if (window.confirm('Are you sure you want to delete this element?')) {\r\n                removeElement(selectedElement.id);\r\n              }\r\n            }}\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n  \r\n        {/* General Fields */}\r\n        <label>\r\n          Key:\r\n          <input\r\n            type=\"text\"\r\n            value={draftSettings.key || ''}\r\n            onChange={(e) => handleFieldChange('key', e.target.value)}\r\n          />\r\n        </label>\r\n        <label>\r\n          Label:\r\n          <input\r\n            type=\"text\"\r\n            value={draftSettings.label || ''}\r\n            onChange={(e) => handleFieldChange('label', e.target.value)}\r\n          />\r\n        </label>\r\n        <label>\r\n          Alignment:\r\n          <select\r\n            value={draftSettings.alignment || 'center'}\r\n            onChange={(e) => handleFieldChange('alignment', e.target.value)}\r\n          >\r\n            <option value=\"left\">Left</option>\r\n            <option value=\"center\">Center</option>\r\n            <option value=\"right\">Right</option>\r\n          </select>\r\n        </label>\r\n  \r\n        {/* Render Additional Fields based on Element Type */}\r\n        {renderAdditionalFields()}\r\n      </div>\r\n    );\r\n  };\r\n\r\nconst removeElement = (id) => {\r\n  if (id === SUBMIT_BUTTON_ID) return; // Prevent deletion of the Submit button\r\n  setFormElements(prev => prev.filter(el => el.id !== id));\r\n  if (selectedElement?.id === id) {\r\n    setSelectedElement(null);\r\n  }\r\n};\r\n\r\nconst handleEditClick = (element) => {\r\n  setSelectedElement(element);\r\n  setDraftSettings({\r\n    ...element.settings,\r\n    key: element.key || '',\r\n    label: element.label,\r\n    alignment: element.alignment,\r\n    required: element.required,\r\n    requirement: element.settings?.requirement || false, // Add this line\r\n    placeholder: element.settings?.placeholder,\r\n    csvData: element.settings?.csvData || [],\r\n  });\r\n};\r\n\r\nconst updateElementSettings = (id, newSettings) => {\r\n  setFormElements((prev) =>\r\n    prev.map((el) =>\r\n      el.id === id.toString()\r\n        ? {\r\n            ...el,\r\n            ...newSettings,\r\n            settings: {\r\n              ...el.settings,\r\n              ...newSettings,\r\n              requirement: newSettings.requirement !== undefined\r\n                ? newSettings.requirement\r\n                : el.settings.requirement, // Preserve existing requirement if not changed\r\n            },\r\n          }\r\n        : el\r\n    )\r\n  );\r\n};\r\n    \r\nconst handleDragStart = ({ active }) => {\r\n  setDraggingElement(active.id);\r\n};\r\n\r\nconst handleDragEnd = ({ active, over }) => {\r\n  if (over && active.id !== over.id) {\r\n    const oldIndex = formElements.findIndex((el) => el.id === active.id);\r\n    const newIndex = formElements.findIndex((el) => el.id === over.id);\r\n    setFormElements((prev) => arrayMove(prev, oldIndex, newIndex));\r\n  }\r\n  setDraggingElement(null);\r\n};\r\n\r\nconst handleCSVUpload = (event, elementId) => {\r\n  const file = event.target.files[0];\r\n  if (file) {\r\n    if (!file.name.endsWith('.csv')) {\r\n      alert('Please upload a valid .csv file.');\r\n      return;\r\n    }\r\n    Papa.parse(file, {\r\n      complete: (result) => {\r\n        const csvData = result.data;\r\n        console.log('Parsed CSV Data:', csvData);\r\n\r\n        setFormElements((prev) =>\r\n          prev.map((el) =>\r\n            el.id === elementId\r\n              ? {\r\n                  ...el,\r\n                  csvData, // Update the csvData property\r\n                  settings: { ...el.settings, csvData }\r\n                }\r\n              : el\r\n          )\r\n        );\r\n      },\r\n      header: false, // Adjust as needed\r\n    });\r\n  }\r\n};\r\n  \r\nconst handleResetForm = () => {\r\n  if (window.confirm('Are you sure you want to reset the form?')) {\r\n    setFormElements([]);\r\n    setFormName('');\r\n    setFormLabel('');\r\n  }\r\n};\r\n\r\nconst validatePassword = (password, settings) => {\r\n  if (settings?.passwordLength && password.length < settings.passwordLength) {\r\n    return false;\r\n  }\r\n  if (settings?.requireSymbols && !/[!@#$%^&*(),.?\":{}|<>]/.test(password)) {\r\n    return false;\r\n  }\r\n  if (settings?.requireNumbers && !/[0-9]/.test(password)) {\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n\r\n  const renderElementContent = (element) => {\r\n    const isBeingEdited = selectedElement?.id === element.id;\r\n    const settings = isBeingEdited ? draftSettings : element.settings;\r\n  \r\n    const alignmentStyle = {\r\n      textAlign: settings?.alignment || 'center',\r\n    };\r\n  \r\n    const wrapperStyle = {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: settings?.alignment === 'left' ? 'flex-start' : settings?.alignment === 'right' ? 'flex-end' : 'center',\r\n      width: '100%',\r\n      marginBottom: '10px',\r\n    };\r\n\r\n    const renderLabel = (label) => (\r\n      label && <label style={{ marginBottom: '5px', fontWeight: 'bold' }}>{label}</label>\r\n    );\r\n\r\n    switch (element.type) {\r\n      case 'heading': {\r\n        const HeaderTag = settings?.headerLevel || 'h1';\r\n        const alignmentStyle = { \r\n          textAlign: settings?.alignment || 'center', \r\n          width: '100%', \r\n          margin: '0 auto'  // Ensures it's centered\r\n        };\r\n      \r\n        return (\r\n          <div style={{ display: 'flex', justifyContent: 'center', width: '100%' }}>\r\n            <HeaderTag style={alignmentStyle}>\r\n              {settings?.label || element.label}\r\n            </HeaderTag>\r\n          </div>\r\n        );\r\n      }      \r\n      case 'text':\r\n        return <p style={alignmentStyle}>{settings.label}</p>;\r\n      case 'button':\r\n        return (\r\n          <div style={{ display: 'flex', justifyContent: element.alignment || 'center', width: '100%' }}>\r\n            <button\r\n              onClick={element.id === SUBMIT_BUTTON_ID ? handleSubmit : undefined} // Submit button triggers API\r\n              className=\"custom-button\"\r\n              style={{ padding: '10px 20px', borderRadius: '6px', margin: '5px', backgroundColor: '#007bff', color: 'white' }}\r\n            >\r\n              {element.label}\r\n            </button>\r\n          </div>\r\n        );\r\n      case 'inputText':\r\n        return (\r\n        <div style={wrapperStyle}>\r\n          {renderLabel(settings?.label || element.label)}\r\n            <input\r\n              type=\"text\"\r\n              placeholder={settings?.placeholder || ''}\r\n              required={settings?.required}\r\n              style={{\r\n                borderRadius: '8px',\r\n                padding: '10px',\r\n                border: '1px solid #ced4da',\r\n                textAlign: 'center',\r\n              }}\r\n            />\r\n          </div>\r\n        );\r\n      case 'email':\r\n        return (\r\n        <div style={wrapperStyle}>\r\n          {renderLabel(settings?.label || element.label)}\r\n            <input\r\n              type=\"email\"\r\n              placeholder={settings?.placeholder || ''}\r\n              required={settings?.required}\r\n              style={{\r\n                borderRadius: '8px',\r\n                padding: '10px',\r\n                border: settings?.isValid === false ? '2px solid #ff0000' : '1px solid #ced4da',\r\n                boxShadow: settings?.isValid === false ? '0 0 5px #ff0000' : 'none',\r\n                textAlign: 'center'\r\n              }}\r\n              onBlur={(e) => {\r\n                if (e.target.value.trim() !== '') {\r\n                  const isValid = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(e.target.value);\r\n                  updateElementSettings(element.id, { ...settings, isValid });\r\n                }\r\n              }}\r\n            />\r\n            {!settings?.isValid && settings?.isValid !== undefined && (\r\n              <span style={{ color: '#ff0000', fontSize: '0.8em', marginTop: '5px' }}>Invalid email address</span>\r\n            )}\r\n          </div>\r\n        );\r\n      case 'divider':\r\n        return <hr style={{ ...alignmentStyle, width: '100%' }} />;\r\n        return (\r\n          <div style={wrapperStyle}>\r\n          {renderLabel(settings?.label || element.label)}\r\n              <label className=\"custom-file-label\">\r\n                Choose Image\r\n                <input\r\n                  type=\"file\"\r\n                  className=\"custom-file-input\"\r\n                  accept=\"image/*\"\r\n                  onChange={(e) => handleImageUpload(e, element.id)}\r\n                />\r\n              </label>\r\n              {settings?.imageSrc ? (\r\n                <img\r\n                  src={settings.imageSrc}\r\n                  alt=\"Uploaded\"\r\n                  style={{ maxWidth: '100%', height: 'auto', borderRadius: '8px', marginTop: '10px' }}\r\n                />\r\n              ) : (\r\n                <img\r\n                  src=\"https://via.placeholder.com/150\"\r\n                  alt=\"Placeholder\"\r\n                  style={{ maxWidth: '100%', height: 'auto', borderRadius: '8px', marginTop: '10px' }}\r\n                />\r\n              )}\r\n            </div>\r\n          );       \r\n      case 'file':\r\n          return (\r\n          <div style={wrapperStyle}>\r\n          {renderLabel(settings?.label || element.label)}\r\n              <label className=\"custom-file-label\">\r\n                Upload File\r\n                <input\r\n                  type=\"file\"\r\n                  className=\"custom-file-input\"\r\n                  onChange={(e) => handleCSVUpload(e, element.id)}\r\n                  accept=\".csv\"\r\n                />\r\n              </label>\r\n              <span className=\"file-name\">No file chosen</span>\r\n            </div>\r\n          );\r\n      case 'table':\r\n        const tableData = element.settings?.csvData || [];\r\n        console.log('Rendering Table with Data:', tableData);\r\n  \r\n        return (\r\n          <div style={wrapperStyle}>\r\n          {renderLabel(settings?.label || element.label)}\r\n          <div>\r\n                {/* Styled file input and label */}\r\n                <div style={{ marginBottom: '10px' }}>\r\n                  <input\r\n                    type=\"file\"\r\n                    accept=\".csv\"\r\n                    id={`file-upload-${element.id}`}\r\n                    onChange={(e) => handleCSVUpload(e, element.id)}\r\n                    style={{ display: 'none' }} // Hide default input\r\n                  />\r\n                  <label\r\n                    htmlFor={`file-upload-${element.id}`}\r\n                    style={{\r\n                      backgroundColor: '#007bff',\r\n                      color: 'white',\r\n                      padding: '10px 20px',\r\n                      borderRadius: '6px',\r\n                      cursor: 'pointer',\r\n                      display: 'inline-block',\r\n                    }}\r\n                  >\r\n                    Upload CSV File\r\n                  </label>\r\n                  <span style={{ marginLeft: '10px' }}>\r\n                    {selectedFileName || 'No file chosen'}\r\n                  </span>\r\n                </div>\r\n    \r\n                <table style={{ margin: '0 auto', borderCollapse: 'collapse', width: '100%' }}>\r\n                  <tbody>\r\n                    {tableData.length > 0 ? (\r\n                      tableData.map((row, rowIndex) => (\r\n                        <tr key={`row-${rowIndex}`}>\r\n                          {row.map((cell, cellIndex) => (\r\n                            <td\r\n                              key={`cell-${rowIndex}-${cellIndex}`}\r\n                              style={{ border: '1px solid #ddd', padding: '8px' }}\r\n                            >\r\n                              {cell}\r\n                            </td>\r\n                          ))}\r\n                        </tr>\r\n                      ))\r\n                    ) : (\r\n                      <tr>\r\n                        <td style={{ textAlign: 'center' }}>No Data Available</td>\r\n                      </tr>\r\n                    )}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          );\r\n      case 'dateTime':\r\n        return (\r\n          <div style={wrapperStyle}>\r\n            {renderLabel(settings?.label || element.label)}\r\n            {settings?.useCurrentDate ? (\r\n              <input\r\n                type=\"text\"\r\n                value={new Date().toLocaleDateString('en-US')}\r\n                readOnly\r\n                style={{\r\n                  borderRadius: '8px',\r\n                  padding: '10px',\r\n                  border: '1px solid #ced4da',\r\n                  textAlign: 'center'\r\n                }}\r\n              />\r\n            ) : (\r\n              <input\r\n                type=\"date\"\r\n                style={{\r\n                  borderRadius: '8px',\r\n                  padding: '10px',\r\n                  border: '1px solid #ced4da',\r\n                  textAlign: 'center'\r\n                }}\r\n              />\r\n            )}\r\n          </div>\r\n        );    \r\n      case 'dropdown':\r\n        return (\r\n          <div style={wrapperStyle}>\r\n          {renderLabel(settings?.label || element.label)}\r\n          <select\r\n              style={{\r\n                borderRadius: '8px',\r\n                padding: '10px',\r\n                border: '1px solid #ced4da',\r\n                textAlign: 'center',\r\n              }}\r\n            >\r\n              <option value=\"\">Select an option</option>\r\n              {settings?.dropdownOptions?.map((option, idx) => (\r\n                <option key={idx} value={option}>\r\n                  {option}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        );    \r\n      case 'boolean':\r\n        return (\r\n        <div style={wrapperStyle}>\r\n          {renderLabel(settings?.label || element.label)}\r\n            <select\r\n              value={settings?.defaultBoolean || 'true'}\r\n              onChange={(e) => updateElementSettings(element.id, { ...settings, defaultBoolean: e.target.value })}\r\n              style={{\r\n                borderRadius: '8px',\r\n                padding: '10px',\r\n                border: '1px solid #ced4da',\r\n                textAlign: 'center'\r\n              }}\r\n            >\r\n              <option value=\"true\">True</option>\r\n              <option value=\"false\">False</option>\r\n            </select>\r\n          </div>\r\n        );      \r\n      case 'number':\r\n        return (\r\n        <div style={wrapperStyle}>\r\n          {renderLabel(settings?.label || element.label)}\r\n            <input\r\n              type=\"number\"\r\n              min={settings?.min}\r\n              max={settings?.max}\r\n              step={settings?.step}\r\n              defaultValue={settings?.defaultValue}\r\n              required={settings?.required}\r\n              style={{\r\n                borderRadius: '8px',\r\n                padding: '10px',\r\n                border: '1px solid #ced4da',\r\n                textAlign: 'center'\r\n              }}\r\n            />\r\n          </div>\r\n        );\r\n      case 'password':\r\n      return (\r\n        <div\r\n          style={{\r\n            width: '100%',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: settings?.alignment === 'left' ? 'flex-start' : settings?.alignment === 'right' ? 'flex-end' : 'center',\r\n            justifyContent: 'center',\r\n          }}\r\n        >\r\n          <div style={wrapperStyle}>\r\n          {renderLabel(settings?.label || element.label)}\r\n          <input\r\n              type={settings?.showPasswordOption && settings?.showPassword ? 'text' : 'password'}\r\n              placeholder={settings?.placeholder || 'Enter password'}\r\n              required={settings?.required}\r\n              onBlur={(e) => {\r\n                const isValid = validatePassword(e.target.value, settings);\r\n                updateElementSettings(element.id, { ...settings, isValid });\r\n              }}\r\n              style={{\r\n                borderRadius: '8px',\r\n                padding: '10px',\r\n                width: '300px',\r\n                border: settings?.isValid === false ? '2px solid #ff0000' : '1px solid #ced4da',\r\n                textAlign: 'left',\r\n                marginRight: '10px',\r\n              }}\r\n            />\r\n            {settings?.showPasswordOption && (\r\n              <label style={{ display: 'flex', alignItems: 'center', marginLeft: '10px' }}>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={settings?.showPassword || false}\r\n                  onChange={(e) => updateElementSettings(element.id, { ...settings, showPassword: e.target.checked })}\r\n                  style={{ marginRight: '5px' }}\r\n                />\r\n                Show Password\r\n              </label>\r\n            )}\r\n          </div>\r\n          <div style={{ marginTop: '10px', textAlign: settings?.alignment || 'center', width: '100%', display: 'flex', flexDirection: 'column', alignItems: settings?.alignment === 'left' ? 'flex-start' : settings?.alignment === 'right' ? 'flex-end' : 'center' }}>\r\n            {settings?.passwordLength && <p style={{ marginBottom: '5px' }}>Requires Minimum Length: {settings.passwordLength}</p>}\r\n            {settings?.requireSymbols && <p style={{ marginBottom: '5px' }}>Requires Symbols: Yes</p>}\r\n            {settings?.requireNumbers && <p>Requires Numbers: Yes</p>}\r\n          </div>\r\n          {!settings?.isValid && settings?.isValid !== undefined && (\r\n            <span style={{ color: '#ff0000', fontSize: '0.8em', marginTop: '5px' }}>Password does not meet requirements</span>\r\n          )}\r\n        </div>\r\n      );\r\n      default:\r\n        return (\r\n          <input\r\n            type={element.type}\r\n            placeholder={settings?.placeholder ||''}\r\n            required={settings?.required}\r\n            style={alignmentStyle}\r\n          />\r\n        );\r\n    }\r\n  };\r\n\r\n  const areRequiredFieldsFilled = () => {\r\n    return formElements.every((el) => {\r\n      if (el.required) {\r\n        return el.settings.label && el.settings.label.trim() !== '';\r\n      }\r\n      return true;\r\n    });\r\n  };\r\n\r\n  return (\r\n<div className=\"form-builder-container\" style={{ height: '100vh', overflow: 'hidden' }}>\r\n<div className=\"sidebar\">\r\n\r\n  {/* Form Name Input */}\r\n  <div className=\"form-name-section\" style={{ marginBottom: '20px' }}>\r\n    <label htmlFor=\"form-name\" className=\"sidebar-label\">Form Name:</label>\r\n    <input\r\n      id=\"form-name\"\r\n      type=\"text\"\r\n      value={formName}\r\n      onChange={(e) => setFormName(e.target.value)}\r\n      placeholder=\"Enter form name\"\r\n      className=\"form-input\"\r\n    />\r\n  </div>\r\n\r\n  {/* Label Input (Required) */}\r\n  <div className=\"form-label-section\" style={{ marginBottom: '20px' }}>\r\n    <label htmlFor=\"form-label\" className=\"sidebar-label\">Label (Required):</label>\r\n    <input\r\n      id=\"form-label\"\r\n      type=\"text\"\r\n      value={formLabel}\r\n      onChange={(e) => setFormLabel(e.target.value)}\r\n      placeholder=\"Enter form label\"\r\n      className=\"form-input\"\r\n    />\r\n  </div>\r\n\r\n  <div className=\"element-input-wrapper\" style={{ display: 'flex', gap: '10px' }}>\r\n    <div className=\"element-selector\">\r\n      <h4>Elements</h4>\r\n      {ELEMENT_TYPES.map((element) => (\r\n        <button\r\n          key={element.id}\r\n          onClick={() => addElement(element.id)}\r\n          className=\"element-button\"\r\n        >\r\n          {element.label}\r\n        </button>\r\n      ))}\r\n    </div>\r\n\r\n    <div className=\"input-selector\">\r\n      <h4>Input Fields</h4>\r\n      {INPUT_FIELDS.map((input) => (\r\n        <button\r\n          key={input.id}\r\n          onClick={() => addElement(input.id)}\r\n          className=\"input-button\"\r\n        >\r\n          {input.label}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  </div>\r\n  <div className=\"load-section\" style={{ marginBottom: '20px' }}>\r\n  <label htmlFor=\"saved-forms\" className=\"sidebar-label\">Load Saved Form:</label>\r\n  <select\r\n    id=\"saved-forms\"\r\n    value={selectedForm}\r\n    onChange={(e) => setSelectedForm(e.target.value)}\r\n    className=\"sidebar-select\"\r\n  >\r\n    <option value=\"\">-- Select a Form --</option>\r\n    {savedForms.map((form) => (\r\n      <option key={form.id} value={form.name}> {/* Ensure you're using form.name */}\r\n        {form.name} {/* This should render a string */}\r\n      </option>\r\n    ))}\r\n  </select>\r\n  <button onClick={loadForm} className=\"load-form-button\">Load Form</button>\r\n</div>\r\n  <button onClick={saveForm} className=\"save-form-button\">Save Form</button>\r\n  <button onClick={handleResetForm} className=\"reset-form-button\">Reset Form</button>\r\n</div>\r\n\r\n  <div className=\"form-builder\" ref={formContainerRef} style={{ height: '100%', overflowY: 'auto' }}>\r\n        <DndContext\r\n          collisionDetection={closestCenter}\r\n          onDragEnd={handleDragEnd}\r\n          onDragStart={handleDragStart}\r\n        >\r\n          <SortableContext items={formElements} strategy={rectSortingStrategy}>\r\n            <div className=\"form-preview\">\r\n              {formElements.map((element) => (\r\n                <SortableFormElement\r\n                  key={element.id}\r\n                  element={element}\r\n                  handleEditClick={handleEditClick}\r\n                  renderElementContent={renderElementContent}\r\n                />\r\n              ))}\r\n            </div>\r\n          </SortableContext>\r\n          {draggingElement && (\r\n            <DragOverlay>\r\n              <div className=\"dragging-overlay\">Dragging</div>\r\n            </DragOverlay>\r\n          )}\r\n        </DndContext>\r\n  </div>\r\n\r\n      {selectedElement && (\r\n  <div className=\"element-editor\">\r\n    <div className=\"element-editor-header\">\r\n      <h3>Edit Element</h3>\r\n      <button\r\n        onClick={() => {\r\n          if (window.confirm('Are you sure you want to delete this element?')) {\r\n            removeElement(selectedElement.id);\r\n          }\r\n        }}\r\n        className=\"delete-element\"\r\n      >\r\n        Delete\r\n      </button>\r\n    </div>\r\n\r\n    <label>\r\n      Key:\r\n      <input\r\n        type=\"text\"\r\n        value={draftSettings?.key || ''}\r\n        onChange={(e) => {\r\n          const updatedKey = e.target.value;\r\n          setDraftSettings((prev) => ({ ...prev, key: updatedKey }));\r\n          updateElementSettings(selectedElement.id, { ...draftSettings, key: updatedKey });\r\n        }}\r\n      />\r\n    </label>\r\n\r\n    {/* Additional fields like Label, Alignment, etc., go here */}\r\n\r\n    {selectedElement.type === 'dropdown' && (\r\n      <div>\r\n        <label>Dropdown Options:</label>\r\n        {draftSettings?.dropdownOptions?.map((option, idx) => (\r\n          <div key={idx} style={{ display: 'flex', alignItems: 'center', marginBottom: '10px' }}>\r\n            <input\r\n              type=\"text\"\r\n              value={option}\r\n              onChange={(e) => {\r\n                const updatedOptions = [...draftSettings.dropdownOptions];\r\n                updatedOptions[idx] = e.target.value;\r\n                setDraftSettings((prev) => ({ ...prev, dropdownOptions: updatedOptions }));\r\n                updateElementSettings(selectedElement.id, { ...draftSettings, dropdownOptions: updatedOptions });\r\n              }}\r\n              style={{\r\n                flexGrow: 1,\r\n                padding: '8px',\r\n                borderRadius: '4px',\r\n                border: '1px solid #505158',\r\n                backgroundColor: '#26282c',\r\n                color: '#b5b5b5',\r\n                marginRight: '10px'\r\n              }}\r\n            />\r\n            <button\r\n              onClick={() => {\r\n                const updatedOptions = draftSettings.dropdownOptions.filter((_, index) => index !== idx);\r\n                setDraftSettings((prev) => ({ ...prev, dropdownOptions: updatedOptions }));\r\n                updateElementSettings(selectedElement.id, { ...draftSettings, dropdownOptions: updatedOptions });\r\n              }}\r\n              className=\"remove-option\"\r\n            >\r\n              Remove\r\n            </button>\r\n          </div>\r\n        ))}\r\n        <button\r\n          onClick={() => {\r\n            const updatedOptions = [...(draftSettings?.dropdownOptions || []), 'New Option'];\r\n            setDraftSettings((prev) => ({ ...prev, dropdownOptions: updatedOptions }));\r\n            updateElementSettings(selectedElement.id, { ...draftSettings, dropdownOptions: updatedOptions });\r\n          }}\r\n          className=\"add-option-button\"\r\n        >\r\n          Add Option\r\n        </button>\r\n      </div>\r\n    )}\r\n  </div>\r\n)}\r\n\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SortableFormElement = ({ element, handleEditClick, renderElementContent }) => {\r\n  const { attributes, listeners, setNodeRef, transform, transition } = useSortable({\r\n    id: element.id,\r\n  });\r\n\r\n  const style = {\r\n    transform: transform ? `translate3d(${transform.x}px, ${transform.y}px, 0)` : undefined,\r\n    transition,\r\n    backgroundColor: element.settings?.backgroundColor || 'inherit',\r\n  };\r\n\r\n  return (\r\n    <div\r\n      ref={setNodeRef}\r\n      style={style}\r\n      className=\"form-element\"\r\n      onClick={() => handleEditClick(element)}\r\n    >\r\n      {renderElementContent(element)}\r\n      <button\r\n        className=\"drag-handle\"\r\n        {...listeners}\r\n        {...attributes}\r\n        onMouseDown={(e) => e.stopPropagation()}\r\n      >\r\n        Drag\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormBuilder;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}