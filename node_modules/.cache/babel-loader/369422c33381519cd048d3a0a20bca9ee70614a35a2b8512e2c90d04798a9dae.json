{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isInterpolationResult = isInterpolationResult;\nexports[\"default\"] = exports.getThemeVariant = void 0;\nvar _utils = require(\"./utils\");\nfunction _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nvar valueToKey = {\n  enterprise: 'family',\n  prisma: 'family',\n  light: 'colorScheme',\n  dark: 'colorScheme',\n  compact: 'density',\n  comfortable: 'density'\n};\nfunction isInterpolationResult(tree) {\n  // for this to work as expected for objects/CSSProperties, it may be necessary to change\n  // it to only consider objects that have valid pick tree keys (but no other keys)\n  // as trees\n  return _typeof(tree) !== 'object' || Array.isArray(tree) || tree === null;\n}\n\n/**\n * This function is exported for use in pickVariant exclusively.\n */\nvar getThemeVariant = function getThemeVariant(tree, theme) {\n  // If it's not an object with one of the six keys, it must be an end value.\n  var treeKey = Object.keys(tree).shift();\n  if (!treeKey) {\n    throw new Error('A pick tree cannot be empty.');\n  }\n  var themeKey = valueToKey[treeKey];\n  if (!themeKey) {\n    throw new Error(\"Invalid pick tree key: \".concat(treeKey));\n  }\n\n  // Recursively crawl the tree.\n  var themeCurrentValue = theme[themeKey];\n  var treeValue = tree[themeCurrentValue];\n\n  // If it's not an object or it's a null value, it must be the end value.\n  if (isInterpolationResult(treeValue)) {\n    return treeValue; // this may be undefined, when the css does not support the theme\n  }\n  return getThemeVariant(treeValue, theme);\n};\n\n/**\n * Pick is used to create theme-specific css.\n *\n * This example selects an appropriate variable for the current theme.\n * ```\n * import { pick, variables } from '@splunk/themes';\n *\n * const Wrapper = styled.div`\n *      color: ${pick({\n *          enterprise: {\n *              light: variables.grey35,\n *              dark:  variables.grey92,\n *          },\n *          prisma: variables.contentColorDefault,\n *      })}\n * `;\n * ```\n * This example selects an appropriate block of css for the current theme.\n * ```\n *  const Label = styled.div`\n *      ${pick({\n *          enterprise: css`\n *              font-weight: ${variables.fontWeightSemiBold};\n *          `,\n *          prisma: css`\n *              color: ${variables.contentColorDefault),\n *          `,\n *      })}\n * `;\n * ```\n * @param {object} themeOptions - An object consisting of a tree of theme options (`enterprise|prisma`, `light|dark`, or `compact|comfortable`).\n * @returns {function} The returned function is called by `styled-components`, which provides the theme context.\n * @public\n */\nexports.getThemeVariant = getThemeVariant;\nvar pick = function pick(tree) {\n  return function (_ref) {\n    var theme = _ref.theme;\n    var themeCleaned = (0, _utils.addThemeDefaults)(theme === null || theme === void 0 ? void 0 : theme.splunkThemeV1);\n    return getThemeVariant(tree, themeCleaned);\n  };\n};\nvar _default = pick;\nexports[\"default\"] = _default;","map":{"version":3,"names":["Object","defineProperty","exports","value","isInterpolationResult","getThemeVariant","_utils","require","_typeof","o","Symbol","iterator","constructor","prototype","valueToKey","enterprise","prisma","light","dark","compact","comfortable","tree","Array","isArray","theme","treeKey","keys","shift","Error","themeKey","concat","themeCurrentValue","treeValue","pick","_ref","themeCleaned","addThemeDefaults","splunkThemeV1","_default"],"sources":["/Users/abarbas/Desktop/soar_web_forms/node_modules/@splunk/react-ui/node_modules/@splunk/themes/pick.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isInterpolationResult = isInterpolationResult;\nexports[\"default\"] = exports.getThemeVariant = void 0;\nvar _utils = require(\"./utils\");\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nvar valueToKey = {\n  enterprise: 'family',\n  prisma: 'family',\n  light: 'colorScheme',\n  dark: 'colorScheme',\n  compact: 'density',\n  comfortable: 'density'\n};\nfunction isInterpolationResult(tree) {\n  // for this to work as expected for objects/CSSProperties, it may be necessary to change\n  // it to only consider objects that have valid pick tree keys (but no other keys)\n  // as trees\n  return _typeof(tree) !== 'object' || Array.isArray(tree) || tree === null;\n}\n\n/**\n * This function is exported for use in pickVariant exclusively.\n */\nvar getThemeVariant = function getThemeVariant(tree, theme) {\n  // If it's not an object with one of the six keys, it must be an end value.\n  var treeKey = Object.keys(tree).shift();\n  if (!treeKey) {\n    throw new Error('A pick tree cannot be empty.');\n  }\n  var themeKey = valueToKey[treeKey];\n  if (!themeKey) {\n    throw new Error(\"Invalid pick tree key: \".concat(treeKey));\n  }\n\n  // Recursively crawl the tree.\n  var themeCurrentValue = theme[themeKey];\n  var treeValue = tree[themeCurrentValue];\n\n  // If it's not an object or it's a null value, it must be the end value.\n  if (isInterpolationResult(treeValue)) {\n    return treeValue; // this may be undefined, when the css does not support the theme\n  }\n  return getThemeVariant(treeValue, theme);\n};\n\n/**\n * Pick is used to create theme-specific css.\n *\n * This example selects an appropriate variable for the current theme.\n * ```\n * import { pick, variables } from '@splunk/themes';\n *\n * const Wrapper = styled.div`\n *      color: ${pick({\n *          enterprise: {\n *              light: variables.grey35,\n *              dark:  variables.grey92,\n *          },\n *          prisma: variables.contentColorDefault,\n *      })}\n * `;\n * ```\n * This example selects an appropriate block of css for the current theme.\n * ```\n *  const Label = styled.div`\n *      ${pick({\n *          enterprise: css`\n *              font-weight: ${variables.fontWeightSemiBold};\n *          `,\n *          prisma: css`\n *              color: ${variables.contentColorDefault),\n *          `,\n *      })}\n * `;\n * ```\n * @param {object} themeOptions - An object consisting of a tree of theme options (`enterprise|prisma`, `light|dark`, or `compact|comfortable`).\n * @returns {function} The returned function is called by `styled-components`, which provides the theme context.\n * @public\n */\nexports.getThemeVariant = getThemeVariant;\nvar pick = function pick(tree) {\n  return function (_ref) {\n    var theme = _ref.theme;\n    var themeCleaned = (0, _utils.addThemeDefaults)(theme === null || theme === void 0 ? void 0 : theme.splunkThemeV1);\n    return getThemeVariant(tree, themeCleaned);\n  };\n};\nvar _default = pick;\nexports[\"default\"] = _default;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}