{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _utils = require(\"./utils\");\n\n/**\n * The theme settings in `props.theme` are not considered an API to allow support for fallbacks\n * and forward compatibility in future versions of `SplunkThemeProvider`. Use this utility to\n * access `family`, `colorScheme`, and `density` from a component's props. This is useful\n * in limited migration scenarios. Use `withSplunkTheme` or `useSplunkTheme` instead.\n *\n * ```js\n * import getSettingsFromThemedProps from '@splunk/themes/getSettingsFromThemedProps';\n * ...\n * const { family, colorScheme } = getSettingsFromThemedProps(props);\n *\n * ```\n * @param {object} props - The themed props passed to a styled-component.\n * @returns {object} An object consisting of `{ family, colorScheme, density }`.\n * @public\n */\nfunction getSettingsFromThemedProps(props) {\n  var _props$theme;\n\n  // props.theme is sometimes null\n  var _ref = ((_props$theme = props.theme) === null || _props$theme === void 0 ? void 0 : _props$theme.splunkThemeV1) || {},\n    family = _ref.family,\n    colorScheme = _ref.colorScheme,\n    density = _ref.density;\n  return (0, _utils.addThemeDefaults)({\n    family: family,\n    colorScheme: colorScheme,\n    density: density\n  });\n}\nvar _default = getSettingsFromThemedProps;\nexports[\"default\"] = _default;","map":{"version":3,"names":["Object","defineProperty","exports","value","_utils","require","getSettingsFromThemedProps","props","_props$theme","_ref","theme","splunkThemeV1","family","colorScheme","density","addThemeDefaults","_default"],"sources":["C:/Users/abarbas/Desktop/soar_web_forms/node_modules/@splunk/themes/getSettingsFromThemedProps.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _utils = require(\"./utils\");\n\n/**\n * The theme settings in `props.theme` are not considered an API to allow support for fallbacks\n * and forward compatibility in future versions of `SplunkThemeProvider`. Use this utility to\n * access `family`, `colorScheme`, and `density` from a component's props. This is useful\n * in limited migration scenarios. Use `withSplunkTheme` or `useSplunkTheme` instead.\n *\n * ```js\n * import getSettingsFromThemedProps from '@splunk/themes/getSettingsFromThemedProps';\n * ...\n * const { family, colorScheme } = getSettingsFromThemedProps(props);\n *\n * ```\n * @param {object} props - The themed props passed to a styled-component.\n * @returns {object} An object consisting of `{ family, colorScheme, density }`.\n * @public\n */\nfunction getSettingsFromThemedProps(props) {\n  var _props$theme;\n\n  // props.theme is sometimes null\n  var _ref = ((_props$theme = props.theme) === null || _props$theme === void 0 ? void 0 : _props$theme.splunkThemeV1) || {},\n      family = _ref.family,\n      colorScheme = _ref.colorScheme,\n      density = _ref.density;\n\n  return (0, _utils.addThemeDefaults)({\n    family: family,\n    colorScheme: colorScheme,\n    density: density\n  });\n}\n\nvar _default = getSettingsFromThemedProps;\nexports[\"default\"] = _default;"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAAC,SAAS,CAAC,GAAG,KAAK,CAAC;AAE3B,IAAIE,MAAM,GAAGC,OAAO,CAAC,SAAS,CAAC;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,0BAA0BA,CAACC,KAAK,EAAE;EACzC,IAAIC,YAAY;;EAEhB;EACA,IAAIC,IAAI,GAAG,CAAC,CAACD,YAAY,GAAGD,KAAK,CAACG,KAAK,MAAM,IAAI,IAAIF,YAAY,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,YAAY,CAACG,aAAa,KAAK,CAAC,CAAC;IACrHC,MAAM,GAAGH,IAAI,CAACG,MAAM;IACpBC,WAAW,GAAGJ,IAAI,CAACI,WAAW;IAC9BC,OAAO,GAAGL,IAAI,CAACK,OAAO;EAE1B,OAAO,CAAC,CAAC,EAAEV,MAAM,CAACW,gBAAgB,EAAE;IAClCH,MAAM,EAAEA,MAAM;IACdC,WAAW,EAAEA,WAAW;IACxBC,OAAO,EAAEA;EACX,CAAC,CAAC;AACJ;AAEA,IAAIE,QAAQ,GAAGV,0BAA0B;AACzCJ,OAAO,CAAC,SAAS,CAAC,GAAGc,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}