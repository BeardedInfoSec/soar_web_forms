{"ast":null,"code":"var _jsxFileName = \"/Users/abarbas/Desktop/soar_web_forms/src/components/FormDisplay.js\",\n  _s = $RefreshSig$();\n// src/components/FormDisplay.js\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './FormDisplay.css';\n\n// Initial hardcoded authInfo\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet authInfo = {\n  token: '',\n  server: '',\n  sslVerification: true // Default to true; will be updated from the configuration\n};\nconst FormDisplay = () => {\n  _s();\n  const {\n    formName\n  } = useParams(); // Get form name from the URL\n  const [formData, setFormData] = useState(null);\n  const [formValues, setFormValues] = useState({}); // Store user input\n\n  // Function to fetch auth info from the configuration table\n  const fetchAuthInfo = async () => {\n    try {\n      const response = await fetch('http://localhost:5001/api/configuration'); // Call the API endpoint\n      if (!response.ok) {\n        throw new Error('Failed to fetch auth info');\n      }\n      const data = await response.json();\n      // Update authInfo with fetched values\n      authInfo = {\n        token: data.ph_auth_token,\n        server: data.server\n      };\n    } catch (error) {\n      console.error('Error fetching auth info:', error);\n    }\n  };\n  useEffect(() => {\n    fetchAuthInfo(); // Fetch auth info when the component mounts\n  }, []);\n  const parseXML = xmlString => {\n    var _xmlDoc$querySelector, _xmlDoc$querySelector2;\n    const parser = new DOMParser();\n    const xmlDoc = parser.parseFromString(xmlString, 'application/xml');\n    const name = ((_xmlDoc$querySelector = xmlDoc.querySelector('form > name')) === null || _xmlDoc$querySelector === void 0 ? void 0 : _xmlDoc$querySelector.textContent) || 'Unnamed Form';\n    const label = ((_xmlDoc$querySelector2 = xmlDoc.querySelector('form > label')) === null || _xmlDoc$querySelector2 === void 0 ? void 0 : _xmlDoc$querySelector2.textContent) || 'event_data';\n    const elements = Array.from(xmlDoc.querySelectorAll('elements > element')).map(el => {\n      var _el$querySelector, _el$querySelector2, _el$querySelector3, _el$querySelector4, _el$querySelector5, _el$querySelector6;\n      const optionsNode = el.querySelector('dropdownOptions');\n      const options = optionsNode ? Array.from(optionsNode.querySelectorAll('option')).map(opt => opt.textContent) : [];\n      return {\n        type: ((_el$querySelector = el.querySelector('type')) === null || _el$querySelector === void 0 ? void 0 : _el$querySelector.textContent) || 'text',\n        key: ((_el$querySelector2 = el.querySelector('key')) === null || _el$querySelector2 === void 0 ? void 0 : _el$querySelector2.textContent) || '',\n        label: ((_el$querySelector3 = el.querySelector('label')) === null || _el$querySelector3 === void 0 ? void 0 : _el$querySelector3.textContent) || '',\n        required: ((_el$querySelector4 = el.querySelector('required')) === null || _el$querySelector4 === void 0 ? void 0 : _el$querySelector4.textContent) === 'true',\n        placeholder: ((_el$querySelector5 = el.querySelector('placeholder')) === null || _el$querySelector5 === void 0 ? void 0 : _el$querySelector5.textContent) || '',\n        alignment: ((_el$querySelector6 = el.querySelector('alignment')) === null || _el$querySelector6 === void 0 ? void 0 : _el$querySelector6.textContent) || 'center',\n        options: options\n      };\n    });\n    return {\n      name,\n      label,\n      elements\n    };\n  };\n  useEffect(() => {\n    const fetchFormData = async () => {\n      try {\n        const response = await fetch(`http://localhost:5001/forms/${encodeURIComponent(formName)}`, {\n          headers: {\n            'Authorization': `Bearer ${authInfo.token}`,\n            // Use the updated token\n            'Content-Type': 'application/json'\n          }\n        });\n\n        // Log the response for debugging\n        const responseText = await response.text();\n\n        // Check if response is valid JSON\n        if (!response.ok) {\n          throw new Error('Form not found');\n        }\n        const data = JSON.parse(responseText); // Attempt parsing only if the response is correct\n        if (data.xml_data) {\n          const parsedData = parseXML(data.xml_data);\n          setFormData(parsedData);\n        } else {\n          console.error('No XML data found in the response');\n        }\n      } catch (error) {\n        console.error('Error fetching form data:', error);\n      }\n    };\n    fetchFormData();\n  }, [formName]);\n  const handleInputChange = (key, value) => {\n    setFormValues(prev => ({\n      ...prev,\n      [key]: value\n    }));\n  };\n  const handleFileChange = (key, file) => {\n    if (!file) return;\n    const reader = new FileReader();\n    reader.onload = e => {\n      setFormValues(prev => ({\n        ...prev,\n        [`file_${key}`]: e.target.result,\n        // base64 data URL\n        [`file_name_${key}`]: file.name,\n        [`file_size_${key}`]: file.size,\n        [`file_type_${key}`]: file.type,\n        [`file_lastmod_${key}`]: file.lastModified\n      }));\n    };\n    reader.readAsDataURL(file);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault(); // Prevent default form submission\n    try {\n      const containerResponse = await createContainer(formData.name, formData.label);\n      const containerId = containerResponse.id;\n      console.log('✅ Container created successfully:', containerResponse);\n\n      // Aggregate all non-file form values into one artifact\n      const aggregatedCEF = Object.keys(formValues).reduce((acc, key) => {\n        if (!key.startsWith('file_')) {\n          acc[key] = formValues[key];\n        }\n        return acc;\n      }, {});\n      if (Object.keys(aggregatedCEF).length > 0) {\n        const artifactResponse = await addArtifact(containerId, aggregatedCEF, `${formData.name} Artifact`);\n        console.log('✅ Artifact added successfully:', artifactResponse);\n      }\n\n      // Upload each individual file and add corresponding metadata artifact\n      // Upload each individual file and add corresponding metadata artifact\n      const uploadedFiles = Object.keys(formValues).filter(key => key.startsWith('file_') && !key.includes('file_name_') && !key.includes('file_size_') && !key.includes('file_type_') && !key.includes('file_lastmod_'));\n      for (const key of uploadedFiles) {\n        const baseKey = key.slice(5); // Remove 'file_' prefix\n        const fileData = formValues[`file_${baseKey}`];\n        const fileName = formValues[`file_name_${baseKey}`];\n        const fileType = formValues[`file_type_${baseKey}`];\n        const fileSize = formValues[`file_size_${baseKey}`];\n        const fileSizeInKB = (fileSize / 1024).toFixed(2);\n        const fileSizeFormatted = fileSizeInKB > 1024 ? `${(fileSizeInKB / 1024).toFixed(2)} MB` : `${fileSizeInKB} KB`;\n        if (fileData && fileName) {\n          const fileResponse = await uploadFileToVault(containerId, fileData, fileName);\n          console.log('✅ File uploaded successfully:', fileResponse);\n          const fileArtifactData = {\n            hash: fileResponse.hash,\n            filename: fileName,\n            filetype: fileType,\n            filesize: fileSizeFormatted\n          };\n          const fileArtifactResponse = await addArtifact(containerId, fileArtifactData, `${fileName} Metadata Artifact`);\n          console.log('✅ File metadata artifact added:', fileArtifactResponse);\n        } else {\n          console.warn(`⚠️ Skipping file ${fileName} due to missing data`);\n        }\n      }\n      alert('✅ Form submitted and data sent to Splunk SOAR successfully!');\n    } catch (error) {\n      console.error('❌ Error submitting form:', error);\n      alert('❌ Failed to submit form data to Splunk SOAR.');\n    }\n  };\n  const createContainer = async (name, label) => {\n    const response = await fetch('http://localhost:3001/proxy/rest/container', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name,\n        label,\n        description: `${name} container created via API`\n      })\n    });\n    if (!response.ok) {\n      const errorText = await response.text();\n      console.error('Failed to create container:', errorText);\n      throw new Error('Failed to create container');\n    }\n    return response.json();\n  };\n  const addArtifact = async (containerId, cefData, artifactName) => {\n    const response = await fetch('http://localhost:3001/proxy/rest/artifact', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        container_id: containerId,\n        cef: cefData,\n        name: artifactName,\n        label: 'event_data',\n        description: 'Artifact created via API with aggregated form data'\n      })\n    });\n    const rawText = await response.text(); // Read raw first\n\n    if (!response.ok) {\n      console.error('❌ Artifact response not ok:', rawText);\n      throw new Error(`Failed to add artifact: ${response.status}`);\n    }\n    try {\n      const data = JSON.parse(rawText);\n      return data;\n    } catch (err) {\n      console.error('❌ Failed to parse artifact JSON:', rawText);\n      throw new Error('Invalid JSON in artifact response');\n    }\n  };\n  const uploadFileToVault = async (containerId, fileData, fileName) => {\n    const response = await fetch('http://localhost:3001/proxy/rest/container_attachment', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        container_id: containerId,\n        file_content: fileData.split(',')[1],\n        // Remove the base64 prefix\n        file_name: fileName\n      })\n    });\n    const rawText = await response.text(); // Get raw response for debugging\n\n    if (!response.ok) {\n      console.error('❌ Vault upload failed. Raw response:', rawText);\n      throw new Error(`Failed to upload the file to the vault: ${response.status}`);\n    }\n    try {\n      const data = JSON.parse(rawText);\n      return data;\n    } catch (err) {\n      console.error('❌ Failed to parse vault upload JSON:', rawText);\n      throw new Error('Invalid JSON in vault upload response');\n    }\n  };\n  if (!formData) {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Form not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 16\n    }, this);\n  }\n  const renderElement = (element, index) => {\n    switch (element.type) {\n      case 'boolean':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          style: {\n            textAlign: element.alignment,\n            marginBottom: '15px'\n          },\n          children: [element.label && /*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              display: 'block',\n              marginBottom: '5px',\n              fontWeight: 'bold',\n              color: '#ffffff',\n              textAlign: element.alignment\n            },\n            children: element.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            required: element.required,\n            onChange: e => handleInputChange(element.key, e.target.value),\n            style: {\n              padding: '10px',\n              borderRadius: '6px',\n              width: '100%',\n              maxWidth: '400px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select an option\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"true\",\n              children: \"True\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"false\",\n              children: \"False\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 25\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 21\n        }, this);\n      case 'dateTime':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          style: {\n            textAlign: element.alignment,\n            marginBottom: '15px'\n          },\n          children: [element.label && /*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              display: 'block',\n              marginBottom: '5px',\n              fontWeight: 'bold',\n              color: '#ffffff',\n              textAlign: element.alignment\n            },\n            children: element.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            placeholder: element.placeholder,\n            required: element.required,\n            onChange: e => handleInputChange(element.key, e.target.value),\n            style: {\n              padding: '10px',\n              borderRadius: '6px',\n              width: '100%',\n              maxWidth: '400px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 25\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 21\n        }, this);\n      case 'number':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          style: {\n            textAlign: element.alignment,\n            marginBottom: '15px'\n          },\n          children: [element.label && /*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              display: 'block',\n              marginBottom: '5px',\n              fontWeight: 'bold',\n              color: '#ffffff',\n              textAlign: element.alignment\n            },\n            children: element.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: element.placeholder,\n            required: element.required,\n            onChange: e => handleInputChange(element.key, e.target.value),\n            style: {\n              padding: '10px',\n              borderRadius: '6px',\n              width: '100%',\n              maxWidth: '400px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 25\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 21\n        }, this);\n      case 'dropdown':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          style: {\n            textAlign: element.alignment,\n            marginBottom: '15px'\n          },\n          children: [element.label && /*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              display: 'block',\n              marginBottom: '5px',\n              fontWeight: 'bold',\n              color: '#ffffff',\n              textAlign: element.alignment\n            },\n            children: element.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            required: element.required,\n            onChange: e => handleInputChange(element.key, e.target.value),\n            style: {\n              padding: '10px',\n              borderRadius: '6px',\n              width: '100%',\n              maxWidth: '400px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select an option\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 29\n            }, this), element.options.map((option, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option,\n              children: option\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 25\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 21\n        }, this);\n      case 'divider':\n        return /*#__PURE__*/_jsxDEV(\"hr\", {\n          className: \"form-divider\",\n          style: {\n            width: '100%',\n            borderTop: '1px solid #444',\n            margin: '20px 0'\n          }\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 21\n        }, this);\n      case 'button':\n        if (element.key === 'Submit') {\n          return null; // Do not render this button here, as we will use the form's submit button instead\n        }\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          style: {\n            textAlign: element.alignment,\n            marginBottom: '15px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => alert(`${element.label} button clicked!`),\n            style: {\n              padding: '10px 20px',\n              borderRadius: '6px',\n              backgroundColor: '#007bff',\n              color: 'white',\n              border: 'none',\n              cursor: 'pointer'\n            },\n            children: element.label || 'Button'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 25\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 21\n        }, this);\n      case 'text':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          style: {\n            textAlign: element.alignment,\n            marginBottom: '15px'\n          },\n          children: element.label && /*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              display: 'block',\n              marginBottom: '5px',\n              fontWeight: 'bold',\n              color: '#ffffff',\n              textAlign: element.alignment\n            },\n            children: element.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 29\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 21\n        }, this);\n      case 'heading':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          style: {\n            textAlign: element.alignment,\n            marginBottom: '15px'\n          },\n          children: element.label && /*#__PURE__*/_jsxDEV(\"h1\", {\n            style: {\n              marginBottom: '5px',\n              fontWeight: 'bold',\n              color: '#ffffff',\n              textAlign: element.alignment\n            },\n            children: element.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 29\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 426,\n          columnNumber: 21\n        }, this);\n      case 'file':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          style: {\n            textAlign: element.alignment,\n            marginBottom: '15px'\n          },\n          children: [element.label && /*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              display: 'block',\n              marginBottom: '5px',\n              fontWeight: 'bold',\n              color: '#ffffff',\n              textAlign: element.alignment\n            },\n            children: element.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            required: element.required,\n            onChange: e => handleFileChange(element.key, e.target.files[0]),\n            style: {\n              padding: '10px',\n              borderRadius: '6px',\n              width: '100%',\n              maxWidth: '400px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 25\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 21\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          style: {\n            textAlign: element.alignment,\n            marginBottom: '15px'\n          },\n          children: [element.label && /*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              display: 'block',\n              marginBottom: '5px',\n              fontWeight: 'bold',\n              color: '#ffffff',\n              textAlign: element.alignment\n            },\n            children: element.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: element.type,\n            placeholder: element.placeholder,\n            required: element.required,\n            onChange: e => handleInputChange(element.key, e.target.value),\n            style: {\n              padding: '10px',\n              borderRadius: '6px',\n              width: '100%',\n              maxWidth: '400px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 25\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 467,\n          columnNumber: 21\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: formData.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      style: {\n        maxHeight: '80vh',\n        overflowY: 'auto'\n      },\n      children: [formData.elements.map((element, index) => renderElement(element, index)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        style: {\n          textAlign: 'center',\n          marginTop: '20px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          id: \"submit-button\",\n          style: {\n            padding: '10px 20px',\n            borderRadius: '6px',\n            backgroundColor: '#007bff',\n            color: 'white',\n            border: 'none',\n            cursor: 'pointer',\n            textAlign: (formData === null || formData === void 0 ? void 0 : formData.alignment) || 'center'\n          },\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 494,\n    columnNumber: 9\n  }, this);\n};\n_s(FormDisplay, \"m9poyCwNxMERiw1Pt9xRgVGCfzk=\", false, function () {\n  return [useParams];\n});\n_c = FormDisplay;\nexport default FormDisplay;\nvar _c;\n$RefreshReg$(_c, \"FormDisplay\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","authInfo","token","server","sslVerification","FormDisplay","_s","formName","formData","setFormData","formValues","setFormValues","fetchAuthInfo","response","fetch","ok","Error","data","json","ph_auth_token","error","console","parseXML","xmlString","_xmlDoc$querySelector","_xmlDoc$querySelector2","parser","DOMParser","xmlDoc","parseFromString","name","querySelector","textContent","label","elements","Array","from","querySelectorAll","map","el","_el$querySelector","_el$querySelector2","_el$querySelector3","_el$querySelector4","_el$querySelector5","_el$querySelector6","optionsNode","options","opt","type","key","required","placeholder","alignment","fetchFormData","encodeURIComponent","headers","responseText","text","JSON","parse","xml_data","parsedData","handleInputChange","value","prev","handleFileChange","file","reader","FileReader","onload","e","target","result","size","lastModified","readAsDataURL","handleSubmit","event","preventDefault","containerResponse","createContainer","containerId","id","log","aggregatedCEF","Object","keys","reduce","acc","startsWith","length","artifactResponse","addArtifact","uploadedFiles","filter","includes","baseKey","slice","fileData","fileName","fileType","fileSize","fileSizeInKB","toFixed","fileSizeFormatted","fileResponse","uploadFileToVault","fileArtifactData","hash","filename","filetype","filesize","fileArtifactResponse","warn","alert","method","body","stringify","description","errorText","cefData","artifactName","container_id","cef","rawText","status","err","file_content","split","file_name","children","_jsxFileName","lineNumber","columnNumber","renderElement","element","index","className","style","textAlign","marginBottom","display","fontWeight","color","onChange","padding","borderRadius","width","maxWidth","option","idx","borderTop","margin","onClick","backgroundColor","border","cursor","files","onSubmit","maxHeight","overflowY","marginTop","_c","$RefreshReg$"],"sources":["/Users/abarbas/Desktop/soar_web_forms/src/components/FormDisplay.js"],"sourcesContent":["// src/components/FormDisplay.js\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './FormDisplay.css';\n\n// Initial hardcoded authInfo\nlet authInfo = {\n    token: '',\n    server: '',\n    sslVerification: true, // Default to true; will be updated from the configuration\n};\n\n\nconst FormDisplay = () => {\n    const { formName } = useParams(); // Get form name from the URL\n    const [formData, setFormData] = useState(null);\n    const [formValues, setFormValues] = useState({}); // Store user input\n\n    // Function to fetch auth info from the configuration table\n    const fetchAuthInfo = async () => {\n        try {\n            const response = await fetch('http://localhost:5001/api/configuration'); // Call the API endpoint\n            if (!response.ok) {\n                throw new Error('Failed to fetch auth info');\n            }\n            const data = await response.json();\n            // Update authInfo with fetched values\n            authInfo = {\n                token: data.ph_auth_token,\n                server: data.server,\n            };\n        } catch (error) {\n            console.error('Error fetching auth info:', error);\n        }\n    };\n\n    useEffect(() => {\n        fetchAuthInfo(); // Fetch auth info when the component mounts\n    }, []);\n\n    const parseXML = (xmlString) => {\n        const parser = new DOMParser();\n        const xmlDoc = parser.parseFromString(xmlString, 'application/xml');\n        const name = xmlDoc.querySelector('form > name')?.textContent || 'Unnamed Form';\n        const label = xmlDoc.querySelector('form > label')?.textContent || 'event_data';\n\n        const elements = Array.from(xmlDoc.querySelectorAll('elements > element')).map((el) => {\n            const optionsNode = el.querySelector('dropdownOptions');\n            const options = optionsNode ? Array.from(optionsNode.querySelectorAll('option')).map(opt => opt.textContent) : [];\n\n            return {\n                type: el.querySelector('type')?.textContent || 'text',\n                key: el.querySelector('key')?.textContent || '',\n                label: el.querySelector('label')?.textContent || '',\n                required: el.querySelector('required')?.textContent === 'true',\n                placeholder: el.querySelector('placeholder')?.textContent || '',\n                alignment: el.querySelector('alignment')?.textContent || 'center',\n                options: options\n            };\n        });\n\n        return { name, label, elements };\n    };\n\n    useEffect(() => {\n        const fetchFormData = async () => {\n            try {\n                const response = await fetch(`http://localhost:5001/forms/${encodeURIComponent(formName)}`, {\n                    headers: {\n                        'Authorization': `Bearer ${authInfo.token}`, // Use the updated token\n                        'Content-Type': 'application/json',\n                    },\n                });\n\n                // Log the response for debugging\n                const responseText = await response.text();\n\n                // Check if response is valid JSON\n                if (!response.ok) {\n                    throw new Error('Form not found');\n                }\n\n                const data = JSON.parse(responseText); // Attempt parsing only if the response is correct\n                if (data.xml_data) {\n                    const parsedData = parseXML(data.xml_data);\n                    setFormData(parsedData);\n                } else {\n                    console.error('No XML data found in the response');\n                }\n            } catch (error) {\n                console.error('Error fetching form data:', error);\n            }\n        };\n\n        fetchFormData();\n    }, [formName]);\n\n    const handleInputChange = (key, value) => {\n        setFormValues((prev) => ({ ...prev, [key]: value }));\n    };\n\n    const handleFileChange = (key, file) => {\n      if (!file) return;\n\n      const reader = new FileReader();\n      reader.onload = (e) => {\n        setFormValues(prev => ({\n          ...prev,\n          [`file_${key}`]: e.target.result, // base64 data URL\n          [`file_name_${key}`]: file.name,\n          [`file_size_${key}`]: file.size,\n          [`file_type_${key}`]: file.type,\n          [`file_lastmod_${key}`]: file.lastModified\n        }));\n      };\n      reader.readAsDataURL(file);\n    };\n\n\nconst handleSubmit = async (event) => {\n  event.preventDefault(); // Prevent default form submission\n  try {\n    const containerResponse = await createContainer(formData.name, formData.label);\n    const containerId = containerResponse.id;\n    console.log('✅ Container created successfully:', containerResponse);\n\n    // Aggregate all non-file form values into one artifact\n    const aggregatedCEF = Object.keys(formValues).reduce((acc, key) => {\n      if (!key.startsWith('file_')) {\n        acc[key] = formValues[key];\n      }\n      return acc;\n    }, {});\n\n    if (Object.keys(aggregatedCEF).length > 0) {\n      const artifactResponse = await addArtifact(containerId, aggregatedCEF, `${formData.name} Artifact`);\n      console.log('✅ Artifact added successfully:', artifactResponse);\n    }\n\n    // Upload each individual file and add corresponding metadata artifact\n// Upload each individual file and add corresponding metadata artifact\nconst uploadedFiles = Object.keys(formValues)\n  .filter(key => key.startsWith('file_') && \n    !key.includes('file_name_') && \n    !key.includes('file_size_') && \n    !key.includes('file_type_') && \n    !key.includes('file_lastmod_'));\n\nfor (const key of uploadedFiles) {\n  const baseKey = key.slice(5); // Remove 'file_' prefix\n  const fileData = formValues[`file_${baseKey}`];\n  const fileName = formValues[`file_name_${baseKey}`];\n  const fileType = formValues[`file_type_${baseKey}`];\n  const fileSize = formValues[`file_size_${baseKey}`];\n\n  const fileSizeInKB = (fileSize / 1024).toFixed(2);\n  const fileSizeFormatted = fileSizeInKB > 1024\n    ? `${(fileSizeInKB / 1024).toFixed(2)} MB`\n    : `${fileSizeInKB} KB`;\n\n  if (fileData && fileName) {\n    const fileResponse = await uploadFileToVault(containerId, fileData, fileName);\n    console.log('✅ File uploaded successfully:', fileResponse);\n\n    const fileArtifactData = {\n      hash: fileResponse.hash,\n      filename: fileName,\n      filetype: fileType,\n      filesize: fileSizeFormatted,\n    };\n\n    const fileArtifactResponse = await addArtifact(containerId, fileArtifactData, `${fileName} Metadata Artifact`);\n    console.log('✅ File metadata artifact added:', fileArtifactResponse);\n  } else {\n    console.warn(`⚠️ Skipping file ${fileName} due to missing data`);\n  }\n}\n\n\n    alert('✅ Form submitted and data sent to Splunk SOAR successfully!');\n  } catch (error) {\n    console.error('❌ Error submitting form:', error);\n    alert('❌ Failed to submit form data to Splunk SOAR.');\n  }\n};\n\n\n    const createContainer = async (name, label) => {\n        const response = await fetch('http://localhost:3001/proxy/rest/container', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                name,\n                label,\n                description: `${name} container created via API`,\n            }),\n        });\n        if (!response.ok) {\n            const errorText = await response.text();\n            console.error('Failed to create container:', errorText);\n            throw new Error('Failed to create container');\n        }\n        return response.json();\n    };\n    \n    const addArtifact = async (containerId, cefData, artifactName) => {\n        const response = await fetch('http://localhost:3001/proxy/rest/artifact', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                container_id: containerId,\n                cef: cefData,\n                name: artifactName,\n                label: 'event_data',\n                description: 'Artifact created via API with aggregated form data',\n            }),\n        });\n\n        const rawText = await response.text(); // Read raw first\n\n        if (!response.ok) {\n            console.error('❌ Artifact response not ok:', rawText);\n            throw new Error(`Failed to add artifact: ${response.status}`);\n        }\n\n        try {\n            const data = JSON.parse(rawText);\n            return data;\n        } catch (err) {\n            console.error('❌ Failed to parse artifact JSON:', rawText);\n            throw new Error('Invalid JSON in artifact response');\n        }\n    };\n\n\n    const uploadFileToVault = async (containerId, fileData, fileName) => {\n        const response = await fetch('http://localhost:3001/proxy/rest/container_attachment', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                container_id: containerId,\n                file_content: fileData.split(',')[1], // Remove the base64 prefix\n                file_name: fileName,\n            }),\n        });\n\n        const rawText = await response.text(); // Get raw response for debugging\n\n        if (!response.ok) {\n            console.error('❌ Vault upload failed. Raw response:', rawText);\n            throw new Error(`Failed to upload the file to the vault: ${response.status}`);\n        }\n\n        try {\n            const data = JSON.parse(rawText);\n            return data;\n        } catch (err) {\n            console.error('❌ Failed to parse vault upload JSON:', rawText);\n            throw new Error('Invalid JSON in vault upload response');\n        }\n    };\n\n    if (!formData) {\n        return <h2>Form not found</h2>;\n    }\n\n    const renderElement = (element, index) => {\n        switch (element.type) {\n            case 'boolean':\n                return (\n                    <div key={index} className=\"form-group\" style={{ textAlign: element.alignment, marginBottom: '15px' }}>\n                        {element.label && (\n                            <label\n                                style={{\n                                    display: 'block',\n                                    marginBottom: '5px',\n                                    fontWeight: 'bold',\n                                    color: '#ffffff',\n                                    textAlign: element.alignment,\n                                }}\n                            >\n                                {element.label}\n                            </label>\n                        )}\n                        <select\n                            required={element.required}\n                            onChange={(e) => handleInputChange(element.key, e.target.value)}\n                            style={{ padding: '10px', borderRadius: '6px', width: '100%', maxWidth: '400px' }}\n                        >\n                            <option value=\"\">Select an option</option>\n                            <option value=\"true\">True</option>\n                            <option value=\"false\">False</option>\n                        </select>\n                    </div>\n                );\n            case 'dateTime':\n                return (\n                    <div key={index} className=\"form-group\" style={{ textAlign: element.alignment, marginBottom: '15px' }}>\n                        {element.label && (\n                            <label\n                                style={{\n                                    display: 'block',\n                                    marginBottom: '5px',\n                                    fontWeight: 'bold',\n                                    color: '#ffffff',\n                                    textAlign: element.alignment,\n                                }}\n                            >\n                                {element.label}\n                            </label>\n                        )}\n                        <input\n                            type=\"date\"\n                            placeholder={element.placeholder}\n                            required={element.required}\n                            onChange={(e) => handleInputChange(element.key, e.target.value)}\n                            style={{ padding: '10px', borderRadius: '6px', width: '100%', maxWidth: '400px' }}\n                        />\n                    </div>\n                );\n            case 'number':\n                return (\n                    <div key={index} className=\"form-group\" style={{ textAlign: element.alignment, marginBottom: '15px' }}>\n                        {element.label && (\n                            <label\n                                style={{\n                                    display: 'block',\n                                    marginBottom: '5px',\n                                    fontWeight: 'bold',\n                                    color: '#ffffff',\n                                    textAlign: element.alignment,\n                                }}\n                            >\n                                {element.label}\n                            </label>\n                        )}\n                        <input\n                            type=\"number\"\n                            placeholder={element.placeholder}\n                            required={element.required}\n                            onChange={(e) => handleInputChange(element.key, e.target.value)}\n                            style={{ padding: '10px', borderRadius: '6px', width: '100%', maxWidth: '400px' }}\n                        />\n                    </div>\n                );\n            case 'dropdown':\n                return (\n                    <div key={index} className=\"form-group\" style={{ textAlign: element.alignment, marginBottom: '15px' }}>\n                        {element.label && (\n                            <label\n                                style={{\n                                    display: 'block',\n                                    marginBottom: '5px',\n                                    fontWeight: 'bold',\n                                    color: '#ffffff',\n                                    textAlign: element.alignment,\n                                }}\n                            >\n                                {element.label}\n                            </label>\n                        )}\n                        <select\n                            required={element.required}\n                            onChange={(e) => handleInputChange(element.key, e.target.value)}\n                            style={{ padding: '10px', borderRadius: '6px', width: '100%', maxWidth: '400px' }}\n                        >\n                            <option value=\"\">Select an option</option>\n                            {element.options.map((option, idx) => (\n                                <option key={idx} value={option}>{option}</option>\n                            ))}\n                        </select>\n                    </div>\n                );\n            case 'divider':\n                return (\n                    <hr key={index} className=\"form-divider\" style={{ width: '100%', borderTop: '1px solid #444', margin: '20px 0' }} />\n                );\n            case 'button':\n                if (element.key === 'Submit') {\n                    return null; // Do not render this button here, as we will use the form's submit button instead\n                }\n                return (\n                    <div key={index} className=\"form-group\" style={{ textAlign: element.alignment, marginBottom: '15px' }}>\n                        <button\n                            type=\"button\"\n                            onClick={() => alert(`${element.label} button clicked!`)}\n                            style={{\n                                padding: '10px 20px',\n                                borderRadius: '6px',\n                                backgroundColor: '#007bff',\n                                color: 'white',\n                                border: 'none',\n                                cursor: 'pointer',\n                            }}\n                        >\n                            {element.label || 'Button'}\n                        </button>\n                    </div>\n                );\n            case 'text':\n                return (\n                    <div key={index} className=\"form-group\" style={{ textAlign: element.alignment, marginBottom: '15px' }}>\n                        {element.label && (\n                            <label\n                                style={{\n                                    display: 'block',\n                                    marginBottom: '5px',\n                                    fontWeight: 'bold',\n                                    color: '#ffffff',\n                                    textAlign: element.alignment,\n                                }}\n                            >\n                                {element.label}\n                            </label>\n                        )}\n                    </div>\n                );\n            case 'heading':\n                return (\n                    <div key={index} className=\"form-group\" style={{ textAlign: element.alignment, marginBottom: '15px' }}>\n                        {element.label && (\n                            <h1\n                                style={{\n                                    marginBottom: '5px',\n                                    fontWeight: 'bold',\n                                    color: '#ffffff',\n                                    textAlign: element.alignment,\n                                }}\n                            >\n                                {element.label}\n                            </h1>\n                        )}\n                    </div>\n                );\n            case 'file':\n                return (\n                    <div key={index} className=\"form-group\" style={{ textAlign: element.alignment, marginBottom: '15px' }}>\n                        {element.label && (\n                            <label\n                                style={{\n                                    display: 'block',\n                                    marginBottom: '5px',\n                                    fontWeight: 'bold',\n                                    color: '#ffffff',\n                                    textAlign: element.alignment,\n                                }}\n                            >\n                                {element.label}\n                            </label>\n                        )}\n                        <input\n                            type=\"file\"\n                            required={element.required}\n                            onChange={(e) => handleFileChange(element.key, e.target.files[0])}\n                            style={{ padding: '10px', borderRadius: '6px', width: '100%', maxWidth: '400px' }}\n                        />\n                    </div>\n                );\n            default:\n                return (\n                    <div key={index} className=\"form-group\" style={{ textAlign: element.alignment, marginBottom: '15px' }}>\n                        {element.label && (\n                            <label\n                                style={{\n                                    display: 'block',\n                                    marginBottom: '5px',\n                                    fontWeight: 'bold',\n                                    color: '#ffffff',\n                                    textAlign: element.alignment,\n                                }}\n                            >\n                                {element.label}\n                            </label>\n                        )}\n                        <input\n                            type={element.type}\n                            placeholder={element.placeholder}\n                            required={element.required}\n                            onChange={(e) => handleInputChange(element.key, e.target.value)}\n                            style={{ padding: '10px', borderRadius: '6px', width: '100%', maxWidth: '400px' }}\n                        />\n                    </div>\n                );\n        }\n    };\n\n    return (\n        <div className=\"form-container\">\n            <h2>{formData.name}</h2>\n            <form onSubmit={handleSubmit} style={{ maxHeight: '80vh', overflowY: 'auto' }}>\n                {formData.elements.map((element, index) => renderElement(element, index))}\n                <div className=\"form-group\" style={{ textAlign: 'center', marginTop: '20px' }}>\n                    <button\n                        type=\"submit\"\n                        id=\"submit-button\"\n                        style={{\n                            padding: '10px 20px',\n                            borderRadius: '6px',\n                            backgroundColor: '#007bff',\n                            color: 'white',\n                            border: 'none',\n                            cursor: 'pointer',\n                            textAlign: formData?.alignment || 'center',\n                        }}\n                    >\n                        Submit\n                    </button>\n                </div>\n            </form>\n        </div>\n    );\n};\n\nexport default FormDisplay;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}