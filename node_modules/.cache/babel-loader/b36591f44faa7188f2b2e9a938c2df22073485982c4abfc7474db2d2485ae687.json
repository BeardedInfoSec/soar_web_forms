{"ast":null,"code":"var _jsxFileName = \"/Users/abarbas/Desktop/soar_web_forms/src/components/FormDisplay.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet authInfo = {\n  token: '',\n  server: ''\n};\nconst FormDisplay = () => {\n  _s();\n  const [status, setStatus] = useState('Idle');\n  const fetchAuthInfo = async () => {\n    try {\n      const response = await fetch('/proxy/api/configuration');\n      if (!response.ok) throw new Error('Failed to fetch config');\n      const data = await response.json();\n      authInfo = {\n        token: data.ph_auth_token,\n        server: '/proxy' // ✅ Force all SOAR calls through proxy\n      };\n      console.log('✅ Loaded auth info:', authInfo);\n    } catch (err) {\n      console.error('❌ Auth fetch failed:', err);\n      setStatus('Failed to load auth info');\n    }\n  };\n  const createContainer = async () => {\n    setStatus('Creating container...');\n    try {\n      const response = await fetch(`${authInfo.server}/rest/container`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'ph-auth-token': authInfo.token\n        },\n        body: JSON.stringify({\n          name: 'Test Container from UI',\n          label: 'event_data',\n          description: 'This container was created from the UI via proxy.'\n        })\n      });\n      const text = await response.text();\n      if (!response.ok) {\n        throw new Error(`Failed to create container: ${response.status} ${text}`);\n      }\n      const data = JSON.parse(text);\n      console.log('✅ Container created:', data);\n      setStatus(`Container created (ID: ${data.id})`);\n    } catch (err) {\n      console.error('❌ createContainer failed:', err);\n      setStatus('Container creation failed');\n    }\n  };\n  useEffect(() => {\n    fetchAuthInfo();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '2rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Test Container Creation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: createContainer,\n      children: \"Create Container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Status: \", status]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(FormDisplay, \"UG3jR2B2yxV1rv5Gk6xkSwOfFqI=\");\n_c = FormDisplay;\nexport default FormDisplay;\nvar _c;\n$RefreshReg$(_c, \"FormDisplay\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","authInfo","token","server","FormDisplay","_s","status","setStatus","fetchAuthInfo","response","fetch","ok","Error","data","json","ph_auth_token","console","log","err","error","createContainer","method","headers","body","JSON","stringify","name","label","description","text","parse","id","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/abarbas/Desktop/soar_web_forms/src/components/FormDisplay.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nlet authInfo = {\n  token: '',\n  server: '',\n};\n\nconst FormDisplay = () => {\n  const [status, setStatus] = useState('Idle');\n\n  const fetchAuthInfo = async () => {\n    try {\n      const response = await fetch('/proxy/api/configuration');\n      if (!response.ok) throw new Error('Failed to fetch config');\n      const data = await response.json();\n\n      authInfo = {\n        token: data.ph_auth_token,\n        server: '/proxy', // ✅ Force all SOAR calls through proxy\n      };\n\n      console.log('✅ Loaded auth info:', authInfo);\n    } catch (err) {\n      console.error('❌ Auth fetch failed:', err);\n      setStatus('Failed to load auth info');\n    }\n  };\n\n  const createContainer = async () => {\n    setStatus('Creating container...');\n    try {\n      const response = await fetch(`${authInfo.server}/rest/container`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'ph-auth-token': authInfo.token,\n        },\n        body: JSON.stringify({\n          name: 'Test Container from UI',\n          label: 'event_data',\n          description: 'This container was created from the UI via proxy.',\n        }),\n      });\n\n      const text = await response.text();\n      if (!response.ok) {\n        throw new Error(`Failed to create container: ${response.status} ${text}`);\n      }\n\n      const data = JSON.parse(text);\n      console.log('✅ Container created:', data);\n      setStatus(`Container created (ID: ${data.id})`);\n    } catch (err) {\n      console.error('❌ createContainer failed:', err);\n      setStatus('Container creation failed');\n    }\n  };\n\n  useEffect(() => {\n    fetchAuthInfo();\n  }, []);\n\n  return (\n    <div style={{ padding: '2rem' }}>\n      <h2>Test Container Creation</h2>\n      <button onClick={createContainer}>Create Container</button>\n      <p>Status: {status}</p>\n    </div>\n  );\n};\n\nexport default FormDisplay;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,IAAIC,QAAQ,GAAG;EACbC,KAAK,EAAE,EAAE;EACTC,MAAM,EAAE;AACV,CAAC;AAED,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,MAAM,CAAC;EAE5C,MAAMU,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,0BAA0B,CAAC;MACxD,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,wBAAwB,CAAC;MAC3D,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAElCb,QAAQ,GAAG;QACTC,KAAK,EAAEW,IAAI,CAACE,aAAa;QACzBZ,MAAM,EAAE,QAAQ,CAAE;MACpB,CAAC;MAEDa,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEhB,QAAQ,CAAC;IAC9C,CAAC,CAAC,OAAOiB,GAAG,EAAE;MACZF,OAAO,CAACG,KAAK,CAAC,sBAAsB,EAAED,GAAG,CAAC;MAC1CX,SAAS,CAAC,0BAA0B,CAAC;IACvC;EACF,CAAC;EAED,MAAMa,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClCb,SAAS,CAAC,uBAAuB,CAAC;IAClC,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGT,QAAQ,CAACE,MAAM,iBAAiB,EAAE;QAChEkB,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAErB,QAAQ,CAACC;QAC5B,CAAC;QACDqB,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBC,IAAI,EAAE,wBAAwB;UAC9BC,KAAK,EAAE,YAAY;UACnBC,WAAW,EAAE;QACf,CAAC;MACH,CAAC,CAAC;MAEF,MAAMC,IAAI,GAAG,MAAMpB,QAAQ,CAACoB,IAAI,CAAC,CAAC;MAClC,IAAI,CAACpB,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,+BAA+BH,QAAQ,CAACH,MAAM,IAAIuB,IAAI,EAAE,CAAC;MAC3E;MAEA,MAAMhB,IAAI,GAAGW,IAAI,CAACM,KAAK,CAACD,IAAI,CAAC;MAC7Bb,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEJ,IAAI,CAAC;MACzCN,SAAS,CAAC,0BAA0BM,IAAI,CAACkB,EAAE,GAAG,CAAC;IACjD,CAAC,CAAC,OAAOb,GAAG,EAAE;MACZF,OAAO,CAACG,KAAK,CAAC,2BAA2B,EAAED,GAAG,CAAC;MAC/CX,SAAS,CAAC,2BAA2B,CAAC;IACxC;EACF,CAAC;EAEDV,SAAS,CAAC,MAAM;IACdW,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACER,OAAA;IAAKgC,KAAK,EAAE;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC9BlC,OAAA;MAAAkC,QAAA,EAAI;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChCtC,OAAA;MAAQuC,OAAO,EAAEnB,eAAgB;MAAAc,QAAA,EAAC;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC3DtC,OAAA;MAAAkC,QAAA,GAAG,UAAQ,EAAC5B,MAAM;IAAA;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpB,CAAC;AAEV,CAAC;AAACjC,EAAA,CA9DID,WAAW;AAAAoC,EAAA,GAAXpC,WAAW;AAgEjB,eAAeA,WAAW;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}