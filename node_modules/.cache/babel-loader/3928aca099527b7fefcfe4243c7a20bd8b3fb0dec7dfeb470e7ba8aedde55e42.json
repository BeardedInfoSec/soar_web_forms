{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abarbas\\\\Desktop\\\\soar_web_forms\\\\src\\\\components\\\\FormBuilder.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { DndContext, DragOverlay, closestCenter } from '@dnd-kit/core';\nimport { arrayMove, SortableContext, useSortable, rectSortingStrategy } from '@dnd-kit/sortable';\nimport Papa from 'papaparse';\nimport './FormBuilder.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ELEMENT_TYPES = [{\n  id: 'heading',\n  label: 'Heading'\n}, {\n  id: 'text',\n  label: 'Text'\n}, {\n  id: 'divider',\n  label: 'Divider'\n},\n//{ id: 'button', label: 'Button' },\n//{ id: 'image', label: 'Image' },\n{\n  id: 'table',\n  label: 'Table'\n}];\nconst INPUT_FIELDS = [{\n  id: 'inputText',\n  label: 'Input Text',\n  type: 'text'\n}, {\n  id: 'email',\n  label: 'Email',\n  type: 'email'\n},\n//{ id: 'password', label: 'Password', type: 'password' }, \n{\n  id: 'dateTime',\n  label: 'Date or Time',\n  type: 'datetime-local'\n}, {\n  id: 'dropdown',\n  label: 'Dropdown',\n  type: 'dropdown'\n}, {\n  id: 'boolean',\n  label: 'Boolean',\n  type: 'dropdown'\n}, {\n  id: 'number',\n  label: 'Number',\n  type: 'number'\n}, {\n  id: 'file',\n  label: 'File Upload',\n  type: 'file'\n}];\nconst FormBuilder = () => {\n  _s();\n  var _draftSettings$dropdo;\n  const [formElements, setFormElements] = useState([]);\n  const [formName, setFormName] = useState('');\n  const [formLabel, setFormLabel] = useState('');\n  const [formTags, setFormTags] = useState('');\n  const [savedForms, setSavedForms] = useState([]); // Add state to store list of saved forms\n  const [selectedForm, setSelectedForm] = useState(''); // Add state to track selected form\n  const [selectedElement, setSelectedElement] = useState(null);\n  const [draftSettings, setDraftSettings] = useState(null);\n  const [draggingElement, setDraggingElement] = useState(null);\n  const formContainerRef = useRef(null);\n  const [selectedFileName, setSelectedFileName] = useState('');\n  const SUBMIT_BUTTON_ID = 'submit-button';\n  const [formToLoad, setFormToLoad] = useState(null); // Hold the form name to load after clearing\n\n  useEffect(() => {\n    console.log('Form Elements Updated:', formElements);\n    const tableElement = formElements.find(el => el.type === 'table');\n    if (tableElement) {\n      console.log('Table Element Found:', tableElement);\n      console.log('CSV Data in State:', tableElement.settings.csvData);\n    }\n  }, [formElements]);\n  useEffect(() => {\n    if (!formElements.some(el => el.id === SUBMIT_BUTTON_ID)) {\n      addSubmitButton();\n    }\n  }, [formElements]);\n  useEffect(() => {\n    loadSavedForms();\n  }, []);\n  const loadSavedForms = async () => {\n    try {\n      // Fetch current forms from the database\n      const response = await fetch('/api/forms'); // Adjust the API endpoint if needed\n      if (!response.ok) {\n        throw new Error('Failed to fetch forms from the database');\n      }\n      const formsFromDB = await response.json();\n      const formKeysFromDB = formsFromDB.map(form => form.name); // Adjust based on your database schema\n\n      // Set the saved forms state\n      setSavedForms(formKeysFromDB);\n    } catch (error) {\n      console.error('Error loading saved forms:', error);\n      alert('Failed to load saved forms. Please try again later.');\n    }\n  };\n\n  // Call loadSavedForms to initialize saved forms when the component mounts or whenever necessary\n  useEffect(() => {\n    loadSavedForms();\n  }, []);\n  const loadForm = () => {\n    if (!selectedForm) {\n      alert('Please select a form to load.');\n      return;\n    }\n\n    // Clear existing elements and set the form to load afterward\n    setFormElements([]);\n    setFormToLoad(selectedForm);\n  };\n  useEffect(() => {\n    // When formElements is cleared, load the new form\n    if (formToLoad && formElements.length === 0) {\n      const savedData = localStorage.getItem(formToLoad);\n      if (!savedData) {\n        alert(`No saved form found for the name \"${formToLoad}\"`);\n        setFormToLoad(null); // Reset formToLoad if not found\n        return;\n      }\n      try {\n        var _xmlDoc$querySelector, _xmlDoc$querySelector2;\n        const parser = new DOMParser();\n        const xmlDoc = parser.parseFromString(savedData, 'application/xml');\n        const loadedName = ((_xmlDoc$querySelector = xmlDoc.querySelector('form > name')) === null || _xmlDoc$querySelector === void 0 ? void 0 : _xmlDoc$querySelector.textContent) || '';\n        const loadedLabel = ((_xmlDoc$querySelector2 = xmlDoc.querySelector('form > label')) === null || _xmlDoc$querySelector2 === void 0 ? void 0 : _xmlDoc$querySelector2.textContent) || '';\n        const loadedTags = Array.from(xmlDoc.querySelectorAll('form > tags > tag')).map(tag => tag.textContent);\n        const elements = Array.from(xmlDoc.querySelectorAll('elements > element')).map((el, index) => {\n          var _el$querySelector, _el$querySelector2, _el$querySelector3, _el$querySelector4, _el$querySelector5, _el$querySelector6, _el$querySelector7;\n          const type = ((_el$querySelector = el.querySelector('type')) === null || _el$querySelector === void 0 ? void 0 : _el$querySelector.textContent) || 'text';\n          const optionsNode = el.querySelector('dropdownOptions');\n          const options = optionsNode ? Array.from(optionsNode.querySelectorAll('option')).map(opt => opt.textContent) : [];\n          return {\n            id: `element-${Date.now()}-${index}`,\n            // Generate a unique ID using Date.now() and the index\n            type,\n            key: ((_el$querySelector2 = el.querySelector('key')) === null || _el$querySelector2 === void 0 ? void 0 : _el$querySelector2.textContent) || '',\n            label: ((_el$querySelector3 = el.querySelector('label')) === null || _el$querySelector3 === void 0 ? void 0 : _el$querySelector3.textContent) || '',\n            required: ((_el$querySelector4 = el.querySelector('required')) === null || _el$querySelector4 === void 0 ? void 0 : _el$querySelector4.textContent) === 'true',\n            alignment: ((_el$querySelector5 = el.querySelector('alignment')) === null || _el$querySelector5 === void 0 ? void 0 : _el$querySelector5.textContent) || 'center',\n            settings: {\n              headerLevel: ((_el$querySelector6 = el.querySelector('headerLevel')) === null || _el$querySelector6 === void 0 ? void 0 : _el$querySelector6.textContent) || 'h1',\n              placeholder: ((_el$querySelector7 = el.querySelector('placeholder')) === null || _el$querySelector7 === void 0 ? void 0 : _el$querySelector7.textContent) || '',\n              dropdownOptions: options\n            }\n          };\n        }).filter(el => el.type !== 'button' && el.id !== SUBMIT_BUTTON_ID); // Exclude the submit button\n\n        // Set new form data\n        setFormName(loadedName);\n        setFormLabel(loadedLabel);\n        setFormTags(loadedTags.join(', '));\n        setFormElements(elements);\n        setFormToLoad(null); // Reset formToLoad after loading\n\n        console.log(`Form \"${formToLoad}\" loaded successfully!`);\n      } catch (error) {\n        console.error('Error loading form:', error);\n        alert('Failed to load form data.');\n        setFormToLoad(null); // Reset formToLoad on error\n      }\n    }\n  }, [formElements, formToLoad]); // Only run this effect when formElements or formToLoad changes\n\n  const addSubmitButton = () => {\n    setFormElements(prev => [...prev, {\n      id: SUBMIT_BUTTON_ID,\n      type: 'button',\n      key: 'Submit',\n      label: 'Submit',\n      alignment: 'center',\n      required: false,\n      settings: {}\n    }]);\n  };\n  const generateKey = type => {\n    const existingCount = formElements.filter(el => el.type === type).length + 1;\n    return `${type} ${existingCount}`; // Example: \"inputText 1\"\n  };\n  const addElement = type => {\n    const newKey = generateKey(type); // Generate the key\n    const newElement = {\n      id: Date.now().toString(),\n      type,\n      key: newKey,\n      // Assign the generated key\n      label: type === 'heading' ? 'Heading' : type,\n      alignment: 'center',\n      settings: {\n        headerLevel: 'h1',\n        placeholder: type === 'email' ? 'Email Address' : type === 'password' ? 'Enter password' : 'Enter text here...',\n        useCurrentDate: false,\n        defaultBoolean: 'true',\n        dropdownOptions: [],\n        min: '',\n        max: '',\n        step: '',\n        defaultValue: '',\n        showPasswordOption: false,\n        passwordLength: '',\n        requireSymbols: false,\n        requireNumbers: false,\n        csvData: []\n      },\n      required: false,\n      textColor: '#ffffff',\n      fontFamily: 'Arial'\n    };\n\n    // Ensure new elements are added before the Submit button\n    setFormElements(prev => {\n      const submitIndex = prev.findIndex(el => el.id === SUBMIT_BUTTON_ID);\n      const newFormElements = [...prev];\n      newFormElements.splice(submitIndex, 0, newElement); // Insert new element before submit button\n      return newFormElements;\n    });\n  };\n  const isKeyUnique = key => {\n    return !formElements.some(el => el.key === key && el.id !== (selectedElement === null || selectedElement === void 0 ? void 0 : selectedElement.id));\n  };\n  const handleSubmit = () => {\n    const formData = formElements.filter(el => el.id !== SUBMIT_BUTTON_ID); // Exclude submit button from data\n    console.log('Form submitted:', formData);\n\n    // Example API call\n    fetch('/api/submit-form', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        elements: formData\n      })\n    }).then(response => response.json()).then(data => console.log('Form submission response:', data)).catch(error => console.error('Error submitting form:', error));\n  };\n  const handleImageUpload = (event, elementId) => {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = e => {\n        const imageSrc = e.target.result;\n        setFormElements(prev => prev.map(el => el.id === elementId ? {\n          ...el,\n          settings: {\n            ...el.settings,\n            imageSrc\n          }\n        } : el));\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  const saveForm = () => {\n    if (!formName) {\n      alert('Please enter a name for the form.');\n      return;\n    }\n    const formData = {\n      name: formName,\n      label: formLabel,\n      tags: formTags ? formTags.split(',').map(tag => tag.trim()) : [],\n      // Split tags by comma\n      elements: formElements\n    };\n    const convertToXML = obj => {\n      let xml = '';\n      for (let key in obj) {\n        if (Array.isArray(obj[key])) {\n          if (key === 'dropdownOptions') {\n            xml += `<${key}>`;\n            obj[key].forEach(option => {\n              xml += `<option>${option}</option>`;\n            });\n            xml += `</${key}>`;\n          } else {\n            xml += `<${key}>`;\n            obj[key].forEach(element => {\n              xml += `<element>${convertToXML(element)}</element>`;\n            });\n            xml += `</${key}>`;\n          }\n        } else if (typeof obj[key] === 'object') {\n          xml += `<${key}>${convertToXML(obj[key])}</${key}>`;\n        } else {\n          xml += `<${key}>${obj[key]}</${key}>`;\n        }\n      }\n      return xml;\n    };\n    const xmlData = `<form>${convertToXML(formData)}</form>`;\n    localStorage.setItem(formName, xmlData);\n    alert(`Form \"${formName}\" saved successfully!`);\n  };\n  const removeElement = id => {\n    if (id === SUBMIT_BUTTON_ID) return; // Prevent deletion of the Submit button\n    setFormElements(prev => prev.filter(el => el.id !== id));\n    if ((selectedElement === null || selectedElement === void 0 ? void 0 : selectedElement.id) === id) {\n      setSelectedElement(null);\n    }\n  };\n  const handleEditClick = element => {\n    var _element$settings, _element$settings2, _element$settings3, _element$settings4, _element$settings5, _element$settings6, _element$settings7, _element$settings8, _element$settings9, _element$settings10, _element$settings11, _element$settings12, _element$settings13;\n    setSelectedElement(element);\n    setDraftSettings({\n      ...element.settings,\n      key: element.key || '',\n      // Populate the key value properly\n      label: element.label,\n      alignment: element.alignment,\n      required: element.required,\n      placeholder: (_element$settings = element.settings) === null || _element$settings === void 0 ? void 0 : _element$settings.placeholder,\n      isValid: (_element$settings2 = element.settings) === null || _element$settings2 === void 0 ? void 0 : _element$settings2.isValid,\n      useCurrentDate: (_element$settings3 = element.settings) === null || _element$settings3 === void 0 ? void 0 : _element$settings3.useCurrentDate,\n      defaultBoolean: (_element$settings4 = element.settings) === null || _element$settings4 === void 0 ? void 0 : _element$settings4.defaultBoolean,\n      min: (_element$settings5 = element.settings) === null || _element$settings5 === void 0 ? void 0 : _element$settings5.min,\n      max: (_element$settings6 = element.settings) === null || _element$settings6 === void 0 ? void 0 : _element$settings6.max,\n      step: (_element$settings7 = element.settings) === null || _element$settings7 === void 0 ? void 0 : _element$settings7.step,\n      defaultValue: (_element$settings8 = element.settings) === null || _element$settings8 === void 0 ? void 0 : _element$settings8.defaultValue,\n      showPasswordOption: (_element$settings9 = element.settings) === null || _element$settings9 === void 0 ? void 0 : _element$settings9.showPasswordOption,\n      passwordLength: (_element$settings10 = element.settings) === null || _element$settings10 === void 0 ? void 0 : _element$settings10.passwordLength,\n      requireSymbols: (_element$settings11 = element.settings) === null || _element$settings11 === void 0 ? void 0 : _element$settings11.requireSymbols,\n      requireNumbers: (_element$settings12 = element.settings) === null || _element$settings12 === void 0 ? void 0 : _element$settings12.requireNumbers,\n      csvData: ((_element$settings13 = element.settings) === null || _element$settings13 === void 0 ? void 0 : _element$settings13.csvData) || []\n    });\n  };\n  const applyDraftChanges = () => {\n    if (selectedElement && draftSettings) {\n      if (isKeyUnique(draftSettings.key)) {\n        updateElementSettings(selectedElement.id, {\n          ...draftSettings,\n          key: draftSettings.key // Update the key\n        });\n        setSelectedElement(null);\n        setDraftSettings(null);\n      } else {\n        alert('The key must be unique. Please choose another.');\n      }\n    }\n  };\n  const cancelChanges = () => {\n    setSelectedElement(null);\n    setDraftSettings(null);\n  };\n  const updateElementSettings = (id, newSettings) => {\n    setFormElements(prev => prev.map(el => el.id === id.toString() ? {\n      ...el,\n      ...newSettings,\n      settings: {\n        ...el.settings,\n        ...newSettings\n      }\n    } : el));\n  };\n  const handleDragStart = ({\n    active\n  }) => {\n    setDraggingElement(active.id);\n  };\n  const handleDragEnd = ({\n    active,\n    over\n  }) => {\n    if (over && active.id !== over.id) {\n      const oldIndex = formElements.findIndex(el => el.id === active.id);\n      const newIndex = formElements.findIndex(el => el.id === over.id);\n      setFormElements(prev => arrayMove(prev, oldIndex, newIndex));\n    }\n    setDraggingElement(null);\n  };\n  const handleCSVUpload = (event, elementId) => {\n    const file = event.target.files[0];\n    if (file) {\n      if (!file.name.endsWith('.csv')) {\n        alert('Please upload a valid .csv file.');\n        return;\n      }\n      setSelectedFileName(file.name); // Update the selected file name\n      Papa.parse(file, {\n        complete: result => {\n          const csvData = result.data;\n          console.log('Parsed CSV Data:', csvData);\n          setFormElements(prev => prev.map(el => el.id === elementId ? {\n            ...el,\n            settings: {\n              ...el.settings,\n              csvData\n            }\n          } : el));\n        },\n        header: false\n      });\n    }\n  };\n  const handleResetForm = () => {\n    if (window.confirm('Are you sure you want to reset the form?')) {\n      setFormElements([]);\n    }\n  };\n  const validatePassword = (password, settings) => {\n    if (settings !== null && settings !== void 0 && settings.passwordLength && password.length < settings.passwordLength) {\n      return false;\n    }\n    if (settings !== null && settings !== void 0 && settings.requireSymbols && !/[!@#$%^&*(),.?\":{}|<>]/.test(password)) {\n      return false;\n    }\n    if (settings !== null && settings !== void 0 && settings.requireNumbers && !/[0-9]/.test(password)) {\n      return false;\n    }\n    return true;\n  };\n  const renderElementContent = element => {\n    var _element$settings14, _settings$dropdownOpt;\n    const isBeingEdited = (selectedElement === null || selectedElement === void 0 ? void 0 : selectedElement.id) === element.id;\n    const settings = isBeingEdited ? draftSettings : element.settings;\n    const alignmentStyle = {\n      textAlign: (settings === null || settings === void 0 ? void 0 : settings.alignment) || 'center'\n    };\n\n    // Use the element key as the default label if the label isn't set\n    const displayLabel = (settings === null || settings === void 0 ? void 0 : settings.label) || element.key || element.label;\n    switch (element.type) {\n      case 'heading':\n        {\n          const HeaderTag = (settings === null || settings === void 0 ? void 0 : settings.headerLevel) || 'h1';\n          const alignmentStyle = {\n            textAlign: (settings === null || settings === void 0 ? void 0 : settings.alignment) || 'center',\n            width: '100%',\n            margin: '0 auto' // Ensures it's centered\n          };\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              justifyContent: 'center',\n              width: '100%'\n            },\n            children: /*#__PURE__*/_jsxDEV(HeaderTag, {\n              style: alignmentStyle,\n              children: (settings === null || settings === void 0 ? void 0 : settings.label) || element.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 450,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 11\n          }, this);\n        }\n      case 'text':\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          style: alignmentStyle,\n          children: displayLabel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 16\n        }, this);\n      case 'button':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: element.alignment || 'center',\n            width: '100%'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: element.id === SUBMIT_BUTTON_ID ? handleSubmit : undefined // Submit button triggers API\n            ,\n            className: \"custom-button\",\n            style: {\n              padding: '10px 20px',\n              borderRadius: '6px',\n              margin: '5px',\n              backgroundColor: '#007bff',\n              color: 'white'\n            },\n            children: element.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 11\n        }, this);\n      case 'inputText':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: (settings === null || settings === void 0 ? void 0 : settings.alignment) || 'center',\n            width: '100%'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: (settings === null || settings === void 0 ? void 0 : settings.placeholder) || displayLabel,\n            required: settings === null || settings === void 0 ? void 0 : settings.required,\n            style: {\n              borderRadius: '8px',\n              padding: '10px',\n              border: '1px solid #ced4da',\n              textAlign: 'center'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 11\n        }, this);\n      case 'email':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: (settings === null || settings === void 0 ? void 0 : settings.alignment) || 'center',\n            width: '100%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            placeholder: (settings === null || settings === void 0 ? void 0 : settings.placeholder) || 'Email Address',\n            required: settings === null || settings === void 0 ? void 0 : settings.required,\n            style: {\n              borderRadius: '8px',\n              padding: '10px',\n              border: (settings === null || settings === void 0 ? void 0 : settings.isValid) === false ? '2px solid #ff0000' : '1px solid #ced4da',\n              boxShadow: (settings === null || settings === void 0 ? void 0 : settings.isValid) === false ? '0 0 5px #ff0000' : 'none',\n              textAlign: 'center'\n            },\n            onBlur: e => {\n              if (e.target.value.trim() !== '') {\n                const isValid = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(e.target.value);\n                updateElementSettings(element.id, {\n                  ...settings,\n                  isValid\n                });\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 489,\n            columnNumber: 13\n          }, this), !(settings !== null && settings !== void 0 && settings.isValid) && (settings === null || settings === void 0 ? void 0 : settings.isValid) !== undefined && /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: '#ff0000',\n              fontSize: '0.8em',\n              marginTop: '5px'\n            },\n            children: \"Invalid email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 508,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 11\n        }, this);\n      case 'divider':\n        return /*#__PURE__*/_jsxDEV(\"hr\", {\n          style: {\n            ...alignmentStyle,\n            width: '100%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 16\n        }, this);\n      case 'image':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            width: '100%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"custom-file-label\",\n            children: [\"Choose Image\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              className: \"custom-file-input\",\n              accept: \"image/*\",\n              onChange: e => handleImageUpload(e, element.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 519,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 517,\n            columnNumber: 15\n          }, this), settings !== null && settings !== void 0 && settings.imageSrc ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: settings.imageSrc,\n            alt: \"Uploaded\",\n            style: {\n              maxWidth: '100%',\n              height: 'auto',\n              borderRadius: '8px',\n              marginTop: '10px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 527,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"https://via.placeholder.com/150\",\n            alt: \"Placeholder\",\n            style: {\n              maxWidth: '100%',\n              height: 'auto',\n              borderRadius: '8px',\n              marginTop: '10px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 533,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 516,\n          columnNumber: 13\n        }, this);\n      case 'file':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: (settings === null || settings === void 0 ? void 0 : settings.alignment) || 'center',\n            width: '100%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"custom-file-label\",\n            children: [\"Upload File\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              className: \"custom-file-input\",\n              onChange: e => handleCSVUpload(e, element.id),\n              accept: \".csv\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 546,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 544,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"file-name\",\n            children: \"No file chosen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 553,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 13\n        }, this);\n      case 'table':\n        const tableData = ((_element$settings14 = element.settings) === null || _element$settings14 === void 0 ? void 0 : _element$settings14.csvData) || [];\n        console.log('Rendering Table with Data:', tableData);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'center',\n            width: '100%'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginBottom: '10px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                accept: \".csv\",\n                id: `file-upload-${element.id}`,\n                onChange: e => handleCSVUpload(e, element.id),\n                style: {\n                  display: 'none'\n                } // Hide default input\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 565,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: `file-upload-${element.id}`,\n                style: {\n                  backgroundColor: '#007bff',\n                  color: 'white',\n                  padding: '10px 20px',\n                  borderRadius: '6px',\n                  cursor: 'pointer',\n                  display: 'inline-block'\n                },\n                children: \"Upload CSV File\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 572,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  marginLeft: '10px'\n                },\n                children: selectedFileName || 'No file chosen'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 585,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 564,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n              style: {\n                margin: '0 auto',\n                borderCollapse: 'collapse',\n                width: '100%'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: tableData.length > 0 ? tableData.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: row.map((cell, cellIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n                    style: {\n                      border: '1px solid #ddd',\n                      padding: '8px'\n                    },\n                    children: cell\n                  }, `cell-${rowIndex}-${cellIndex}`, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 596,\n                    columnNumber: 29\n                  }, this))\n                }, `row-${rowIndex}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 594,\n                  columnNumber: 25\n                }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    style: {\n                      textAlign: 'center'\n                    },\n                    children: \"No Data Available\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 607,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 606,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 591,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 590,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 562,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 561,\n          columnNumber: 13\n        }, this);\n      case 'dateTime':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: (settings === null || settings === void 0 ? void 0 : settings.alignment) || 'center',\n            width: '100%'\n          },\n          children: settings !== null && settings !== void 0 && settings.useCurrentDate ? /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: new Date().toLocaleDateString('en-US'),\n            readOnly: true,\n            style: {\n              borderRadius: '8px',\n              padding: '10px',\n              border: '1px solid #ced4da',\n              textAlign: 'center'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 620,\n            columnNumber: 13\n          }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            style: {\n              borderRadius: '8px',\n              padding: '10px',\n              border: '1px solid #ced4da',\n              textAlign: 'center'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 632,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 617,\n          columnNumber: 9\n        }, this);\n      case 'dropdown':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: 'center',\n            width: '100%'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            style: {\n              borderRadius: '8px',\n              padding: '10px',\n              border: '1px solid #ced4da',\n              textAlign: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select an option\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 655,\n              columnNumber: 15\n            }, this), settings === null || settings === void 0 ? void 0 : (_settings$dropdownOpt = settings.dropdownOptions) === null || _settings$dropdownOpt === void 0 ? void 0 : _settings$dropdownOpt.map((option, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option,\n              children: option\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 657,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 647,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 646,\n          columnNumber: 11\n        }, this);\n      case 'boolean':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: (settings === null || settings === void 0 ? void 0 : settings.alignment) || 'center',\n            width: '100%'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            value: (settings === null || settings === void 0 ? void 0 : settings.defaultBoolean) || 'true',\n            onChange: e => updateElementSettings(element.id, {\n              ...settings,\n              defaultBoolean: e.target.value\n            }),\n            style: {\n              borderRadius: '8px',\n              padding: '10px',\n              border: '1px solid #ced4da',\n              textAlign: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"true\",\n              children: \"True\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 677,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"false\",\n              children: \"False\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 678,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 667,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 666,\n          columnNumber: 11\n        }, this);\n      case 'number':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: (settings === null || settings === void 0 ? void 0 : settings.alignment) || 'center',\n            width: '100%'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            min: settings === null || settings === void 0 ? void 0 : settings.min,\n            max: settings === null || settings === void 0 ? void 0 : settings.max,\n            step: settings === null || settings === void 0 ? void 0 : settings.step,\n            defaultValue: settings === null || settings === void 0 ? void 0 : settings.defaultValue,\n            required: settings === null || settings === void 0 ? void 0 : settings.required,\n            style: {\n              borderRadius: '8px',\n              padding: '10px',\n              border: '1px solid #ced4da',\n              textAlign: 'center'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 685,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 684,\n          columnNumber: 11\n        }, this);\n      case 'password':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '100%',\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: (settings === null || settings === void 0 ? void 0 : settings.alignment) === 'left' ? 'flex-start' : (settings === null || settings === void 0 ? void 0 : settings.alignment) === 'right' ? 'flex-end' : 'center',\n            justifyContent: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              flexDirection: 'row',\n              alignItems: 'center',\n              justifyContent: (settings === null || settings === void 0 ? void 0 : settings.alignment) === 'left' ? 'flex-start' : (settings === null || settings === void 0 ? void 0 : settings.alignment) === 'right' ? 'flex-end' : 'center',\n              width: '100%'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: settings !== null && settings !== void 0 && settings.showPasswordOption && settings !== null && settings !== void 0 && settings.showPassword ? 'text' : 'password',\n              placeholder: (settings === null || settings === void 0 ? void 0 : settings.placeholder) || 'Enter password',\n              required: settings === null || settings === void 0 ? void 0 : settings.required,\n              onBlur: e => {\n                const isValid = validatePassword(e.target.value, settings);\n                updateElementSettings(element.id, {\n                  ...settings,\n                  isValid\n                });\n              },\n              style: {\n                borderRadius: '8px',\n                padding: '10px',\n                width: '300px',\n                // Adjust the width as needed\n                border: (settings === null || settings === void 0 ? void 0 : settings.isValid) === false ? '2px solid #ff0000' : '1px solid #ced4da',\n                textAlign: 'left',\n                // Ensures the placeholder text stays aligned left\n                marginRight: '10px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 714,\n              columnNumber: 13\n            }, this), (settings === null || settings === void 0 ? void 0 : settings.showPasswordOption) && /*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                display: 'flex',\n                alignItems: 'center',\n                marginLeft: '10px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: (settings === null || settings === void 0 ? void 0 : settings.showPassword) || false,\n                onChange: e => updateElementSettings(element.id, {\n                  ...settings,\n                  showPassword: e.target.checked\n                }),\n                style: {\n                  marginRight: '5px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 733,\n                columnNumber: 17\n              }, this), \"Show Password\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 732,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 713,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: '10px',\n              textAlign: (settings === null || settings === void 0 ? void 0 : settings.alignment) || 'center',\n              width: '100%',\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: (settings === null || settings === void 0 ? void 0 : settings.alignment) === 'left' ? 'flex-start' : (settings === null || settings === void 0 ? void 0 : settings.alignment) === 'right' ? 'flex-end' : 'center'\n            },\n            children: [(settings === null || settings === void 0 ? void 0 : settings.passwordLength) && /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                marginBottom: '5px'\n              },\n              children: [\"Requires Minimum Length: \", settings.passwordLength]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 745,\n              columnNumber: 42\n            }, this), (settings === null || settings === void 0 ? void 0 : settings.requireSymbols) && /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                marginBottom: '5px'\n              },\n              children: \"Requires Symbols: Yes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 746,\n              columnNumber: 42\n            }, this), (settings === null || settings === void 0 ? void 0 : settings.requireNumbers) && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Requires Numbers: Yes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 747,\n              columnNumber: 42\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 744,\n            columnNumber: 11\n          }, this), !(settings !== null && settings !== void 0 && settings.isValid) && (settings === null || settings === void 0 ? void 0 : settings.isValid) !== undefined && /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: '#ff0000',\n              fontSize: '0.8em',\n              marginTop: '5px'\n            },\n            children: \"Password does not meet requirements\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 751,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 703,\n          columnNumber: 9\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(\"input\", {\n          type: element.type,\n          placeholder: (settings === null || settings === void 0 ? void 0 : settings.placeholder) || displayLabel,\n          required: settings === null || settings === void 0 ? void 0 : settings.required,\n          style: alignmentStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 757,\n          columnNumber: 11\n        }, this);\n    }\n  };\n  const areRequiredFieldsFilled = () => {\n    return formElements.every(el => {\n      if (el.required) {\n        return el.settings.label && el.settings.label.trim() !== '';\n      }\n      return true;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-builder-container\",\n    style: {\n      height: '100vh',\n      overflow: 'hidden'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-name-section\",\n        style: {\n          marginBottom: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"form-name\",\n          className: \"sidebar-label\",\n          children: \"Form Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 783,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"form-name\",\n          type: \"text\",\n          value: formName,\n          onChange: e => setFormName(e.target.value),\n          placeholder: \"Enter form name\",\n          className: \"form-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 784,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 782,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-label-section\",\n        style: {\n          marginBottom: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"form-label\",\n          className: \"sidebar-label\",\n          children: \"Label (Required):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 796,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"form-label\",\n          type: \"text\",\n          value: formLabel,\n          onChange: e => setFormLabel(e.target.value),\n          placeholder: \"Enter form label\",\n          className: \"form-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 797,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 795,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"element-input-wrapper\",\n        style: {\n          display: 'flex',\n          gap: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"element-selector\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Elements\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 809,\n            columnNumber: 7\n          }, this), ELEMENT_TYPES.map(element => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => addElement(element.id),\n            className: \"element-button\",\n            children: element.label\n          }, element.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 811,\n            columnNumber: 9\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 808,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-selector\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Input Fields\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 822,\n            columnNumber: 7\n          }, this), INPUT_FIELDS.map(input => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => addElement(input.id),\n            className: \"input-button\",\n            children: input.label\n          }, input.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 824,\n            columnNumber: 9\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 821,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 807,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"load-section\",\n        style: {\n          marginBottom: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"saved-forms\",\n          className: \"sidebar-label\",\n          children: \"Load Saved Form:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 835,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"saved-forms\",\n          value: selectedForm,\n          onChange: e => setSelectedForm(e.target.value),\n          className: \"sidebar-select\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"-- Select a Form --\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 842,\n            columnNumber: 7\n          }, this), savedForms.map(formName => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: formName,\n            children: formName\n          }, formName, false, {\n            fileName: _jsxFileName,\n            lineNumber: 844,\n            columnNumber: 9\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 836,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: loadForm,\n          className: \"load-form-button\",\n          children: \"Load Form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 849,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 834,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: saveForm,\n        className: \"save-form-button\",\n        children: \"Save Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 851,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleResetForm,\n        className: \"reset-form-button\",\n        children: \"Reset Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 852,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 778,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-builder\",\n      ref: formContainerRef,\n      style: {\n        height: '100%',\n        overflowY: 'auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(DndContext, {\n        collisionDetection: closestCenter,\n        onDragEnd: handleDragEnd,\n        onDragStart: handleDragStart,\n        children: [/*#__PURE__*/_jsxDEV(SortableContext, {\n          items: formElements,\n          strategy: rectSortingStrategy,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-preview\",\n            children: formElements.map(element => /*#__PURE__*/_jsxDEV(SortableFormElement, {\n              element: element,\n              handleEditClick: handleEditClick,\n              renderElementContent: renderElementContent\n            }, element.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 865,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 863,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 862,\n          columnNumber: 11\n        }, this), draggingElement && /*#__PURE__*/_jsxDEV(DragOverlay, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dragging-overlay\",\n            children: \"Dragging\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 876,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 875,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 857,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 856,\n      columnNumber: 7\n    }, this), selectedElement && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"element-editor\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Edit Element\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 884,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Key:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: (draftSettings === null || draftSettings === void 0 ? void 0 : draftSettings.key) || '',\n          onChange: e => setDraftSettings(prev => ({\n            ...prev,\n            key: e.target.value\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 888,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 886,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Label:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: (draftSettings === null || draftSettings === void 0 ? void 0 : draftSettings.label) || '',\n          onChange: e => setDraftSettings(prev => ({\n            ...prev,\n            label: e.target.value\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 898,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 896,\n        columnNumber: 11\n      }, this), selectedElement.type === 'heading' && /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Header Level:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: (draftSettings === null || draftSettings === void 0 ? void 0 : draftSettings.headerLevel) || 'h1',\n          onChange: e => setDraftSettings(prev => ({\n            ...prev,\n            headerLevel: e.target.value\n          })),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"h1\",\n            children: \"H1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 918,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"h2\",\n            children: \"H2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 919,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"h3\",\n            children: \"H3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 920,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"h4\",\n            children: \"H4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 921,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"h5\",\n            children: \"H5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 922,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"h6\",\n            children: \"H6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 923,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 909,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 907,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Alignment:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: (draftSettings === null || draftSettings === void 0 ? void 0 : draftSettings.alignment) || 'center',\n          onChange: e => setDraftSettings(prev => ({\n            ...prev,\n            alignment: e.target.value\n          })),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"left\",\n            children: \"Left\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 935,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"center\",\n            children: \"Center\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 936,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"right\",\n            children: \"Right\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 937,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 929,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 927,\n        columnNumber: 11\n      }, this), (selectedElement.type === 'inputText' || selectedElement.type === 'email') && /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Placeholder Text:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: (draftSettings === null || draftSettings === void 0 ? void 0 : draftSettings.placeholder) || '',\n          onChange: e => setDraftSettings(prev => ({\n            ...prev,\n            placeholder: e.target.value\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 943,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 941,\n        columnNumber: 13\n      }, this), selectedElement.type === 'dateTime' && /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Use Current Date:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: (draftSettings === null || draftSettings === void 0 ? void 0 : draftSettings.useCurrentDate) || false,\n          onChange: e => setDraftSettings(prev => ({\n            ...prev,\n            useCurrentDate: e.target.checked\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 955,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 953,\n        columnNumber: 13\n      }, this), selectedElement.type === 'dropdown' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Dropdown Options:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 966,\n          columnNumber: 13\n        }, this), draftSettings === null || draftSettings === void 0 ? void 0 : (_draftSettings$dropdo = draftSettings.dropdownOptions) === null || _draftSettings$dropdo === void 0 ? void 0 : _draftSettings$dropdo.map((option, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: option,\n            onChange: e => setDraftSettings(prev => {\n              const updatedOptions = [...prev.dropdownOptions];\n              updatedOptions[idx] = e.target.value;\n              return {\n                ...prev,\n                dropdownOptions: updatedOptions\n              };\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 969,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setDraftSettings(prev => ({\n              ...prev,\n              dropdownOptions: prev.dropdownOptions.filter((_, i) => i !== idx)\n            })),\n            style: {\n              marginLeft: '10px',\n              padding: '5px 10px',\n              color: 'white',\n              backgroundColor: 'red',\n              borderRadius: '4px',\n              cursor: 'pointer'\n            },\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 980,\n            columnNumber: 17\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 968,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setDraftSettings(prev => ({\n            ...prev,\n            dropdownOptions: [...(prev.dropdownOptions || []), '']\n          })),\n          className: \"add-option-button\",\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1000,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true), selectedElement.type === 'boolean' && /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Default Boolean Value:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: (draftSettings === null || draftSettings === void 0 ? void 0 : draftSettings.defaultBoolean) || 'true',\n          onChange: e => setDraftSettings(prev => ({\n            ...prev,\n            defaultBoolean: e.target.value\n          })),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"true\",\n            children: \"True\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1024,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"false\",\n            children: \"False\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1025,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1018,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1016,\n        columnNumber: 13\n      }, this), selectedElement.type === 'number' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Minimum Value:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: (draftSettings === null || draftSettings === void 0 ? void 0 : draftSettings.min) || '',\n            onChange: e => setDraftSettings(prev => ({\n              ...prev,\n              min: e.target.value\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1033,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1031,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Maximum Value:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: (draftSettings === null || draftSettings === void 0 ? void 0 : draftSettings.max) || '',\n            onChange: e => setDraftSettings(prev => ({\n              ...prev,\n              max: e.target.value\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1043,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1041,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Step Value:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: (draftSettings === null || draftSettings === void 0 ? void 0 : draftSettings.step) || '',\n            onChange: e => setDraftSettings(prev => ({\n              ...prev,\n              step: e.target.value\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1053,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1051,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Default Value:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: (draftSettings === null || draftSettings === void 0 ? void 0 : draftSettings.defaultValue) || '',\n            onChange: e => setDraftSettings(prev => ({\n              ...prev,\n              defaultValue: e.target.value\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1063,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1061,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), selectedElement.type === 'password' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Show Password Option:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: (draftSettings === null || draftSettings === void 0 ? void 0 : draftSettings.showPasswordOption) || false,\n            onChange: e => setDraftSettings(prev => ({\n              ...prev,\n              showPasswordOption: e.target.checked\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1077,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1075,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Minimum Password Length:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: (draftSettings === null || draftSettings === void 0 ? void 0 : draftSettings.passwordLength) || '',\n            onChange: e => setDraftSettings(prev => ({\n              ...prev,\n              passwordLength: e.target.value\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1090,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1088,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Requires Symbols:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: (draftSettings === null || draftSettings === void 0 ? void 0 : draftSettings.requireSymbols) || false,\n            onChange: e => setDraftSettings(prev => ({\n              ...prev,\n              requireSymbols: e.target.checked\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1103,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1101,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Requires Numbers:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: (draftSettings === null || draftSettings === void 0 ? void 0 : draftSettings.requireNumbers) || false,\n            onChange: e => setDraftSettings(prev => ({\n              ...prev,\n              requireNumbers: e.target.checked\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1116,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1114,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: applyDraftChanges,\n        className: \"save-changes custom-button\",\n        style: {\n          backgroundColor: '#4285f4',\n          color: 'white',\n          border: 'none',\n          padding: '10px 20px',\n          textAlign: 'center',\n          fontSize: '16px',\n          cursor: 'pointer',\n          margin: '5px',\n          borderRadius: '6px'\n        },\n        disabled: !areRequiredFieldsFilled(),\n        children: \"Save Changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1129,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: cancelChanges,\n        className: \"cancel-button custom-button\",\n        style: {\n          backgroundColor: '#6c757d',\n          color: 'white',\n          border: 'none',\n          padding: '10px 20px',\n          textAlign: 'center',\n          fontSize: '16px',\n          cursor: 'pointer',\n          margin: '5px',\n          borderRadius: '6px'\n        },\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1147,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          if (window.confirm('Are you sure you want to delete this element?')) {\n            removeElement(selectedElement.id);\n          }\n        },\n        className: \"delete-element custom-button\",\n        style: {\n          backgroundColor: '#dc3545',\n          color: 'white',\n          border: 'none',\n          padding: '10px 20px',\n          textAlign: 'center',\n          fontSize: '16px',\n          cursor: 'pointer',\n          margin: '5px',\n          borderRadius: '6px'\n        },\n        children: \"Delete Element\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1164,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 883,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 777,\n    columnNumber: 5\n  }, this);\n};\n_s(FormBuilder, \"5rg8c1enpysKFrZaTZnf3iuRAwA=\");\n_c = FormBuilder;\nconst SortableFormElement = ({\n  element,\n  handleEditClick,\n  renderElementContent\n}) => {\n  _s2();\n  var _element$settings15;\n  const {\n    attributes,\n    listeners,\n    setNodeRef,\n    transform,\n    transition\n  } = useSortable({\n    id: element.id\n  });\n  const style = {\n    transform: transform ? `translate3d(${transform.x}px, ${transform.y}px, 0)` : undefined,\n    transition,\n    backgroundColor: ((_element$settings15 = element.settings) === null || _element$settings15 === void 0 ? void 0 : _element$settings15.backgroundColor) || 'inherit'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: setNodeRef,\n    style: style,\n    className: \"form-element\",\n    onClick: () => handleEditClick(element),\n    children: [renderElementContent(element), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"drag-handle\",\n      ...listeners,\n      ...attributes,\n      onMouseDown: e => e.stopPropagation(),\n      children: \"Drag\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1210,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1203,\n    columnNumber: 5\n  }, this);\n};\n_s2(SortableFormElement, \"FTUh0JV0KNM2MI3tYtLrQh0rr1U=\", false, function () {\n  return [useSortable];\n});\n_c2 = SortableFormElement;\nexport default FormBuilder;\nvar _c, _c2;\n$RefreshReg$(_c, \"FormBuilder\");\n$RefreshReg$(_c2, \"SortableFormElement\");","map":{"version":3,"names":["React","useState","useRef","useEffect","DndContext","DragOverlay","closestCenter","arrayMove","SortableContext","useSortable","rectSortingStrategy","Papa","jsxDEV","_jsxDEV","Fragment","_Fragment","ELEMENT_TYPES","id","label","INPUT_FIELDS","type","FormBuilder","_s","_draftSettings$dropdo","formElements","setFormElements","formName","setFormName","formLabel","setFormLabel","formTags","setFormTags","savedForms","setSavedForms","selectedForm","setSelectedForm","selectedElement","setSelectedElement","draftSettings","setDraftSettings","draggingElement","setDraggingElement","formContainerRef","selectedFileName","setSelectedFileName","SUBMIT_BUTTON_ID","formToLoad","setFormToLoad","console","log","tableElement","find","el","settings","csvData","some","addSubmitButton","loadSavedForms","response","fetch","ok","Error","formsFromDB","json","formKeysFromDB","map","form","name","error","alert","loadForm","length","savedData","localStorage","getItem","_xmlDoc$querySelector","_xmlDoc$querySelector2","parser","DOMParser","xmlDoc","parseFromString","loadedName","querySelector","textContent","loadedLabel","loadedTags","Array","from","querySelectorAll","tag","elements","index","_el$querySelector","_el$querySelector2","_el$querySelector3","_el$querySelector4","_el$querySelector5","_el$querySelector6","_el$querySelector7","optionsNode","options","opt","Date","now","key","required","alignment","headerLevel","placeholder","dropdownOptions","filter","join","prev","generateKey","existingCount","addElement","newKey","newElement","toString","useCurrentDate","defaultBoolean","min","max","step","defaultValue","showPasswordOption","passwordLength","requireSymbols","requireNumbers","textColor","fontFamily","submitIndex","findIndex","newFormElements","splice","isKeyUnique","handleSubmit","formData","method","headers","body","JSON","stringify","then","data","catch","handleImageUpload","event","elementId","file","target","files","reader","FileReader","onload","e","imageSrc","result","readAsDataURL","saveForm","tags","split","trim","convertToXML","obj","xml","isArray","forEach","option","element","xmlData","setItem","removeElement","handleEditClick","_element$settings","_element$settings2","_element$settings3","_element$settings4","_element$settings5","_element$settings6","_element$settings7","_element$settings8","_element$settings9","_element$settings10","_element$settings11","_element$settings12","_element$settings13","isValid","applyDraftChanges","updateElementSettings","cancelChanges","newSettings","handleDragStart","active","handleDragEnd","over","oldIndex","newIndex","handleCSVUpload","endsWith","parse","complete","header","handleResetForm","window","confirm","validatePassword","password","test","renderElementContent","_element$settings14","_settings$dropdownOpt","isBeingEdited","alignmentStyle","textAlign","displayLabel","HeaderTag","width","margin","style","display","justifyContent","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","undefined","className","padding","borderRadius","backgroundColor","color","border","boxShadow","onBlur","value","fontSize","marginTop","flexDirection","alignItems","accept","onChange","src","alt","maxWidth","height","tableData","marginBottom","htmlFor","cursor","marginLeft","borderCollapse","row","rowIndex","cell","cellIndex","toLocaleDateString","readOnly","idx","showPassword","marginRight","checked","areRequiredFieldsFilled","every","overflow","gap","input","ref","overflowY","collisionDetection","onDragEnd","onDragStart","items","strategy","SortableFormElement","updatedOptions","_","i","disabled","_c","_s2","_element$settings15","attributes","listeners","setNodeRef","transform","transition","x","y","onMouseDown","stopPropagation","_c2","$RefreshReg$"],"sources":["C:/Users/abarbas/Desktop/soar_web_forms/src/components/FormBuilder.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { DndContext, DragOverlay, closestCenter } from '@dnd-kit/core';\r\nimport { arrayMove, SortableContext, useSortable, rectSortingStrategy } from '@dnd-kit/sortable';\r\nimport Papa from 'papaparse';\r\nimport './FormBuilder.css';\r\n\r\nconst ELEMENT_TYPES = [\r\n  { id: 'heading', label: 'Heading' },\r\n  { id: 'text', label: 'Text' },\r\n  { id: 'divider', label: 'Divider' },\r\n  //{ id: 'button', label: 'Button' },\r\n  //{ id: 'image', label: 'Image' },\r\n  { id: 'table', label: 'Table' }\r\n];\r\n\r\nconst INPUT_FIELDS = [\r\n  { id: 'inputText', label: 'Input Text', type: 'text' },\r\n  { id: 'email', label: 'Email', type: 'email' },\r\n  //{ id: 'password', label: 'Password', type: 'password' }, \r\n  { id: 'dateTime', label: 'Date or Time', type: 'datetime-local' },\r\n  { id: 'dropdown', label: 'Dropdown', type: 'dropdown' },\r\n  { id: 'boolean', label: 'Boolean', type: 'dropdown' },\r\n  { id: 'number', label: 'Number', type: 'number' },\r\n  { id: 'file', label: 'File Upload', type: 'file' }\r\n\r\n];\r\n\r\nconst FormBuilder = () => {\r\n  const [formElements, setFormElements] = useState([]);\r\n  const [formName, setFormName] = useState('');\r\n  const [formLabel, setFormLabel] = useState('');\r\n  const [formTags, setFormTags] = useState('');\r\n  const [savedForms, setSavedForms] = useState([]); // Add state to store list of saved forms\r\n  const [selectedForm, setSelectedForm] = useState(''); // Add state to track selected form\r\n  const [selectedElement, setSelectedElement] = useState(null);\r\n  const [draftSettings, setDraftSettings] = useState(null);\r\n  const [draggingElement, setDraggingElement] = useState(null);\r\n  const formContainerRef = useRef(null);\r\n  const [selectedFileName, setSelectedFileName] = useState('');\r\n  const SUBMIT_BUTTON_ID = 'submit-button';\r\n  const [formToLoad, setFormToLoad] = useState(null); // Hold the form name to load after clearing\r\n  \r\n\r\nuseEffect(() => {\r\n  console.log('Form Elements Updated:', formElements);\r\n  const tableElement = formElements.find((el) => el.type === 'table');\r\n  if (tableElement) {\r\n    console.log('Table Element Found:', tableElement);\r\n    console.log('CSV Data in State:', tableElement.settings.csvData);\r\n  }\r\n}, [formElements]);\r\n\r\nuseEffect(() => {\r\n  if (!formElements.some(el => el.id === SUBMIT_BUTTON_ID)) {\r\n    addSubmitButton();\r\n  }\r\n}, [formElements]);\r\n\r\nuseEffect(() => {\r\n  loadSavedForms();\r\n}, []);\r\n\r\nconst loadSavedForms = async () => {\r\n  try {\r\n    // Fetch current forms from the database\r\n    const response = await fetch('/api/forms'); // Adjust the API endpoint if needed\r\n    if (!response.ok) {\r\n      throw new Error('Failed to fetch forms from the database');\r\n    }\r\n\r\n    const formsFromDB = await response.json();\r\n    const formKeysFromDB = formsFromDB.map(form => form.name); // Adjust based on your database schema\r\n\r\n    // Set the saved forms state\r\n    setSavedForms(formKeysFromDB);\r\n  } catch (error) {\r\n    console.error('Error loading saved forms:', error);\r\n    alert('Failed to load saved forms. Please try again later.');\r\n  }\r\n};\r\n\r\n// Call loadSavedForms to initialize saved forms when the component mounts or whenever necessary\r\nuseEffect(() => {\r\n  loadSavedForms();\r\n}, []);\r\n\r\n\r\nconst loadForm = () => {\r\n  if (!selectedForm) {\r\n    alert('Please select a form to load.');\r\n    return;\r\n  }\r\n\r\n  // Clear existing elements and set the form to load afterward\r\n  setFormElements([]); \r\n  setFormToLoad(selectedForm);\r\n};\r\n\r\nuseEffect(() => {\r\n  // When formElements is cleared, load the new form\r\n  if (formToLoad && formElements.length === 0) {\r\n    const savedData = localStorage.getItem(formToLoad);\r\n    if (!savedData) {\r\n      alert(`No saved form found for the name \"${formToLoad}\"`);\r\n      setFormToLoad(null); // Reset formToLoad if not found\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const parser = new DOMParser();\r\n      const xmlDoc = parser.parseFromString(savedData, 'application/xml');\r\n      const loadedName = xmlDoc.querySelector('form > name')?.textContent || '';\r\n      const loadedLabel = xmlDoc.querySelector('form > label')?.textContent || '';\r\n      const loadedTags = Array.from(xmlDoc.querySelectorAll('form > tags > tag')).map(tag => tag.textContent);\r\n\r\n      const elements = Array.from(xmlDoc.querySelectorAll('elements > element'))\r\n        .map((el, index) => {\r\n          const type = el.querySelector('type')?.textContent || 'text';\r\n          const optionsNode = el.querySelector('dropdownOptions');\r\n          const options = optionsNode ? Array.from(optionsNode.querySelectorAll('option')).map(opt => opt.textContent) : [];\r\n\r\n          return {\r\n            id: `element-${Date.now()}-${index}`, // Generate a unique ID using Date.now() and the index\r\n            type,\r\n            key: el.querySelector('key')?.textContent || '',\r\n            label: el.querySelector('label')?.textContent || '',\r\n            required: el.querySelector('required')?.textContent === 'true',\r\n            alignment: el.querySelector('alignment')?.textContent || 'center',\r\n            settings: {\r\n              headerLevel: el.querySelector('headerLevel')?.textContent || 'h1',\r\n              placeholder: el.querySelector('placeholder')?.textContent || '',\r\n              dropdownOptions: options,\r\n            }\r\n          };\r\n        })\r\n        .filter(el => el.type !== 'button' && el.id !== SUBMIT_BUTTON_ID); // Exclude the submit button\r\n\r\n      // Set new form data\r\n      setFormName(loadedName);\r\n      setFormLabel(loadedLabel);\r\n      setFormTags(loadedTags.join(', '));\r\n      setFormElements(elements);\r\n      setFormToLoad(null); // Reset formToLoad after loading\r\n\r\n      console.log(`Form \"${formToLoad}\" loaded successfully!`);\r\n    } catch (error) {\r\n      console.error('Error loading form:', error);\r\n      alert('Failed to load form data.');\r\n      setFormToLoad(null); // Reset formToLoad on error\r\n    }\r\n  }\r\n}, [formElements, formToLoad]); // Only run this effect when formElements or formToLoad changes\r\n\r\nconst addSubmitButton = () => {\r\n  setFormElements(prev => [\r\n    ...prev,\r\n    {\r\n      id: SUBMIT_BUTTON_ID,\r\n      type: 'button',\r\n      key: 'Submit',\r\n      label: 'Submit',\r\n      alignment: 'center',\r\n      required: false,\r\n      settings: {},\r\n    },\r\n  ]);\r\n};\r\n\r\n  const generateKey = (type) => {\r\n    const existingCount = formElements.filter((el) => el.type === type).length + 1;\r\n    return `${type} ${existingCount}`; // Example: \"inputText 1\"\r\n  };\r\n  \r\n  const addElement = (type) => {\r\n    const newKey = generateKey(type); // Generate the key\r\n    const newElement = {\r\n      id: Date.now().toString(),\r\n      type,\r\n      key: newKey, // Assign the generated key\r\n      label: type === 'heading' ? 'Heading' : type,\r\n      alignment: 'center',\r\n      settings: {\r\n        headerLevel: 'h1',\r\n        placeholder:\r\n        type === 'email'\r\n          ? 'Email Address'\r\n          : type === 'password'\r\n          ? 'Enter password'\r\n          : 'Enter text here...',\r\n        useCurrentDate: false,\r\n        defaultBoolean: 'true',\r\n        dropdownOptions: [],\r\n        min: '',\r\n        max: '',\r\n        step: '',\r\n        defaultValue: '',\r\n        showPasswordOption: false,\r\n        passwordLength: '',\r\n        requireSymbols: false,\r\n        requireNumbers: false,\r\n        csvData: []\r\n      },\r\n      required: false,\r\n      textColor: '#ffffff',\r\n      fontFamily: 'Arial',\r\n    };\r\n  \r\n    // Ensure new elements are added before the Submit button\r\n    setFormElements((prev) => {\r\n      const submitIndex = prev.findIndex((el) => el.id === SUBMIT_BUTTON_ID);\r\n      const newFormElements = [...prev];\r\n      newFormElements.splice(submitIndex, 0, newElement); // Insert new element before submit button\r\n      return newFormElements;\r\n    });\r\n  };\r\n\r\n  const isKeyUnique = (key) => {\r\n    return !formElements.some((el) => el.key === key && el.id !== selectedElement?.id);\r\n  };\r\n  const handleSubmit = () => {\r\n    const formData = formElements.filter(el => el.id !== SUBMIT_BUTTON_ID); // Exclude submit button from data\r\n    console.log('Form submitted:', formData);\r\n\r\n    // Example API call\r\n    fetch('/api/submit-form', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ elements: formData }),\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => console.log('Form submission response:', data))\r\n      .catch(error => console.error('Error submitting form:', error));\r\n  };\r\n\r\n  const handleImageUpload = (event, elementId) => {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        const imageSrc = e.target.result;\r\n        setFormElements((prev) =>\r\n          prev.map((el) =>\r\n            el.id === elementId\r\n              ? { ...el, settings: { ...el.settings, imageSrc } }\r\n              : el\r\n          )\r\n        );\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n  \r\n  const saveForm = () => {\r\n    if (!formName) {\r\n      alert('Please enter a name for the form.');\r\n      return;\r\n    }\r\n  \r\n    const formData = {\r\n      name: formName,\r\n      label: formLabel,\r\n      tags: formTags ? formTags.split(',').map(tag => tag.trim()) : [], // Split tags by comma\r\n      elements: formElements,\r\n    };\r\n  \r\n    const convertToXML = (obj) => {\r\n      let xml = '';\r\n    \r\n      for (let key in obj) {\r\n        if (Array.isArray(obj[key])) {\r\n          if (key === 'dropdownOptions') {\r\n            xml += `<${key}>`;\r\n            obj[key].forEach((option) => {\r\n              xml += `<option>${option}</option>`;\r\n            });\r\n            xml += `</${key}>`;\r\n          } else {\r\n            xml += `<${key}>`;\r\n            obj[key].forEach((element) => {\r\n              xml += `<element>${convertToXML(element)}</element>`;\r\n            });\r\n            xml += `</${key}>`;\r\n          }\r\n        } else if (typeof obj[key] === 'object') {\r\n          xml += `<${key}>${convertToXML(obj[key])}</${key}>`;\r\n        } else {\r\n          xml += `<${key}>${obj[key]}</${key}>`;\r\n        }\r\n      }\r\n    \r\n      return xml;\r\n    };\r\n    \r\n    \r\n    \r\n    const xmlData = `<form>${convertToXML(formData)}</form>`;\r\n    localStorage.setItem(formName, xmlData);\r\n    alert(`Form \"${formName}\" saved successfully!`);\r\n  };\r\n  \r\n  const removeElement = (id) => {\r\n    if (id === SUBMIT_BUTTON_ID) return; // Prevent deletion of the Submit button\r\n    setFormElements(prev => prev.filter(el => el.id !== id));\r\n    if (selectedElement?.id === id) {\r\n      setSelectedElement(null);\r\n    }\r\n  };\r\n\r\n  const handleEditClick = (element) => {\r\n    setSelectedElement(element);\r\n    setDraftSettings({\r\n      ...element.settings,\r\n      key: element.key || '',  // Populate the key value properly\r\n      label: element.label,\r\n      alignment: element.alignment,\r\n      required: element.required,\r\n      placeholder: element.settings?.placeholder,\r\n      isValid: element.settings?.isValid,\r\n      useCurrentDate: element.settings?.useCurrentDate,\r\n      defaultBoolean: element.settings?.defaultBoolean,\r\n      min: element.settings?.min,\r\n      max: element.settings?.max,\r\n      step: element.settings?.step,\r\n      defaultValue: element.settings?.defaultValue,\r\n      showPasswordOption: element.settings?.showPasswordOption,\r\n      passwordLength: element.settings?.passwordLength,\r\n      requireSymbols: element.settings?.requireSymbols,\r\n      requireNumbers: element.settings?.requireNumbers,\r\n      csvData: element.settings?.csvData || [],\r\n    });\r\n  };\r\n  \r\n  const applyDraftChanges = () => {\r\n    if (selectedElement && draftSettings) {\r\n      if (isKeyUnique(draftSettings.key)) {\r\n        updateElementSettings(selectedElement.id, {\r\n          ...draftSettings,\r\n          key: draftSettings.key,  // Update the key\r\n        });\r\n        setSelectedElement(null);\r\n        setDraftSettings(null);\r\n      } else {\r\n        alert('The key must be unique. Please choose another.');\r\n      }\r\n    }\r\n  };\r\n  \r\n  const cancelChanges = () => {\r\n    setSelectedElement(null);\r\n    setDraftSettings(null);\r\n  };\r\n\r\n  const updateElementSettings = (id, newSettings) => {\r\n    setFormElements((prev) =>\r\n      prev.map((el) =>\r\n        el.id === id.toString()\r\n          ? {\r\n              ...el,\r\n              ...newSettings,\r\n              settings: {\r\n                ...el.settings,\r\n                ...newSettings,\r\n              },\r\n            }\r\n          : el\r\n      )\r\n    );\r\n  };\r\n  \r\n  const handleDragStart = ({ active }) => {\r\n    setDraggingElement(active.id);\r\n  };\r\n\r\n  const handleDragEnd = ({ active, over }) => {\r\n    if (over && active.id !== over.id) {\r\n      const oldIndex = formElements.findIndex((el) => el.id === active.id);\r\n      const newIndex = formElements.findIndex((el) => el.id === over.id);\r\n      setFormElements((prev) => arrayMove(prev, oldIndex, newIndex));\r\n    }\r\n    setDraggingElement(null);\r\n  };\r\n\r\n  const handleCSVUpload = (event, elementId) => {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      if (!file.name.endsWith('.csv')) {\r\n        alert('Please upload a valid .csv file.');\r\n        return;\r\n      }\r\n      setSelectedFileName(file.name); // Update the selected file name\r\n      Papa.parse(file, {\r\n        complete: (result) => {\r\n          const csvData = result.data;\r\n          console.log('Parsed CSV Data:', csvData);\r\n  \r\n          setFormElements((prev) =>\r\n            prev.map((el) =>\r\n              el.id === elementId\r\n                ? { ...el, settings: { ...el.settings, csvData } }\r\n                : el\r\n            )\r\n          );\r\n        },\r\n        header: false,\r\n      });\r\n    }\r\n  };\r\n  \r\n  const handleResetForm = () => {\r\n    if (window.confirm('Are you sure you want to reset the form?')) {\r\n      setFormElements([]);\r\n    }\r\n  };\r\n\r\n  const validatePassword = (password, settings) => {\r\n    if (settings?.passwordLength && password.length < settings.passwordLength) {\r\n      return false;\r\n    }\r\n    if (settings?.requireSymbols && !/[!@#$%^&*(),.?\":{}|<>]/.test(password)) {\r\n      return false;\r\n    }\r\n    if (settings?.requireNumbers && !/[0-9]/.test(password)) {\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const renderElementContent = (element) => {\r\n    const isBeingEdited = selectedElement?.id === element.id;\r\n    const settings = isBeingEdited ? draftSettings : element.settings;\r\n  \r\n    const alignmentStyle = {\r\n      textAlign: settings?.alignment || 'center',\r\n    };\r\n  \r\n    // Use the element key as the default label if the label isn't set\r\n    const displayLabel = settings?.label || element.key || element.label;\r\n  \r\n    switch (element.type) {\r\n      case 'heading': {\r\n        const HeaderTag = settings?.headerLevel || 'h1';\r\n        const alignmentStyle = { \r\n          textAlign: settings?.alignment || 'center', \r\n          width: '100%', \r\n          margin: '0 auto'  // Ensures it's centered\r\n        };\r\n      \r\n        return (\r\n          <div style={{ display: 'flex', justifyContent: 'center', width: '100%' }}>\r\n            <HeaderTag style={alignmentStyle}>\r\n              {settings?.label || element.label}\r\n            </HeaderTag>\r\n          </div>\r\n        );\r\n      }      \r\n      case 'text':\r\n        return <p style={alignmentStyle}>{displayLabel}</p>;\r\n      case 'button':\r\n        return (\r\n          <div style={{ display: 'flex', justifyContent: element.alignment || 'center', width: '100%' }}>\r\n            <button\r\n              onClick={element.id === SUBMIT_BUTTON_ID ? handleSubmit : undefined} // Submit button triggers API\r\n              className=\"custom-button\"\r\n              style={{ padding: '10px 20px', borderRadius: '6px', margin: '5px', backgroundColor: '#007bff', color: 'white' }}\r\n            >\r\n              {element.label}\r\n            </button>\r\n          </div>\r\n        );\r\n      case 'inputText':\r\n        return (\r\n          <div style={{ display: 'flex', justifyContent: settings?.alignment || 'center', width: '100%' }}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder={settings?.placeholder || displayLabel}\r\n              required={settings?.required}\r\n              style={{\r\n                borderRadius: '8px',\r\n                padding: '10px',\r\n                border: '1px solid #ced4da',\r\n                textAlign: 'center',\r\n              }}\r\n            />\r\n          </div>\r\n        );\r\n      case 'email':\r\n        return (\r\n          <div style={{ display: 'flex', justifyContent: settings?.alignment || 'center', width: '100%' }}>\r\n            <input\r\n              type=\"email\"\r\n              placeholder={settings?.placeholder || 'Email Address'}\r\n              required={settings?.required}\r\n              style={{\r\n                borderRadius: '8px',\r\n                padding: '10px',\r\n                border: settings?.isValid === false ? '2px solid #ff0000' : '1px solid #ced4da',\r\n                boxShadow: settings?.isValid === false ? '0 0 5px #ff0000' : 'none',\r\n                textAlign: 'center'\r\n              }}\r\n              onBlur={(e) => {\r\n                if (e.target.value.trim() !== '') {\r\n                  const isValid = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(e.target.value);\r\n                  updateElementSettings(element.id, { ...settings, isValid });\r\n                }\r\n              }}\r\n            />\r\n            {!settings?.isValid && settings?.isValid !== undefined && (\r\n              <span style={{ color: '#ff0000', fontSize: '0.8em', marginTop: '5px' }}>Invalid email address</span>\r\n            )}\r\n          </div>\r\n        );\r\n      case 'divider':\r\n        return <hr style={{ ...alignmentStyle, width: '100%' }} />;\r\n      case 'image':\r\n          return (\r\n            <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', width: '100%' }}>\r\n              <label className=\"custom-file-label\">\r\n                Choose Image\r\n                <input\r\n                  type=\"file\"\r\n                  className=\"custom-file-input\"\r\n                  accept=\"image/*\"\r\n                  onChange={(e) => handleImageUpload(e, element.id)}\r\n                />\r\n              </label>\r\n              {settings?.imageSrc ? (\r\n                <img\r\n                  src={settings.imageSrc}\r\n                  alt=\"Uploaded\"\r\n                  style={{ maxWidth: '100%', height: 'auto', borderRadius: '8px', marginTop: '10px' }}\r\n                />\r\n              ) : (\r\n                <img\r\n                  src=\"https://via.placeholder.com/150\"\r\n                  alt=\"Placeholder\"\r\n                  style={{ maxWidth: '100%', height: 'auto', borderRadius: '8px', marginTop: '10px' }}\r\n                />\r\n              )}\r\n            </div>\r\n          );       \r\n      case 'file':\r\n          return (\r\n            <div style={{ display: 'flex', justifyContent: settings?.alignment || 'center', width: '100%' }}>\r\n              <label className=\"custom-file-label\">\r\n                Upload File\r\n                <input\r\n                  type=\"file\"\r\n                  className=\"custom-file-input\"\r\n                  onChange={(e) => handleCSVUpload(e, element.id)}\r\n                  accept=\".csv\"\r\n                />\r\n              </label>\r\n              <span className=\"file-name\">No file chosen</span>\r\n            </div>\r\n          );\r\n      case 'table':\r\n          const tableData = element.settings?.csvData || [];\r\n          console.log('Rendering Table with Data:', tableData);\r\n    \r\n          return (\r\n            <div style={{ display: 'flex', justifyContent: 'center', width: '100%' }}>\r\n              <div>\r\n                {/* Styled file input and label */}\r\n                <div style={{ marginBottom: '10px' }}>\r\n                  <input\r\n                    type=\"file\"\r\n                    accept=\".csv\"\r\n                    id={`file-upload-${element.id}`}\r\n                    onChange={(e) => handleCSVUpload(e, element.id)}\r\n                    style={{ display: 'none' }} // Hide default input\r\n                  />\r\n                  <label\r\n                    htmlFor={`file-upload-${element.id}`}\r\n                    style={{\r\n                      backgroundColor: '#007bff',\r\n                      color: 'white',\r\n                      padding: '10px 20px',\r\n                      borderRadius: '6px',\r\n                      cursor: 'pointer',\r\n                      display: 'inline-block',\r\n                    }}\r\n                  >\r\n                    Upload CSV File\r\n                  </label>\r\n                  <span style={{ marginLeft: '10px' }}>\r\n                    {selectedFileName || 'No file chosen'}\r\n                  </span>\r\n                </div>\r\n    \r\n                <table style={{ margin: '0 auto', borderCollapse: 'collapse', width: '100%' }}>\r\n                  <tbody>\r\n                    {tableData.length > 0 ? (\r\n                      tableData.map((row, rowIndex) => (\r\n                        <tr key={`row-${rowIndex}`}>\r\n                          {row.map((cell, cellIndex) => (\r\n                            <td\r\n                              key={`cell-${rowIndex}-${cellIndex}`}\r\n                              style={{ border: '1px solid #ddd', padding: '8px' }}\r\n                            >\r\n                              {cell}\r\n                            </td>\r\n                          ))}\r\n                        </tr>\r\n                      ))\r\n                    ) : (\r\n                      <tr>\r\n                        <td style={{ textAlign: 'center' }}>No Data Available</td>\r\n                      </tr>\r\n                    )}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          );\r\n      case 'dateTime':\r\n      return (\r\n        <div style={{ display: 'flex', justifyContent: settings?.alignment || 'center', width: '100%' }}>\r\n          {settings?.useCurrentDate ? (\r\n\r\n            <input\r\n              type=\"text\"\r\n              value={new Date().toLocaleDateString('en-US')}\r\n              readOnly\r\n              style={{\r\n                borderRadius: '8px',\r\n                padding: '10px',\r\n                border: '1px solid #ced4da',\r\n                textAlign: 'center'\r\n              }}\r\n            />\r\n          ) : (\r\n            <input\r\n              type=\"date\"\r\n              style={{\r\n                borderRadius: '8px',\r\n                padding: '10px',\r\n                border: '1px solid #ced4da',\r\n                textAlign: 'center'\r\n              }}\r\n            />\r\n          )}\r\n        </div>\r\n      );    \r\n      case 'dropdown':\r\n        return (\r\n          <div style={{ display: 'flex', justifyContent: 'center', width: '100%' }}>\r\n            <select\r\n              style={{\r\n                borderRadius: '8px',\r\n                padding: '10px',\r\n                border: '1px solid #ced4da',\r\n                textAlign: 'center',\r\n              }}\r\n            >\r\n              <option value=\"\">Select an option</option>\r\n              {settings?.dropdownOptions?.map((option, idx) => (\r\n                <option key={idx} value={option}>\r\n                  {option}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        );    \r\n      case 'boolean':\r\n        return (\r\n          <div style={{ display: 'flex', justifyContent: settings?.alignment || 'center', width: '100%' }}>\r\n            <select\r\n              value={settings?.defaultBoolean || 'true'}\r\n              onChange={(e) => updateElementSettings(element.id, { ...settings, defaultBoolean: e.target.value })}\r\n              style={{\r\n                borderRadius: '8px',\r\n                padding: '10px',\r\n                border: '1px solid #ced4da',\r\n                textAlign: 'center'\r\n              }}\r\n            >\r\n              <option value=\"true\">True</option>\r\n              <option value=\"false\">False</option>\r\n            </select>\r\n          </div>\r\n        );      \r\n      case 'number':\r\n        return (\r\n          <div style={{ display: 'flex', justifyContent: settings?.alignment || 'center', width: '100%' }}>\r\n            <input\r\n              type=\"number\"\r\n              min={settings?.min}\r\n              max={settings?.max}\r\n              step={settings?.step}\r\n              defaultValue={settings?.defaultValue}\r\n              required={settings?.required}\r\n              style={{\r\n                borderRadius: '8px',\r\n                padding: '10px',\r\n                border: '1px solid #ced4da',\r\n                textAlign: 'center'\r\n              }}\r\n            />\r\n          </div>\r\n        );\r\n      case 'password':\r\n      return (\r\n        <div\r\n          style={{\r\n            width: '100%',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: settings?.alignment === 'left' ? 'flex-start' : settings?.alignment === 'right' ? 'flex-end' : 'center',\r\n            justifyContent: 'center',\r\n          }}\r\n        >\r\n          {/* Password Input Field and Show Password Option */}\r\n          <div style={{ display: 'flex', flexDirection: 'row', alignItems: 'center', justifyContent: settings?.alignment === 'left' ? 'flex-start' : settings?.alignment === 'right' ? 'flex-end' : 'center', width: '100%' }}>\r\n            <input\r\n              type={settings?.showPasswordOption && settings?.showPassword ? 'text' : 'password'}\r\n              placeholder={settings?.placeholder || 'Enter password'}\r\n              required={settings?.required}\r\n              onBlur={(e) => {\r\n                const isValid = validatePassword(e.target.value, settings);\r\n                updateElementSettings(element.id, { ...settings, isValid });\r\n              }}\r\n              style={{\r\n                borderRadius: '8px',\r\n                padding: '10px',\r\n                width: '300px', // Adjust the width as needed\r\n                border: settings?.isValid === false ? '2px solid #ff0000' : '1px solid #ced4da',\r\n                textAlign: 'left', // Ensures the placeholder text stays aligned left\r\n                marginRight: '10px',\r\n              }}\r\n            />\r\n            {settings?.showPasswordOption && (\r\n              <label style={{ display: 'flex', alignItems: 'center', marginLeft: '10px' }}>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={settings?.showPassword || false}\r\n                  onChange={(e) => updateElementSettings(element.id, { ...settings, showPassword: e.target.checked })}\r\n                  style={{ marginRight: '5px' }}\r\n                />\r\n                Show Password\r\n              </label>\r\n            )}\r\n          </div>\r\n          {/* Password Requirements */}\r\n          <div style={{ marginTop: '10px', textAlign: settings?.alignment || 'center', width: '100%', display: 'flex', flexDirection: 'column', alignItems: settings?.alignment === 'left' ? 'flex-start' : settings?.alignment === 'right' ? 'flex-end' : 'center' }}>\r\n            {settings?.passwordLength && <p style={{ marginBottom: '5px' }}>Requires Minimum Length: {settings.passwordLength}</p>}\r\n            {settings?.requireSymbols && <p style={{ marginBottom: '5px' }}>Requires Symbols: Yes</p>}\r\n            {settings?.requireNumbers && <p>Requires Numbers: Yes</p>}\r\n          </div>\r\n          {/* Validation Error */}\r\n          {!settings?.isValid && settings?.isValid !== undefined && (\r\n            <span style={{ color: '#ff0000', fontSize: '0.8em', marginTop: '5px' }}>Password does not meet requirements</span>\r\n          )}\r\n        </div>\r\n      );\r\n      default:\r\n        return (\r\n          <input\r\n            type={element.type}\r\n            placeholder={settings?.placeholder || displayLabel}\r\n            required={settings?.required}\r\n            style={alignmentStyle}\r\n          />\r\n        );\r\n    }\r\n  };\r\n  \r\n  const areRequiredFieldsFilled = () => {\r\n    return formElements.every((el) => {\r\n      if (el.required) {\r\n        return el.settings.label && el.settings.label.trim() !== '';\r\n      }\r\n      return true;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-builder-container\" style={{ height: '100vh', overflow: 'hidden' }}>\r\n<div className=\"sidebar\">\r\n\r\n\r\n  {/* Form Name Input */}\r\n  <div className=\"form-name-section\" style={{ marginBottom: '20px' }}>\r\n    <label htmlFor=\"form-name\" className=\"sidebar-label\">Form Name:</label>\r\n    <input\r\n      id=\"form-name\"\r\n      type=\"text\"\r\n      value={formName}\r\n      onChange={(e) => setFormName(e.target.value)}\r\n      placeholder=\"Enter form name\"\r\n      className=\"form-input\"\r\n    />\r\n  </div>\r\n\r\n  {/* Label Input (Required) */}\r\n  <div className=\"form-label-section\" style={{ marginBottom: '20px' }}>\r\n    <label htmlFor=\"form-label\" className=\"sidebar-label\">Label (Required):</label>\r\n    <input\r\n      id=\"form-label\"\r\n      type=\"text\"\r\n      value={formLabel}\r\n      onChange={(e) => setFormLabel(e.target.value)}\r\n      placeholder=\"Enter form label\"\r\n      className=\"form-input\"\r\n    />\r\n  </div>\r\n\r\n  <div className=\"element-input-wrapper\" style={{ display: 'flex', gap: '10px' }}>\r\n    <div className=\"element-selector\">\r\n      <h4>Elements</h4>\r\n      {ELEMENT_TYPES.map((element) => (\r\n        <button\r\n          key={element.id}\r\n          onClick={() => addElement(element.id)}\r\n          className=\"element-button\"\r\n        >\r\n          {element.label}\r\n        </button>\r\n      ))}\r\n    </div>\r\n\r\n    <div className=\"input-selector\">\r\n      <h4>Input Fields</h4>\r\n      {INPUT_FIELDS.map((input) => (\r\n        <button\r\n          key={input.id}\r\n          onClick={() => addElement(input.id)}\r\n          className=\"input-button\"\r\n        >\r\n          {input.label}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  </div>\r\n  <div className=\"load-section\" style={{ marginBottom: '20px' }}>\r\n    <label htmlFor=\"saved-forms\" className=\"sidebar-label\">Load Saved Form:</label>\r\n    <select\r\n      id=\"saved-forms\"\r\n      value={selectedForm}\r\n      onChange={(e) => setSelectedForm(e.target.value)}\r\n      className=\"sidebar-select\"\r\n    >\r\n      <option value=\"\">-- Select a Form --</option>\r\n      {savedForms.map((formName) => (\r\n        <option key={formName} value={formName}>\r\n          {formName}\r\n        </option>\r\n      ))}\r\n    </select>\r\n    <button onClick={loadForm} className=\"load-form-button\">Load Form</button>\r\n  </div>\r\n  <button onClick={saveForm} className=\"save-form-button\">Save Form</button>\r\n  <button onClick={handleResetForm} className=\"reset-form-button\">Reset Form</button>\r\n</div>\r\n\r\n\r\n      <div className=\"form-builder\" ref={formContainerRef} style={{ height: '100%', overflowY: 'auto' }}>\r\n        <DndContext\r\n          collisionDetection={closestCenter}\r\n          onDragEnd={handleDragEnd}\r\n          onDragStart={handleDragStart}\r\n        >\r\n          <SortableContext items={formElements} strategy={rectSortingStrategy}>\r\n            <div className=\"form-preview\">\r\n              {formElements.map((element) => (\r\n                <SortableFormElement\r\n                  key={element.id}\r\n                  element={element}\r\n                  handleEditClick={handleEditClick}\r\n                  renderElementContent={renderElementContent}\r\n                />\r\n              ))}\r\n            </div>\r\n          </SortableContext>\r\n          {draggingElement && (\r\n            <DragOverlay>\r\n              <div className=\"dragging-overlay\">Dragging</div>\r\n            </DragOverlay>\r\n          )}\r\n        </DndContext>\r\n      </div>\r\n\r\n      {selectedElement && (\r\n        <div className=\"element-editor\">\r\n          <h3>Edit Element</h3>\r\n          \r\n          <label>\r\n          Key:\r\n          <input\r\n            type=\"text\"\r\n            value={draftSettings?.key || ''}\r\n            onChange={(e) =>\r\n              setDraftSettings((prev) => ({ ...prev, key: e.target.value }))\r\n            }\r\n           />\r\n          </label>\r\n          <label>\r\n            Label:\r\n            <input\r\n              type=\"text\"\r\n              value={draftSettings?.label || ''}\r\n              onChange={(e) =>\r\n                setDraftSettings((prev) => ({ ...prev, label: e.target.value }))\r\n              }\r\n            />\r\n          </label>\r\n          {selectedElement.type === 'heading' && (\r\n            <label>\r\n              Header Level:\r\n              <select\r\n                value={draftSettings?.headerLevel || 'h1'}\r\n                onChange={(e) =>\r\n                  setDraftSettings((prev) => ({\r\n                    ...prev,\r\n                    headerLevel: e.target.value,\r\n                  }))\r\n                }\r\n              >\r\n                <option value=\"h1\">H1</option>\r\n                <option value=\"h2\">H2</option>\r\n                <option value=\"h3\">H3</option>\r\n                <option value=\"h4\">H4</option>\r\n                <option value=\"h5\">H5</option>\r\n                <option value=\"h6\">H6</option>\r\n              </select>\r\n            </label>\r\n          )}\r\n          <label>\r\n            Alignment:\r\n            <select\r\n              value={draftSettings?.alignment || 'center'}\r\n              onChange={(e) =>\r\n                setDraftSettings((prev) => ({ ...prev, alignment: e.target.value }))\r\n              }\r\n            >\r\n              <option value=\"left\">Left</option>\r\n              <option value=\"center\">Center</option>\r\n              <option value=\"right\">Right</option>\r\n            </select>\r\n          </label>\r\n          {(selectedElement.type === 'inputText' || selectedElement.type === 'email') && (\r\n            <label>\r\n              Placeholder Text:\r\n              <input\r\n                type=\"text\"\r\n                value={draftSettings?.placeholder || ''}\r\n                onChange={(e) =>\r\n                  setDraftSettings((prev) => ({ ...prev, placeholder: e.target.value }))\r\n                }\r\n              />\r\n            </label>\r\n          )}\r\n          {selectedElement.type === 'dateTime' && (\r\n            <label>\r\n              Use Current Date:\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={draftSettings?.useCurrentDate || false}\r\n                onChange={(e) =>\r\n                  setDraftSettings((prev) => ({ ...prev, useCurrentDate: e.target.checked }))\r\n                }\r\n              />\r\n            </label>\r\n          )}\r\n          {selectedElement.type === 'dropdown' && (\r\n          <>\r\n            <label>Dropdown Options:</label>\r\n            {draftSettings?.dropdownOptions?.map((option, idx) => (\r\n              <div key={idx} style={{ display: 'flex', alignItems: 'center' }}>\r\n                <input\r\n                  type=\"text\"\r\n                  value={option}\r\n                  onChange={(e) =>\r\n                    setDraftSettings((prev) => {\r\n                      const updatedOptions = [...prev.dropdownOptions];\r\n                      updatedOptions[idx] = e.target.value;\r\n                      return { ...prev, dropdownOptions: updatedOptions };\r\n                    })\r\n                  }\r\n                />\r\n                <button\r\n                  onClick={() =>\r\n                    setDraftSettings((prev) => ({\r\n                      ...prev,\r\n                      dropdownOptions: prev.dropdownOptions.filter((_, i) => i !== idx),\r\n                    }))\r\n                  }\r\n                  style={{\r\n                    marginLeft: '10px',\r\n                    padding: '5px 10px',\r\n                    color: 'white',\r\n                    backgroundColor: 'red',\r\n                    borderRadius: '4px',\r\n                    cursor: 'pointer',\r\n                  }}\r\n                >\r\n                 X\r\n                </button>\r\n              </div>\r\n            ))}\r\n<button\r\n  onClick={() =>\r\n    setDraftSettings((prev) => ({\r\n      ...prev,\r\n      dropdownOptions: [...(prev.dropdownOptions || []), ''],\r\n    }))\r\n  }\r\n  className=\"add-option-button\"\r\n>\r\n  +\r\n</button>\r\n\r\n          </>\r\n        )}\r\n\r\n          {selectedElement.type === 'boolean' && (\r\n            <label>\r\n              Default Boolean Value:\r\n              <select\r\n                value={draftSettings?.defaultBoolean || 'true'}\r\n                onChange={(e) =>\r\n                  setDraftSettings((prev) => ({ ...prev, defaultBoolean: e.target.value }))\r\n                }\r\n              >\r\n                <option value=\"true\">True</option>\r\n                <option value=\"false\">False</option>\r\n              </select>\r\n            </label>\r\n          )}\r\n          {selectedElement.type === 'number' && (\r\n            <>\r\n              <label>\r\n                Minimum Value:\r\n                <input\r\n                  type=\"number\"\r\n                  value={draftSettings?.min || ''}\r\n                  onChange={(e) =>\r\n                    setDraftSettings((prev) => ({ ...prev, min: e.target.value }))\r\n                  }\r\n                />\r\n              </label>\r\n              <label>\r\n                Maximum Value:\r\n                <input\r\n                  type=\"number\"\r\n                  value={draftSettings?.max || ''}\r\n                  onChange={(e) =>\r\n                    setDraftSettings((prev) => ({ ...prev, max: e.target.value }))\r\n                  }\r\n                />\r\n              </label>\r\n              <label>\r\n                Step Value:\r\n                <input\r\n                  type=\"number\"\r\n                  value={draftSettings?.step || ''}\r\n                  onChange={(e) =>\r\n                    setDraftSettings((prev) => ({ ...prev, step: e.target.value }))\r\n                  }\r\n                />\r\n              </label>\r\n              <label>\r\n                Default Value:\r\n                <input\r\n                  type=\"number\"\r\n                  value={draftSettings?.defaultValue || ''}\r\n                  onChange={(e) =>\r\n                    setDraftSettings((prev) => ({ ...prev, defaultValue: e.target.value }))\r\n                  }\r\n                />\r\n              </label>\r\n            </>\r\n          )}\r\n          {selectedElement.type === 'password' && (\r\n            <>\r\n              <label>\r\n                Show Password Option:\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={draftSettings?.showPasswordOption || false}\r\n                  onChange={(e) =>\r\n                    setDraftSettings((prev) => ({\r\n                      ...prev,\r\n                      showPasswordOption: e.target.checked,\r\n                    }))\r\n                  }\r\n                />\r\n              </label>\r\n              <label>\r\n                Minimum Password Length:\r\n                <input\r\n                  type=\"number\"\r\n                  value={draftSettings?.passwordLength || ''}\r\n                  onChange={(e) =>\r\n                    setDraftSettings((prev) => ({\r\n                      ...prev,\r\n                      passwordLength: e.target.value,\r\n                    }))\r\n                  }\r\n                />\r\n              </label>\r\n              <label>\r\n                Requires Symbols:\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={draftSettings?.requireSymbols || false}\r\n                  onChange={(e) =>\r\n                    setDraftSettings((prev) => ({\r\n                      ...prev,\r\n                      requireSymbols: e.target.checked,\r\n                    }))\r\n                  }\r\n                />\r\n              </label>\r\n              <label>\r\n                Requires Numbers:\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={draftSettings?.requireNumbers || false}\r\n                  onChange={(e) =>\r\n                    setDraftSettings((prev) => ({\r\n                      ...prev,\r\n                      requireNumbers: e.target.checked,\r\n                    }))\r\n                  }\r\n                />\r\n              </label>\r\n            </>\r\n          )}\r\n          <button\r\n            onClick={applyDraftChanges}\r\n            className=\"save-changes custom-button\"\r\n            style={{\r\n              backgroundColor: '#4285f4',\r\n              color: 'white',\r\n              border: 'none',\r\n              padding: '10px 20px',\r\n              textAlign: 'center',\r\n              fontSize: '16px',\r\n              cursor: 'pointer',\r\n              margin: '5px',\r\n              borderRadius: '6px'\r\n            }}\r\n            disabled={!areRequiredFieldsFilled()}\r\n          >\r\n            Save Changes\r\n          </button>\r\n          <button\r\n            onClick={cancelChanges}\r\n            className=\"cancel-button custom-button\"\r\n            style={{\r\n              backgroundColor: '#6c757d',\r\n              color: 'white',\r\n              border: 'none',\r\n              padding: '10px 20px',\r\n              textAlign: 'center',\r\n              fontSize: '16px',\r\n              cursor: 'pointer',\r\n              margin: '5px',\r\n              borderRadius: '6px'\r\n            }}\r\n          >\r\n            Cancel\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              if (window.confirm('Are you sure you want to delete this element?')) {\r\n                removeElement(selectedElement.id);\r\n              }\r\n            }}\r\n            className=\"delete-element custom-button\"\r\n            style={{\r\n              backgroundColor: '#dc3545',\r\n              color: 'white',\r\n              border: 'none',\r\n              padding: '10px 20px',\r\n              textAlign: 'center',\r\n              fontSize: '16px',\r\n              cursor: 'pointer',\r\n              margin: '5px',\r\n              borderRadius: '6px'\r\n            }}\r\n          >\r\n            Delete Element\r\n          </button>         \r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SortableFormElement = ({ element, handleEditClick, renderElementContent }) => {\r\n  const { attributes, listeners, setNodeRef, transform, transition } = useSortable({\r\n    id: element.id,\r\n  });\r\n\r\n  const style = {\r\n    transform: transform ? `translate3d(${transform.x}px, ${transform.y}px, 0)` : undefined,\r\n    transition,\r\n    backgroundColor: element.settings?.backgroundColor || 'inherit',\r\n  };\r\n\r\n  return (\r\n    <div\r\n      ref={setNodeRef}\r\n      style={style}\r\n      className=\"form-element\"\r\n      onClick={() => handleEditClick(element)}\r\n    >\r\n      {renderElementContent(element)}\r\n      <button\r\n        className=\"drag-handle\"\r\n        {...listeners}\r\n        {...attributes}\r\n        onMouseDown={(e) => e.stopPropagation()}\r\n      >\r\n        Drag\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormBuilder;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}