{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abarbas\\\\Desktop\\\\soar_web_forms\\\\src\\\\components\\\\FormDisplay.js\",\n  _s = $RefreshSig$();\n// src/components/FormDisplay.js\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './FormDisplay.css';\n\n// Move authInfo to the top so it's accessible globally\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet authInfo = {\n  token: '',\n  server: ''\n};\nconst FormDisplay = () => {\n  _s();\n  const {\n    formName\n  } = useParams(); // Get form name from the URL\n  const [formData, setFormData] = useState(null);\n  const [formValues, setFormValues] = useState({}); // Store user input\n  // Function to fetch auth info from the configuration table\n  const fetchAuthInfo = async () => {\n    try {\n      const response = await fetch('/api/configuration'); // Call the API endpoint\n      if (!response.ok) {\n        throw new Error('Failed to fetch auth info');\n      }\n      const data = await response.json();\n      // Update authInfo with fetched values\n      authInfo = {\n        token: data.ph_auth_token,\n        server: data.server\n      };\n\n      // Log the server value and auth token\n      console.log('Updated Server:', authInfo.server); // Log server value\n      console.log('Updated Auth Token:', authInfo.token); // Log auth token\n    } catch (error) {\n      console.error('Error fetching auth info:', error);\n    }\n  };\n  useEffect(() => {\n    fetchAuthInfo(); // Fetch auth info when the component mounts\n  }, []);\n  const parseXML = xmlString => {\n    var _xmlDoc$querySelector, _xmlDoc$querySelector2;\n    const parser = new DOMParser();\n    const xmlDoc = parser.parseFromString(xmlString, 'application/xml');\n    const name = ((_xmlDoc$querySelector = xmlDoc.querySelector('form > name')) === null || _xmlDoc$querySelector === void 0 ? void 0 : _xmlDoc$querySelector.textContent) || 'Unnamed Form';\n    const label = ((_xmlDoc$querySelector2 = xmlDoc.querySelector('form > label')) === null || _xmlDoc$querySelector2 === void 0 ? void 0 : _xmlDoc$querySelector2.textContent) || 'event_data';\n    const elements = Array.from(xmlDoc.querySelectorAll('elements > element')).map(el => {\n      var _el$querySelector, _el$querySelector2, _el$querySelector3, _el$querySelector4, _el$querySelector5, _el$querySelector6;\n      const optionsNode = el.querySelector('dropdownOptions');\n      const options = optionsNode ? Array.from(optionsNode.querySelectorAll('option')).map(opt => opt.textContent) : [];\n      return {\n        type: ((_el$querySelector = el.querySelector('type')) === null || _el$querySelector === void 0 ? void 0 : _el$querySelector.textContent) || 'text',\n        key: ((_el$querySelector2 = el.querySelector('key')) === null || _el$querySelector2 === void 0 ? void 0 : _el$querySelector2.textContent) || '',\n        label: ((_el$querySelector3 = el.querySelector('label')) === null || _el$querySelector3 === void 0 ? void 0 : _el$querySelector3.textContent) || '',\n        required: ((_el$querySelector4 = el.querySelector('required')) === null || _el$querySelector4 === void 0 ? void 0 : _el$querySelector4.textContent) === 'true',\n        placeholder: ((_el$querySelector5 = el.querySelector('placeholder')) === null || _el$querySelector5 === void 0 ? void 0 : _el$querySelector5.textContent) || '',\n        alignment: ((_el$querySelector6 = el.querySelector('alignment')) === null || _el$querySelector6 === void 0 ? void 0 : _el$querySelector6.textContent) || 'center',\n        options: options\n      };\n    });\n    return {\n      name,\n      label,\n      elements\n    };\n  };\n  useEffect(() => {\n    const fetchFormData = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/forms/${encodeURIComponent(formName)}`, {\n          headers: {\n            'Authorization': `Bearer ${authInfo.token}`,\n            // Use if authentication is needed\n            'Content-Type': 'application/json'\n          }\n        });\n\n        // Log the response for debugging\n        const responseText = await response.text();\n        console.log('Full response text:', responseText);\n\n        // Check if response is valid JSON\n        if (!response.ok) {\n          throw new Error('Form not found');\n        }\n        const data = JSON.parse(responseText); // Attempt parsing only if the response is correct\n        if (data.xml_data) {\n          const parsedData = parseXML(data.xml_data);\n          setFormData(parsedData);\n        } else {\n          console.error('No XML data found in the response');\n        }\n      } catch (error) {\n        console.error('Error fetching form data:', error);\n      }\n    };\n    fetchFormData();\n  }, [formName]);\n  const handleInputChange = (key, value) => {\n    setFormValues(prev => ({\n      ...prev,\n      [key]: value\n    }));\n  };\n  const handleFileChange = (key, file) => {\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = e => {\n        setFormValues(prev => ({\n          ...prev,\n          [`file_${key}`]: e.target.result,\n          // Store base64 encoded file\n          [`file_name_${key}`]: file.name,\n          [`file_path_${key}`]: file.webkitRelativePath || file.name,\n          [`file_size_${key}`]: file.size,\n          [`file_type_${key}`]: file.type,\n          [`file_last_modified_${key}`]: new Date(file.lastModified).toISOString()\n        }));\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  const handleSubmit = async event => {\n    event.preventDefault(); // Prevent default form submission\n    try {\n      const containerResponse = await createContainer(formData.name, formData.label);\n      const containerId = containerResponse.id;\n      console.log('Container created successfully:', containerResponse);\n\n      // Add artifacts for each form field\n      const aggregatedCEF = Object.keys(formValues).reduce((acc, key) => {\n        if (!key.startsWith('file_')) {\n          acc[key] = formValues[key];\n        }\n        return acc;\n      }, {});\n      if (Object.keys(aggregatedCEF).length > 0) {\n        const artifactResponse = await addArtifact(containerId, aggregatedCEF, `${formData.name} Artifact`);\n        console.log('Artifact added successfully:', artifactResponse);\n      }\n\n      // Upload files to the vault and add file metadata as artifacts\n      for (const key in formValues) {\n        if (key.startsWith('file_')) {\n          const fileData = formValues[key];\n          const fileNameKey = `file_name_${key.split('_')[1]}`;\n          const fileName = formValues[fileNameKey];\n          const fileType = formValues[`file_type_${key.split('_')[1]}`];\n          const fileSize = formValues[`file_size_${key.split('_')[1]}`];\n          const fileSizeInKB = (fileSize / 1024).toFixed(2);\n          const fileSizeFormatted = fileSizeInKB > 1024 ? `${(fileSizeInKB / 1024).toFixed(2)} MB` : `${fileSizeInKB} KB`;\n          if (fileData && fileName) {\n            const fileResponse = await uploadFileToVault(containerId, fileData, fileName);\n            console.log('File uploaded successfully:', fileResponse);\n\n            // Add file metadata as artifact\n            const fileArtifactData = {\n              hash: fileResponse.hash,\n              filename: fileName,\n              filetype: fileType,\n              filesize: fileSizeFormatted\n            };\n            const fileArtifactResponse = await addArtifact(containerId, fileArtifactData, `${fileName} Metadata Artifact`);\n            console.log('File metadata artifact added successfully:', fileArtifactResponse);\n          } else {\n            console.error('Missing file data or file name for:', key);\n          }\n        }\n      }\n      alert('Form submitted and data sent to Splunk SOAR successfully!');\n    } catch (error) {\n      console.error('Error submitting form:', error);\n      alert('Failed to submit form data to Splunk SOAR.');\n    }\n  };\n  const createContainer = async (name, label) => {\n    const {\n      token,\n      server\n    } = authInfo;\n    const response = await fetch(`${server}/rest/container`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'ph-auth-token': token\n      },\n      body: JSON.stringify({\n        name,\n        label,\n        description: `${name} container created via API`\n      })\n    });\n    if (!response.ok) {\n      const errorText = await response.text();\n      console.error('Failed to create container:', errorText);\n      throw new Error('Failed to create container');\n    }\n    return response.json();\n  };\n  const addArtifact = async (containerId, cefData, artifactName) => {\n    const {\n      token,\n      server\n    } = authInfo;\n    const response = await fetch(`${server}/rest/artifact`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n        'ph-auth-token': token\n      },\n      body: JSON.stringify({\n        container_id: containerId,\n        cef: cefData,\n        // Aggregated form data\n        name: artifactName,\n        label: 'event_data',\n        description: 'Artifact created via API with aggregated form data'\n      })\n    });\n    if (!response.ok) {\n      const errorText = await response.text();\n      console.error('Failed to add artifact:', errorText);\n      throw new Error('Failed to add artifact');\n    }\n    return response.json();\n  };\n  const uploadFileToVault = async (containerId, fileData, fileKey) => {\n    const response = await fetch(`${authInfo.server}/rest/container_attachment`, {\n      method: 'POST',\n      headers: {\n        'ph-auth-token': authInfo.token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        container_id: containerId,\n        file_content: fileData.split(',')[1],\n        // Extract base64 content\n        file_name: fileKey\n      })\n    });\n    if (!response.ok) {\n      const errorText = await response.text();\n      console.error('Failed to upload the file to the vault:', errorText);\n      throw new Error('Failed to upload the file to the vault');\n    }\n    return response.json();\n  };\n  if (!formData) {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Form not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 16\n    }, this);\n  }\n  const renderElement = (element, index) => {\n    switch (element.type) {\n      case 'boolean':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          style: {\n            textAlign: element.alignment,\n            marginBottom: '15px'\n          },\n          children: [element.label && /*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              display: 'block',\n              marginBottom: '5px',\n              fontWeight: 'bold',\n              color: '#ffffff',\n              textAlign: element.alignment\n            },\n            children: element.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            required: element.required,\n            onChange: e => handleInputChange(element.key, e.target.value),\n            style: {\n              padding: '10px',\n              borderRadius: '6px',\n              width: '100%',\n              maxWidth: '400px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select an option\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"true\",\n              children: \"True\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"false\",\n              children: \"False\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 25\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 21\n        }, this);\n      case 'dateTime':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          style: {\n            textAlign: element.alignment,\n            marginBottom: '15px'\n          },\n          children: [element.label && /*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              display: 'block',\n              marginBottom: '5px',\n              fontWeight: 'bold',\n              color: '#ffffff',\n              textAlign: element.alignment\n            },\n            children: element.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            placeholder: element.placeholder,\n            required: element.required,\n            onChange: e => handleInputChange(element.key, e.target.value),\n            style: {\n              padding: '10px',\n              borderRadius: '6px',\n              width: '100%',\n              maxWidth: '400px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 25\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 21\n        }, this);\n      case 'number':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          style: {\n            textAlign: element.alignment,\n            marginBottom: '15px'\n          },\n          children: [element.label && /*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              display: 'block',\n              marginBottom: '5px',\n              fontWeight: 'bold',\n              color: '#ffffff',\n              textAlign: element.alignment\n            },\n            children: element.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: element.placeholder,\n            required: element.required,\n            onChange: e => handleInputChange(element.key, e.target.value),\n            style: {\n              padding: '10px',\n              borderRadius: '6px',\n              width: '100%',\n              maxWidth: '400px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 25\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 21\n        }, this);\n      case 'dropdown':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          style: {\n            textAlign: element.alignment,\n            marginBottom: '15px'\n          },\n          children: [element.label && /*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              display: 'block',\n              marginBottom: '5px',\n              fontWeight: 'bold',\n              color: '#ffffff',\n              textAlign: element.alignment\n            },\n            children: element.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            required: element.required,\n            onChange: e => handleInputChange(element.key, e.target.value),\n            style: {\n              padding: '10px',\n              borderRadius: '6px',\n              width: '100%',\n              maxWidth: '400px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select an option\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 351,\n              columnNumber: 29\n            }, this), element.options.map((option, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option,\n              children: option\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 25\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 21\n        }, this);\n      case 'divider':\n        return /*#__PURE__*/_jsxDEV(\"hr\", {\n          className: \"form-divider\",\n          style: {\n            width: '100%',\n            borderTop: '1px solid #444',\n            margin: '20px 0'\n          }\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 21\n        }, this);\n      case 'button':\n        if (element.key === 'Submit') {\n          return null; // Do not render this button here, as we will use the form's submit button instead\n        }\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          style: {\n            textAlign: element.alignment,\n            marginBottom: '15px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => alert(`${element.label} button clicked!`),\n            style: {\n              padding: '10px 20px',\n              borderRadius: '6px',\n              backgroundColor: '#007bff',\n              color: 'white',\n              border: 'none',\n              cursor: 'pointer'\n            },\n            children: element.label || 'Button'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 25\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 21\n        }, this);\n      case 'text':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          style: {\n            textAlign: element.alignment,\n            marginBottom: '15px'\n          },\n          children: element.label && /*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              display: 'block',\n              marginBottom: '5px',\n              fontWeight: 'bold',\n              color: '#ffffff',\n              textAlign: element.alignment\n            },\n            children: element.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 29\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 21\n        }, this);\n      case 'heading':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          style: {\n            textAlign: element.alignment,\n            marginBottom: '15px'\n          },\n          children: element.label && /*#__PURE__*/_jsxDEV(\"h1\", {\n            style: {\n              marginBottom: '5px',\n              fontWeight: 'bold',\n              color: '#ffffff',\n              textAlign: element.alignment\n            },\n            children: element.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 29\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 21\n        }, this);\n      case 'file':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          style: {\n            textAlign: element.alignment,\n            marginBottom: '15px'\n          },\n          children: [element.label && /*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              display: 'block',\n              marginBottom: '5px',\n              fontWeight: 'bold',\n              color: '#ffffff',\n              textAlign: element.alignment\n            },\n            children: element.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            required: element.required,\n            onChange: e => handleFileChange(element.key, e.target.files[0]),\n            style: {\n              padding: '10px',\n              borderRadius: '6px',\n              width: '100%',\n              maxWidth: '400px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 25\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 21\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          style: {\n            textAlign: element.alignment,\n            marginBottom: '15px'\n          },\n          children: [element.label && /*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              display: 'block',\n              marginBottom: '5px',\n              fontWeight: 'bold',\n              color: '#ffffff',\n              textAlign: element.alignment\n            },\n            children: element.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: element.type,\n            placeholder: element.placeholder,\n            required: element.required,\n            onChange: e => handleInputChange(element.key, e.target.value),\n            style: {\n              padding: '10px',\n              borderRadius: '6px',\n              width: '100%',\n              maxWidth: '400px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 25\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 21\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: formData.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      style: {\n        maxHeight: '80vh',\n        overflowY: 'auto'\n      },\n      children: [formData.elements.map((element, index) => renderElement(element, index)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        style: {\n          textAlign: 'center',\n          marginTop: '20px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          id: \"submit-button\",\n          style: {\n            padding: '10px 20px',\n            borderRadius: '6px',\n            backgroundColor: '#007bff',\n            color: 'white',\n            border: 'none',\n            cursor: 'pointer',\n            textAlign: (formData === null || formData === void 0 ? void 0 : formData.alignment) || 'center'\n          },\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 477,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 476,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 472,\n    columnNumber: 9\n  }, this);\n};\n_s(FormDisplay, \"m9poyCwNxMERiw1Pt9xRgVGCfzk=\", false, function () {\n  return [useParams];\n});\n_c = FormDisplay;\nexport default FormDisplay;\nvar _c;\n$RefreshReg$(_c, \"FormDisplay\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","authInfo","token","server","FormDisplay","_s","formName","formData","setFormData","formValues","setFormValues","fetchAuthInfo","response","fetch","ok","Error","data","json","ph_auth_token","console","log","error","parseXML","xmlString","_xmlDoc$querySelector","_xmlDoc$querySelector2","parser","DOMParser","xmlDoc","parseFromString","name","querySelector","textContent","label","elements","Array","from","querySelectorAll","map","el","_el$querySelector","_el$querySelector2","_el$querySelector3","_el$querySelector4","_el$querySelector5","_el$querySelector6","optionsNode","options","opt","type","key","required","placeholder","alignment","fetchFormData","encodeURIComponent","headers","responseText","text","JSON","parse","xml_data","parsedData","handleInputChange","value","prev","handleFileChange","file","reader","FileReader","onload","e","target","result","webkitRelativePath","size","Date","lastModified","toISOString","readAsDataURL","handleSubmit","event","preventDefault","containerResponse","createContainer","containerId","id","aggregatedCEF","Object","keys","reduce","acc","startsWith","length","artifactResponse","addArtifact","fileData","fileNameKey","split","fileName","fileType","fileSize","fileSizeInKB","toFixed","fileSizeFormatted","fileResponse","uploadFileToVault","fileArtifactData","hash","filename","filetype","filesize","fileArtifactResponse","alert","method","body","stringify","description","errorText","cefData","artifactName","container_id","cef","fileKey","file_content","file_name","children","_jsxFileName","lineNumber","columnNumber","renderElement","element","index","className","style","textAlign","marginBottom","display","fontWeight","color","onChange","padding","borderRadius","width","maxWidth","option","idx","borderTop","margin","onClick","backgroundColor","border","cursor","files","onSubmit","maxHeight","overflowY","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/abarbas/Desktop/soar_web_forms/src/components/FormDisplay.js"],"sourcesContent":["// src/components/FormDisplay.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport './FormDisplay.css';\r\n\r\n// Move authInfo to the top so it's accessible globally\r\nlet authInfo = {\r\n    token: '',\r\n    server: '',\r\n};\r\n\r\nconst FormDisplay = () => {\r\n    const { formName } = useParams(); // Get form name from the URL\r\n    const [formData, setFormData] = useState(null);\r\n    const [formValues, setFormValues] = useState({}); // Store user input\r\n    // Function to fetch auth info from the configuration table\r\n    const fetchAuthInfo = async () => {\r\n        try {\r\n            const response = await fetch('/api/configuration'); // Call the API endpoint\r\n            if (!response.ok) {\r\n                throw new Error('Failed to fetch auth info');\r\n            }\r\n            const data = await response.json();\r\n            // Update authInfo with fetched values\r\n            authInfo = {\r\n                token: data.ph_auth_token,\r\n                server: data.server,\r\n            };\r\n\r\n            // Log the server value and auth token\r\n            console.log('Updated Server:', authInfo.server); // Log server value\r\n            console.log('Updated Auth Token:', authInfo.token); // Log auth token\r\n        } catch (error) {\r\n            console.error('Error fetching auth info:', error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchAuthInfo(); // Fetch auth info when the component mounts\r\n    }, []);\r\n    const parseXML = (xmlString) => {\r\n        const parser = new DOMParser();\r\n        const xmlDoc = parser.parseFromString(xmlString, 'application/xml');\r\n        const name = xmlDoc.querySelector('form > name')?.textContent || 'Unnamed Form';\r\n        const label = xmlDoc.querySelector('form > label')?.textContent || 'event_data';\r\n\r\n        const elements = Array.from(xmlDoc.querySelectorAll('elements > element')).map((el) => {\r\n            const optionsNode = el.querySelector('dropdownOptions');\r\n            const options = optionsNode ? Array.from(optionsNode.querySelectorAll('option')).map(opt => opt.textContent) : [];\r\n\r\n            return {\r\n                type: el.querySelector('type')?.textContent || 'text',\r\n                key: el.querySelector('key')?.textContent || '',\r\n                label: el.querySelector('label')?.textContent || '',\r\n                required: el.querySelector('required')?.textContent === 'true',\r\n                placeholder: el.querySelector('placeholder')?.textContent || '',\r\n                alignment: el.querySelector('alignment')?.textContent || 'center',\r\n                options: options\r\n            };\r\n        });\r\n\r\n        return { name, label, elements };\r\n    };\r\n\r\n    useEffect(() => {\r\n        const fetchFormData = async () => {\r\n            try {\r\n                const response = await fetch(`http://localhost:5000/forms/${encodeURIComponent(formName)}`, {\r\n                    headers: {\r\n                        'Authorization': `Bearer ${authInfo.token}`, // Use if authentication is needed\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                });\r\n    \r\n                // Log the response for debugging\r\n                const responseText = await response.text();\r\n                console.log('Full response text:', responseText);\r\n    \r\n                // Check if response is valid JSON\r\n                if (!response.ok) {\r\n                    throw new Error('Form not found');\r\n                }\r\n    \r\n                const data = JSON.parse(responseText); // Attempt parsing only if the response is correct\r\n                if (data.xml_data) {\r\n                    const parsedData = parseXML(data.xml_data);\r\n                    setFormData(parsedData);\r\n                } else {\r\n                    console.error('No XML data found in the response');\r\n                }\r\n            } catch (error) {\r\n                console.error('Error fetching form data:', error);\r\n            }\r\n        };\r\n    \r\n        fetchFormData();\r\n    }, [formName]);\r\n    \r\n    \r\n\r\n    const handleInputChange = (key, value) => {\r\n        setFormValues((prev) => ({ ...prev, [key]: value }));\r\n    };\r\n\r\n    const handleFileChange = (key, file) => {\r\n        if (file) {\r\n            const reader = new FileReader();\r\n            reader.onload = (e) => {\r\n                setFormValues((prev) => ({\r\n                    ...prev,\r\n                    [`file_${key}`]: e.target.result, // Store base64 encoded file\r\n                    [`file_name_${key}`]: file.name,\r\n                    [`file_path_${key}`]: file.webkitRelativePath || file.name,\r\n                    [`file_size_${key}`]: file.size,\r\n                    [`file_type_${key}`]: file.type,\r\n                    [`file_last_modified_${key}`]: new Date(file.lastModified).toISOString(),\r\n                }));\r\n            };\r\n            reader.readAsDataURL(file);\r\n        }\r\n    };\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault(); // Prevent default form submission\r\n        try {\r\n            const containerResponse = await createContainer(formData.name, formData.label);\r\n            const containerId = containerResponse.id;\r\n            console.log('Container created successfully:', containerResponse);\r\n\r\n            // Add artifacts for each form field\r\n            const aggregatedCEF = Object.keys(formValues).reduce((acc, key) => {\r\n                if (!key.startsWith('file_')) {\r\n                    acc[key] = formValues[key];\r\n                }\r\n                return acc;\r\n            }, {});\r\n\r\n            if (Object.keys(aggregatedCEF).length > 0) {\r\n                const artifactResponse = await addArtifact(containerId, aggregatedCEF, `${formData.name} Artifact`);\r\n                console.log('Artifact added successfully:', artifactResponse);\r\n            }\r\n\r\n            // Upload files to the vault and add file metadata as artifacts\r\n            for (const key in formValues) {\r\n                if (key.startsWith('file_')) {\r\n                    const fileData = formValues[key];\r\n                    const fileNameKey = `file_name_${key.split('_')[1]}`;\r\n                    const fileName = formValues[fileNameKey];\r\n                    const fileType = formValues[`file_type_${key.split('_')[1]}`];\r\n                    const fileSize = formValues[`file_size_${key.split('_')[1]}`];\r\n                    const fileSizeInKB = (fileSize / 1024).toFixed(2);\r\n                    const fileSizeFormatted = fileSizeInKB > 1024 ? `${(fileSizeInKB / 1024).toFixed(2)} MB` : `${fileSizeInKB} KB`;\r\n\r\n                    if (fileData && fileName) {\r\n                        const fileResponse = await uploadFileToVault(containerId, fileData, fileName);\r\n                        console.log('File uploaded successfully:', fileResponse);\r\n\r\n                        // Add file metadata as artifact\r\n                        const fileArtifactData = {\r\n                            hash: fileResponse.hash,\r\n                            filename: fileName,\r\n                            filetype: fileType,\r\n                            filesize: fileSizeFormatted,\r\n                        };\r\n                        const fileArtifactResponse = await addArtifact(containerId, fileArtifactData, `${fileName} Metadata Artifact`);\r\n                        console.log('File metadata artifact added successfully:', fileArtifactResponse);\r\n                    } else {\r\n                        console.error('Missing file data or file name for:', key);\r\n                    }\r\n                }\r\n            }\r\n\r\n            alert('Form submitted and data sent to Splunk SOAR successfully!');\r\n        } catch (error) {\r\n            console.error('Error submitting form:', error);\r\n            alert('Failed to submit form data to Splunk SOAR.');\r\n        }\r\n    };\r\n\r\n    const createContainer = async (name, label) => {\r\n        const { token, server } = authInfo;\r\n        const response = await fetch(`${server}/rest/container`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'ph-auth-token': token,\r\n            },\r\n            body: JSON.stringify({\r\n                name,\r\n                label,\r\n                description: `${name} container created via API`,\r\n            }),\r\n        });\r\n        if (!response.ok) {\r\n            const errorText = await response.text();\r\n            console.error('Failed to create container:', errorText);\r\n            throw new Error('Failed to create container');\r\n        }\r\n        return response.json();\r\n    };\r\n\r\n    const addArtifact = async (containerId, cefData, artifactName) => {\r\n        const { token, server } = authInfo;\r\n        const response = await fetch(`${server}/rest/artifact`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'ph-auth-token': token,\r\n            },\r\n            body: JSON.stringify({\r\n                container_id: containerId,\r\n                cef: cefData, // Aggregated form data\r\n                name: artifactName,\r\n                label: 'event_data',\r\n                description: 'Artifact created via API with aggregated form data',\r\n            }),\r\n        });\r\n        if (!response.ok) {\r\n            const errorText = await response.text();\r\n            console.error('Failed to add artifact:', errorText);\r\n            throw new Error('Failed to add artifact');\r\n        }\r\n        return response.json();\r\n    };\r\n\r\n    const uploadFileToVault = async (containerId, fileData, fileKey) => {\r\n        const response = await fetch(`${authInfo.server}/rest/container_attachment`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'ph-auth-token': authInfo.token,\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                container_id: containerId,\r\n                file_content: fileData.split(',')[1], // Extract base64 content\r\n                file_name: fileKey,\r\n            }),\r\n        });\r\n        if (!response.ok) {\r\n            const errorText = await response.text();\r\n            console.error('Failed to upload the file to the vault:', errorText);\r\n            throw new Error('Failed to upload the file to the vault');\r\n        }\r\n        return response.json();\r\n    };\r\n\r\n    if (!formData) {\r\n        return <h2>Form not found</h2>;\r\n    }\r\n\r\n    const renderElement = (element, index) => {\r\n        switch (element.type) {\r\n            case 'boolean':\r\n                return (\r\n                    <div key={index} className=\"form-group\" style={{ textAlign: element.alignment, marginBottom: '15px' }}>\r\n                        {element.label && (\r\n                            <label\r\n                                style={{\r\n                                    display: 'block',\r\n                                    marginBottom: '5px',\r\n                                    fontWeight: 'bold',\r\n                                    color: '#ffffff',\r\n                                    textAlign: element.alignment,\r\n                                }}\r\n                            >\r\n                                {element.label}\r\n                            </label>\r\n                        )}\r\n                        <select\r\n                            required={element.required}\r\n                            onChange={(e) => handleInputChange(element.key, e.target.value)}\r\n                            style={{ padding: '10px', borderRadius: '6px', width: '100%', maxWidth: '400px' }}\r\n                        >\r\n                            <option value=\"\">Select an option</option>\r\n                            <option value=\"true\">True</option>\r\n                            <option value=\"false\">False</option>\r\n                        </select>\r\n                    </div>\r\n                );\r\n            case 'dateTime':\r\n                return (\r\n                    <div key={index} className=\"form-group\" style={{ textAlign: element.alignment, marginBottom: '15px' }}>\r\n                        {element.label && (\r\n                            <label\r\n                                style={{\r\n                                    display: 'block',\r\n                                    marginBottom: '5px',\r\n                                    fontWeight: 'bold',\r\n                                    color: '#ffffff',\r\n                                    textAlign: element.alignment,\r\n                                }}\r\n                            >\r\n                                {element.label}\r\n                            </label>\r\n                        )}\r\n                        <input\r\n                            type=\"date\"\r\n                            placeholder={element.placeholder}\r\n                            required={element.required}\r\n                            onChange={(e) => handleInputChange(element.key, e.target.value)}\r\n                            style={{ padding: '10px', borderRadius: '6px', width: '100%', maxWidth: '400px' }}\r\n                        />\r\n                    </div>\r\n                );\r\n            case 'number':\r\n                return (\r\n                    <div key={index} className=\"form-group\" style={{ textAlign: element.alignment, marginBottom: '15px' }}>\r\n                        {element.label && (\r\n                            <label\r\n                                style={{\r\n                                    display: 'block',\r\n                                    marginBottom: '5px',\r\n                                    fontWeight: 'bold',\r\n                                    color: '#ffffff',\r\n                                    textAlign: element.alignment,\r\n                                }}\r\n                            >\r\n                                {element.label}\r\n                            </label>\r\n                        )}\r\n                        <input\r\n                            type=\"number\"\r\n                            placeholder={element.placeholder}\r\n                            required={element.required}\r\n                            onChange={(e) => handleInputChange(element.key, e.target.value)}\r\n                            style={{ padding: '10px', borderRadius: '6px', width: '100%', maxWidth: '400px' }}\r\n                        />\r\n                    </div>\r\n                );\r\n            case 'dropdown':\r\n                return (\r\n                    <div key={index} className=\"form-group\" style={{ textAlign: element.alignment, marginBottom: '15px' }}>\r\n                        {element.label && (\r\n                            <label\r\n                                style={{\r\n                                    display: 'block',\r\n                                    marginBottom: '5px',\r\n                                    fontWeight: 'bold',\r\n                                    color: '#ffffff',\r\n                                    textAlign: element.alignment,\r\n                                }}\r\n                            >\r\n                                {element.label}\r\n                            </label>\r\n                        )}\r\n                        <select\r\n                            required={element.required}\r\n                            onChange={(e) => handleInputChange(element.key, e.target.value)}\r\n                            style={{ padding: '10px', borderRadius: '6px', width: '100%', maxWidth: '400px' }}\r\n                        >\r\n                            <option value=\"\">Select an option</option>\r\n                            {element.options.map((option, idx) => (\r\n                                <option key={idx} value={option}>{option}</option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                );\r\n            case 'divider':\r\n                return (\r\n                    <hr key={index} className=\"form-divider\" style={{ width: '100%', borderTop: '1px solid #444', margin: '20px 0' }} />\r\n                );\r\n            case 'button':\r\n                if (element.key === 'Submit') {\r\n                    return null; // Do not render this button here, as we will use the form's submit button instead\r\n                }\r\n                return (\r\n                    <div key={index} className=\"form-group\" style={{ textAlign: element.alignment, marginBottom: '15px' }}>\r\n                        <button\r\n                            type=\"button\"\r\n                            onClick={() => alert(`${element.label} button clicked!`)}\r\n                            style={{\r\n                                padding: '10px 20px',\r\n                                borderRadius: '6px',\r\n                                backgroundColor: '#007bff',\r\n                                color: 'white',\r\n                                border: 'none',\r\n                                cursor: 'pointer',\r\n                            }}\r\n                        >\r\n                            {element.label || 'Button'}\r\n                        </button>\r\n                    </div>\r\n                );\r\n            case 'text':\r\n                return (\r\n                    <div key={index} className=\"form-group\" style={{ textAlign: element.alignment, marginBottom: '15px' }}>\r\n                        {element.label && (\r\n                            <label\r\n                                style={{\r\n                                    display: 'block',\r\n                                    marginBottom: '5px',\r\n                                    fontWeight: 'bold',\r\n                                    color: '#ffffff',\r\n                                    textAlign: element.alignment,\r\n                                }}\r\n                            >\r\n                                {element.label}\r\n                            </label>\r\n                        )}\r\n                    </div>\r\n                );\r\n            case 'heading':\r\n                return (\r\n                    <div key={index} className=\"form-group\" style={{ textAlign: element.alignment, marginBottom: '15px' }}>\r\n                        {element.label && (\r\n                            <h1\r\n                                style={{\r\n                                    marginBottom: '5px',\r\n                                    fontWeight: 'bold',\r\n                                    color: '#ffffff',\r\n                                    textAlign: element.alignment,\r\n                                }}\r\n                            >\r\n                                {element.label}\r\n                            </h1>\r\n                        )}\r\n                    </div>\r\n                );\r\n            case 'file':\r\n                return (\r\n                    <div key={index} className=\"form-group\" style={{ textAlign: element.alignment, marginBottom: '15px' }}>\r\n                        {element.label && (\r\n                            <label\r\n                                style={{\r\n                                    display: 'block',\r\n                                    marginBottom: '5px',\r\n                                    fontWeight: 'bold',\r\n                                    color: '#ffffff',\r\n                                    textAlign: element.alignment,\r\n                                }}\r\n                            >\r\n                                {element.label}\r\n                            </label>\r\n                        )}\r\n                        <input\r\n                            type=\"file\"\r\n                            required={element.required}\r\n                            onChange={(e) => handleFileChange(element.key, e.target.files[0])}\r\n                            style={{ padding: '10px', borderRadius: '6px', width: '100%', maxWidth: '400px' }}\r\n                        />\r\n                    </div>\r\n                );\r\n            default:\r\n                return (\r\n                    <div key={index} className=\"form-group\" style={{ textAlign: element.alignment, marginBottom: '15px' }}>\r\n                        {element.label && (\r\n                            <label\r\n                                style={{\r\n                                    display: 'block',\r\n                                    marginBottom: '5px',\r\n                                    fontWeight: 'bold',\r\n                                    color: '#ffffff',\r\n                                    textAlign: element.alignment,\r\n                                }}\r\n                            >\r\n                                {element.label}\r\n                            </label>\r\n                        )}\r\n                        <input\r\n                            type={element.type}\r\n                            placeholder={element.placeholder}\r\n                            required={element.required}\r\n                            onChange={(e) => handleInputChange(element.key, e.target.value)}\r\n                            style={{ padding: '10px', borderRadius: '6px', width: '100%', maxWidth: '400px' }}\r\n                        />\r\n                    </div>\r\n                );\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"form-container\">\r\n            <h2>{formData.name}</h2>\r\n            <form onSubmit={handleSubmit} style={{ maxHeight: '80vh', overflowY: 'auto' }}>\r\n                {formData.elements.map((element, index) => renderElement(element, index))}\r\n                <div className=\"form-group\" style={{ textAlign: 'center', marginTop: '20px' }}>\r\n                    <button\r\n                        type=\"submit\"\r\n                        id=\"submit-button\"\r\n                        style={{\r\n                            padding: '10px 20px',\r\n                            borderRadius: '6px',\r\n                            backgroundColor: '#007bff',\r\n                            color: 'white',\r\n                            border: 'none',\r\n                            cursor: 'pointer',\r\n                            textAlign: formData?.alignment || 'center',\r\n                        }}\r\n                    >\r\n                        Submit\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FormDisplay;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}