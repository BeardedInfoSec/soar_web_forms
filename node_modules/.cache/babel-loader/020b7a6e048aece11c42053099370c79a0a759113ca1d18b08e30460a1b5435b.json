{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abarbas\\\\Desktop\\\\soar_web_forms\\\\src\\\\components\\\\FormBuilder.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { DndContext, DragOverlay, closestCenter } from '@dnd-kit/core';\nimport { arrayMove, SortableContext, useSortable, rectSortingStrategy } from '@dnd-kit/sortable';\nimport Papa from 'papaparse';\nimport './FormBuilder.css';\nimport Button from '@splunk/react-ui/Button';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ELEMENT_TYPES = [{\n  id: 'heading',\n  label: 'Heading'\n}, {\n  id: 'text',\n  label: 'Text'\n}, {\n  id: 'divider',\n  label: 'Divider'\n},\n//{ id: 'button', label: 'Button' },\n//{ id: 'image', label: 'Image' },\n{\n  id: 'table',\n  label: 'Table'\n}];\nconst INPUT_FIELDS = [{\n  id: 'inputText',\n  label: 'Input Text',\n  type: 'text'\n}, {\n  id: 'email',\n  label: 'Email',\n  type: 'email'\n},\n//{ id: 'password', label: 'Password', type: 'password' }, \n{\n  id: 'dateTime',\n  label: 'Date or Time',\n  type: 'datetime-local'\n}, {\n  id: 'dropdown',\n  label: 'Dropdown',\n  type: 'dropdown'\n}, {\n  id: 'boolean',\n  label: 'Boolean',\n  type: 'dropdown'\n}, {\n  id: 'number',\n  label: 'Number',\n  type: 'number'\n}, {\n  id: 'file',\n  label: 'File Upload',\n  type: 'file'\n}];\nconst FormBuilder = () => {\n  _s();\n  var _draftSettings$dropdo;\n  const [formElements, setFormElements] = useState([]);\n  const [formName, setFormName] = useState('');\n  const [formLabel, setFormLabel] = useState('');\n  const [formTags, setFormTags] = useState('');\n  const [savedForms, setSavedForms] = useState([]); // Add state to store list of saved forms\n  const [selectedForm, setSelectedForm] = useState(''); // Add state to track selected form\n  const [selectedElement, setSelectedElement] = useState(null);\n  const [draftSettings, setDraftSettings] = useState(null);\n  const [draggingElement, setDraggingElement] = useState(null);\n  const formContainerRef = useRef(null);\n  const [selectedFileName, setSelectedFileName] = useState('');\n  const SUBMIT_BUTTON_ID = 'submit-button';\n  const [formToLoad, setFormToLoad] = useState(null); // Hold the form name to load after clearing\n\n  useEffect(() => {\n    console.log('Form Elements Updated:', formElements);\n    const tableElement = formElements.find(el => el.type === 'table');\n    if (tableElement) {\n      console.log('Table Element Found:', tableElement);\n      console.log('CSV Data in State:', tableElement.settings.csvData);\n    }\n  }, [formElements]);\n  useEffect(() => {\n    if (!formElements.some(el => el.id === SUBMIT_BUTTON_ID)) {\n      addSubmitButton();\n    }\n  }, [formElements]);\n  useEffect(() => {\n    loadSavedForms();\n  }, []);\n  const loadSavedForms = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/forms');\n      if (!response.ok) {\n        throw new Error(`Failed to fetch forms: ${response.status}`);\n      }\n      const data = await response.json();\n      const loadedForms = data.map(form => ({\n        id: form.id,\n        // Ensure this is present\n        name: form.name // Ensure this is present\n      }));\n      setSavedForms(loadedForms); // Set the forms to state\n    } catch (error) {\n      console.error('Error loading forms:', error);\n    }\n  };\n  const loadForm = async () => {\n    if (!selectedForm) {\n      alert('Please select a form to load.');\n      return;\n    }\n    try {\n      var _xmlDoc$querySelector, _xmlDoc$querySelector2;\n      const response = await fetch(`http://localhost:5000/forms/${encodeURIComponent(selectedForm)}`);\n      if (!response.ok) {\n        throw new Error(`Failed to load form: ${response.status}`);\n      }\n      const formData = await response.json();\n      const parser = new DOMParser();\n      const xmlDoc = parser.parseFromString(formData.xml_data, 'application/xml');\n      const loadedName = ((_xmlDoc$querySelector = xmlDoc.querySelector('form > name')) === null || _xmlDoc$querySelector === void 0 ? void 0 : _xmlDoc$querySelector.textContent) || '';\n      const loadedLabel = ((_xmlDoc$querySelector2 = xmlDoc.querySelector('form > label')) === null || _xmlDoc$querySelector2 === void 0 ? void 0 : _xmlDoc$querySelector2.textContent) || '';\n      const loadedTags = Array.from(xmlDoc.querySelectorAll('form > tags > tag')).map(tag => tag.textContent);\n      const elements = Array.from(xmlDoc.querySelectorAll('elements > element')).map((el, index) => {\n        var _el$querySelector, _el$querySelector2, _el$querySelector3, _el$querySelector4, _el$querySelector5, _el$querySelector6, _el$querySelector7, _el$querySelector8;\n        const type = ((_el$querySelector = el.querySelector('type')) === null || _el$querySelector === void 0 ? void 0 : _el$querySelector.textContent) || 'text';\n        const optionsNode = el.querySelector('dropdownOptions');\n        const options = optionsNode ? Array.from(optionsNode.querySelectorAll('option')).map(opt => opt.textContent) : [];\n        return {\n          id: `element-${Date.now()}-${index}`,\n          type,\n          key: ((_el$querySelector2 = el.querySelector('key')) === null || _el$querySelector2 === void 0 ? void 0 : _el$querySelector2.textContent) || '',\n          label: ((_el$querySelector3 = el.querySelector('label')) === null || _el$querySelector3 === void 0 ? void 0 : _el$querySelector3.textContent) || '',\n          required: ((_el$querySelector4 = el.querySelector('required')) === null || _el$querySelector4 === void 0 ? void 0 : _el$querySelector4.textContent) === 'true',\n          alignment: ((_el$querySelector5 = el.querySelector('alignment')) === null || _el$querySelector5 === void 0 ? void 0 : _el$querySelector5.textContent) || 'center',\n          settings: {\n            headerLevel: ((_el$querySelector6 = el.querySelector('headerLevel')) === null || _el$querySelector6 === void 0 ? void 0 : _el$querySelector6.textContent) || 'h1',\n            placeholder: ((_el$querySelector7 = el.querySelector('placeholder')) === null || _el$querySelector7 === void 0 ? void 0 : _el$querySelector7.textContent) || '',\n            dropdownOptions: options,\n            label: ((_el$querySelector8 = el.querySelector('label')) === null || _el$querySelector8 === void 0 ? void 0 : _el$querySelector8.textContent) || '' // Set label directly in settings\n          }\n        };\n      }).filter(el => el.type !== 'button'); // Exclude submit button\n\n      setFormName(loadedName);\n      setFormLabel(loadedLabel);\n      setFormTags(loadedTags.join(', '));\n      setFormElements(elements);\n      console.log(`Form \"${selectedForm}\" loaded successfully!`);\n    } catch (error) {\n      console.error('Error loading form:', error);\n      alert('Failed to load form data.');\n    }\n  };\n  const addSubmitButton = () => {\n    setFormElements(prev => [...prev, {\n      id: SUBMIT_BUTTON_ID,\n      type: 'button',\n      key: 'Submit',\n      label: 'Submit',\n      alignment: 'center',\n      required: false,\n      settings: {}\n    }]);\n  };\n  const generateKey = type => {\n    // Count how many elements of this type already exist in formElements\n    const existingCount = formElements.filter(el => el.type === type).length;\n    return `${type}${existingCount + 1}`; // e.g., \"inputText1\", \"inputText2\"\n  };\n  const addElement = type => {\n    const newKey = generateKey(type);\n    const newElement = {\n      id: Date.now().toString(),\n      type,\n      key: newKey,\n      label: `${type.charAt(0).toUpperCase() + type.slice(1)} Label`,\n      // Set a default label based on type\n      alignment: 'center',\n      settings: {\n        label: `${type.charAt(0).toUpperCase() + type.slice(1)} Label`,\n        // Set label directly in settings\n        headerLevel: 'h1',\n        placeholder: type === 'email' ? 'Email Address' : type === 'password' ? 'Enter password' : 'Enter text here...',\n        useCurrentDate: false,\n        defaultBoolean: 'true',\n        dropdownOptions: [],\n        min: '',\n        max: '',\n        step: '',\n        defaultValue: '',\n        showPasswordOption: false,\n        passwordLength: '',\n        requireSymbols: false,\n        requireNumbers: false,\n        csvData: []\n      },\n      required: false,\n      textColor: '#ffffff',\n      fontFamily: 'Arial'\n    };\n\n    // Ensure new elements are added before the Submit button and prevent duplicates\n    setFormElements(prev => {\n      const submitIndex = prev.findIndex(el => el.id === SUBMIT_BUTTON_ID);\n      const newFormElements = [...prev];\n      newFormElements.splice(submitIndex, 0, newElement); // Insert new element before the submit button\n      return newFormElements;\n    });\n  };\n  const isKeyUnique = key => {\n    return !formElements.some(el => el.key === key && el.id !== (selectedElement === null || selectedElement === void 0 ? void 0 : selectedElement.id));\n  };\n  const handleSubmit = () => {\n    const formData = formElements.filter(el => el.id !== SUBMIT_BUTTON_ID); // Exclude submit button from data\n    console.log('Form submitted:', formData);\n\n    // Example API call\n    fetch('/api/submit-form', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        elements: formData\n      })\n    }).then(response => response.json()).then(data => console.log('Form submission response:', data)).catch(error => console.error('Error submitting form:', error));\n  };\n  const handleImageUpload = (event, elementId) => {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = e => {\n        const imageSrc = e.target.result;\n        setFormElements(prev => prev.map(el => el.id === elementId ? {\n          ...el,\n          settings: {\n            ...el.settings,\n            imageSrc\n          }\n        } : el));\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  const saveForm = async () => {\n    if (!formName) {\n      alert('Please enter a name for the form.');\n      return;\n    }\n    const formData = {\n      name: formName,\n      label: formLabel,\n      tags: formTags ? formTags.split(',').map(tag => tag.trim()) : [],\n      elements: formElements // Includes the populated csvData\n    };\n\n    // Convert form data to XML\n    const convertToXML = obj => {\n      let xml = '';\n      for (let key in obj) {\n        if (Array.isArray(obj[key])) {\n          xml += `<${key}>`;\n          obj[key].forEach(element => {\n            if (Array.isArray(element)) {\n              // Handle CSV data as rows and cells\n              xml += '<row>';\n              element.forEach(cell => {\n                xml += `<cell>${cell}</cell>`;\n              });\n              xml += '</row>';\n            } else {\n              xml += `<element>${convertToXML(element)}</element>`;\n            }\n          });\n          xml += `</${key}>`;\n        } else if (typeof obj[key] === 'object') {\n          xml += `<${key}>${convertToXML(obj[key])}</${key}>`;\n        } else {\n          xml += `<${key}>${obj[key]}</${key}>`;\n        }\n      }\n      return xml;\n    };\n    const xmlData = `<form>${convertToXML(formData)}</form>`;\n\n    // Send form data to backend\n    try {\n      const response = await fetch('http://localhost:5000/save_form', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: formName,\n          label: formLabel,\n          tags: formTags ? formTags.split(',').map(tag => tag.trim()) : [],\n          elements: formElements,\n          xmlData: xmlData // Include XML data in the request\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`Failed to save form: ${response.status} ${response.statusText}`);\n      }\n      alert(`Form \"${formName}\" saved successfully!`);\n      localStorage.setItem(formName, xmlData); // Optional: save XML to local storage\n\n      // Refresh saved forms after saving\n      loadSavedForms();\n    } catch (error) {\n      console.error('Error:', error);\n      alert(`Error saving form: ${error.message}`);\n    }\n  };\n  const removeElement = id => {\n    if (id === SUBMIT_BUTTON_ID) return; // Prevent deletion of the Submit button\n    setFormElements(prev => prev.filter(el => el.id !== id));\n    if ((selectedElement === null || selectedElement === void 0 ? void 0 : selectedElement.id) === id) {\n      setSelectedElement(null);\n    }\n  };\n  const handleEditClick = element => {\n    var _element$settings, _element$settings2;\n    setSelectedElement(element);\n    setDraftSettings({\n      ...element.settings,\n      key: element.key || '',\n      label: element.label,\n      alignment: element.alignment,\n      required: element.required,\n      placeholder: (_element$settings = element.settings) === null || _element$settings === void 0 ? void 0 : _element$settings.placeholder,\n      csvData: ((_element$settings2 = element.settings) === null || _element$settings2 === void 0 ? void 0 : _element$settings2.csvData) || [] // Ensure csvData is included\n    });\n  };\n  const applyDraftChanges = () => {\n    if (selectedElement && draftSettings) {\n      console.log('Applying draft changes:', {\n        selectedElement,\n        draftSettings\n      });\n      if (isKeyUnique(draftSettings.key)) {\n        updateElementSettings(selectedElement.id, {\n          ...selectedElement,\n          ...draftSettings,\n          settings: {\n            ...selectedElement.settings,\n            ...draftSettings,\n            csvData: draftSettings.csvData !== undefined ? draftSettings.csvData : selectedElement.settings.csvData // Preserve csvData if not in draftSettings\n          }\n        });\n        console.log('Updated element:', selectedElement);\n        setSelectedElement(null);\n        setDraftSettings(null);\n      } else {\n        alert('The key must be unique. Please choose another.');\n      }\n    }\n  };\n  const cancelChanges = () => {\n    setSelectedElement(null);\n    setDraftSettings(null);\n  };\n  const updateElementSettings = (id, newSettings) => {\n    console.log('Updating element settings for ID:', id);\n    console.log('New settings before merge:', newSettings);\n    setFormElements(prev => prev.map(el => el.id === id.toString() ? {\n      ...el,\n      ...newSettings,\n      settings: {\n        ...el.settings,\n        ...newSettings,\n        csvData: newSettings.csvData !== undefined ? newSettings.csvData : el.settings.csvData // Preserve existing csvData if not overwritten\n      }\n    } : el));\n    console.log('Updated form elements:', formElements);\n  };\n  const handleDragStart = ({\n    active\n  }) => {\n    setDraggingElement(active.id);\n  };\n  const handleDragEnd = ({\n    active,\n    over\n  }) => {\n    if (over && active.id !== over.id) {\n      const oldIndex = formElements.findIndex(el => el.id === active.id);\n      const newIndex = formElements.findIndex(el => el.id === over.id);\n      setFormElements(prev => arrayMove(prev, oldIndex, newIndex));\n    }\n    setDraggingElement(null);\n  };\n  const handleCSVUpload = (event, elementId) => {\n    const file = event.target.files[0];\n    if (file) {\n      if (!file.name.endsWith('.csv')) {\n        alert('Please upload a valid .csv file.');\n        return;\n      }\n      Papa.parse(file, {\n        complete: result => {\n          const csvData = result.data;\n          console.log('Parsed CSV Data:', csvData);\n          setFormElements(prev => prev.map(el => el.id === elementId ? {\n            ...el,\n            csvData,\n            // Update the csvData property\n            settings: {\n              ...el.settings,\n              csvData\n            }\n          } : el));\n        },\n        header: false // Adjust as needed\n      });\n    }\n  };\n  const handleResetForm = () => {\n    if (window.confirm('Are you sure you want to reset the form?')) {\n      setFormElements([]); // Clear form elements\n      setFormName(''); // Clear Form Name\n      setFormLabel(''); // Clear Label\n      setSelectedElement(null); // Close the form editor by deselecting the element\n    }\n  };\n  const validatePassword = (password, settings) => {\n    if (settings !== null && settings !== void 0 && settings.passwordLength && password.length < settings.passwordLength) {\n      return false;\n    }\n    if (settings !== null && settings !== void 0 && settings.requireSymbols && !/[!@#$%^&*(),.?\":{}|<>]/.test(password)) {\n      return false;\n    }\n    if (settings !== null && settings !== void 0 && settings.requireNumbers && !/[0-9]/.test(password)) {\n      return false;\n    }\n    return true;\n  };\n  const renderElementContent = element => {\n    const settings = element.settings || {}; // Directly use settings from element\n    const alignmentStyle = {\n      textAlign: settings.alignment || 'center'\n    };\n    const wrapperStyle = {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: settings.alignment === 'left' ? 'flex-start' : settings.alignment === 'right' ? 'flex-end' : 'center',\n      width: '100%',\n      marginBottom: '10px'\n    };\n    switch (element.type) {\n      case 'heading':\n        const HeaderTag = settings.headerLevel || 'h1';\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: wrapperStyle,\n          children: settings.label && /*#__PURE__*/_jsxDEV(HeaderTag, {\n            style: alignmentStyle,\n            children: settings.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 470,\n            columnNumber: 40\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 17\n        }, this);\n      case 'text':\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          style: alignmentStyle,\n          children: settings.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 20\n        }, this);\n      // Other cases for different element types...\n      default:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: wrapperStyle,\n          children: [settings.label && /*#__PURE__*/_jsxDEV(\"label\", {\n            children: settings.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 479,\n            columnNumber: 40\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: element.type,\n            placeholder: settings.placeholder || '',\n            required: element.required\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 480,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 478,\n          columnNumber: 17\n        }, this);\n    }\n  };\n  const areRequiredFieldsFilled = () => {\n    return formElements.every(el => {\n      if (el.required) {\n        return el.settings.label && el.settings.label.trim() !== '';\n      }\n      return true;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-builder-container\",\n    style: {\n      height: '100vh',\n      overflow: 'hidden'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-name-section\",\n        style: {\n          marginBottom: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"form-name\",\n          className: \"sidebar-label\",\n          children: \"Form Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 502,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"form-name\",\n          type: \"text\",\n          value: formName,\n          onChange: e => setFormName(e.target.value),\n          placeholder: \"Enter form name\",\n          className: \"form-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 503,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 501,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-label-section\",\n        style: {\n          marginBottom: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"form-label\",\n          className: \"sidebar-label\",\n          children: \"Label (Required):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"form-label\",\n          type: \"text\",\n          value: formLabel,\n          onChange: e => setFormLabel(e.target.value),\n          placeholder: \"Enter form label\",\n          className: \"form-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 516,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 1\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"element-input-wrapper\",\n        style: {\n          display: 'flex',\n          gap: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"element-selector\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Elements\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 529,\n            columnNumber: 7\n          }, this), ELEMENT_TYPES.map(element => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => addElement(element.id),\n            className: \"element-button\",\n            children: element.label\n          }, element.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 531,\n            columnNumber: 9\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 528,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-selector\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Input Fields\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 542,\n            columnNumber: 7\n          }, this), INPUT_FIELDS.map(input => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => addElement(input.id),\n            className: \"input-button\",\n            children: input.label\n          }, input.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 544,\n            columnNumber: 9\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 541,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 527,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"load-section\",\n        style: {\n          marginBottom: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"saved-forms\",\n          className: \"sidebar-label\",\n          children: \"Load Saved Form:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"saved-forms\",\n          value: selectedForm,\n          onChange: e => setSelectedForm(e.target.value),\n          className: \"sidebar-select\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"-- Select a Form --\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 562,\n            columnNumber: 5\n          }, this), savedForms.map(form => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: form.name,\n            children: [\" \", form.name, \" \"]\n          }, form.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 564,\n            columnNumber: 7\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 556,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: loadForm,\n          className: \"load-form-button\",\n          children: \"Load Form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 569,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 554,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: saveForm,\n        className: \"save-form-button\",\n        children: \"Save Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 571,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleResetForm,\n        className: \"reset-form-button\",\n        children: \"Reset Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 572,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 497,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-builder\",\n      ref: formContainerRef,\n      style: {\n        height: '100%',\n        overflowY: 'auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(DndContext, {\n        collisionDetection: closestCenter,\n        onDragEnd: handleDragEnd,\n        onDragStart: handleDragStart,\n        children: [/*#__PURE__*/_jsxDEV(SortableContext, {\n          items: formElements,\n          strategy: rectSortingStrategy,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-preview\",\n            children: formElements.map(element => /*#__PURE__*/_jsxDEV(SortableFormElement, {\n              element: element,\n              handleEditClick: handleEditClick,\n              renderElementContent: renderElementContent\n            }, element.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 585,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 583,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 582,\n          columnNumber: 11\n        }, this), draggingElement && /*#__PURE__*/_jsxDEV(DragOverlay, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dragging-overlay\",\n            children: \"Dragging\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 596,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 595,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 577,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 576,\n      columnNumber: 7\n    }, this), selectedElement && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"element-editor\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"element-editor-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Edit Element\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 605,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            if (window.confirm('Are you sure you want to delete this element?')) {\n              removeElement(selectedElement.id);\n            }\n          },\n          className: \"delete-element\",\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 606,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 604,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Key:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: (draftSettings === null || draftSettings === void 0 ? void 0 : draftSettings.key) || '',\n          onChange: e => setDraftSettings(prev => ({\n            ...prev,\n            key: e.target.value\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 619,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 617,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Label:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: (draftSettings === null || draftSettings === void 0 ? void 0 : draftSettings.label) || '',\n          onChange: e => setDraftSettings(prev => ({\n            ...prev,\n            label: e.target.value\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 629,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 627,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"checkbox-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Required:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 638,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: (draftSettings === null || draftSettings === void 0 ? void 0 : draftSettings.required) || false,\n          onChange: e => setDraftSettings(prev => ({\n            ...prev,\n            required: e.target.checked\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 641,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 637,\n        columnNumber: 11\n      }, this), selectedElement.type === 'heading' && /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Header Level:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: (draftSettings === null || draftSettings === void 0 ? void 0 : draftSettings.headerLevel) || 'h1',\n          onChange: e => setDraftSettings(prev => ({\n            ...prev,\n            headerLevel: e.target.value\n          })),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"h1\",\n            children: \"H1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 664,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"h2\",\n            children: \"H2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 665,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"h3\",\n            children: \"H3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 666,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"h4\",\n            children: \"H4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 667,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"h5\",\n            children: \"H5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 668,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"h6\",\n            children: \"H6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 669,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 655,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 653,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Alignment:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: (draftSettings === null || draftSettings === void 0 ? void 0 : draftSettings.alignment) || 'center',\n          onChange: e => setDraftSettings(prev => ({\n            ...prev,\n            alignment: e.target.value\n          })),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"left\",\n            children: \"Left\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 681,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"center\",\n            children: \"Center\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 682,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"right\",\n            children: \"Right\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 683,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 675,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 673,\n        columnNumber: 11\n      }, this), (selectedElement.type === 'inputText' || selectedElement.type === 'email') && /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Placeholder Text:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: (draftSettings === null || draftSettings === void 0 ? void 0 : draftSettings.placeholder) || '',\n          onChange: e => setDraftSettings(prev => ({\n            ...prev,\n            placeholder: e.target.value\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 689,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 687,\n        columnNumber: 13\n      }, this), selectedElement.type === 'dateTime' && /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Use Current Date:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: (draftSettings === null || draftSettings === void 0 ? void 0 : draftSettings.useCurrentDate) || false,\n          onChange: e => setDraftSettings(prev => ({\n            ...prev,\n            useCurrentDate: e.target.checked\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 701,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 699,\n        columnNumber: 13\n      }, this), selectedElement.type === 'dropdown' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: selectedElement.type === 'dropdown' && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dropdown-options-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Dropdown Options:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 715,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setDraftSettings(prev => ({\n                ...prev,\n                dropdownOptions: [...(prev.dropdownOptions || []), '']\n              })),\n              className: \"add-option\",\n              children: \"+\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 716,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 714,\n            columnNumber: 5\n          }, this), draftSettings === null || draftSettings === void 0 ? void 0 : (_draftSettings$dropdo = draftSettings.dropdownOptions) === null || _draftSettings$dropdo === void 0 ? void 0 : _draftSettings$dropdo.map((option, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              alignItems: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: option,\n              onChange: e => setDraftSettings(prev => {\n                const updatedOptions = [...prev.dropdownOptions];\n                updatedOptions[idx] = e.target.value;\n                return {\n                  ...prev,\n                  dropdownOptions: updatedOptions\n                };\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 730,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => setDraftSettings(prev => ({\n                ...prev,\n                dropdownOptions: prev.dropdownOptions.filter((_, i) => i !== idx)\n              })),\n              style: {\n                marginLeft: '10px',\n                padding: '5px 10px',\n                color: 'white',\n                backgroundColor: 'red',\n                borderRadius: '4px',\n                cursor: 'pointer'\n              },\n              children: \"X\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 741,\n              columnNumber: 9\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 729,\n            columnNumber: 7\n          }, this))]\n        }, void 0, true)\n      }, void 0, false), selectedElement.type === 'boolean' && /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Default Boolean Value:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: (draftSettings === null || draftSettings === void 0 ? void 0 : draftSettings.defaultBoolean) || 'true',\n          onChange: e => setDraftSettings(prev => ({\n            ...prev,\n            defaultBoolean: e.target.value\n          })),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"true\",\n            children: \"True\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 776,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"false\",\n            children: \"False\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 777,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 770,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 768,\n        columnNumber: 13\n      }, this), selectedElement.type === 'number' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Minimum Value:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: (draftSettings === null || draftSettings === void 0 ? void 0 : draftSettings.min) || '',\n            onChange: e => setDraftSettings(prev => ({\n              ...prev,\n              min: e.target.value\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 785,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 783,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Maximum Value:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: (draftSettings === null || draftSettings === void 0 ? void 0 : draftSettings.max) || '',\n            onChange: e => setDraftSettings(prev => ({\n              ...prev,\n              max: e.target.value\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 795,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 793,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Step Value:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: (draftSettings === null || draftSettings === void 0 ? void 0 : draftSettings.step) || '',\n            onChange: e => setDraftSettings(prev => ({\n              ...prev,\n              step: e.target.value\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 805,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 803,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Default Value:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: (draftSettings === null || draftSettings === void 0 ? void 0 : draftSettings.defaultValue) || '',\n            onChange: e => setDraftSettings(prev => ({\n              ...prev,\n              defaultValue: e.target.value\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 815,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 813,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), selectedElement.type === 'password' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Show Password Option:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: (draftSettings === null || draftSettings === void 0 ? void 0 : draftSettings.showPasswordOption) || false,\n            onChange: e => setDraftSettings(prev => ({\n              ...prev,\n              showPasswordOption: e.target.checked\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 829,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 827,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Minimum Password Length:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: (draftSettings === null || draftSettings === void 0 ? void 0 : draftSettings.passwordLength) || '',\n            onChange: e => setDraftSettings(prev => ({\n              ...prev,\n              passwordLength: e.target.value\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 842,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 840,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Requires Symbols:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: (draftSettings === null || draftSettings === void 0 ? void 0 : draftSettings.requireSymbols) || false,\n            onChange: e => setDraftSettings(prev => ({\n              ...prev,\n              requireSymbols: e.target.checked\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 855,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 853,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Requires Numbers:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: (draftSettings === null || draftSettings === void 0 ? void 0 : draftSettings.requireNumbers) || false,\n            onChange: e => setDraftSettings(prev => ({\n              ...prev,\n              requireNumbers: e.target.checked\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 868,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 866,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: applyDraftChanges,\n        className: \"save-changes\",\n        disabled: !areRequiredFieldsFilled(),\n        children: \"Save Changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 881,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: cancelChanges,\n        className: \"cancel-button\",\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 889,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 603,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 496,\n    columnNumber: 5\n  }, this);\n};\n_s(FormBuilder, \"2d8C2Jk3XBI+PWREG2Gg9YN3+iw=\");\n_c = FormBuilder;\nconst SortableFormElement = ({\n  element,\n  handleEditClick,\n  renderElementContent\n}) => {\n  _s2();\n  var _element$settings3;\n  const {\n    attributes,\n    listeners,\n    setNodeRef,\n    transform,\n    transition\n  } = useSortable({\n    id: element.id\n  });\n  const style = {\n    transform: transform ? `translate3d(${transform.x}px, ${transform.y}px, 0)` : undefined,\n    transition,\n    backgroundColor: ((_element$settings3 = element.settings) === null || _element$settings3 === void 0 ? void 0 : _element$settings3.backgroundColor) || 'inherit'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: setNodeRef,\n    style: style,\n    className: \"form-element\",\n    onClick: () => handleEditClick(element),\n    children: [renderElementContent(element), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"drag-handle\",\n      ...listeners,\n      ...attributes,\n      onMouseDown: e => e.stopPropagation(),\n      children: \"Drag\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 920,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 913,\n    columnNumber: 5\n  }, this);\n};\n_s2(SortableFormElement, \"FTUh0JV0KNM2MI3tYtLrQh0rr1U=\", false, function () {\n  return [useSortable];\n});\n_c2 = SortableFormElement;\nexport default FormBuilder;\nvar _c, _c2;\n$RefreshReg$(_c, \"FormBuilder\");\n$RefreshReg$(_c2, \"SortableFormElement\");","map":{"version":3,"names":["React","useState","useRef","useEffect","DndContext","DragOverlay","closestCenter","arrayMove","SortableContext","useSortable","rectSortingStrategy","Papa","Button","jsxDEV","_jsxDEV","Fragment","_Fragment","ELEMENT_TYPES","id","label","INPUT_FIELDS","type","FormBuilder","_s","_draftSettings$dropdo","formElements","setFormElements","formName","setFormName","formLabel","setFormLabel","formTags","setFormTags","savedForms","setSavedForms","selectedForm","setSelectedForm","selectedElement","setSelectedElement","draftSettings","setDraftSettings","draggingElement","setDraggingElement","formContainerRef","selectedFileName","setSelectedFileName","SUBMIT_BUTTON_ID","formToLoad","setFormToLoad","console","log","tableElement","find","el","settings","csvData","some","addSubmitButton","loadSavedForms","response","fetch","ok","Error","status","data","json","loadedForms","map","form","name","error","loadForm","alert","_xmlDoc$querySelector","_xmlDoc$querySelector2","encodeURIComponent","formData","parser","DOMParser","xmlDoc","parseFromString","xml_data","loadedName","querySelector","textContent","loadedLabel","loadedTags","Array","from","querySelectorAll","tag","elements","index","_el$querySelector","_el$querySelector2","_el$querySelector3","_el$querySelector4","_el$querySelector5","_el$querySelector6","_el$querySelector7","_el$querySelector8","optionsNode","options","opt","Date","now","key","required","alignment","headerLevel","placeholder","dropdownOptions","filter","join","prev","generateKey","existingCount","length","addElement","newKey","newElement","toString","charAt","toUpperCase","slice","useCurrentDate","defaultBoolean","min","max","step","defaultValue","showPasswordOption","passwordLength","requireSymbols","requireNumbers","textColor","fontFamily","submitIndex","findIndex","newFormElements","splice","isKeyUnique","handleSubmit","method","headers","body","JSON","stringify","then","catch","handleImageUpload","event","elementId","file","target","files","reader","FileReader","onload","e","imageSrc","result","readAsDataURL","saveForm","tags","split","trim","convertToXML","obj","xml","isArray","forEach","element","cell","xmlData","statusText","localStorage","setItem","message","removeElement","handleEditClick","_element$settings","_element$settings2","applyDraftChanges","updateElementSettings","undefined","cancelChanges","newSettings","handleDragStart","active","handleDragEnd","over","oldIndex","newIndex","handleCSVUpload","endsWith","parse","complete","header","handleResetForm","window","confirm","validatePassword","password","test","renderElementContent","alignmentStyle","textAlign","wrapperStyle","display","flexDirection","alignItems","width","marginBottom","HeaderTag","style","children","fileName","_jsxFileName","lineNumber","columnNumber","areRequiredFieldsFilled","every","className","height","overflow","htmlFor","value","onChange","gap","onClick","input","ref","overflowY","collisionDetection","onDragEnd","onDragStart","items","strategy","SortableFormElement","checked","option","idx","updatedOptions","_","i","marginLeft","padding","color","backgroundColor","borderRadius","cursor","disabled","_c","_s2","_element$settings3","attributes","listeners","setNodeRef","transform","transition","x","y","onMouseDown","stopPropagation","_c2","$RefreshReg$"],"sources":["C:/Users/abarbas/Desktop/soar_web_forms/src/components/FormBuilder.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { DndContext, DragOverlay, closestCenter } from '@dnd-kit/core';\r\nimport { arrayMove, SortableContext, useSortable, rectSortingStrategy } from '@dnd-kit/sortable';\r\nimport Papa from 'papaparse';\r\nimport './FormBuilder.css';\r\nimport Button from '@splunk/react-ui/Button';\r\n\r\nconst ELEMENT_TYPES = [\r\n  { id: 'heading', label: 'Heading' },\r\n  { id: 'text', label: 'Text' },\r\n  { id: 'divider', label: 'Divider' },\r\n  //{ id: 'button', label: 'Button' },\r\n  //{ id: 'image', label: 'Image' },\r\n  { id: 'table', label: 'Table' }\r\n];\r\n\r\nconst INPUT_FIELDS = [\r\n  { id: 'inputText', label: 'Input Text', type: 'text' },\r\n  { id: 'email', label: 'Email', type: 'email' },\r\n  //{ id: 'password', label: 'Password', type: 'password' }, \r\n  { id: 'dateTime', label: 'Date or Time', type: 'datetime-local' },\r\n  { id: 'dropdown', label: 'Dropdown', type: 'dropdown' },\r\n  { id: 'boolean', label: 'Boolean', type: 'dropdown' },\r\n  { id: 'number', label: 'Number', type: 'number' },\r\n  { id: 'file', label: 'File Upload', type: 'file' }\r\n\r\n];\r\n\r\nconst FormBuilder = () => {\r\n  const [formElements, setFormElements] = useState([]);\r\n  const [formName, setFormName] = useState('');\r\n  const [formLabel, setFormLabel] = useState('');\r\n  const [formTags, setFormTags] = useState('');\r\n  const [savedForms, setSavedForms] = useState([]); // Add state to store list of saved forms\r\n  const [selectedForm, setSelectedForm] = useState(''); // Add state to track selected form\r\n  const [selectedElement, setSelectedElement] = useState(null);\r\n  const [draftSettings, setDraftSettings] = useState(null);\r\n  const [draggingElement, setDraggingElement] = useState(null);\r\n  const formContainerRef = useRef(null);\r\n  const [selectedFileName, setSelectedFileName] = useState('');\r\n  const SUBMIT_BUTTON_ID = 'submit-button';\r\n  const [formToLoad, setFormToLoad] = useState(null); // Hold the form name to load after clearing\r\n  \r\n\r\nuseEffect(() => {\r\n  console.log('Form Elements Updated:', formElements);\r\n  const tableElement = formElements.find((el) => el.type === 'table');\r\n  if (tableElement) {\r\n    console.log('Table Element Found:', tableElement);\r\n    console.log('CSV Data in State:', tableElement.settings.csvData);\r\n  }\r\n}, [formElements]);\r\n\r\nuseEffect(() => {\r\n  if (!formElements.some(el => el.id === SUBMIT_BUTTON_ID)) {\r\n    addSubmitButton();\r\n  }\r\n}, [formElements]);\r\n\r\nuseEffect(() => {\r\n  loadSavedForms();\r\n}, []);\r\n\r\n\r\nconst loadSavedForms = async () => {\r\n  try {\r\n    const response = await fetch('http://localhost:5000/forms');\r\n    if (!response.ok) {\r\n      throw new Error(`Failed to fetch forms: ${response.status}`);\r\n    }\r\n    const data = await response.json();\r\n    const loadedForms = data.map(form => ({\r\n      id: form.id, // Ensure this is present\r\n      name: form.name // Ensure this is present\r\n    }));\r\n    setSavedForms(loadedForms); // Set the forms to state\r\n  } catch (error) {\r\n    console.error('Error loading forms:', error);\r\n  }\r\n};\r\n\r\n\r\nconst loadForm = async () => {\r\n  if (!selectedForm) {\r\n    alert('Please select a form to load.');\r\n    return;\r\n  }\r\n\r\n  try {\r\n    const response = await fetch(`http://localhost:5000/forms/${encodeURIComponent(selectedForm)}`);\r\n    if (!response.ok) {\r\n      throw new Error(`Failed to load form: ${response.status}`);\r\n    }\r\n\r\n    const formData = await response.json();\r\n    const parser = new DOMParser();\r\n    const xmlDoc = parser.parseFromString(formData.xml_data, 'application/xml');\r\n    const loadedName = xmlDoc.querySelector('form > name')?.textContent || '';\r\n    const loadedLabel = xmlDoc.querySelector('form > label')?.textContent || '';\r\n    const loadedTags = Array.from(xmlDoc.querySelectorAll('form > tags > tag')).map(tag => tag.textContent);\r\n\r\n    const elements = Array.from(xmlDoc.querySelectorAll('elements > element')).map((el, index) => {\r\n      const type = el.querySelector('type')?.textContent || 'text';\r\n      const optionsNode = el.querySelector('dropdownOptions');\r\n      const options = optionsNode ? Array.from(optionsNode.querySelectorAll('option')).map(opt => opt.textContent) : [];\r\n\r\n      return {\r\n        id: `element-${Date.now()}-${index}`,\r\n        type,\r\n        key: el.querySelector('key')?.textContent || '',\r\n        label: el.querySelector('label')?.textContent || '',\r\n        required: el.querySelector('required')?.textContent === 'true',\r\n        alignment: el.querySelector('alignment')?.textContent || 'center',\r\n        settings: {\r\n          headerLevel: el.querySelector('headerLevel')?.textContent || 'h1',\r\n          placeholder: el.querySelector('placeholder')?.textContent || '',\r\n          dropdownOptions: options,\r\n          label: el.querySelector('label')?.textContent || '' // Set label directly in settings\r\n        }\r\n      };\r\n    }).filter(el => el.type !== 'button'); // Exclude submit button\r\n\r\n    setFormName(loadedName);\r\n    setFormLabel(loadedLabel);\r\n    setFormTags(loadedTags.join(', '));\r\n    setFormElements(elements);\r\n\r\n    console.log(`Form \"${selectedForm}\" loaded successfully!`);\r\n  } catch (error) {\r\n    console.error('Error loading form:', error);\r\n    alert('Failed to load form data.');\r\n  }\r\n};\r\n\r\n\r\nconst addSubmitButton = () => {\r\n  setFormElements(prev => [\r\n    ...prev,\r\n    {\r\n      id: SUBMIT_BUTTON_ID,\r\n      type: 'button',\r\n      key: 'Submit',\r\n      label: 'Submit',\r\n      alignment: 'center',\r\n      required: false,\r\n      settings: {},\r\n    },\r\n  ]);\r\n};\r\n\r\nconst generateKey = (type) => {\r\n  // Count how many elements of this type already exist in formElements\r\n  const existingCount = formElements.filter((el) => el.type === type).length;\r\n  return `${type}${existingCount + 1}`; // e.g., \"inputText1\", \"inputText2\"\r\n};\r\n\r\nconst addElement = (type) => {\r\n  const newKey = generateKey(type);\r\n  const newElement = {\r\n      id: Date.now().toString(),\r\n      type,\r\n      key: newKey,\r\n      label: `${type.charAt(0).toUpperCase() + type.slice(1)} Label`, // Set a default label based on type\r\n      alignment: 'center',\r\n      settings: {\r\n          label: `${type.charAt(0).toUpperCase() + type.slice(1)} Label`, // Set label directly in settings\r\n          headerLevel: 'h1',\r\n          placeholder: type === 'email' ? 'Email Address' : type === 'password' ? 'Enter password' : 'Enter text here...',\r\n          useCurrentDate: false,\r\n          defaultBoolean: 'true',\r\n          dropdownOptions: [],\r\n          min: '',\r\n          max: '',\r\n          step: '',\r\n          defaultValue: '',\r\n          showPasswordOption: false,\r\n          passwordLength: '',\r\n          requireSymbols: false,\r\n          requireNumbers: false,\r\n          csvData: []\r\n      },\r\n      required: false,\r\n      textColor: '#ffffff',\r\n      fontFamily: 'Arial',\r\n  };\r\n\r\n  // Ensure new elements are added before the Submit button and prevent duplicates\r\n  setFormElements((prev) => {\r\n      const submitIndex = prev.findIndex((el) => el.id === SUBMIT_BUTTON_ID);\r\n      const newFormElements = [...prev];\r\n      newFormElements.splice(submitIndex, 0, newElement); // Insert new element before the submit button\r\n      return newFormElements;\r\n  });\r\n};\r\n\r\n  const isKeyUnique = (key) => {\r\n    return !formElements.some((el) => el.key === key && el.id !== selectedElement?.id);\r\n  };\r\n  const handleSubmit = () => {\r\n    const formData = formElements.filter(el => el.id !== SUBMIT_BUTTON_ID); // Exclude submit button from data\r\n    console.log('Form submitted:', formData);\r\n\r\n    // Example API call\r\n    fetch('/api/submit-form', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ elements: formData }),\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => console.log('Form submission response:', data))\r\n      .catch(error => console.error('Error submitting form:', error));\r\n  };\r\n\r\n  const handleImageUpload = (event, elementId) => {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        const imageSrc = e.target.result;\r\n        setFormElements((prev) =>\r\n          prev.map((el) =>\r\n            el.id === elementId\r\n              ? { ...el, settings: { ...el.settings, imageSrc } }\r\n              : el\r\n          )\r\n        );\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n  \r\n  const saveForm = async () => {\r\n    if (!formName) {\r\n      alert('Please enter a name for the form.');\r\n      return;\r\n    }\r\n  \r\n    const formData = {\r\n      name: formName,\r\n      label: formLabel,\r\n      tags: formTags ? formTags.split(',').map(tag => tag.trim()) : [],\r\n      elements: formElements, // Includes the populated csvData\r\n    };\r\n  \r\n    // Convert form data to XML\r\n    const convertToXML = (obj) => {\r\n      let xml = '';\r\n      for (let key in obj) {\r\n        if (Array.isArray(obj[key])) {\r\n          xml += `<${key}>`;\r\n          obj[key].forEach((element) => {\r\n            if (Array.isArray(element)) {\r\n              // Handle CSV data as rows and cells\r\n              xml += '<row>';\r\n              element.forEach((cell) => {\r\n                xml += `<cell>${cell}</cell>`;\r\n              });\r\n              xml += '</row>';\r\n            } else {\r\n              xml += `<element>${convertToXML(element)}</element>`;\r\n            }\r\n          });\r\n          xml += `</${key}>`;\r\n        } else if (typeof obj[key] === 'object') {\r\n          xml += `<${key}>${convertToXML(obj[key])}</${key}>`;\r\n        } else {\r\n          xml += `<${key}>${obj[key]}</${key}>`;\r\n        }\r\n      }\r\n      return xml;\r\n    };\r\n  \r\n    const xmlData = `<form>${convertToXML(formData)}</form>`;\r\n  \r\n    // Send form data to backend\r\n    try {\r\n      const response = await fetch('http://localhost:5000/save_form', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          name: formName,\r\n          label: formLabel,\r\n          tags: formTags ? formTags.split(',').map(tag => tag.trim()) : [],\r\n          elements: formElements,\r\n          xmlData: xmlData, // Include XML data in the request\r\n        }),\r\n      });\r\n  \r\n      if (!response.ok) {\r\n        throw new Error(`Failed to save form: ${response.status} ${response.statusText}`);\r\n      }\r\n  \r\n      alert(`Form \"${formName}\" saved successfully!`);\r\n      localStorage.setItem(formName, xmlData); // Optional: save XML to local storage\r\n  \r\n      // Refresh saved forms after saving\r\n      loadSavedForms();\r\n  \r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      alert(`Error saving form: ${error.message}`);\r\n    }\r\n  };\r\n  \r\n  const removeElement = (id) => {\r\n    if (id === SUBMIT_BUTTON_ID) return; // Prevent deletion of the Submit button\r\n    setFormElements(prev => prev.filter(el => el.id !== id));\r\n    if (selectedElement?.id === id) {\r\n      setSelectedElement(null);\r\n    }\r\n  };\r\n\r\n  const handleEditClick = (element) => {\r\n    setSelectedElement(element);\r\n    setDraftSettings({\r\n        ...element.settings,\r\n        key: element.key || '',\r\n        label: element.label,\r\n        alignment: element.alignment,\r\n        required: element.required,\r\n        placeholder: element.settings?.placeholder,\r\n        csvData: element.settings?.csvData || [], // Ensure csvData is included\r\n    });\r\n};\r\n\r\n  \r\n  const applyDraftChanges = () => {\r\n    if (selectedElement && draftSettings) {\r\n        console.log('Applying draft changes:', { selectedElement, draftSettings });\r\n\r\n        if (isKeyUnique(draftSettings.key)) {\r\n            updateElementSettings(selectedElement.id, {\r\n                ...selectedElement,\r\n                ...draftSettings,\r\n                settings: {\r\n                    ...selectedElement.settings,\r\n                    ...draftSettings,\r\n                    csvData: draftSettings.csvData !== undefined\r\n                        ? draftSettings.csvData\r\n                        : selectedElement.settings.csvData, // Preserve csvData if not in draftSettings\r\n                },\r\n            });\r\n\r\n            console.log('Updated element:', selectedElement);\r\n            setSelectedElement(null);\r\n            setDraftSettings(null);\r\n        } else {\r\n            alert('The key must be unique. Please choose another.');\r\n        }\r\n    }\r\n};\r\n\r\n\r\n  const cancelChanges = () => {\r\n    setSelectedElement(null);\r\n    setDraftSettings(null);\r\n  };\r\n\r\n  const updateElementSettings = (id, newSettings) => {\r\n    console.log('Updating element settings for ID:', id);\r\n    console.log('New settings before merge:', newSettings);\r\n\r\n    setFormElements((prev) =>\r\n        prev.map((el) =>\r\n            el.id === id.toString()\r\n                ? {\r\n                    ...el,\r\n                    ...newSettings,\r\n                    settings: {\r\n                        ...el.settings,\r\n                        ...newSettings,\r\n                        csvData: newSettings.csvData !== undefined\r\n                            ? newSettings.csvData\r\n                            : el.settings.csvData, // Preserve existing csvData if not overwritten\r\n                    },\r\n                }\r\n                : el\r\n        )\r\n    );\r\n\r\n    console.log('Updated form elements:', formElements);\r\n};\r\n\r\n  \r\n  const handleDragStart = ({ active }) => {\r\n    setDraggingElement(active.id);\r\n  };\r\n\r\n  const handleDragEnd = ({ active, over }) => {\r\n    if (over && active.id !== over.id) {\r\n      const oldIndex = formElements.findIndex((el) => el.id === active.id);\r\n      const newIndex = formElements.findIndex((el) => el.id === over.id);\r\n      setFormElements((prev) => arrayMove(prev, oldIndex, newIndex));\r\n    }\r\n    setDraggingElement(null);\r\n  };\r\n\r\n  const handleCSVUpload = (event, elementId) => {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      if (!file.name.endsWith('.csv')) {\r\n        alert('Please upload a valid .csv file.');\r\n        return;\r\n      }\r\n      Papa.parse(file, {\r\n        complete: (result) => {\r\n          const csvData = result.data;\r\n          console.log('Parsed CSV Data:', csvData);\r\n  \r\n          setFormElements((prev) =>\r\n            prev.map((el) =>\r\n              el.id === elementId\r\n                ? {\r\n                    ...el,\r\n                    csvData, // Update the csvData property\r\n                    settings: { ...el.settings, csvData }\r\n                  }\r\n                : el\r\n            )\r\n          );\r\n        },\r\n        header: false, // Adjust as needed\r\n      });\r\n    }\r\n  };\r\n  \r\n  const handleResetForm = () => {\r\n    if (window.confirm('Are you sure you want to reset the form?')) {\r\n      setFormElements([]);   // Clear form elements\r\n      setFormName('');       // Clear Form Name\r\n      setFormLabel('');      // Clear Label\r\n      setSelectedElement(null); // Close the form editor by deselecting the element\r\n    }\r\n  };\r\n  \r\n\r\n  const validatePassword = (password, settings) => {\r\n    if (settings?.passwordLength && password.length < settings.passwordLength) {\r\n      return false;\r\n    }\r\n    if (settings?.requireSymbols && !/[!@#$%^&*(),.?\":{}|<>]/.test(password)) {\r\n      return false;\r\n    }\r\n    if (settings?.requireNumbers && !/[0-9]/.test(password)) {\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\nconst renderElementContent = (element) => {\r\n    const settings = element.settings || {}; // Directly use settings from element\r\n    const alignmentStyle = {\r\n        textAlign: settings.alignment || 'center',\r\n    };\r\n    const wrapperStyle = {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: settings.alignment === 'left' ? 'flex-start' : settings.alignment === 'right' ? 'flex-end' : 'center',\r\n        width: '100%',\r\n        marginBottom: '10px',\r\n    };\r\n\r\n    switch (element.type) {\r\n        case 'heading':\r\n            const HeaderTag = settings.headerLevel || 'h1';\r\n            return (\r\n                <div style={wrapperStyle}>\r\n                    {settings.label && <HeaderTag style={alignmentStyle}>{settings.label}</HeaderTag>}\r\n                </div>\r\n            );\r\n        case 'text':\r\n            return <p style={alignmentStyle}>{settings.label}</p>;\r\n        // Other cases for different element types...\r\n        default:\r\n            return (\r\n                <div style={wrapperStyle}>\r\n                    {settings.label && <label>{settings.label}</label>}\r\n                    <input type={element.type} placeholder={settings.placeholder || ''} required={element.required} />\r\n                </div>\r\n            );\r\n    }\r\n};\r\n\r\n  const areRequiredFieldsFilled = () => {\r\n    return formElements.every((el) => {\r\n      if (el.required) {\r\n        return el.settings.label && el.settings.label.trim() !== '';\r\n      }\r\n      return true;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-builder-container\" style={{ height: '100vh', overflow: 'hidden' }}>\r\n<div className=\"sidebar\">\r\n\r\n\r\n  {/* Form Name Input */}\r\n  <div className=\"form-name-section\" style={{ marginBottom: '20px' }}>\r\n    <label htmlFor=\"form-name\" className=\"sidebar-label\">Form Name:</label>\r\n    <input\r\n      id=\"form-name\"\r\n      type=\"text\"\r\n      value={formName}\r\n      onChange={(e) => setFormName(e.target.value)}\r\n      placeholder=\"Enter form name\"\r\n      className=\"form-input\"\r\n    />\r\n  </div>\r\n\r\n  {/* Label Input (Required) */}\r\n<div className=\"form-label-section\" style={{ marginBottom: '20px' }}>\r\n  <label htmlFor=\"form-label\" className=\"sidebar-label\">Label (Required):</label>\r\n  <input\r\n    id=\"form-label\"\r\n    type=\"text\"\r\n    value={formLabel}\r\n    onChange={(e) => setFormLabel(e.target.value)}\r\n    placeholder=\"Enter form label\"\r\n    className=\"form-input\"\r\n  />\r\n</div>\r\n\r\n\r\n  <div className=\"element-input-wrapper\" style={{ display: 'flex', gap: '10px' }}>\r\n    <div className=\"element-selector\">\r\n      <h4>Elements</h4>\r\n      {ELEMENT_TYPES.map((element) => (\r\n        <button\r\n          key={element.id}\r\n          onClick={() => addElement(element.id)}\r\n          className=\"element-button\"\r\n        >\r\n          {element.label}\r\n        </button>\r\n      ))}\r\n    </div>\r\n\r\n    <div className=\"input-selector\">\r\n      <h4>Input Fields</h4>\r\n      {INPUT_FIELDS.map((input) => (\r\n        <button\r\n          key={input.id}\r\n          onClick={() => addElement(input.id)}\r\n          className=\"input-button\"\r\n        >\r\n          {input.label}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  </div>\r\n  <div className=\"load-section\" style={{ marginBottom: '20px' }}>\r\n  <label htmlFor=\"saved-forms\" className=\"sidebar-label\">Load Saved Form:</label>\r\n  <select\r\n    id=\"saved-forms\"\r\n    value={selectedForm}\r\n    onChange={(e) => setSelectedForm(e.target.value)}\r\n    className=\"sidebar-select\"\r\n  >\r\n    <option value=\"\">-- Select a Form --</option>\r\n    {savedForms.map((form) => (\r\n      <option key={form.id} value={form.name}> {/* Ensure you're using form.name */}\r\n        {form.name} {/* This should render a string */}\r\n      </option>\r\n    ))}\r\n  </select>\r\n  <button onClick={loadForm} className=\"load-form-button\">Load Form</button>\r\n</div>\r\n  <button onClick={saveForm} className=\"save-form-button\">Save Form</button>\r\n  <button onClick={handleResetForm} className=\"reset-form-button\">Reset Form</button>\r\n</div>\r\n\r\n\r\n      <div className=\"form-builder\" ref={formContainerRef} style={{ height: '100%', overflowY: 'auto' }}>\r\n        <DndContext\r\n          collisionDetection={closestCenter}\r\n          onDragEnd={handleDragEnd}\r\n          onDragStart={handleDragStart}\r\n        >\r\n          <SortableContext items={formElements} strategy={rectSortingStrategy}>\r\n            <div className=\"form-preview\">\r\n              {formElements.map((element) => (\r\n                <SortableFormElement\r\n                  key={element.id}\r\n                  element={element}\r\n                  handleEditClick={handleEditClick}\r\n                  renderElementContent={renderElementContent}\r\n                />\r\n              ))}\r\n            </div>\r\n          </SortableContext>\r\n          {draggingElement && (\r\n            <DragOverlay>\r\n              <div className=\"dragging-overlay\">Dragging</div>\r\n            </DragOverlay>\r\n          )}\r\n        </DndContext>\r\n      </div>\r\n\r\n      {selectedElement && (\r\n  <div className=\"element-editor\">\r\n    <div className=\"element-editor-header\">\r\n    <h3>Edit Element</h3>\r\n      <button\r\n        onClick={() => {\r\n          if (window.confirm('Are you sure you want to delete this element?')) {\r\n            removeElement(selectedElement.id);\r\n          }\r\n        }}\r\n        className=\"delete-element\"\r\n      >\r\n        X\r\n      </button>\r\n    </div>\r\n          <label>\r\n          Key:\r\n          <input\r\n            type=\"text\"\r\n            value={draftSettings?.key || ''}\r\n            onChange={(e) =>\r\n              setDraftSettings((prev) => ({ ...prev, key: e.target.value }))\r\n            }\r\n           />\r\n          </label>\r\n          <label>\r\n            Label:\r\n            <input\r\n              type=\"text\"\r\n              value={draftSettings?.label || ''}\r\n              onChange={(e) =>\r\n                setDraftSettings((prev) => ({ ...prev, label: e.target.value }))\r\n              }\r\n            />\r\n          </label>\r\n          <div className=\"checkbox-wrapper\">\r\n            <label>\r\n    Required:\r\n            </label>\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={draftSettings?.required || false}\r\n              onChange={(e) =>\r\n                setDraftSettings((prev) => ({\r\n                  ...prev,\r\n                  required: e.target.checked,\r\n                }))\r\n              }\r\n            />\r\n          </div>\r\n          {selectedElement.type === 'heading' && (\r\n            <label>\r\n              Header Level:\r\n              <select\r\n                value={draftSettings?.headerLevel || 'h1'}\r\n                onChange={(e) =>\r\n                  setDraftSettings((prev) => ({\r\n                    ...prev,\r\n                    headerLevel: e.target.value,\r\n                  }))\r\n                }\r\n              >\r\n                <option value=\"h1\">H1</option>\r\n                <option value=\"h2\">H2</option>\r\n                <option value=\"h3\">H3</option>\r\n                <option value=\"h4\">H4</option>\r\n                <option value=\"h5\">H5</option>\r\n                <option value=\"h6\">H6</option>\r\n              </select>\r\n            </label>\r\n          )}\r\n          <label>\r\n            Alignment:\r\n            <select\r\n              value={draftSettings?.alignment || 'center'}\r\n              onChange={(e) =>\r\n                setDraftSettings((prev) => ({ ...prev, alignment: e.target.value }))\r\n              }\r\n            >\r\n              <option value=\"left\">Left</option>\r\n              <option value=\"center\">Center</option>\r\n              <option value=\"right\">Right</option>\r\n            </select>\r\n          </label>\r\n          {(selectedElement.type === 'inputText' || selectedElement.type === 'email') && (\r\n            <label>\r\n              Placeholder Text:\r\n              <input\r\n                type=\"text\"\r\n                value={draftSettings?.placeholder || ''}\r\n                onChange={(e) =>\r\n                  setDraftSettings((prev) => ({ ...prev, placeholder: e.target.value }))\r\n                }\r\n              />\r\n            </label>\r\n          )}\r\n          {selectedElement.type === 'dateTime' && (\r\n            <label>\r\n              Use Current Date:\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={draftSettings?.useCurrentDate || false}\r\n                onChange={(e) =>\r\n                  setDraftSettings((prev) => ({ ...prev, useCurrentDate: e.target.checked }))\r\n                }\r\n              />\r\n            </label>\r\n          )}\r\n{selectedElement.type === 'dropdown' && (\r\n  <>\r\n{selectedElement.type === 'dropdown' && (\r\n  <>\r\n    <div className=\"dropdown-options-container\">\r\n      <label>Dropdown Options:</label>\r\n      <button\r\n        onClick={() =>\r\n          setDraftSettings((prev) => ({\r\n            ...prev,\r\n            dropdownOptions: [...(prev.dropdownOptions || []), ''],\r\n          }))\r\n        }\r\n        className=\"add-option\"\r\n      >\r\n        +\r\n      </button>\r\n    </div>\r\n    {draftSettings?.dropdownOptions?.map((option, idx) => (\r\n      <div key={idx} style={{ display: 'flex', alignItems: 'center' }}>\r\n        <input\r\n          type=\"text\"\r\n          value={option}\r\n          onChange={(e) =>\r\n            setDraftSettings((prev) => {\r\n              const updatedOptions = [...prev.dropdownOptions];\r\n              updatedOptions[idx] = e.target.value;\r\n              return { ...prev, dropdownOptions: updatedOptions };\r\n            })\r\n          }\r\n        />\r\n        <button\r\n          onClick={() =>\r\n            setDraftSettings((prev) => ({\r\n              ...prev,\r\n              dropdownOptions: prev.dropdownOptions.filter((_, i) => i !== idx),\r\n            }))\r\n          }\r\n          style={{\r\n            marginLeft: '10px',\r\n            padding: '5px 10px',\r\n            color: 'white',\r\n            backgroundColor: 'red',\r\n            borderRadius: '4px',\r\n            cursor: 'pointer',\r\n          }}\r\n        >\r\n          X\r\n        </button>\r\n      </div>\r\n    ))}\r\n  </>\r\n)}\r\n\r\n  </>\r\n)}\r\n\r\n          {selectedElement.type === 'boolean' && (\r\n            <label>\r\n              Default Boolean Value:\r\n              <select\r\n                value={draftSettings?.defaultBoolean || 'true'}\r\n                onChange={(e) =>\r\n                  setDraftSettings((prev) => ({ ...prev, defaultBoolean: e.target.value }))\r\n                }\r\n              >\r\n                <option value=\"true\">True</option>\r\n                <option value=\"false\">False</option>\r\n              </select>\r\n            </label>\r\n          )}\r\n          {selectedElement.type === 'number' && (\r\n            <>\r\n              <label>\r\n                Minimum Value:\r\n                <input\r\n                  type=\"number\"\r\n                  value={draftSettings?.min || ''}\r\n                  onChange={(e) =>\r\n                    setDraftSettings((prev) => ({ ...prev, min: e.target.value }))\r\n                  }\r\n                />\r\n              </label>\r\n              <label>\r\n                Maximum Value:\r\n                <input\r\n                  type=\"number\"\r\n                  value={draftSettings?.max || ''}\r\n                  onChange={(e) =>\r\n                    setDraftSettings((prev) => ({ ...prev, max: e.target.value }))\r\n                  }\r\n                />\r\n              </label>\r\n              <label>\r\n                Step Value:\r\n                <input\r\n                  type=\"number\"\r\n                  value={draftSettings?.step || ''}\r\n                  onChange={(e) =>\r\n                    setDraftSettings((prev) => ({ ...prev, step: e.target.value }))\r\n                  }\r\n                />\r\n              </label>\r\n              <label>\r\n                Default Value:\r\n                <input\r\n                  type=\"number\"\r\n                  value={draftSettings?.defaultValue || ''}\r\n                  onChange={(e) =>\r\n                    setDraftSettings((prev) => ({ ...prev, defaultValue: e.target.value }))\r\n                  }\r\n                />\r\n              </label>\r\n            </>\r\n          )}\r\n          {selectedElement.type === 'password' && (\r\n            <>\r\n              <label>\r\n                Show Password Option:\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={draftSettings?.showPasswordOption || false}\r\n                  onChange={(e) =>\r\n                    setDraftSettings((prev) => ({\r\n                      ...prev,\r\n                      showPasswordOption: e.target.checked,\r\n                    }))\r\n                  }\r\n                />\r\n              </label>\r\n              <label>\r\n                Minimum Password Length:\r\n                <input\r\n                  type=\"number\"\r\n                  value={draftSettings?.passwordLength || ''}\r\n                  onChange={(e) =>\r\n                    setDraftSettings((prev) => ({\r\n                      ...prev,\r\n                      passwordLength: e.target.value,\r\n                    }))\r\n                  }\r\n                />\r\n              </label>\r\n              <label>\r\n                Requires Symbols:\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={draftSettings?.requireSymbols || false}\r\n                  onChange={(e) =>\r\n                    setDraftSettings((prev) => ({\r\n                      ...prev,\r\n                      requireSymbols: e.target.checked,\r\n                    }))\r\n                  }\r\n                />\r\n              </label>\r\n              <label>\r\n                Requires Numbers:\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={draftSettings?.requireNumbers || false}\r\n                  onChange={(e) =>\r\n                    setDraftSettings((prev) => ({\r\n                      ...prev,\r\n                      requireNumbers: e.target.checked,\r\n                    }))\r\n                  }\r\n                />\r\n              </label>\r\n            </>\r\n          )}\r\n          <button\r\n            onClick={applyDraftChanges}\r\n            className=\"save-changes\"\r\n\r\n            disabled={!areRequiredFieldsFilled()}\r\n          >\r\n            Save Changes\r\n          </button>\r\n          <button\r\n            onClick={cancelChanges}\r\n            className=\"cancel-button\"\r\n          >\r\n            Cancel\r\n          </button>      \r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SortableFormElement = ({ element, handleEditClick, renderElementContent }) => {\r\n  const { attributes, listeners, setNodeRef, transform, transition } = useSortable({\r\n    id: element.id,\r\n  });\r\n\r\n  const style = {\r\n    transform: transform ? `translate3d(${transform.x}px, ${transform.y}px, 0)` : undefined,\r\n    transition,\r\n    backgroundColor: element.settings?.backgroundColor || 'inherit',\r\n  };\r\n\r\n  return (\r\n    <div\r\n      ref={setNodeRef}\r\n      style={style}\r\n      className=\"form-element\"\r\n      onClick={() => handleEditClick(element)}\r\n    >\r\n      {renderElementContent(element)}\r\n      <button\r\n        className=\"drag-handle\"\r\n        {...listeners}\r\n        {...attributes}\r\n        onMouseDown={(e) => e.stopPropagation()}\r\n      >\r\n        Drag\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormBuilder;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}