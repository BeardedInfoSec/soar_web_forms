{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abarbas\\\\Desktop\\\\soar_web_forms\\\\src\\\\components\\\\FormDisplay.js\",\n  _s = $RefreshSig$();\n// src/components/FormDisplay.js\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './FormDisplay.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormDisplay = () => {\n  _s();\n  const {\n    formName\n  } = useParams(); // Get form name from the URL\n  const [formData, setFormData] = useState(null);\n  const [formValues, setFormValues] = useState({});\n  const [error, setError] = useState('');\n\n  // Fetch form data from the backend when the component mounts\n  useEffect(() => {\n    const fetchFormData = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/forms/${encodeURIComponent(formName)}`);\n        if (!response.ok) {\n          throw new Error('Form not found');\n        }\n        const data = await response.json();\n        setFormData(parseXML(data.xml_data)); // Parse the XML data from the response\n      } catch (error) {\n        console.error('Error fetching form data:', error);\n        setError('Form not found or an error occurred while fetching the data');\n      }\n    };\n    fetchFormData();\n  }, [formName]);\n\n  // Helper function to parse XML data\n  const parseXML = xmlString => {\n    var _xmlDoc$querySelector, _xmlDoc$querySelector2;\n    const parser = new DOMParser();\n    const xmlDoc = parser.parseFromString(xmlString, 'application/xml');\n    const name = ((_xmlDoc$querySelector = xmlDoc.querySelector('form > name')) === null || _xmlDoc$querySelector === void 0 ? void 0 : _xmlDoc$querySelector.textContent) || 'Unnamed Form';\n    const label = ((_xmlDoc$querySelector2 = xmlDoc.querySelector('form > label')) === null || _xmlDoc$querySelector2 === void 0 ? void 0 : _xmlDoc$querySelector2.textContent) || 'event_data';\n    const elements = Array.from(xmlDoc.querySelectorAll('elements > element')).map(el => {\n      var _el$querySelector, _el$querySelector2, _el$querySelector3, _el$querySelector4, _el$querySelector5, _el$querySelector6;\n      const optionsNode = el.querySelector('dropdownOptions');\n      const options = optionsNode ? Array.from(optionsNode.querySelectorAll('option')).map(opt => opt.textContent) : [];\n      return {\n        type: ((_el$querySelector = el.querySelector('type')) === null || _el$querySelector === void 0 ? void 0 : _el$querySelector.textContent) || 'text',\n        key: ((_el$querySelector2 = el.querySelector('key')) === null || _el$querySelector2 === void 0 ? void 0 : _el$querySelector2.textContent) || '',\n        label: ((_el$querySelector3 = el.querySelector('label')) === null || _el$querySelector3 === void 0 ? void 0 : _el$querySelector3.textContent) || '',\n        required: ((_el$querySelector4 = el.querySelector('required')) === null || _el$querySelector4 === void 0 ? void 0 : _el$querySelector4.textContent) === 'true',\n        placeholder: ((_el$querySelector5 = el.querySelector('placeholder')) === null || _el$querySelector5 === void 0 ? void 0 : _el$querySelector5.textContent) || '',\n        alignment: ((_el$querySelector6 = el.querySelector('alignment')) === null || _el$querySelector6 === void 0 ? void 0 : _el$querySelector6.textContent) || 'center',\n        options: options\n      };\n    });\n    return {\n      name,\n      label,\n      elements\n    };\n  };\n  const handleInputChange = (key, value) => {\n    setFormValues(prev => ({\n      ...prev,\n      [key]: value\n    }));\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    alert('Form submitted. Implement data handling logic here.');\n  };\n  if (!formData) {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: error || 'Loading form data...'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 16\n    }, this);\n  }\n  const renderElement = (element, index) => {\n    switch (element.type) {\n      // Add other form elements here (e.g., boolean, dateTime, number)\n      default:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          style: {\n            textAlign: element.alignment,\n            marginBottom: '15px'\n          },\n          children: [element.label && /*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              display: 'block',\n              marginBottom: '5px',\n              fontWeight: 'bold',\n              color: '#ffffff',\n              textAlign: element.alignment\n            },\n            children: element.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: element.type,\n            placeholder: element.placeholder,\n            required: element.required,\n            onChange: e => handleInputChange(element.key, e.target.value),\n            style: {\n              padding: '10px',\n              borderRadius: '6px',\n              width: '100%',\n              maxWidth: '400px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: formData.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      style: {\n        maxHeight: '80vh',\n        overflowY: 'auto'\n      },\n      children: [formData.elements.map((element, index) => renderElement(element, index)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        style: {\n          textAlign: 'center',\n          marginTop: '20px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          style: {\n            padding: '10px 20px',\n            borderRadius: '6px',\n            backgroundColor: '#007bff',\n            color: 'white',\n            border: 'none',\n            cursor: 'pointer'\n          },\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n};\n_s(FormDisplay, \"KkH4DRBe1iibFJVYOaBfn/Zgcqs=\", false, function () {\n  return [useParams];\n});\n_c = FormDisplay;\nexport default FormDisplay;\nvar _c;\n$RefreshReg$(_c, \"FormDisplay\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","FormDisplay","_s","formName","formData","setFormData","formValues","setFormValues","error","setError","fetchFormData","response","fetch","encodeURIComponent","ok","Error","data","json","parseXML","xml_data","console","xmlString","_xmlDoc$querySelector","_xmlDoc$querySelector2","parser","DOMParser","xmlDoc","parseFromString","name","querySelector","textContent","label","elements","Array","from","querySelectorAll","map","el","_el$querySelector","_el$querySelector2","_el$querySelector3","_el$querySelector4","_el$querySelector5","_el$querySelector6","optionsNode","options","opt","type","key","required","placeholder","alignment","handleInputChange","value","prev","handleSubmit","event","preventDefault","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","renderElement","element","index","className","style","textAlign","marginBottom","display","fontWeight","color","onChange","e","target","padding","borderRadius","width","maxWidth","onSubmit","maxHeight","overflowY","marginTop","backgroundColor","border","cursor","_c","$RefreshReg$"],"sources":["C:/Users/abarbas/Desktop/soar_web_forms/src/components/FormDisplay.js"],"sourcesContent":["// src/components/FormDisplay.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport './FormDisplay.css';\r\n\r\nconst FormDisplay = () => {\r\n    const { formName } = useParams(); // Get form name from the URL\r\n    const [formData, setFormData] = useState(null);\r\n    const [formValues, setFormValues] = useState({});\r\n    const [error, setError] = useState('');\r\n\r\n    // Fetch form data from the backend when the component mounts\r\n    useEffect(() => {\r\n        const fetchFormData = async () => {\r\n          try {\r\n            const response = await fetch(`http://localhost:5000/forms/${encodeURIComponent(formName)}`);\r\n            if (!response.ok) {\r\n              throw new Error('Form not found');\r\n            }\r\n            const data = await response.json();\r\n            setFormData(parseXML(data.xml_data)); // Parse the XML data from the response\r\n          } catch (error) {\r\n            console.error('Error fetching form data:', error);\r\n            setError('Form not found or an error occurred while fetching the data');\r\n          }\r\n        };\r\n      \r\n        fetchFormData();\r\n      }, [formName]);\r\n\r\n    // Helper function to parse XML data\r\n    const parseXML = (xmlString) => {\r\n        const parser = new DOMParser();\r\n        const xmlDoc = parser.parseFromString(xmlString, 'application/xml');\r\n        const name = xmlDoc.querySelector('form > name')?.textContent || 'Unnamed Form';\r\n        const label = xmlDoc.querySelector('form > label')?.textContent || 'event_data';\r\n\r\n        const elements = Array.from(xmlDoc.querySelectorAll('elements > element')).map((el) => {\r\n            const optionsNode = el.querySelector('dropdownOptions');\r\n            const options = optionsNode ? Array.from(optionsNode.querySelectorAll('option')).map(opt => opt.textContent) : [];\r\n\r\n            return {\r\n                type: el.querySelector('type')?.textContent || 'text',\r\n                key: el.querySelector('key')?.textContent || '',\r\n                label: el.querySelector('label')?.textContent || '',\r\n                required: el.querySelector('required')?.textContent === 'true',\r\n                placeholder: el.querySelector('placeholder')?.textContent || '',\r\n                alignment: el.querySelector('alignment')?.textContent || 'center',\r\n                options: options\r\n            };\r\n        });\r\n\r\n        return { name, label, elements };\r\n    };\r\n\r\n    const handleInputChange = (key, value) => {\r\n        setFormValues((prev) => ({ ...prev, [key]: value }));\r\n    };\r\n\r\n    const handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        alert('Form submitted. Implement data handling logic here.');\r\n    };\r\n\r\n    if (!formData) {\r\n        return <h2>{error || 'Loading form data...'}</h2>;\r\n    }\r\n\r\n    const renderElement = (element, index) => {\r\n        switch (element.type) {\r\n            // Add other form elements here (e.g., boolean, dateTime, number)\r\n            default:\r\n                return (\r\n                    <div key={index} className=\"form-group\" style={{ textAlign: element.alignment, marginBottom: '15px' }}>\r\n                        {element.label && (\r\n                            <label style={{ display: 'block', marginBottom: '5px', fontWeight: 'bold', color: '#ffffff', textAlign: element.alignment }}>\r\n                                {element.label}\r\n                            </label>\r\n                        )}\r\n                        <input\r\n                            type={element.type}\r\n                            placeholder={element.placeholder}\r\n                            required={element.required}\r\n                            onChange={(e) => handleInputChange(element.key, e.target.value)}\r\n                            style={{ padding: '10px', borderRadius: '6px', width: '100%', maxWidth: '400px' }}\r\n                        />\r\n                    </div>\r\n                );\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"form-container\">\r\n            <h2>{formData.name}</h2>\r\n            <form onSubmit={handleSubmit} style={{ maxHeight: '80vh', overflowY: 'auto' }}>\r\n                {formData.elements.map((element, index) => renderElement(element, index))}\r\n                <div className=\"form-group\" style={{ textAlign: 'center', marginTop: '20px' }}>\r\n                    <button type=\"submit\" style={{ padding: '10px 20px', borderRadius: '6px', backgroundColor: '#007bff', color: 'white', border: 'none', cursor: 'pointer' }}>\r\n                        Submit\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FormDisplay;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM;IAAEC;EAAS,CAAC,GAAGL,SAAS,CAAC,CAAC,CAAC,CAAC;EAClC,MAAM,CAACM,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC;EAChD,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACAD,SAAS,CAAC,MAAM;IACZ,MAAMc,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+BC,kBAAkB,CAACV,QAAQ,CAAC,EAAE,CAAC;QAC3F,IAAI,CAACQ,QAAQ,CAACG,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,gBAAgB,CAAC;QACnC;QACA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;QAClCZ,WAAW,CAACa,QAAQ,CAACF,IAAI,CAACG,QAAQ,CAAC,CAAC,CAAC,CAAC;MACxC,CAAC,CAAC,OAAOX,KAAK,EAAE;QACdY,OAAO,CAACZ,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;QACjDC,QAAQ,CAAC,6DAA6D,CAAC;MACzE;IACF,CAAC;IAEDC,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,CAACP,QAAQ,CAAC,CAAC;;EAEhB;EACA,MAAMe,QAAQ,GAAIG,SAAS,IAAK;IAAA,IAAAC,qBAAA,EAAAC,sBAAA;IAC5B,MAAMC,MAAM,GAAG,IAAIC,SAAS,CAAC,CAAC;IAC9B,MAAMC,MAAM,GAAGF,MAAM,CAACG,eAAe,CAACN,SAAS,EAAE,iBAAiB,CAAC;IACnE,MAAMO,IAAI,GAAG,EAAAN,qBAAA,GAAAI,MAAM,CAACG,aAAa,CAAC,aAAa,CAAC,cAAAP,qBAAA,uBAAnCA,qBAAA,CAAqCQ,WAAW,KAAI,cAAc;IAC/E,MAAMC,KAAK,GAAG,EAAAR,sBAAA,GAAAG,MAAM,CAACG,aAAa,CAAC,cAAc,CAAC,cAAAN,sBAAA,uBAApCA,sBAAA,CAAsCO,WAAW,KAAI,YAAY;IAE/E,MAAME,QAAQ,GAAGC,KAAK,CAACC,IAAI,CAACR,MAAM,CAACS,gBAAgB,CAAC,oBAAoB,CAAC,CAAC,CAACC,GAAG,CAAEC,EAAE,IAAK;MAAA,IAAAC,iBAAA,EAAAC,kBAAA,EAAAC,kBAAA,EAAAC,kBAAA,EAAAC,kBAAA,EAAAC,kBAAA;MACnF,MAAMC,WAAW,GAAGP,EAAE,CAACR,aAAa,CAAC,iBAAiB,CAAC;MACvD,MAAMgB,OAAO,GAAGD,WAAW,GAAGX,KAAK,CAACC,IAAI,CAACU,WAAW,CAACT,gBAAgB,CAAC,QAAQ,CAAC,CAAC,CAACC,GAAG,CAACU,GAAG,IAAIA,GAAG,CAAChB,WAAW,CAAC,GAAG,EAAE;MAEjH,OAAO;QACHiB,IAAI,EAAE,EAAAT,iBAAA,GAAAD,EAAE,CAACR,aAAa,CAAC,MAAM,CAAC,cAAAS,iBAAA,uBAAxBA,iBAAA,CAA0BR,WAAW,KAAI,MAAM;QACrDkB,GAAG,EAAE,EAAAT,kBAAA,GAAAF,EAAE,CAACR,aAAa,CAAC,KAAK,CAAC,cAAAU,kBAAA,uBAAvBA,kBAAA,CAAyBT,WAAW,KAAI,EAAE;QAC/CC,KAAK,EAAE,EAAAS,kBAAA,GAAAH,EAAE,CAACR,aAAa,CAAC,OAAO,CAAC,cAAAW,kBAAA,uBAAzBA,kBAAA,CAA2BV,WAAW,KAAI,EAAE;QACnDmB,QAAQ,EAAE,EAAAR,kBAAA,GAAAJ,EAAE,CAACR,aAAa,CAAC,UAAU,CAAC,cAAAY,kBAAA,uBAA5BA,kBAAA,CAA8BX,WAAW,MAAK,MAAM;QAC9DoB,WAAW,EAAE,EAAAR,kBAAA,GAAAL,EAAE,CAACR,aAAa,CAAC,aAAa,CAAC,cAAAa,kBAAA,uBAA/BA,kBAAA,CAAiCZ,WAAW,KAAI,EAAE;QAC/DqB,SAAS,EAAE,EAAAR,kBAAA,GAAAN,EAAE,CAACR,aAAa,CAAC,WAAW,CAAC,cAAAc,kBAAA,uBAA7BA,kBAAA,CAA+Bb,WAAW,KAAI,QAAQ;QACjEe,OAAO,EAAEA;MACb,CAAC;IACL,CAAC,CAAC;IAEF,OAAO;MAAEjB,IAAI;MAAEG,KAAK;MAAEC;IAAS,CAAC;EACpC,CAAC;EAED,MAAMoB,iBAAiB,GAAGA,CAACJ,GAAG,EAAEK,KAAK,KAAK;IACtC9C,aAAa,CAAE+C,IAAI,KAAM;MAAE,GAAGA,IAAI;MAAE,CAACN,GAAG,GAAGK;IAAM,CAAC,CAAC,CAAC;EACxD,CAAC;EAED,MAAME,YAAY,GAAG,MAAOC,KAAK,IAAK;IAClCA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtBC,KAAK,CAAC,qDAAqD,CAAC;EAChE,CAAC;EAED,IAAI,CAACtD,QAAQ,EAAE;IACX,oBAAOJ,OAAA;MAAA2D,QAAA,EAAKnD,KAAK,IAAI;IAAsB;MAAAoD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACrD;EAEA,MAAMC,aAAa,GAAGA,CAACC,OAAO,EAAEC,KAAK,KAAK;IACtC,QAAQD,OAAO,CAAClB,IAAI;MAChB;MACA;QACI,oBACI/C,OAAA;UAAiBmE,SAAS,EAAC,YAAY;UAACC,KAAK,EAAE;YAAEC,SAAS,EAAEJ,OAAO,CAACd,SAAS;YAAEmB,YAAY,EAAE;UAAO,CAAE;UAAAX,QAAA,GACjGM,OAAO,CAAClC,KAAK,iBACV/B,OAAA;YAAOoE,KAAK,EAAE;cAAEG,OAAO,EAAE,OAAO;cAAED,YAAY,EAAE,KAAK;cAAEE,UAAU,EAAE,MAAM;cAAEC,KAAK,EAAE,SAAS;cAAEJ,SAAS,EAAEJ,OAAO,CAACd;YAAU,CAAE;YAAAQ,QAAA,EACvHM,OAAO,CAAClC;UAAK;YAAA6B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACX,CACV,eACD/D,OAAA;YACI+C,IAAI,EAAEkB,OAAO,CAAClB,IAAK;YACnBG,WAAW,EAAEe,OAAO,CAACf,WAAY;YACjCD,QAAQ,EAAEgB,OAAO,CAAChB,QAAS;YAC3ByB,QAAQ,EAAGC,CAAC,IAAKvB,iBAAiB,CAACa,OAAO,CAACjB,GAAG,EAAE2B,CAAC,CAACC,MAAM,CAACvB,KAAK,CAAE;YAChEe,KAAK,EAAE;cAAES,OAAO,EAAE,MAAM;cAAEC,YAAY,EAAE,KAAK;cAAEC,KAAK,EAAE,MAAM;cAAEC,QAAQ,EAAE;YAAQ;UAAE;YAAApB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrF,CAAC;QAAA,GAZIG,KAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAaV,CAAC;IAElB;EACJ,CAAC;EAED,oBACI/D,OAAA;IAAKmE,SAAS,EAAC,gBAAgB;IAAAR,QAAA,gBAC3B3D,OAAA;MAAA2D,QAAA,EAAKvD,QAAQ,CAACwB;IAAI;MAAAgC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACxB/D,OAAA;MAAMiF,QAAQ,EAAE1B,YAAa;MAACa,KAAK,EAAE;QAAEc,SAAS,EAAE,MAAM;QAAEC,SAAS,EAAE;MAAO,CAAE;MAAAxB,QAAA,GACzEvD,QAAQ,CAAC4B,QAAQ,CAACI,GAAG,CAAC,CAAC6B,OAAO,EAAEC,KAAK,KAAKF,aAAa,CAACC,OAAO,EAAEC,KAAK,CAAC,CAAC,eACzElE,OAAA;QAAKmE,SAAS,EAAC,YAAY;QAACC,KAAK,EAAE;UAAEC,SAAS,EAAE,QAAQ;UAAEe,SAAS,EAAE;QAAO,CAAE;QAAAzB,QAAA,eAC1E3D,OAAA;UAAQ+C,IAAI,EAAC,QAAQ;UAACqB,KAAK,EAAE;YAAES,OAAO,EAAE,WAAW;YAAEC,YAAY,EAAE,KAAK;YAAEO,eAAe,EAAE,SAAS;YAAEZ,KAAK,EAAE,OAAO;YAAEa,MAAM,EAAE,MAAM;YAAEC,MAAM,EAAE;UAAU,CAAE;UAAA5B,QAAA,EAAC;QAE3J;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd,CAAC;AAAC7D,EAAA,CAnGID,WAAW;EAAA,QACQH,SAAS;AAAA;AAAA0F,EAAA,GAD5BvF,WAAW;AAqGjB,eAAeA,WAAW;AAAC,IAAAuF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}