{"ast":null,"code":"var _jsxFileName = \"/Users/abarbas/Desktop/soar_web_forms/src/components/FormDisplay.js\",\n  _s = $RefreshSig$();\n// src/components/FormDisplay.js\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './FormDisplay.css';\n\n// Initial hardcoded authInfo\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet authInfo = {\n  token: '',\n  server: '',\n  sslVerification: true // Default to true; will be updated from the configuration\n};\nconst FormDisplay = () => {\n  _s();\n  const {\n    formName\n  } = useParams(); // Get form name from the URL\n  const [formData, setFormData] = useState(null);\n  const [formValues, setFormValues] = useState({}); // Store user input\n\n  // Function to fetch auth info from the configuration table\n  const fetchAuthInfo = async () => {\n    try {\n      const response = await fetch('http://localhost:5001/api/configuration'); // Call the API endpoint\n      if (!response.ok) {\n        throw new Error('Failed to fetch auth info');\n      }\n      const data = await response.json();\n      // Update authInfo with fetched values\n      authInfo = {\n        token: data.ph_auth_token,\n        server: data.server\n      };\n    } catch (error) {\n      console.error('Error fetching auth info:', error);\n    }\n  };\n  useEffect(() => {\n    fetchAuthInfo(); // Fetch auth info when the component mounts\n  }, []);\n  const parseXML = xmlString => {\n    var _xmlDoc$querySelector, _xmlDoc$querySelector2;\n    const parser = new DOMParser();\n    const xmlDoc = parser.parseFromString(xmlString, 'application/xml');\n    const name = ((_xmlDoc$querySelector = xmlDoc.querySelector('form > name')) === null || _xmlDoc$querySelector === void 0 ? void 0 : _xmlDoc$querySelector.textContent) || 'Unnamed Form';\n    const label = ((_xmlDoc$querySelector2 = xmlDoc.querySelector('form > label')) === null || _xmlDoc$querySelector2 === void 0 ? void 0 : _xmlDoc$querySelector2.textContent) || 'event_data';\n    const elements = Array.from(xmlDoc.querySelectorAll('elements > element')).map(el => {\n      var _el$querySelector, _el$querySelector2, _el$querySelector3, _el$querySelector4, _el$querySelector5, _el$querySelector6;\n      const optionsNode = el.querySelector('dropdownOptions');\n      const options = optionsNode ? Array.from(optionsNode.querySelectorAll('option')).map(opt => opt.textContent) : [];\n      return {\n        type: ((_el$querySelector = el.querySelector('type')) === null || _el$querySelector === void 0 ? void 0 : _el$querySelector.textContent) || 'text',\n        key: ((_el$querySelector2 = el.querySelector('key')) === null || _el$querySelector2 === void 0 ? void 0 : _el$querySelector2.textContent) || '',\n        label: ((_el$querySelector3 = el.querySelector('label')) === null || _el$querySelector3 === void 0 ? void 0 : _el$querySelector3.textContent) || '',\n        required: ((_el$querySelector4 = el.querySelector('required')) === null || _el$querySelector4 === void 0 ? void 0 : _el$querySelector4.textContent) === 'true',\n        placeholder: ((_el$querySelector5 = el.querySelector('placeholder')) === null || _el$querySelector5 === void 0 ? void 0 : _el$querySelector5.textContent) || '',\n        alignment: ((_el$querySelector6 = el.querySelector('alignment')) === null || _el$querySelector6 === void 0 ? void 0 : _el$querySelector6.textContent) || 'center',\n        options: options\n      };\n    });\n    return {\n      name,\n      label,\n      elements\n    };\n  };\n  useEffect(() => {\n    const fetchFormData = async () => {\n      try {\n        const response = await fetch(`http://localhost:5001/forms/${encodeURIComponent(formName)}`, {\n          headers: {\n            'Authorization': `Bearer ${authInfo.token}`,\n            // Use the updated token\n            'Content-Type': 'application/json'\n          }\n        });\n\n        // Log the response for debugging\n        const responseText = await response.text();\n\n        // Check if response is valid JSON\n        if (!response.ok) {\n          throw new Error('Form not found');\n        }\n        const data = JSON.parse(responseText); // Attempt parsing only if the response is correct\n        if (data.xml_data) {\n          const parsedData = parseXML(data.xml_data);\n          setFormData(parsedData);\n        } else {\n          console.error('No XML data found in the response');\n        }\n      } catch (error) {\n        console.error('Error fetching form data:', error);\n      }\n    };\n    fetchFormData();\n  }, [formName]);\n  const handleInputChange = (key, value) => {\n    setFormValues(prev => ({\n      ...prev,\n      [key]: value\n    }));\n  };\n  const handleFileChange = (key, file) => {\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = e => {\n        setFormValues(prev => ({\n          ...prev,\n          [`file_${key}`]: e.target.result,\n          // Store base64 encoded file\n          [`file_name_${key}`]: file.name,\n          [`file_path_${key}`]: file.webkitRelativePath || file.name,\n          [`file_size_${key}`]: file.size,\n          [`file_type_${key}`]: file.type,\n          [`file_last_modified_${key}`]: new Date(file.lastModified).toISOString()\n        }));\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  const handleSubmit = async event => {\n    event.preventDefault(); // Prevent default form submission\n    try {\n      const containerResponse = await createContainer(formData.name, formData.label);\n      const containerId = containerResponse.id;\n      console.log('Container created successfully:', containerResponse);\n\n      // Add artifacts for each form field\n      const aggregatedCEF = Object.keys(formValues).reduce((acc, key) => {\n        if (!key.startsWith('file_')) {\n          acc[key] = formValues[key];\n        }\n        return acc;\n      }, {});\n      if (Object.keys(aggregatedCEF).length > 0) {\n        const artifactResponse = await addArtifact(containerId, aggregatedCEF, `${formData.name} Artifact`);\n        console.log('Artifact added successfully:', artifactResponse);\n      }\n\n      // Upload files to the vault and add file metadata as artifacts\n      for (const key in formValues) {\n        if (key.startsWith('file_')) {\n          const fileData = formValues[key];\n          const fileNameKey = `file_name_${key.split('_')[1]}`;\n          const fileName = formValues[fileNameKey];\n          const fileType = formValues[`file_type_${key.split('_')[1]}`];\n          const fileSize = formValues[`file_size_${key.split('_')[1]}`];\n          const fileSizeInKB = (fileSize / 1024).toFixed(2);\n          const fileSizeFormatted = fileSizeInKB > 1024 ? `${(fileSizeInKB / 1024).toFixed(2)} MB` : `${fileSizeInKB} KB`;\n          if (fileData && fileName) {\n            const fileResponse = await uploadFileToVault(containerId, fileData, fileName);\n            console.log('File uploaded successfully:', fileResponse);\n\n            // Add file metadata as artifact\n            const fileArtifactData = {\n              hash: fileResponse.hash,\n              filename: fileName,\n              filetype: fileType,\n              filesize: fileSizeFormatted\n            };\n            const fileArtifactResponse = await addArtifact(containerId, fileArtifactData, `${fileName} Metadata Artifact`);\n            console.log('File metadata artifact added successfully:', fileArtifactResponse);\n          } else {\n            console.error('Missing file data or file name for:', key);\n          }\n        }\n      }\n      alert('Form submitted and data sent to Splunk SOAR successfully!');\n    } catch (error) {\n      console.error('Error submitting form:', error);\n      alert('Failed to submit form data to Splunk SOAR.');\n    }\n  };\n  const createContainer = async (name, label) => {\n    const response = await fetch('http://localhost:3001/proxy/rest/container', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name,\n        label,\n        description: `${name} container created via API`\n      })\n    });\n    if (!response.ok) {\n      const errorText = await response.text();\n      console.error('Failed to create container:', errorText);\n      throw new Error('Failed to create container');\n    }\n    return response.json();\n  };\n  const addArtifact = async (containerId, cefData, artifactName) => {\n    const response = await fetch('http://localhost:3001/proxy/rest/artifact', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        container_id: containerId,\n        cef: cefData,\n        name: artifactName,\n        label: 'event_data',\n        description: 'Artifact created via API with aggregated form data'\n      })\n    });\n    const rawText = await response.text(); // Read raw first\n\n    if (!response.ok) {\n      console.error('❌ Artifact response not ok:', rawText);\n      throw new Error(`Failed to add artifact: ${response.status}`);\n    }\n    try {\n      const data = JSON.parse(rawText);\n      return data;\n    } catch (err) {\n      console.error('❌ Failed to parse artifact JSON:', rawText);\n      throw new Error('Invalid JSON in artifact response');\n    }\n  };\n  const uploadFileToVault = async (containerId, fileData, fileKey) => {\n    const response = await fetch('http://localhost:3001/proxy/rest/container_attachment', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        container_id: containerId,\n        file_content: fileData.split(',')[1],\n        // Extract base64 content\n        file_name: fileKey\n      })\n    });\n    if (!response.ok) {\n      const errorText = await response.text();\n      console.error('Failed to upload the file to the vault:', errorText);\n      throw new Error('Failed to upload the file to the vault');\n    }\n    return response.json();\n  };\n  if (!formData) {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Form not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 16\n    }, this);\n  }\n  const renderElement = (element, index) => {\n    switch (element.type) {\n      case 'boolean':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          style: {\n            textAlign: element.alignment,\n            marginBottom: '15px'\n          },\n          children: [element.label && /*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              display: 'block',\n              marginBottom: '5px',\n              fontWeight: 'bold',\n              color: '#ffffff',\n              textAlign: element.alignment\n            },\n            children: element.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            required: element.required,\n            onChange: e => handleInputChange(element.key, e.target.value),\n            style: {\n              padding: '10px',\n              borderRadius: '6px',\n              width: '100%',\n              maxWidth: '400px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select an option\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"true\",\n              children: \"True\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"false\",\n              children: \"False\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 25\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 21\n        }, this);\n      case 'dateTime':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          style: {\n            textAlign: element.alignment,\n            marginBottom: '15px'\n          },\n          children: [element.label && /*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              display: 'block',\n              marginBottom: '5px',\n              fontWeight: 'bold',\n              color: '#ffffff',\n              textAlign: element.alignment\n            },\n            children: element.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            placeholder: element.placeholder,\n            required: element.required,\n            onChange: e => handleInputChange(element.key, e.target.value),\n            style: {\n              padding: '10px',\n              borderRadius: '6px',\n              width: '100%',\n              maxWidth: '400px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 25\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 21\n        }, this);\n      case 'number':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          style: {\n            textAlign: element.alignment,\n            marginBottom: '15px'\n          },\n          children: [element.label && /*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              display: 'block',\n              marginBottom: '5px',\n              fontWeight: 'bold',\n              color: '#ffffff',\n              textAlign: element.alignment\n            },\n            children: element.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: element.placeholder,\n            required: element.required,\n            onChange: e => handleInputChange(element.key, e.target.value),\n            style: {\n              padding: '10px',\n              borderRadius: '6px',\n              width: '100%',\n              maxWidth: '400px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 25\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 21\n        }, this);\n      case 'dropdown':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          style: {\n            textAlign: element.alignment,\n            marginBottom: '15px'\n          },\n          children: [element.label && /*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              display: 'block',\n              marginBottom: '5px',\n              fontWeight: 'bold',\n              color: '#ffffff',\n              textAlign: element.alignment\n            },\n            children: element.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            required: element.required,\n            onChange: e => handleInputChange(element.key, e.target.value),\n            style: {\n              padding: '10px',\n              borderRadius: '6px',\n              width: '100%',\n              maxWidth: '400px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select an option\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 29\n            }, this), element.options.map((option, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option,\n              children: option\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 25\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 21\n        }, this);\n      case 'divider':\n        return /*#__PURE__*/_jsxDEV(\"hr\", {\n          className: \"form-divider\",\n          style: {\n            width: '100%',\n            borderTop: '1px solid #444',\n            margin: '20px 0'\n          }\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 21\n        }, this);\n      case 'button':\n        if (element.key === 'Submit') {\n          return null; // Do not render this button here, as we will use the form's submit button instead\n        }\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          style: {\n            textAlign: element.alignment,\n            marginBottom: '15px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => alert(`${element.label} button clicked!`),\n            style: {\n              padding: '10px 20px',\n              borderRadius: '6px',\n              backgroundColor: '#007bff',\n              color: 'white',\n              border: 'none',\n              cursor: 'pointer'\n            },\n            children: element.label || 'Button'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 25\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 21\n        }, this);\n      case 'text':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          style: {\n            textAlign: element.alignment,\n            marginBottom: '15px'\n          },\n          children: element.label && /*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              display: 'block',\n              marginBottom: '5px',\n              fontWeight: 'bold',\n              color: '#ffffff',\n              textAlign: element.alignment\n            },\n            children: element.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 29\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 21\n        }, this);\n      case 'heading':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          style: {\n            textAlign: element.alignment,\n            marginBottom: '15px'\n          },\n          children: element.label && /*#__PURE__*/_jsxDEV(\"h1\", {\n            style: {\n              marginBottom: '5px',\n              fontWeight: 'bold',\n              color: '#ffffff',\n              textAlign: element.alignment\n            },\n            children: element.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 29\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 21\n        }, this);\n      case 'file':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          style: {\n            textAlign: element.alignment,\n            marginBottom: '15px'\n          },\n          children: [element.label && /*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              display: 'block',\n              marginBottom: '5px',\n              fontWeight: 'bold',\n              color: '#ffffff',\n              textAlign: element.alignment\n            },\n            children: element.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            required: element.required,\n            onChange: e => handleFileChange(element.key, e.target.files[0]),\n            style: {\n              padding: '10px',\n              borderRadius: '6px',\n              width: '100%',\n              maxWidth: '400px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 25\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 21\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          style: {\n            textAlign: element.alignment,\n            marginBottom: '15px'\n          },\n          children: [element.label && /*#__PURE__*/_jsxDEV(\"label\", {\n            style: {\n              display: 'block',\n              marginBottom: '5px',\n              fontWeight: 'bold',\n              color: '#ffffff',\n              textAlign: element.alignment\n            },\n            children: element.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: element.type,\n            placeholder: element.placeholder,\n            required: element.required,\n            onChange: e => handleInputChange(element.key, e.target.value),\n            style: {\n              padding: '10px',\n              borderRadius: '6px',\n              width: '100%',\n              maxWidth: '400px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 461,\n            columnNumber: 25\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 21\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: formData.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      style: {\n        maxHeight: '80vh',\n        overflowY: 'auto'\n      },\n      children: [formData.elements.map((element, index) => renderElement(element, index)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        style: {\n          textAlign: 'center',\n          marginTop: '20px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          id: \"submit-button\",\n          style: {\n            padding: '10px 20px',\n            borderRadius: '6px',\n            backgroundColor: '#007bff',\n            color: 'white',\n            border: 'none',\n            cursor: 'pointer',\n            textAlign: (formData === null || formData === void 0 ? void 0 : formData.alignment) || 'center'\n          },\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 474,\n    columnNumber: 9\n  }, this);\n};\n_s(FormDisplay, \"m9poyCwNxMERiw1Pt9xRgVGCfzk=\", false, function () {\n  return [useParams];\n});\n_c = FormDisplay;\nexport default FormDisplay;\nvar _c;\n$RefreshReg$(_c, \"FormDisplay\");","map":{"version":3,"names":["React","useEffect","useState","useParams","jsxDEV","_jsxDEV","authInfo","token","server","sslVerification","FormDisplay","_s","formName","formData","setFormData","formValues","setFormValues","fetchAuthInfo","response","fetch","ok","Error","data","json","ph_auth_token","error","console","parseXML","xmlString","_xmlDoc$querySelector","_xmlDoc$querySelector2","parser","DOMParser","xmlDoc","parseFromString","name","querySelector","textContent","label","elements","Array","from","querySelectorAll","map","el","_el$querySelector","_el$querySelector2","_el$querySelector3","_el$querySelector4","_el$querySelector5","_el$querySelector6","optionsNode","options","opt","type","key","required","placeholder","alignment","fetchFormData","encodeURIComponent","headers","responseText","text","JSON","parse","xml_data","parsedData","handleInputChange","value","prev","handleFileChange","file","reader","FileReader","onload","e","target","result","webkitRelativePath","size","Date","lastModified","toISOString","readAsDataURL","handleSubmit","event","preventDefault","containerResponse","createContainer","containerId","id","log","aggregatedCEF","Object","keys","reduce","acc","startsWith","length","artifactResponse","addArtifact","fileData","fileNameKey","split","fileName","fileType","fileSize","fileSizeInKB","toFixed","fileSizeFormatted","fileResponse","uploadFileToVault","fileArtifactData","hash","filename","filetype","filesize","fileArtifactResponse","alert","method","body","stringify","description","errorText","cefData","artifactName","container_id","cef","rawText","status","err","fileKey","file_content","file_name","children","_jsxFileName","lineNumber","columnNumber","renderElement","element","index","className","style","textAlign","marginBottom","display","fontWeight","color","onChange","padding","borderRadius","width","maxWidth","option","idx","borderTop","margin","onClick","backgroundColor","border","cursor","files","onSubmit","maxHeight","overflowY","marginTop","_c","$RefreshReg$"],"sources":["/Users/abarbas/Desktop/soar_web_forms/src/components/FormDisplay.js"],"sourcesContent":["// src/components/FormDisplay.js\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './FormDisplay.css';\n\n// Initial hardcoded authInfo\nlet authInfo = {\n    token: '',\n    server: '',\n    sslVerification: true, // Default to true; will be updated from the configuration\n};\n\n\nconst FormDisplay = () => {\n    const { formName } = useParams(); // Get form name from the URL\n    const [formData, setFormData] = useState(null);\n    const [formValues, setFormValues] = useState({}); // Store user input\n\n    // Function to fetch auth info from the configuration table\n    const fetchAuthInfo = async () => {\n        try {\n            const response = await fetch('http://localhost:5001/api/configuration'); // Call the API endpoint\n            if (!response.ok) {\n                throw new Error('Failed to fetch auth info');\n            }\n            const data = await response.json();\n            // Update authInfo with fetched values\n            authInfo = {\n                token: data.ph_auth_token,\n                server: data.server,\n            };\n        } catch (error) {\n            console.error('Error fetching auth info:', error);\n        }\n    };\n\n    useEffect(() => {\n        fetchAuthInfo(); // Fetch auth info when the component mounts\n    }, []);\n\n    const parseXML = (xmlString) => {\n        const parser = new DOMParser();\n        const xmlDoc = parser.parseFromString(xmlString, 'application/xml');\n        const name = xmlDoc.querySelector('form > name')?.textContent || 'Unnamed Form';\n        const label = xmlDoc.querySelector('form > label')?.textContent || 'event_data';\n\n        const elements = Array.from(xmlDoc.querySelectorAll('elements > element')).map((el) => {\n            const optionsNode = el.querySelector('dropdownOptions');\n            const options = optionsNode ? Array.from(optionsNode.querySelectorAll('option')).map(opt => opt.textContent) : [];\n\n            return {\n                type: el.querySelector('type')?.textContent || 'text',\n                key: el.querySelector('key')?.textContent || '',\n                label: el.querySelector('label')?.textContent || '',\n                required: el.querySelector('required')?.textContent === 'true',\n                placeholder: el.querySelector('placeholder')?.textContent || '',\n                alignment: el.querySelector('alignment')?.textContent || 'center',\n                options: options\n            };\n        });\n\n        return { name, label, elements };\n    };\n\n    useEffect(() => {\n        const fetchFormData = async () => {\n            try {\n                const response = await fetch(`http://localhost:5001/forms/${encodeURIComponent(formName)}`, {\n                    headers: {\n                        'Authorization': `Bearer ${authInfo.token}`, // Use the updated token\n                        'Content-Type': 'application/json',\n                    },\n                });\n\n                // Log the response for debugging\n                const responseText = await response.text();\n\n                // Check if response is valid JSON\n                if (!response.ok) {\n                    throw new Error('Form not found');\n                }\n\n                const data = JSON.parse(responseText); // Attempt parsing only if the response is correct\n                if (data.xml_data) {\n                    const parsedData = parseXML(data.xml_data);\n                    setFormData(parsedData);\n                } else {\n                    console.error('No XML data found in the response');\n                }\n            } catch (error) {\n                console.error('Error fetching form data:', error);\n            }\n        };\n\n        fetchFormData();\n    }, [formName]);\n\n    const handleInputChange = (key, value) => {\n        setFormValues((prev) => ({ ...prev, [key]: value }));\n    };\n\n    const handleFileChange = (key, file) => {\n        if (file) {\n            const reader = new FileReader();\n            reader.onload = (e) => {\n                setFormValues((prev) => ({\n                    ...prev,\n                    [`file_${key}`]: e.target.result, // Store base64 encoded file\n                    [`file_name_${key}`]: file.name,\n                    [`file_path_${key}`]: file.webkitRelativePath || file.name,\n                    [`file_size_${key}`]: file.size,\n                    [`file_type_${key}`]: file.type,\n                    [`file_last_modified_${key}`]: new Date(file.lastModified).toISOString(),\n                }));\n            };\n            reader.readAsDataURL(file);\n        }\n    };\n\n    const handleSubmit = async (event) => {\n        event.preventDefault(); // Prevent default form submission\n        try {\n            const containerResponse = await createContainer(formData.name, formData.label);\n            const containerId = containerResponse.id;\n            console.log('Container created successfully:', containerResponse);\n\n            // Add artifacts for each form field\n            const aggregatedCEF = Object.keys(formValues).reduce((acc, key) => {\n                if (!key.startsWith('file_')) {\n                    acc[key] = formValues[key];\n                }\n                return acc;\n            }, {});\n\n            if (Object.keys(aggregatedCEF).length > 0) {\n                const artifactResponse = await addArtifact(containerId, aggregatedCEF, `${formData.name} Artifact`);\n                console.log('Artifact added successfully:', artifactResponse);\n            }\n\n            // Upload files to the vault and add file metadata as artifacts\n            for (const key in formValues) {\n                if (key.startsWith('file_')) {\n                    const fileData = formValues[key];\n                    const fileNameKey = `file_name_${key.split('_')[1]}`;\n                    const fileName = formValues[fileNameKey];\n                    const fileType = formValues[`file_type_${key.split('_')[1]}`];\n                    const fileSize = formValues[`file_size_${key.split('_')[1]}`];\n                    const fileSizeInKB = (fileSize / 1024).toFixed(2);\n                    const fileSizeFormatted = fileSizeInKB > 1024 ? `${(fileSizeInKB / 1024).toFixed(2)} MB` : `${fileSizeInKB} KB`;\n\n                    if (fileData && fileName) {\n                        const fileResponse = await uploadFileToVault(containerId, fileData, fileName);\n                        console.log('File uploaded successfully:', fileResponse);\n\n                        // Add file metadata as artifact\n                        const fileArtifactData = {\n                            hash: fileResponse.hash,\n                            filename: fileName,\n                            filetype: fileType,\n                            filesize: fileSizeFormatted,\n                        };\n                        const fileArtifactResponse = await addArtifact(containerId, fileArtifactData, `${fileName} Metadata Artifact`);\n                        console.log('File metadata artifact added successfully:', fileArtifactResponse);\n                    } else {\n                        console.error('Missing file data or file name for:', key);\n                    }\n                }\n            }\n\n            alert('Form submitted and data sent to Splunk SOAR successfully!');\n        } catch (error) {\n            console.error('Error submitting form:', error);\n            alert('Failed to submit form data to Splunk SOAR.');\n        }\n    };\n\n    const createContainer = async (name, label) => {\n        const response = await fetch('http://localhost:3001/proxy/rest/container', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                name,\n                label,\n                description: `${name} container created via API`,\n            }),\n        });\n        if (!response.ok) {\n            const errorText = await response.text();\n            console.error('Failed to create container:', errorText);\n            throw new Error('Failed to create container');\n        }\n        return response.json();\n    };\n    \nconst addArtifact = async (containerId, cefData, artifactName) => {\n    const response = await fetch('http://localhost:3001/proxy/rest/artifact', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            container_id: containerId,\n            cef: cefData,\n            name: artifactName,\n            label: 'event_data',\n            description: 'Artifact created via API with aggregated form data',\n        }),\n    });\n\n    const rawText = await response.text(); // Read raw first\n\n    if (!response.ok) {\n        console.error('❌ Artifact response not ok:', rawText);\n        throw new Error(`Failed to add artifact: ${response.status}`);\n    }\n\n    try {\n        const data = JSON.parse(rawText);\n        return data;\n    } catch (err) {\n        console.error('❌ Failed to parse artifact JSON:', rawText);\n        throw new Error('Invalid JSON in artifact response');\n    }\n};\n\n\n    const uploadFileToVault = async (containerId, fileData, fileKey) => {\n        const response = await fetch('http://localhost:3001/proxy/rest/container_attachment', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                container_id: containerId,\n                file_content: fileData.split(',')[1], // Extract base64 content\n                file_name: fileKey,\n            }),\n        });\n        if (!response.ok) {\n            const errorText = await response.text();\n            console.error('Failed to upload the file to the vault:', errorText);\n            throw new Error('Failed to upload the file to the vault');\n        }\n        return response.json();\n    };\n\n    if (!formData) {\n        return <h2>Form not found</h2>;\n    }\n\n    const renderElement = (element, index) => {\n        switch (element.type) {\n            case 'boolean':\n                return (\n                    <div key={index} className=\"form-group\" style={{ textAlign: element.alignment, marginBottom: '15px' }}>\n                        {element.label && (\n                            <label\n                                style={{\n                                    display: 'block',\n                                    marginBottom: '5px',\n                                    fontWeight: 'bold',\n                                    color: '#ffffff',\n                                    textAlign: element.alignment,\n                                }}\n                            >\n                                {element.label}\n                            </label>\n                        )}\n                        <select\n                            required={element.required}\n                            onChange={(e) => handleInputChange(element.key, e.target.value)}\n                            style={{ padding: '10px', borderRadius: '6px', width: '100%', maxWidth: '400px' }}\n                        >\n                            <option value=\"\">Select an option</option>\n                            <option value=\"true\">True</option>\n                            <option value=\"false\">False</option>\n                        </select>\n                    </div>\n                );\n            case 'dateTime':\n                return (\n                    <div key={index} className=\"form-group\" style={{ textAlign: element.alignment, marginBottom: '15px' }}>\n                        {element.label && (\n                            <label\n                                style={{\n                                    display: 'block',\n                                    marginBottom: '5px',\n                                    fontWeight: 'bold',\n                                    color: '#ffffff',\n                                    textAlign: element.alignment,\n                                }}\n                            >\n                                {element.label}\n                            </label>\n                        )}\n                        <input\n                            type=\"date\"\n                            placeholder={element.placeholder}\n                            required={element.required}\n                            onChange={(e) => handleInputChange(element.key, e.target.value)}\n                            style={{ padding: '10px', borderRadius: '6px', width: '100%', maxWidth: '400px' }}\n                        />\n                    </div>\n                );\n            case 'number':\n                return (\n                    <div key={index} className=\"form-group\" style={{ textAlign: element.alignment, marginBottom: '15px' }}>\n                        {element.label && (\n                            <label\n                                style={{\n                                    display: 'block',\n                                    marginBottom: '5px',\n                                    fontWeight: 'bold',\n                                    color: '#ffffff',\n                                    textAlign: element.alignment,\n                                }}\n                            >\n                                {element.label}\n                            </label>\n                        )}\n                        <input\n                            type=\"number\"\n                            placeholder={element.placeholder}\n                            required={element.required}\n                            onChange={(e) => handleInputChange(element.key, e.target.value)}\n                            style={{ padding: '10px', borderRadius: '6px', width: '100%', maxWidth: '400px' }}\n                        />\n                    </div>\n                );\n            case 'dropdown':\n                return (\n                    <div key={index} className=\"form-group\" style={{ textAlign: element.alignment, marginBottom: '15px' }}>\n                        {element.label && (\n                            <label\n                                style={{\n                                    display: 'block',\n                                    marginBottom: '5px',\n                                    fontWeight: 'bold',\n                                    color: '#ffffff',\n                                    textAlign: element.alignment,\n                                }}\n                            >\n                                {element.label}\n                            </label>\n                        )}\n                        <select\n                            required={element.required}\n                            onChange={(e) => handleInputChange(element.key, e.target.value)}\n                            style={{ padding: '10px', borderRadius: '6px', width: '100%', maxWidth: '400px' }}\n                        >\n                            <option value=\"\">Select an option</option>\n                            {element.options.map((option, idx) => (\n                                <option key={idx} value={option}>{option}</option>\n                            ))}\n                        </select>\n                    </div>\n                );\n            case 'divider':\n                return (\n                    <hr key={index} className=\"form-divider\" style={{ width: '100%', borderTop: '1px solid #444', margin: '20px 0' }} />\n                );\n            case 'button':\n                if (element.key === 'Submit') {\n                    return null; // Do not render this button here, as we will use the form's submit button instead\n                }\n                return (\n                    <div key={index} className=\"form-group\" style={{ textAlign: element.alignment, marginBottom: '15px' }}>\n                        <button\n                            type=\"button\"\n                            onClick={() => alert(`${element.label} button clicked!`)}\n                            style={{\n                                padding: '10px 20px',\n                                borderRadius: '6px',\n                                backgroundColor: '#007bff',\n                                color: 'white',\n                                border: 'none',\n                                cursor: 'pointer',\n                            }}\n                        >\n                            {element.label || 'Button'}\n                        </button>\n                    </div>\n                );\n            case 'text':\n                return (\n                    <div key={index} className=\"form-group\" style={{ textAlign: element.alignment, marginBottom: '15px' }}>\n                        {element.label && (\n                            <label\n                                style={{\n                                    display: 'block',\n                                    marginBottom: '5px',\n                                    fontWeight: 'bold',\n                                    color: '#ffffff',\n                                    textAlign: element.alignment,\n                                }}\n                            >\n                                {element.label}\n                            </label>\n                        )}\n                    </div>\n                );\n            case 'heading':\n                return (\n                    <div key={index} className=\"form-group\" style={{ textAlign: element.alignment, marginBottom: '15px' }}>\n                        {element.label && (\n                            <h1\n                                style={{\n                                    marginBottom: '5px',\n                                    fontWeight: 'bold',\n                                    color: '#ffffff',\n                                    textAlign: element.alignment,\n                                }}\n                            >\n                                {element.label}\n                            </h1>\n                        )}\n                    </div>\n                );\n            case 'file':\n                return (\n                    <div key={index} className=\"form-group\" style={{ textAlign: element.alignment, marginBottom: '15px' }}>\n                        {element.label && (\n                            <label\n                                style={{\n                                    display: 'block',\n                                    marginBottom: '5px',\n                                    fontWeight: 'bold',\n                                    color: '#ffffff',\n                                    textAlign: element.alignment,\n                                }}\n                            >\n                                {element.label}\n                            </label>\n                        )}\n                        <input\n                            type=\"file\"\n                            required={element.required}\n                            onChange={(e) => handleFileChange(element.key, e.target.files[0])}\n                            style={{ padding: '10px', borderRadius: '6px', width: '100%', maxWidth: '400px' }}\n                        />\n                    </div>\n                );\n            default:\n                return (\n                    <div key={index} className=\"form-group\" style={{ textAlign: element.alignment, marginBottom: '15px' }}>\n                        {element.label && (\n                            <label\n                                style={{\n                                    display: 'block',\n                                    marginBottom: '5px',\n                                    fontWeight: 'bold',\n                                    color: '#ffffff',\n                                    textAlign: element.alignment,\n                                }}\n                            >\n                                {element.label}\n                            </label>\n                        )}\n                        <input\n                            type={element.type}\n                            placeholder={element.placeholder}\n                            required={element.required}\n                            onChange={(e) => handleInputChange(element.key, e.target.value)}\n                            style={{ padding: '10px', borderRadius: '6px', width: '100%', maxWidth: '400px' }}\n                        />\n                    </div>\n                );\n        }\n    };\n\n    return (\n        <div className=\"form-container\">\n            <h2>{formData.name}</h2>\n            <form onSubmit={handleSubmit} style={{ maxHeight: '80vh', overflowY: 'auto' }}>\n                {formData.elements.map((element, index) => renderElement(element, index))}\n                <div className=\"form-group\" style={{ textAlign: 'center', marginTop: '20px' }}>\n                    <button\n                        type=\"submit\"\n                        id=\"submit-button\"\n                        style={{\n                            padding: '10px 20px',\n                            borderRadius: '6px',\n                            backgroundColor: '#007bff',\n                            color: 'white',\n                            border: 'none',\n                            cursor: 'pointer',\n                            textAlign: formData?.alignment || 'center',\n                        }}\n                    >\n                        Submit\n                    </button>\n                </div>\n            </form>\n        </div>\n    );\n};\n\nexport default FormDisplay;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}