{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toClassName = toClassName;\nfunction _toConsumableArray(r) {\n  return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread();\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(r, a) {\n  if (r) {\n    if (\"string\" == typeof r) return _arrayLikeToArray(r, a);\n    var t = {}.toString.call(r).slice(8, -1);\n    return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;\n  }\n}\nfunction _iterableToArray(r) {\n  if (\"undefined\" != typeof Symbol && null != r[Symbol.iterator] || null != r[\"@@iterator\"]) return Array.from(r);\n}\nfunction _arrayWithoutHoles(r) {\n  if (Array.isArray(r)) return _arrayLikeToArray(r);\n}\nfunction _arrayLikeToArray(r, a) {\n  (null == a || a > r.length) && (a = r.length);\n  for (var e = 0, n = Array(a); e < a; e++) {\n    n[e] = r[e];\n  }\n  return n;\n}\nfunction _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\n/* eslint-disable import/prefer-default-export */\n\n// This file was adapted from [JedWatson's classnames](https://github.com/JedWatson/classnames),\n// which is MIT-licensed:\n//\n// The MIT License (MIT)\n//\n// Copyright (c) 2018 Jed Watson\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n//\n// End of MIT license text.\n\n/**\n * A simple utility for conditionally joining class names together for React components. It\n * extracts all of the strings from the provided arguments and joins them together with spaces. If an\n * object is passed, the keys with truthy values are used. Arguments like `false`, `null`, and\n * `undefined` are ignored. Adapted from\n * [JedWatson's classnames](https://github.com/JedWatson/classnames).\n * @param {...Any}\n * @returns {String} className suitable for a React component.\n * @public\n */\nfunction toClassName() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n  return args.reduce(function (accum, arg) {\n    if (!arg) {\n      return accum;\n    }\n    var argType = _typeof(arg);\n    if (argType === 'string') {\n      accum.push(arg);\n    } else if (Array.isArray(arg)) {\n      accum.push(toClassName.apply(void 0, _toConsumableArray(arg)));\n    } else if (argType === 'object') {\n      return accum.concat(Object.keys(arg).filter(function (key) {\n        return arg[key];\n      }));\n    }\n    return accum;\n  }, []).join(' ');\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","toClassName","_toConsumableArray","r","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","a","_arrayLikeToArray","t","toString","call","slice","constructor","name","Array","from","test","Symbol","iterator","isArray","length","e","n","_typeof","o","prototype","_len","arguments","args","_key","reduce","accum","arg","argType","push","apply","concat","keys","filter","key","join"],"sources":["/Users/abarbas/Desktop/soar_web_forms/node_modules/@splunk/ui-utils/style.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toClassName = toClassName;\nfunction _toConsumableArray(r) { return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _iterableToArray(r) { if (\"undefined\" != typeof Symbol && null != r[Symbol.iterator] || null != r[\"@@iterator\"]) return Array.from(r); }\nfunction _arrayWithoutHoles(r) { if (Array.isArray(r)) return _arrayLikeToArray(r); }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) { n[e] = r[e]; } return n; }\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\n/* eslint-disable import/prefer-default-export */\n\n// This file was adapted from [JedWatson's classnames](https://github.com/JedWatson/classnames),\n// which is MIT-licensed:\n//\n// The MIT License (MIT)\n//\n// Copyright (c) 2018 Jed Watson\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n//\n// End of MIT license text.\n\n/**\n * A simple utility for conditionally joining class names together for React components. It\n * extracts all of the strings from the provided arguments and joins them together with spaces. If an\n * object is passed, the keys with truthy values are used. Arguments like `false`, `null`, and\n * `undefined` are ignored. Adapted from\n * [JedWatson's classnames](https://github.com/JedWatson/classnames).\n * @param {...Any}\n * @returns {String} className suitable for a React component.\n * @public\n */\nfunction toClassName() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n  return args.reduce(function (accum, arg) {\n    if (!arg) {\n      return accum;\n    }\n    var argType = _typeof(arg);\n    if (argType === 'string') {\n      accum.push(arg);\n    } else if (Array.isArray(arg)) {\n      accum.push(toClassName.apply(void 0, _toConsumableArray(arg)));\n    } else if (argType === 'object') {\n      return accum.concat(Object.keys(arg).filter(function (key) {\n        return arg[key];\n      }));\n    }\n    return accum;\n  }, []).join(' ');\n}"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AACFD,OAAO,CAACE,WAAW,GAAGA,WAAW;AACjC,SAASC,kBAAkBA,CAACC,CAAC,EAAE;EAAE,OAAOC,kBAAkB,CAACD,CAAC,CAAC,IAAIE,gBAAgB,CAACF,CAAC,CAAC,IAAIG,2BAA2B,CAACH,CAAC,CAAC,IAAII,kBAAkB,CAAC,CAAC;AAAE;AAChJ,SAASA,kBAAkBA,CAAA,EAAG;EAAE,MAAM,IAAIC,SAAS,CAAC,sIAAsI,CAAC;AAAE;AAC7L,SAASF,2BAA2BA,CAACH,CAAC,EAAEM,CAAC,EAAE;EAAE,IAAIN,CAAC,EAAE;IAAE,IAAI,QAAQ,IAAI,OAAOA,CAAC,EAAE,OAAOO,iBAAiB,CAACP,CAAC,EAAEM,CAAC,CAAC;IAAE,IAAIE,CAAC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAACC,IAAI,CAACV,CAAC,CAAC,CAACW,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAAE,OAAO,QAAQ,KAAKH,CAAC,IAAIR,CAAC,CAACY,WAAW,KAAKJ,CAAC,GAAGR,CAAC,CAACY,WAAW,CAACC,IAAI,CAAC,EAAE,KAAK,KAAKL,CAAC,IAAI,KAAK,KAAKA,CAAC,GAAGM,KAAK,CAACC,IAAI,CAACf,CAAC,CAAC,GAAG,WAAW,KAAKQ,CAAC,IAAI,0CAA0C,CAACQ,IAAI,CAACR,CAAC,CAAC,GAAGD,iBAAiB,CAACP,CAAC,EAAEM,CAAC,CAAC,GAAG,KAAK,CAAC;EAAE;AAAE;AACzX,SAASJ,gBAAgBA,CAACF,CAAC,EAAE;EAAE,IAAI,WAAW,IAAI,OAAOiB,MAAM,IAAI,IAAI,IAAIjB,CAAC,CAACiB,MAAM,CAACC,QAAQ,CAAC,IAAI,IAAI,IAAIlB,CAAC,CAAC,YAAY,CAAC,EAAE,OAAOc,KAAK,CAACC,IAAI,CAACf,CAAC,CAAC;AAAE;AAChJ,SAASC,kBAAkBA,CAACD,CAAC,EAAE;EAAE,IAAIc,KAAK,CAACK,OAAO,CAACnB,CAAC,CAAC,EAAE,OAAOO,iBAAiB,CAACP,CAAC,CAAC;AAAE;AACpF,SAASO,iBAAiBA,CAACP,CAAC,EAAEM,CAAC,EAAE;EAAE,CAAC,IAAI,IAAIA,CAAC,IAAIA,CAAC,GAAGN,CAAC,CAACoB,MAAM,MAAMd,CAAC,GAAGN,CAAC,CAACoB,MAAM,CAAC;EAAE,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAGR,KAAK,CAACR,CAAC,CAAC,EAAEe,CAAC,GAAGf,CAAC,EAAEe,CAAC,EAAE,EAAE;IAAEC,CAAC,CAACD,CAAC,CAAC,GAAGrB,CAAC,CAACqB,CAAC,CAAC;EAAE;EAAE,OAAOC,CAAC;AAAE;AACvJ,SAASC,OAAOA,CAACC,CAAC,EAAE;EAAE,yBAAyB;;EAAE,OAAOD,OAAO,GAAG,UAAU,IAAI,OAAON,MAAM,IAAI,QAAQ,IAAI,OAAOA,MAAM,CAACC,QAAQ,GAAG,UAAUM,CAAC,EAAE;IAAE,OAAO,OAAOA,CAAC;EAAE,CAAC,GAAG,UAAUA,CAAC,EAAE;IAAE,OAAOA,CAAC,IAAI,UAAU,IAAI,OAAOP,MAAM,IAAIO,CAAC,CAACZ,WAAW,KAAKK,MAAM,IAAIO,CAAC,KAAKP,MAAM,CAACQ,SAAS,GAAG,QAAQ,GAAG,OAAOD,CAAC;EAAE,CAAC,EAAED,OAAO,CAACC,CAAC,CAAC;AAAE;AAC7T;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS1B,WAAWA,CAAA,EAAG;EACrB,KAAK,IAAI4B,IAAI,GAAGC,SAAS,CAACP,MAAM,EAAEQ,IAAI,GAAG,IAAId,KAAK,CAACY,IAAI,CAAC,EAAEG,IAAI,GAAG,CAAC,EAAEA,IAAI,GAAGH,IAAI,EAAEG,IAAI,EAAE,EAAE;IACvFD,IAAI,CAACC,IAAI,CAAC,GAAGF,SAAS,CAACE,IAAI,CAAC;EAC9B;EACA,OAAOD,IAAI,CAACE,MAAM,CAAC,UAAUC,KAAK,EAAEC,GAAG,EAAE;IACvC,IAAI,CAACA,GAAG,EAAE;MACR,OAAOD,KAAK;IACd;IACA,IAAIE,OAAO,GAAGV,OAAO,CAACS,GAAG,CAAC;IAC1B,IAAIC,OAAO,KAAK,QAAQ,EAAE;MACxBF,KAAK,CAACG,IAAI,CAACF,GAAG,CAAC;IACjB,CAAC,MAAM,IAAIlB,KAAK,CAACK,OAAO,CAACa,GAAG,CAAC,EAAE;MAC7BD,KAAK,CAACG,IAAI,CAACpC,WAAW,CAACqC,KAAK,CAAC,KAAK,CAAC,EAAEpC,kBAAkB,CAACiC,GAAG,CAAC,CAAC,CAAC;IAChE,CAAC,MAAM,IAAIC,OAAO,KAAK,QAAQ,EAAE;MAC/B,OAAOF,KAAK,CAACK,MAAM,CAAC1C,MAAM,CAAC2C,IAAI,CAACL,GAAG,CAAC,CAACM,MAAM,CAAC,UAAUC,GAAG,EAAE;QACzD,OAAOP,GAAG,CAACO,GAAG,CAAC;MACjB,CAAC,CAAC,CAAC;IACL;IACA,OAAOR,KAAK;EACd,CAAC,EAAE,EAAE,CAAC,CAACS,IAAI,CAAC,GAAG,CAAC;AAClB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}