{"ast":null,"code":"var _jsxFileName = \"/Users/abarbas/Desktop/soar_web_forms/src/components/ResetPassword.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './ResetPassword.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ResetPassword = () => {\n  _s();\n  const [users, setUsers] = useState([]); // State to hold the list of users\n  const [selectedUser, setSelectedUser] = useState(''); // State for the selected user\n  const [newPassword, setNewPassword] = useState('');\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  useEffect(() => {\n    // Fetch the list of users when the component mounts\n    const fetchUsers = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/users'); // Adjust the endpoint as necessary\n        setUsers(response.data); // Assuming response.data is an array of user objects\n      } catch (err) {\n        setError('Error fetching users: ' + err.message);\n      }\n    };\n    fetchUsers();\n  }, []);\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Ensure a user is selected\n    if (!selectedUser) {\n      setError('Please select a user.');\n      return;\n    }\n    try {\n      const response = await axios.post('http://localhost:5000/admin/reset-password', {\n        username: selectedUser,\n        // Use the selected user from the dropdown\n        newPassword\n      });\n      setSuccess('Password reset successfully!');\n      setError('');\n      // Clear the fields\n      setSelectedUser('');\n      setNewPassword('');\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError('Error resetting password: ' + (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || err.message));\n      setSuccess('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reset-password-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reset-password-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedUser,\n          onChange: e => setSelectedUser(e.target.value),\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            disabled: true,\n            children: \"Select User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), users.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: user.username,\n            children: [user.username, \" \"]\n          }, user.username, true, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"New Password\",\n          value: newPassword,\n          onChange: e => setNewPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"reset-password-button\",\n          children: \"Reset Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 19\n      }, this), success && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"success\",\n        children: success\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(ResetPassword, \"mV8zJgwc5FTmKSISs31NbRV7ZUg=\");\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","ResetPassword","_s","users","setUsers","selectedUser","setSelectedUser","newPassword","setNewPassword","error","setError","success","setSuccess","fetchUsers","response","get","data","err","message","handleSubmit","e","preventDefault","post","username","_err$response","_err$response$data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","required","disabled","map","user","type","placeholder","_c","$RefreshReg$"],"sources":["/Users/abarbas/Desktop/soar_web_forms/src/components/ResetPassword.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './ResetPassword.css';\n\nconst ResetPassword = () => {\n  const [users, setUsers] = useState([]); // State to hold the list of users\n  const [selectedUser, setSelectedUser] = useState(''); // State for the selected user\n  const [newPassword, setNewPassword] = useState('');\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n\n  useEffect(() => {\n    // Fetch the list of users when the component mounts\n    const fetchUsers = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/users'); // Adjust the endpoint as necessary\n        setUsers(response.data); // Assuming response.data is an array of user objects\n      } catch (err) {\n        setError('Error fetching users: ' + err.message);\n      }\n    };\n\n    fetchUsers();\n  }, []);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    // Ensure a user is selected\n    if (!selectedUser) {\n      setError('Please select a user.');\n      return;\n    }\n\n    try {\n      const response = await axios.post('http://localhost:5000/admin/reset-password', {\n        username: selectedUser, // Use the selected user from the dropdown\n        newPassword,\n      });\n\n      setSuccess('Password reset successfully!');\n      setError('');\n      // Clear the fields\n      setSelectedUser('');\n      setNewPassword('');\n    } catch (err) {\n      setError('Error resetting password: ' + (err.response?.data?.message || err.message));\n      setSuccess('');\n    }\n  };\n\n  return (\n    <div className=\"reset-password-container\">\n      <div className=\"reset-password-box\">\n        <h2>Reset Password</h2>\n        <form onSubmit={handleSubmit}>\n          <select value={selectedUser} onChange={(e) => setSelectedUser(e.target.value)} required>\n            <option value=\"\" disabled>Select User</option>\n            {users.map((user) => (\n              <option key={user.username} value={user.username}>\n                {user.username} {/* Display the username */}\n              </option>\n            ))}\n          </select>\n          <input\n            type=\"password\"\n            placeholder=\"New Password\"\n            value={newPassword}\n            onChange={(e) => setNewPassword(e.target.value)}\n            required\n          />\n          <button type=\"submit\" className=\"reset-password-button\">Reset Password</button>\n        </form>\n        {error && <p className=\"error\">{error}</p>}\n        {success && <p className=\"success\">{success}</p>}\n      </div>\n    </div>\n  );\n};\n\nexport default ResetPassword;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}