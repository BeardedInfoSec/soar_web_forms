{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abarbas\\\\Desktop\\\\soar_web_forms\\\\src\\\\components\\\\FormBuilder.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { DndContext, DragOverlay, closestCenter } from '@dnd-kit/core';\nimport { arrayMove, SortableContext, useSortable, rectSortingStrategy } from '@dnd-kit/sortable';\nimport Papa from 'papaparse';\nimport './FormBuilder.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ELEMENT_TYPES = [{\n  id: 'heading',\n  label: 'Heading'\n}, {\n  id: 'text',\n  label: 'Text'\n}, {\n  id: 'divider',\n  label: 'Divider'\n},\n//{ id: 'button', label: 'Button' },\n//{ id: 'image', label: 'Image' },\n{\n  id: 'table',\n  label: 'Table'\n}];\nconst INPUT_FIELDS = [{\n  id: 'inputText',\n  label: 'Input Text',\n  type: 'text'\n}, {\n  id: 'email',\n  label: 'Email',\n  type: 'email'\n},\n//{ id: 'password', label: 'Password', type: 'password' }, \n{\n  id: 'dateTime',\n  label: 'Date or Time',\n  type: 'datetime-local'\n}, {\n  id: 'dropdown',\n  label: 'Dropdown',\n  type: 'dropdown'\n}, {\n  id: 'boolean',\n  label: 'Boolean',\n  type: 'dropdown'\n}, {\n  id: 'number',\n  label: 'Number',\n  type: 'number'\n}, {\n  id: 'file',\n  label: 'File Upload',\n  type: 'file'\n}];\nconst FormBuilder = () => {\n  _s();\n  var _draftSettings$dropdo;\n  const [formElements, setFormElements] = useState([]);\n  const [formName, setFormName] = useState('');\n  const [formLabel, setFormLabel] = useState('');\n  const [formTags, setFormTags] = useState('');\n  const [savedForms, setSavedForms] = useState([]); // Add state to store list of saved forms\n  const [selectedForm, setSelectedForm] = useState(''); // Add state to track selected form\n  const [selectedElement, setSelectedElement] = useState(null);\n  const [draftSettings, setDraftSettings] = useState(null);\n  const [draggingElement, setDraggingElement] = useState(null);\n  const formContainerRef = useRef(null);\n  const [selectedFileName, setSelectedFileName] = useState('');\n  const SUBMIT_BUTTON_ID = 'submit-button';\n  const [formToLoad, setFormToLoad] = useState(null); // Hold the form name to load after clearing\n\n  useEffect(() => {\n    console.log('Form Elements Updated:', formElements);\n    const tableElement = formElements.find(el => el.type === 'table');\n    if (tableElement) {\n      console.log('Table Element Found:', tableElement);\n      console.log('CSV Data in State:', tableElement.settings.csvData);\n    }\n  }, [formElements]);\n  useEffect(() => {\n    if (!formElements.some(el => el.id === SUBMIT_BUTTON_ID)) {\n      addSubmitButton();\n    }\n  }, [formElements]);\n  useEffect(() => {\n    loadSavedForms();\n  }, []);\n  const loadSavedForms = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/forms');\n      if (!response.ok) {\n        throw new Error(`Failed to fetch forms: ${response.status}`);\n      }\n      const data = await response.json();\n      const loadedForms = data.map(form => ({\n        id: form.id,\n        // Ensure this is present\n        name: form.name // Ensure this is present\n      }));\n      setSavedForms(loadedForms); // Set the forms to state\n    } catch (error) {\n      console.error('Error loading forms:', error);\n    }\n  };\n  const loadForm = async () => {\n    if (!selectedForm) {\n      alert('Please select a form to load.');\n      return;\n    }\n    try {\n      var _xmlDoc$querySelector, _xmlDoc$querySelector2;\n      // Use the endpoint that searches by form name\n      const response = await fetch(`http://localhost:5000/forms/${encodeURIComponent(selectedForm)}`);\n      if (!response.ok) {\n        throw new Error(`Failed to load form: ${response.status}`);\n      }\n      const formData = await response.json();\n      const parser = new DOMParser();\n      const xmlDoc = parser.parseFromString(formData.xml_data, 'application/xml');\n      const loadedName = ((_xmlDoc$querySelector = xmlDoc.querySelector('form > name')) === null || _xmlDoc$querySelector === void 0 ? void 0 : _xmlDoc$querySelector.textContent) || '';\n      const loadedLabel = ((_xmlDoc$querySelector2 = xmlDoc.querySelector('form > label')) === null || _xmlDoc$querySelector2 === void 0 ? void 0 : _xmlDoc$querySelector2.textContent) || '';\n      const loadedTags = Array.from(xmlDoc.querySelectorAll('form > tags > tag')).map(tag => tag.textContent);\n      const elements = Array.from(xmlDoc.querySelectorAll('elements > element')).map((el, index) => {\n        var _el$querySelector, _el$querySelector2, _el$querySelector3, _el$querySelector4, _el$querySelector5, _el$querySelector6, _el$querySelector7;\n        const type = ((_el$querySelector = el.querySelector('type')) === null || _el$querySelector === void 0 ? void 0 : _el$querySelector.textContent) || 'text';\n        const optionsNode = el.querySelector('dropdownOptions');\n        const options = optionsNode ? Array.from(optionsNode.querySelectorAll('option')).map(opt => opt.textContent) : [];\n        return {\n          id: `element-${Date.now()}-${index}`,\n          type,\n          key: ((_el$querySelector2 = el.querySelector('key')) === null || _el$querySelector2 === void 0 ? void 0 : _el$querySelector2.textContent) || '',\n          label: ((_el$querySelector3 = el.querySelector('label')) === null || _el$querySelector3 === void 0 ? void 0 : _el$querySelector3.textContent) || '',\n          required: ((_el$querySelector4 = el.querySelector('required')) === null || _el$querySelector4 === void 0 ? void 0 : _el$querySelector4.textContent) === 'true',\n          alignment: ((_el$querySelector5 = el.querySelector('alignment')) === null || _el$querySelector5 === void 0 ? void 0 : _el$querySelector5.textContent) || 'center',\n          settings: {\n            headerLevel: ((_el$querySelector6 = el.querySelector('headerLevel')) === null || _el$querySelector6 === void 0 ? void 0 : _el$querySelector6.textContent) || 'h1',\n            placeholder: ((_el$querySelector7 = el.querySelector('placeholder')) === null || _el$querySelector7 === void 0 ? void 0 : _el$querySelector7.textContent) || '',\n            dropdownOptions: options\n          }\n        };\n      }).filter(el => el.type !== 'button'); // Exclude submit button\n\n      setFormName(loadedName);\n      setFormLabel(loadedLabel);\n      setFormTags(loadedTags.join(', '));\n      setFormElements(elements);\n      console.log(`Form \"${selectedForm}\" loaded successfully!`);\n    } catch (error) {\n      console.error('Error loading form:', error);\n      alert('Failed to load form data.');\n    }\n  };\n  const addSubmitButton = () => {\n    setFormElements(prev => [...prev, {\n      id: SUBMIT_BUTTON_ID,\n      type: 'button',\n      key: 'Submit',\n      label: 'Submit',\n      alignment: 'center',\n      required: false,\n      settings: {}\n    }]);\n  };\n  const generateKey = type => {\n    const existingCount = formElements.filter(el => el.type === type).length + 1;\n    return `${type} ${existingCount}`; // Example: \"inputText 1\"\n  };\n  const addElement = type => {\n    const newKey = generateKey(type);\n    const newElement = {\n      id: Date.now().toString(),\n      type,\n      key: newKey,\n      label: type === 'heading' ? 'Heading' : type,\n      alignment: 'center',\n      settings: {\n        headerLevel: 'h1',\n        placeholder: type === 'email' ? 'Email Address' : type === 'password' ? 'Enter password' : 'Enter text here...',\n        useCurrentDate: false,\n        defaultBoolean: 'true',\n        dropdownOptions: [],\n        min: '',\n        max: '',\n        step: '',\n        defaultValue: '',\n        showPasswordOption: false,\n        passwordLength: '',\n        requireSymbols: false,\n        requireNumbers: false,\n        csvData: []\n      },\n      required: false,\n      textColor: '#ffffff',\n      fontFamily: 'Arial'\n    };\n\n    // Ensure new elements are added before the Submit button and prevent duplicates\n    setFormElements(prev => {\n      // Check if an element of the same type already exists, if that's not desired\n      if (!prev.some(el => el.type === type)) {\n        const submitIndex = prev.findIndex(el => el.id === SUBMIT_BUTTON_ID);\n        const newFormElements = [...prev];\n        newFormElements.splice(submitIndex, 0, newElement); // Insert new element before the submit button\n        return newFormElements;\n      }\n      return prev;\n    });\n  };\n  const isKeyUnique = key => {\n    return !formElements.some(el => el.key === key && el.id !== (selectedElement === null || selectedElement === void 0 ? void 0 : selectedElement.id));\n  };\n  const handleSubmit = () => {\n    const formData = formElements.filter(el => el.id !== SUBMIT_BUTTON_ID); // Exclude submit button from data\n    console.log('Form submitted:', formData);\n\n    // Example API call\n    fetch('/api/submit-form', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        elements: formData\n      })\n    }).then(response => response.json()).then(data => console.log('Form submission response:', data)).catch(error => console.error('Error submitting form:', error));\n  };\n  const handleImageUpload = (event, elementId) => {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = e => {\n        const imageSrc = e.target.result;\n        setFormElements(prev => prev.map(el => el.id === elementId ? {\n          ...el,\n          settings: {\n            ...el.settings,\n            imageSrc\n          }\n        } : el));\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  const saveForm = async () => {\n    if (!formName) {\n      alert('Please enter a name for the form.');\n      return;\n    }\n    const formData = {\n      name: formName,\n      label: formLabel,\n      tags: formTags ? formTags.split(',').map(tag => tag.trim()) : [],\n      elements: formElements // Includes the populated csvData\n    };\n\n    // Convert form data to XML\n    const convertToXML = obj => {\n      let xml = '';\n      for (let key in obj) {\n        if (Array.isArray(obj[key])) {\n          xml += `<${key}>`;\n          obj[key].forEach(element => {\n            if (Array.isArray(element)) {\n              // Handle CSV data as rows and cells\n              xml += '<row>';\n              element.forEach(cell => {\n                xml += `<cell>${cell}</cell>`;\n              });\n              xml += '</row>';\n            } else {\n              xml += `<element>${convertToXML(element)}</element>`;\n            }\n          });\n          xml += `</${key}>`;\n        } else if (typeof obj[key] === 'object') {\n          xml += `<${key}>${convertToXML(obj[key])}</${key}>`;\n        } else {\n          xml += `<${key}>${obj[key]}</${key}>`;\n        }\n      }\n      return xml;\n    };\n    const xmlData = `<form>${convertToXML(formData)}</form>`;\n\n    // Send form data to backend\n    try {\n      const response = await fetch('http://localhost:5000/save_form', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: formName,\n          label: formLabel,\n          tags: formTags ? formTags.split(',').map(tag => tag.trim()) : [],\n          elements: formElements,\n          xmlData: xmlData // Include XML data in the request\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`Failed to save form: ${response.status} ${response.statusText}`);\n      }\n      alert(`Form \"${formName}\" saved successfully!`);\n      localStorage.setItem(formName, xmlData); // Optional: save XML to local storage\n\n      // Refresh saved forms after saving\n      loadSavedForms();\n    } catch (error) {\n      console.error('Error:', error);\n      alert(`Error saving form: ${error.message}`);\n    }\n  };\n  const removeElement = id => {\n    if (id === SUBMIT_BUTTON_ID) return; // Prevent deletion of the Submit button\n    setFormElements(prev => prev.filter(el => el.id !== id));\n    if ((selectedElement === null || selectedElement === void 0 ? void 0 : selectedElement.id) === id) {\n      setSelectedElement(null);\n    }\n  };\n  const handleEditClick = element => {\n    var _element$settings, _element$settings2;\n    setSelectedElement(element);\n    setDraftSettings({\n      ...element.settings,\n      key: element.key || '',\n      label: element.label,\n      alignment: element.alignment,\n      required: element.required,\n      placeholder: (_element$settings = element.settings) === null || _element$settings === void 0 ? void 0 : _element$settings.placeholder,\n      csvData: ((_element$settings2 = element.settings) === null || _element$settings2 === void 0 ? void 0 : _element$settings2.csvData) || [] // Ensure csvData is included\n    });\n  };\n  const applyDraftChanges = () => {\n    if (selectedElement && draftSettings) {\n      console.log('Applying draft changes:', {\n        selectedElement,\n        draftSettings\n      });\n      if (isKeyUnique(draftSettings.key)) {\n        updateElementSettings(selectedElement.id, {\n          ...selectedElement,\n          ...draftSettings,\n          settings: {\n            ...selectedElement.settings,\n            ...draftSettings,\n            csvData: draftSettings.csvData !== undefined ? draftSettings.csvData : selectedElement.settings.csvData // Preserve csvData if not in draftSettings\n          }\n        });\n        console.log('Updated element:', selectedElement);\n        setSelectedElement(null);\n        setDraftSettings(null);\n      } else {\n        alert('The key must be unique. Please choose another.');\n      }\n    }\n  };\n  const handleDraftChange = (key, value) => {\n    setDraftSettings(prev => ({\n      ...prev,\n      [key]: value\n    }));\n    applyDraftChanges();\n  };\n  const cancelChanges = () => {\n    setSelectedElement(null);\n    setDraftSettings(null);\n  };\n  const updateElementSettings = (id, newSettings) => {\n    console.log('Updating element settings for ID:', id);\n    console.log('New settings before merge:', newSettings);\n    setFormElements(prev => prev.map(el => el.id === id.toString() ? {\n      ...el,\n      ...newSettings,\n      settings: {\n        ...el.settings,\n        ...newSettings,\n        csvData: newSettings.csvData !== undefined ? newSettings.csvData : el.settings.csvData // Preserve existing csvData if not overwritten\n      }\n    } : el));\n    console.log('Updated form elements:', formElements);\n  };\n  const handleDragStart = ({\n    active\n  }) => {\n    setDraggingElement(active.id);\n  };\n  const handleDragEnd = ({\n    active,\n    over\n  }) => {\n    if (over && active.id !== over.id) {\n      const oldIndex = formElements.findIndex(el => el.id === active.id);\n      const newIndex = formElements.findIndex(el => el.id === over.id);\n      setFormElements(prev => arrayMove(prev, oldIndex, newIndex));\n    }\n    setDraggingElement(null);\n  };\n  const handleCSVUpload = (event, elementId) => {\n    const file = event.target.files[0];\n    if (file) {\n      if (!file.name.endsWith('.csv')) {\n        alert('Please upload a valid .csv file.');\n        return;\n      }\n      Papa.parse(file, {\n        complete: result => {\n          const csvData = result.data;\n          console.log('Parsed CSV Data:', csvData);\n          setFormElements(prev => prev.map(el => el.id === elementId ? {\n            ...el,\n            csvData,\n            // Update the csvData property\n            settings: {\n              ...el.settings,\n              csvData\n            }\n          } : el));\n        },\n        header: false // Adjust as needed\n      });\n    }\n  };\n  const handleResetForm = () => {\n    if (window.confirm('Are you sure you want to reset the form?')) {\n      setFormElements([]);\n    }\n  };\n  const validatePassword = (password, settings) => {\n    if (settings !== null && settings !== void 0 && settings.passwordLength && password.length < settings.passwordLength) {\n      return false;\n    }\n    if (settings !== null && settings !== void 0 && settings.requireSymbols && !/[!@#$%^&*(),.?\":{}|<>]/.test(password)) {\n      return false;\n    }\n    if (settings !== null && settings !== void 0 && settings.requireNumbers && !/[0-9]/.test(password)) {\n      return false;\n    }\n    return true;\n  };\n  const renderElementContent = element => {\n    var _element$settings3, _settings$dropdownOpt;\n    const isBeingEdited = (selectedElement === null || selectedElement === void 0 ? void 0 : selectedElement.id) === element.id;\n    const settings = isBeingEdited ? draftSettings : element.settings;\n    const alignmentStyle = {\n      textAlign: (settings === null || settings === void 0 ? void 0 : settings.alignment) || 'center'\n    };\n\n    // Use the element key as the default label if the label isn't set\n    // const displayLabel = settings?.label || element.key || element.label;\n    const wrapperStyle = {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: (settings === null || settings === void 0 ? void 0 : settings.alignment) === 'left' ? 'flex-start' : (settings === null || settings === void 0 ? void 0 : settings.alignment) === 'right' ? 'flex-end' : 'center',\n      width: '100%',\n      marginBottom: '10px'\n    };\n    switch (element.type) {\n      case 'heading':\n        {\n          const HeaderTag = (settings === null || settings === void 0 ? void 0 : settings.headerLevel) || 'h1';\n          const alignmentStyle = {\n            textAlign: (settings === null || settings === void 0 ? void 0 : settings.alignment) || 'center',\n            width: '100%',\n            margin: '0 auto' // Ensures it's centered\n          };\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              justifyContent: 'center',\n              width: '100%'\n            },\n            children: /*#__PURE__*/_jsxDEV(HeaderTag, {\n              style: alignmentStyle,\n              children: (settings === null || settings === void 0 ? void 0 : settings.label) || element.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 482,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 11\n          }, this);\n        }\n      case 'text':\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          style: alignmentStyle,\n          children: settings.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 16\n        }, this);\n      case 'button':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: element.alignment || 'center',\n            width: '100%'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: element.id === SUBMIT_BUTTON_ID ? handleSubmit : undefined // Submit button triggers API\n            ,\n            className: \"custom-button\",\n            style: {\n              padding: '10px 20px',\n              borderRadius: '6px',\n              margin: '5px',\n              backgroundColor: '#007bff',\n              color: 'white'\n            },\n            children: element.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 493,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 11\n        }, this);\n      case 'inputText':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: wrapperStyle,\n          children: [(settings === null || settings === void 0 ? void 0 : settings.label) && /*#__PURE__*/_jsxDEV(\"label\", {\n            children: settings.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 505,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: (settings === null || settings === void 0 ? void 0 : settings.placeholder) || '',\n            required: settings === null || settings === void 0 ? void 0 : settings.required,\n            style: {\n              borderRadius: '8px',\n              padding: '10px',\n              border: '1px solid #ced4da',\n              textAlign: 'center'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 506,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 504,\n          columnNumber: 9\n        }, this);\n      case 'email':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: wrapperStyle,\n          children: [(settings === null || settings === void 0 ? void 0 : settings.label) && /*#__PURE__*/_jsxDEV(\"label\", {\n            children: settings.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 522,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            placeholder: (settings === null || settings === void 0 ? void 0 : settings.placeholder) || '',\n            required: settings === null || settings === void 0 ? void 0 : settings.required,\n            style: {\n              borderRadius: '8px',\n              padding: '10px',\n              border: (settings === null || settings === void 0 ? void 0 : settings.isValid) === false ? '2px solid #ff0000' : '1px solid #ced4da',\n              boxShadow: (settings === null || settings === void 0 ? void 0 : settings.isValid) === false ? '0 0 5px #ff0000' : 'none',\n              textAlign: 'center'\n            },\n            onBlur: e => {\n              if (e.target.value.trim() !== '') {\n                const isValid = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(e.target.value);\n                updateElementSettings(element.id, {\n                  ...settings,\n                  isValid\n                });\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 523,\n            columnNumber: 13\n          }, this), !(settings !== null && settings !== void 0 && settings.isValid) && (settings === null || settings === void 0 ? void 0 : settings.isValid) !== undefined && /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: '#ff0000',\n              fontSize: '0.8em',\n              marginTop: '5px'\n            },\n            children: \"Invalid email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 542,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 9\n        }, this);\n      case 'divider':\n        return /*#__PURE__*/_jsxDEV(\"hr\", {\n          style: {\n            ...alignmentStyle,\n            width: '100%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 547,\n          columnNumber: 16\n        }, this);\n      case 'image':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: wrapperStyle,\n          children: [(settings === null || settings === void 0 ? void 0 : settings.label) && /*#__PURE__*/_jsxDEV(\"label\", {\n            children: settings.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 551,\n            columnNumber: 31\n          }, this), \"              \", /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"custom-file-label\",\n            children: [\"Choose Image\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              className: \"custom-file-input\",\n              accept: \"image/*\",\n              onChange: e => handleImageUpload(e, element.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 553,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 551,\n            columnNumber: 77\n          }, this), settings !== null && settings !== void 0 && settings.imageSrc ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: settings.imageSrc,\n            alt: \"Uploaded\",\n            style: {\n              maxWidth: '100%',\n              height: 'auto',\n              borderRadius: '8px',\n              marginTop: '10px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 561,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"https://via.placeholder.com/150\",\n            alt: \"Placeholder\",\n            style: {\n              maxWidth: '100%',\n              height: 'auto',\n              borderRadius: '8px',\n              marginTop: '10px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 567,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 550,\n          columnNumber: 13\n        }, this);\n      case 'file':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: wrapperStyle,\n          children: [(settings === null || settings === void 0 ? void 0 : settings.label) && /*#__PURE__*/_jsxDEV(\"label\", {\n            children: settings.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 578,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"custom-file-label\",\n            children: [\"Upload File\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              className: \"custom-file-input\",\n              onChange: e => handleCSVUpload(e, element.id),\n              accept: \".csv\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 581,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 579,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"file-name\",\n            children: \"No file chosen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 588,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 577,\n          columnNumber: 11\n        }, this);\n      case 'table':\n        const tableData = ((_element$settings3 = element.settings) === null || _element$settings3 === void 0 ? void 0 : _element$settings3.csvData) || [];\n        console.log('Rendering Table with Data:', tableData);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: wrapperStyle,\n          children: [(settings === null || settings === void 0 ? void 0 : settings.label) && /*#__PURE__*/_jsxDEV(\"label\", {\n            children: settings.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 597,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginBottom: '10px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                accept: \".csv\",\n                id: `file-upload-${element.id}`,\n                onChange: e => handleCSVUpload(e, element.id),\n                style: {\n                  display: 'none'\n                } // Hide default input\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 600,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: `file-upload-${element.id}`,\n                style: {\n                  backgroundColor: '#007bff',\n                  color: 'white',\n                  padding: '10px 20px',\n                  borderRadius: '6px',\n                  cursor: 'pointer',\n                  display: 'inline-block'\n                },\n                children: \"Upload CSV File\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 607,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  marginLeft: '10px'\n                },\n                children: selectedFileName || 'No file chosen'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 620,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 599,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n              style: {\n                margin: '0 auto',\n                borderCollapse: 'collapse',\n                width: '100%'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: tableData.length > 0 ? tableData.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: row.map((cell, cellIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n                    style: {\n                      border: '1px solid #ddd',\n                      padding: '8px'\n                    },\n                    children: cell\n                  }, `cell-${rowIndex}-${cellIndex}`, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 631,\n                    columnNumber: 29\n                  }, this))\n                }, `row-${rowIndex}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 629,\n                  columnNumber: 25\n                }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    style: {\n                      textAlign: 'center'\n                    },\n                    children: \"No Data Available\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 642,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 641,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 626,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 625,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 597,\n            columnNumber: 63\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 596,\n          columnNumber: 13\n        }, this);\n      case 'dateTime':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: wrapperStyle,\n          children: [(settings === null || settings === void 0 ? void 0 : settings.label) && /*#__PURE__*/_jsxDEV(\"label\", {\n            children: settings.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 653,\n            columnNumber: 31\n          }, this), settings !== null && settings !== void 0 && settings.useCurrentDate ? /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: new Date().toLocaleDateString('en-US'),\n            readOnly: true,\n            style: {\n              borderRadius: '8px',\n              padding: '10px',\n              border: '1px solid #ced4da',\n              textAlign: 'center'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 656,\n            columnNumber: 13\n          }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            style: {\n              borderRadius: '8px',\n              padding: '10px',\n              border: '1px solid #ced4da',\n              textAlign: 'center'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 668,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 652,\n          columnNumber: 9\n        }, this);\n      case 'dropdown':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: wrapperStyle,\n          children: [(settings === null || settings === void 0 ? void 0 : settings.label) && /*#__PURE__*/_jsxDEV(\"label\", {\n            children: settings.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 683,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            style: {\n              borderRadius: '8px',\n              padding: '10px',\n              border: '1px solid #ced4da',\n              textAlign: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select an option\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 692,\n              columnNumber: 15\n            }, this), settings === null || settings === void 0 ? void 0 : (_settings$dropdownOpt = settings.dropdownOptions) === null || _settings$dropdownOpt === void 0 ? void 0 : _settings$dropdownOpt.map((option, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option,\n              children: option\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 694,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 684,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 682,\n          columnNumber: 11\n        }, this);\n      case 'boolean':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: wrapperStyle,\n          children: [(settings === null || settings === void 0 ? void 0 : settings.label) && /*#__PURE__*/_jsxDEV(\"label\", {\n            children: settings.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 704,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: (settings === null || settings === void 0 ? void 0 : settings.defaultBoolean) || 'true',\n            onChange: e => updateElementSettings(element.id, {\n              ...settings,\n              defaultBoolean: e.target.value\n            }),\n            style: {\n              borderRadius: '8px',\n              padding: '10px',\n              border: '1px solid #ced4da',\n              textAlign: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"true\",\n              children: \"True\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 715,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"false\",\n              children: \"False\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 716,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 705,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 703,\n          columnNumber: 9\n        }, this);\n      case 'number':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: wrapperStyle,\n          children: [(settings === null || settings === void 0 ? void 0 : settings.label) && /*#__PURE__*/_jsxDEV(\"label\", {\n            children: settings.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 723,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            min: settings === null || settings === void 0 ? void 0 : settings.min,\n            max: settings === null || settings === void 0 ? void 0 : settings.max,\n            step: settings === null || settings === void 0 ? void 0 : settings.step,\n            defaultValue: settings === null || settings === void 0 ? void 0 : settings.defaultValue,\n            required: settings === null || settings === void 0 ? void 0 : settings.required,\n            style: {\n              borderRadius: '8px',\n              padding: '10px',\n              border: '1px solid #ced4da',\n              textAlign: 'center'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 724,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 722,\n          columnNumber: 9\n        }, this);\n      case 'password':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '100%',\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: (settings === null || settings === void 0 ? void 0 : settings.alignment) === 'left' ? 'flex-start' : (settings === null || settings === void 0 ? void 0 : settings.alignment) === 'right' ? 'flex-end' : 'center',\n            justifyContent: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: wrapperStyle,\n            children: [(settings === null || settings === void 0 ? void 0 : settings.label) && /*#__PURE__*/_jsxDEV(\"label\", {\n              children: settings.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 753,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: settings !== null && settings !== void 0 && settings.showPasswordOption && settings !== null && settings !== void 0 && settings.showPassword ? 'text' : 'password',\n              placeholder: (settings === null || settings === void 0 ? void 0 : settings.placeholder) || 'Enter password',\n              required: settings === null || settings === void 0 ? void 0 : settings.required,\n              onBlur: e => {\n                const isValid = validatePassword(e.target.value, settings);\n                updateElementSettings(element.id, {\n                  ...settings,\n                  isValid\n                });\n              },\n              style: {\n                borderRadius: '8px',\n                padding: '10px',\n                width: '300px',\n                // Adjust the width as needed\n                border: (settings === null || settings === void 0 ? void 0 : settings.isValid) === false ? '2px solid #ff0000' : '1px solid #ced4da',\n                textAlign: 'left',\n                // Ensures the placeholder text stays aligned left\n                marginRight: '10px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 753,\n              columnNumber: 63\n            }, this), (settings === null || settings === void 0 ? void 0 : settings.showPasswordOption) && /*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                display: 'flex',\n                alignItems: 'center',\n                marginLeft: '10px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: (settings === null || settings === void 0 ? void 0 : settings.showPassword) || false,\n                onChange: e => updateElementSettings(element.id, {\n                  ...settings,\n                  showPassword: e.target.checked\n                }),\n                style: {\n                  marginRight: '5px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 772,\n                columnNumber: 17\n              }, this), \"Show Password\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 771,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 752,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: '10px',\n              textAlign: (settings === null || settings === void 0 ? void 0 : settings.alignment) || 'center',\n              width: '100%',\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: (settings === null || settings === void 0 ? void 0 : settings.alignment) === 'left' ? 'flex-start' : (settings === null || settings === void 0 ? void 0 : settings.alignment) === 'right' ? 'flex-end' : 'center'\n            },\n            children: [(settings === null || settings === void 0 ? void 0 : settings.passwordLength) && /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                marginBottom: '5px'\n              },\n              children: [\"Requires Minimum Length: \", settings.passwordLength]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 784,\n              columnNumber: 42\n            }, this), (settings === null || settings === void 0 ? void 0 : settings.requireSymbols) && /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                marginBottom: '5px'\n              },\n              children: \"Requires Symbols: Yes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 785,\n              columnNumber: 42\n            }, this), (settings === null || settings === void 0 ? void 0 : settings.requireNumbers) && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Requires Numbers: Yes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 786,\n              columnNumber: 42\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 783,\n            columnNumber: 11\n          }, this), !(settings !== null && settings !== void 0 && settings.isValid) && (settings === null || settings === void 0 ? void 0 : settings.isValid) !== undefined && /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: '#ff0000',\n              fontSize: '0.8em',\n              marginTop: '5px'\n            },\n            children: \"Password does not meet requirements\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 790,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 742,\n          columnNumber: 9\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(\"input\", {\n          type: element.type,\n          placeholder: (settings === null || settings === void 0 ? void 0 : settings.placeholder) || '',\n          required: settings === null || settings === void 0 ? void 0 : settings.required,\n          style: alignmentStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 796,\n          columnNumber: 11\n        }, this);\n    }\n  };\n  const areRequiredFieldsFilled = () => {\n    return formElements.every(el => {\n      if (el.required) {\n        return el.settings.label && el.settings.label.trim() !== '';\n      }\n      return true;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-builder-container\",\n    style: {\n      height: '100vh',\n      overflow: 'hidden'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-name-section\",\n        style: {\n          marginBottom: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"form-name\",\n          className: \"sidebar-label\",\n          children: \"Form Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 822,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"form-name\",\n          type: \"text\",\n          value: formName,\n          onChange: e => setFormName(e.target.value),\n          placeholder: \"Enter form name\",\n          className: \"form-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 823,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 821,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-label-section\",\n        style: {\n          marginBottom: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"form-label\",\n          className: \"sidebar-label\",\n          children: \"Label (Required):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 835,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"form-label\",\n          type: \"text\",\n          value: formLabel,\n          onChange: e => setFormLabel(e.target.value),\n          placeholder: \"Enter form label\",\n          className: \"form-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 836,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 834,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"element-input-wrapper\",\n        style: {\n          display: 'flex',\n          gap: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"element-selector\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Elements\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 848,\n            columnNumber: 7\n          }, this), ELEMENT_TYPES.map(element => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => addElement(element.id),\n            className: \"element-button\",\n            children: element.label\n          }, element.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 850,\n            columnNumber: 9\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 847,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-selector\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Input Fields\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 861,\n            columnNumber: 7\n          }, this), INPUT_FIELDS.map(input => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => addElement(input.id),\n            className: \"input-button\",\n            children: input.label\n          }, input.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 863,\n            columnNumber: 9\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 860,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 846,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"load-section\",\n        style: {\n          marginBottom: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"saved-forms\",\n          className: \"sidebar-label\",\n          children: \"Load Saved Form:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 874,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"saved-forms\",\n          value: selectedForm,\n          onChange: e => setSelectedForm(e.target.value),\n          className: \"sidebar-select\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"-- Select a Form --\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 881,\n            columnNumber: 5\n          }, this), savedForms.map(form => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: form.name,\n            children: [\" \", form.name, \" \"]\n          }, form.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 883,\n            columnNumber: 7\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 875,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: loadForm,\n          className: \"load-form-button\",\n          children: \"Load Form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 888,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 873,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: saveForm,\n        className: \"save-form-button\",\n        children: \"Save Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 890,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleResetForm,\n        className: \"reset-form-button\",\n        children: \"Reset Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 891,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 817,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-builder\",\n      ref: formContainerRef,\n      style: {\n        height: '100%',\n        overflowY: 'auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(DndContext, {\n        collisionDetection: closestCenter,\n        onDragEnd: handleDragEnd,\n        onDragStart: handleDragStart,\n        children: [/*#__PURE__*/_jsxDEV(SortableContext, {\n          items: formElements,\n          strategy: rectSortingStrategy,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-preview\",\n            children: formElements.map(element => /*#__PURE__*/_jsxDEV(SortableFormElement, {\n              element: element,\n              handleEditClick: handleEditClick,\n              renderElementContent: renderElementContent\n            }, element.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 904,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 902,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 901,\n          columnNumber: 11\n        }, this), draggingElement && /*#__PURE__*/_jsxDEV(DragOverlay, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dragging-overlay\",\n            children: \"Dragging\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 915,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 914,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 896,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 895,\n      columnNumber: 7\n    }, this), selectedElement && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"element-editor\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"element-editor-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Edit Element\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 924,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            if (window.confirm('Are you sure you want to delete this element?')) {\n              removeElement(selectedElement.id);\n            }\n          },\n          className: \"delete-element\",\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 925,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 923,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Key:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: (draftSettings === null || draftSettings === void 0 ? void 0 : draftSettings.key) || '',\n          oonChange: e => handleDraftChange('placeholder', e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 938,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 936,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Label:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: (draftSettings === null || draftSettings === void 0 ? void 0 : draftSettings.label) || '',\n          onChange: e => setDraftSettings(prev => ({\n            ...prev,\n            label: e.target.value\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 946,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 944,\n        columnNumber: 11\n      }, this), selectedElement.type === 'heading' && /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Header Level:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: (draftSettings === null || draftSettings === void 0 ? void 0 : draftSettings.headerLevel) || 'h1',\n          onChange: e => setDraftSettings(prev => ({\n            ...prev,\n            headerLevel: e.target.value\n          })),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"h1\",\n            children: \"H1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 966,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"h2\",\n            children: \"H2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 967,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"h3\",\n            children: \"H3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 968,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"h4\",\n            children: \"H4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 969,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"h5\",\n            children: \"H5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 970,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"h6\",\n            children: \"H6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 971,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 957,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 955,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Alignment:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: (draftSettings === null || draftSettings === void 0 ? void 0 : draftSettings.alignment) || 'center',\n          onChange: e => setDraftSettings(prev => ({\n            ...prev,\n            alignment: e.target.value\n          })),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"left\",\n            children: \"Left\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 983,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"center\",\n            children: \"Center\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 984,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"right\",\n            children: \"Right\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 985,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 977,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 975,\n        columnNumber: 11\n      }, this), (selectedElement.type === 'inputText' || selectedElement.type === 'email') && /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Placeholder Text:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: (draftSettings === null || draftSettings === void 0 ? void 0 : draftSettings.placeholder) || '',\n          onChange: e => setDraftSettings(prev => ({\n            ...prev,\n            placeholder: e.target.value\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 991,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 989,\n        columnNumber: 13\n      }, this), selectedElement.type === 'dateTime' && /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Use Current Date:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: (draftSettings === null || draftSettings === void 0 ? void 0 : draftSettings.useCurrentDate) || false,\n          onChange: e => setDraftSettings(prev => ({\n            ...prev,\n            useCurrentDate: e.target.checked\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1003,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1001,\n        columnNumber: 13\n      }, this), selectedElement.type === 'dropdown' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Dropdown Options:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1014,\n          columnNumber: 13\n        }, this), draftSettings === null || draftSettings === void 0 ? void 0 : (_draftSettings$dropdo = draftSettings.dropdownOptions) === null || _draftSettings$dropdo === void 0 ? void 0 : _draftSettings$dropdo.map((option, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            alignItems: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: option,\n            onChange: e => setDraftSettings(prev => {\n              const updatedOptions = [...prev.dropdownOptions];\n              updatedOptions[idx] = e.target.value;\n              return {\n                ...prev,\n                dropdownOptions: updatedOptions\n              };\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1017,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setDraftSettings(prev => ({\n              ...prev,\n              dropdownOptions: prev.dropdownOptions.filter((_, i) => i !== idx)\n            })),\n            style: {\n              marginLeft: '10px',\n              padding: '5px 10px',\n              color: 'white',\n              backgroundColor: 'red',\n              borderRadius: '4px',\n              cursor: 'pointer'\n            },\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1028,\n            columnNumber: 17\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1016,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setDraftSettings(prev => ({\n            ...prev,\n            dropdownOptions: [...(prev.dropdownOptions || []), '']\n          })),\n          className: \"add-option-button\",\n          children: \"+\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1048,\n          columnNumber: 1\n        }, this)]\n      }, void 0, true), selectedElement.type === 'boolean' && /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Default Boolean Value:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          value: (draftSettings === null || draftSettings === void 0 ? void 0 : draftSettings.defaultBoolean) || 'true',\n          onChange: e => setDraftSettings(prev => ({\n            ...prev,\n            defaultBoolean: e.target.value\n          })),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"true\",\n            children: \"True\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1072,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"false\",\n            children: \"False\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1073,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1066,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1064,\n        columnNumber: 13\n      }, this), selectedElement.type === 'number' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Minimum Value:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: (draftSettings === null || draftSettings === void 0 ? void 0 : draftSettings.min) || '',\n            onChange: e => setDraftSettings(prev => ({\n              ...prev,\n              min: e.target.value\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1081,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1079,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Maximum Value:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: (draftSettings === null || draftSettings === void 0 ? void 0 : draftSettings.max) || '',\n            onChange: e => setDraftSettings(prev => ({\n              ...prev,\n              max: e.target.value\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1091,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1089,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Step Value:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: (draftSettings === null || draftSettings === void 0 ? void 0 : draftSettings.step) || '',\n            onChange: e => setDraftSettings(prev => ({\n              ...prev,\n              step: e.target.value\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1101,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1099,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Default Value:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: (draftSettings === null || draftSettings === void 0 ? void 0 : draftSettings.defaultValue) || '',\n            onChange: e => setDraftSettings(prev => ({\n              ...prev,\n              defaultValue: e.target.value\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1111,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1109,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), selectedElement.type === 'password' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Show Password Option:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: (draftSettings === null || draftSettings === void 0 ? void 0 : draftSettings.showPasswordOption) || false,\n            onChange: e => setDraftSettings(prev => ({\n              ...prev,\n              showPasswordOption: e.target.checked\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1125,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1123,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Minimum Password Length:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: (draftSettings === null || draftSettings === void 0 ? void 0 : draftSettings.passwordLength) || '',\n            onChange: e => setDraftSettings(prev => ({\n              ...prev,\n              passwordLength: e.target.value\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1138,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1136,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Requires Symbols:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: (draftSettings === null || draftSettings === void 0 ? void 0 : draftSettings.requireSymbols) || false,\n            onChange: e => setDraftSettings(prev => ({\n              ...prev,\n              requireSymbols: e.target.checked\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1151,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1149,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Requires Numbers:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: (draftSettings === null || draftSettings === void 0 ? void 0 : draftSettings.requireNumbers) || false,\n            onChange: e => setDraftSettings(prev => ({\n              ...prev,\n              requireNumbers: e.target.checked\n            }))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1164,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1162,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: cancelChanges,\n        className: \"cancel-button custom-button\",\n        style: {\n          backgroundColor: '#6c757d',\n          color: 'white',\n          border: 'none',\n          padding: '10px 20px',\n          textAlign: 'center',\n          fontSize: '16px',\n          cursor: 'pointer',\n          margin: '5px',\n          borderRadius: '6px'\n        },\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1178,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 922,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 816,\n    columnNumber: 5\n  }, this);\n};\n_s(FormBuilder, \"2d8C2Jk3XBI+PWREG2Gg9YN3+iw=\");\n_c = FormBuilder;\nconst SortableFormElement = ({\n  element,\n  handleEditClick,\n  renderElementContent\n}) => {\n  _s2();\n  var _element$settings4;\n  const {\n    attributes,\n    listeners,\n    setNodeRef,\n    transform,\n    transition\n  } = useSortable({\n    id: element.id\n  });\n  const style = {\n    transform: transform ? `translate3d(${transform.x}px, ${transform.y}px, 0)` : undefined,\n    transition,\n    backgroundColor: ((_element$settings4 = element.settings) === null || _element$settings4 === void 0 ? void 0 : _element$settings4.backgroundColor) || 'inherit'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: setNodeRef,\n    style: style,\n    className: \"form-element\",\n    onClick: () => handleEditClick(element),\n    children: [renderElementContent(element), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"drag-handle\",\n      ...listeners,\n      ...attributes,\n      onMouseDown: e => e.stopPropagation(),\n      children: \"Drag\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1220,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 1213,\n    columnNumber: 5\n  }, this);\n};\n_s2(SortableFormElement, \"FTUh0JV0KNM2MI3tYtLrQh0rr1U=\", false, function () {\n  return [useSortable];\n});\n_c2 = SortableFormElement;\nexport default FormBuilder;\nvar _c, _c2;\n$RefreshReg$(_c, \"FormBuilder\");\n$RefreshReg$(_c2, \"SortableFormElement\");","map":{"version":3,"names":["React","useState","useRef","useEffect","DndContext","DragOverlay","closestCenter","arrayMove","SortableContext","useSortable","rectSortingStrategy","Papa","jsxDEV","_jsxDEV","Fragment","_Fragment","ELEMENT_TYPES","id","label","INPUT_FIELDS","type","FormBuilder","_s","_draftSettings$dropdo","formElements","setFormElements","formName","setFormName","formLabel","setFormLabel","formTags","setFormTags","savedForms","setSavedForms","selectedForm","setSelectedForm","selectedElement","setSelectedElement","draftSettings","setDraftSettings","draggingElement","setDraggingElement","formContainerRef","selectedFileName","setSelectedFileName","SUBMIT_BUTTON_ID","formToLoad","setFormToLoad","console","log","tableElement","find","el","settings","csvData","some","addSubmitButton","loadSavedForms","response","fetch","ok","Error","status","data","json","loadedForms","map","form","name","error","loadForm","alert","_xmlDoc$querySelector","_xmlDoc$querySelector2","encodeURIComponent","formData","parser","DOMParser","xmlDoc","parseFromString","xml_data","loadedName","querySelector","textContent","loadedLabel","loadedTags","Array","from","querySelectorAll","tag","elements","index","_el$querySelector","_el$querySelector2","_el$querySelector3","_el$querySelector4","_el$querySelector5","_el$querySelector6","_el$querySelector7","optionsNode","options","opt","Date","now","key","required","alignment","headerLevel","placeholder","dropdownOptions","filter","join","prev","generateKey","existingCount","length","addElement","newKey","newElement","toString","useCurrentDate","defaultBoolean","min","max","step","defaultValue","showPasswordOption","passwordLength","requireSymbols","requireNumbers","textColor","fontFamily","submitIndex","findIndex","newFormElements","splice","isKeyUnique","handleSubmit","method","headers","body","JSON","stringify","then","catch","handleImageUpload","event","elementId","file","target","files","reader","FileReader","onload","e","imageSrc","result","readAsDataURL","saveForm","tags","split","trim","convertToXML","obj","xml","isArray","forEach","element","cell","xmlData","statusText","localStorage","setItem","message","removeElement","handleEditClick","_element$settings","_element$settings2","applyDraftChanges","updateElementSettings","undefined","handleDraftChange","value","cancelChanges","newSettings","handleDragStart","active","handleDragEnd","over","oldIndex","newIndex","handleCSVUpload","endsWith","parse","complete","header","handleResetForm","window","confirm","validatePassword","password","test","renderElementContent","_element$settings3","_settings$dropdownOpt","isBeingEdited","alignmentStyle","textAlign","wrapperStyle","display","flexDirection","alignItems","width","marginBottom","HeaderTag","margin","style","justifyContent","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","className","padding","borderRadius","backgroundColor","color","border","isValid","boxShadow","onBlur","fontSize","marginTop","accept","onChange","src","alt","maxWidth","height","tableData","htmlFor","cursor","marginLeft","borderCollapse","row","rowIndex","cellIndex","toLocaleDateString","readOnly","option","idx","showPassword","marginRight","checked","areRequiredFieldsFilled","every","overflow","gap","input","ref","overflowY","collisionDetection","onDragEnd","onDragStart","items","strategy","SortableFormElement","oonChange","updatedOptions","_","i","_c","_s2","_element$settings4","attributes","listeners","setNodeRef","transform","transition","x","y","onMouseDown","stopPropagation","_c2","$RefreshReg$"],"sources":["C:/Users/abarbas/Desktop/soar_web_forms/src/components/FormBuilder.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { DndContext, DragOverlay, closestCenter } from '@dnd-kit/core';\r\nimport { arrayMove, SortableContext, useSortable, rectSortingStrategy } from '@dnd-kit/sortable';\r\nimport Papa from 'papaparse';\r\nimport './FormBuilder.css';\r\n\r\nconst ELEMENT_TYPES = [\r\n  { id: 'heading', label: 'Heading' },\r\n  { id: 'text', label: 'Text' },\r\n  { id: 'divider', label: 'Divider' },\r\n  //{ id: 'button', label: 'Button' },\r\n  //{ id: 'image', label: 'Image' },\r\n  { id: 'table', label: 'Table' }\r\n];\r\n\r\nconst INPUT_FIELDS = [\r\n  { id: 'inputText', label: 'Input Text', type: 'text' },\r\n  { id: 'email', label: 'Email', type: 'email' },\r\n  //{ id: 'password', label: 'Password', type: 'password' }, \r\n  { id: 'dateTime', label: 'Date or Time', type: 'datetime-local' },\r\n  { id: 'dropdown', label: 'Dropdown', type: 'dropdown' },\r\n  { id: 'boolean', label: 'Boolean', type: 'dropdown' },\r\n  { id: 'number', label: 'Number', type: 'number' },\r\n  { id: 'file', label: 'File Upload', type: 'file' }\r\n\r\n];\r\n\r\nconst FormBuilder = () => {\r\n  const [formElements, setFormElements] = useState([]);\r\n  const [formName, setFormName] = useState('');\r\n  const [formLabel, setFormLabel] = useState('');\r\n  const [formTags, setFormTags] = useState('');\r\n  const [savedForms, setSavedForms] = useState([]); // Add state to store list of saved forms\r\n  const [selectedForm, setSelectedForm] = useState(''); // Add state to track selected form\r\n  const [selectedElement, setSelectedElement] = useState(null);\r\n  const [draftSettings, setDraftSettings] = useState(null);\r\n  const [draggingElement, setDraggingElement] = useState(null);\r\n  const formContainerRef = useRef(null);\r\n  const [selectedFileName, setSelectedFileName] = useState('');\r\n  const SUBMIT_BUTTON_ID = 'submit-button';\r\n  const [formToLoad, setFormToLoad] = useState(null); // Hold the form name to load after clearing\r\n  \r\n\r\nuseEffect(() => {\r\n  console.log('Form Elements Updated:', formElements);\r\n  const tableElement = formElements.find((el) => el.type === 'table');\r\n  if (tableElement) {\r\n    console.log('Table Element Found:', tableElement);\r\n    console.log('CSV Data in State:', tableElement.settings.csvData);\r\n  }\r\n}, [formElements]);\r\n\r\nuseEffect(() => {\r\n  if (!formElements.some(el => el.id === SUBMIT_BUTTON_ID)) {\r\n    addSubmitButton();\r\n  }\r\n}, [formElements]);\r\n\r\nuseEffect(() => {\r\n  loadSavedForms();\r\n}, []);\r\n\r\n\r\nconst loadSavedForms = async () => {\r\n  try {\r\n    const response = await fetch('http://localhost:5000/forms');\r\n    if (!response.ok) {\r\n      throw new Error(`Failed to fetch forms: ${response.status}`);\r\n    }\r\n    const data = await response.json();\r\n    const loadedForms = data.map(form => ({\r\n      id: form.id, // Ensure this is present\r\n      name: form.name // Ensure this is present\r\n    }));\r\n    setSavedForms(loadedForms); // Set the forms to state\r\n  } catch (error) {\r\n    console.error('Error loading forms:', error);\r\n  }\r\n};\r\n\r\n\r\nconst loadForm = async () => {\r\n  if (!selectedForm) {\r\n    alert('Please select a form to load.');\r\n    return;\r\n  }\r\n\r\n  try {\r\n    // Use the endpoint that searches by form name\r\n    const response = await fetch(`http://localhost:5000/forms/${encodeURIComponent(selectedForm)}`);\r\n    if (!response.ok) {\r\n      throw new Error(`Failed to load form: ${response.status}`);\r\n    }\r\n\r\n    const formData = await response.json();\r\n    const parser = new DOMParser();\r\n    const xmlDoc = parser.parseFromString(formData.xml_data, 'application/xml');\r\n    const loadedName = xmlDoc.querySelector('form > name')?.textContent || '';\r\n    const loadedLabel = xmlDoc.querySelector('form > label')?.textContent || '';\r\n    const loadedTags = Array.from(xmlDoc.querySelectorAll('form > tags > tag')).map(tag => tag.textContent);\r\n\r\n    const elements = Array.from(xmlDoc.querySelectorAll('elements > element')).map((el, index) => {\r\n      const type = el.querySelector('type')?.textContent || 'text';\r\n      const optionsNode = el.querySelector('dropdownOptions');\r\n      const options = optionsNode ? Array.from(optionsNode.querySelectorAll('option')).map(opt => opt.textContent) : [];\r\n\r\n      return {\r\n        id: `element-${Date.now()}-${index}`,\r\n        type,\r\n        key: el.querySelector('key')?.textContent || '',\r\n        label: el.querySelector('label')?.textContent || '',\r\n        required: el.querySelector('required')?.textContent === 'true',\r\n        alignment: el.querySelector('alignment')?.textContent || 'center',\r\n        settings: {\r\n          headerLevel: el.querySelector('headerLevel')?.textContent || 'h1',\r\n          placeholder: el.querySelector('placeholder')?.textContent || '',\r\n          dropdownOptions: options,\r\n        }\r\n      };\r\n    }).filter(el => el.type !== 'button'); // Exclude submit button\r\n\r\n    setFormName(loadedName);\r\n    setFormLabel(loadedLabel);\r\n    setFormTags(loadedTags.join(', '));\r\n    setFormElements(elements);\r\n\r\n    console.log(`Form \"${selectedForm}\" loaded successfully!`);\r\n  } catch (error) {\r\n    console.error('Error loading form:', error);\r\n    alert('Failed to load form data.');\r\n  }\r\n};\r\n\r\n\r\nconst addSubmitButton = () => {\r\n  setFormElements(prev => [\r\n    ...prev,\r\n    {\r\n      id: SUBMIT_BUTTON_ID,\r\n      type: 'button',\r\n      key: 'Submit',\r\n      label: 'Submit',\r\n      alignment: 'center',\r\n      required: false,\r\n      settings: {},\r\n    },\r\n  ]);\r\n};\r\n\r\n  const generateKey = (type) => {\r\n    const existingCount = formElements.filter((el) => el.type === type).length + 1;\r\n    return `${type} ${existingCount}`; // Example: \"inputText 1\"\r\n  };\r\n  \r\n  const addElement = (type) => {\r\n    const newKey = generateKey(type);\r\n    const newElement = {\r\n        id: Date.now().toString(),\r\n        type,\r\n        key: newKey,\r\n        label: type === 'heading' ? 'Heading' : type,\r\n        alignment: 'center',\r\n        settings: {\r\n            headerLevel: 'h1',\r\n            placeholder: type === 'email' ? 'Email Address' : type === 'password' ? 'Enter password' : 'Enter text here...',\r\n            useCurrentDate: false,\r\n            defaultBoolean: 'true',\r\n            dropdownOptions: [],\r\n            min: '',\r\n            max: '',\r\n            step: '',\r\n            defaultValue: '',\r\n            showPasswordOption: false,\r\n            passwordLength: '',\r\n            requireSymbols: false,\r\n            requireNumbers: false,\r\n            csvData: []\r\n        },\r\n        required: false,\r\n        textColor: '#ffffff',\r\n        fontFamily: 'Arial',\r\n    };\r\n\r\n    // Ensure new elements are added before the Submit button and prevent duplicates\r\n    setFormElements((prev) => {\r\n        // Check if an element of the same type already exists, if that's not desired\r\n        if (!prev.some((el) => el.type === type)) {\r\n            const submitIndex = prev.findIndex((el) => el.id === SUBMIT_BUTTON_ID);\r\n            const newFormElements = [...prev];\r\n            newFormElements.splice(submitIndex, 0, newElement); // Insert new element before the submit button\r\n            return newFormElements;\r\n        }\r\n        return prev;\r\n    });\r\n};\r\n\r\n  const isKeyUnique = (key) => {\r\n    return !formElements.some((el) => el.key === key && el.id !== selectedElement?.id);\r\n  };\r\n  const handleSubmit = () => {\r\n    const formData = formElements.filter(el => el.id !== SUBMIT_BUTTON_ID); // Exclude submit button from data\r\n    console.log('Form submitted:', formData);\r\n\r\n    // Example API call\r\n    fetch('/api/submit-form', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ elements: formData }),\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => console.log('Form submission response:', data))\r\n      .catch(error => console.error('Error submitting form:', error));\r\n  };\r\n\r\n  const handleImageUpload = (event, elementId) => {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        const imageSrc = e.target.result;\r\n        setFormElements((prev) =>\r\n          prev.map((el) =>\r\n            el.id === elementId\r\n              ? { ...el, settings: { ...el.settings, imageSrc } }\r\n              : el\r\n          )\r\n        );\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n  \r\n  const saveForm = async () => {\r\n    if (!formName) {\r\n      alert('Please enter a name for the form.');\r\n      return;\r\n    }\r\n  \r\n    const formData = {\r\n      name: formName,\r\n      label: formLabel,\r\n      tags: formTags ? formTags.split(',').map(tag => tag.trim()) : [],\r\n      elements: formElements, // Includes the populated csvData\r\n    };\r\n  \r\n    // Convert form data to XML\r\n    const convertToXML = (obj) => {\r\n      let xml = '';\r\n      for (let key in obj) {\r\n        if (Array.isArray(obj[key])) {\r\n          xml += `<${key}>`;\r\n          obj[key].forEach((element) => {\r\n            if (Array.isArray(element)) {\r\n              // Handle CSV data as rows and cells\r\n              xml += '<row>';\r\n              element.forEach((cell) => {\r\n                xml += `<cell>${cell}</cell>`;\r\n              });\r\n              xml += '</row>';\r\n            } else {\r\n              xml += `<element>${convertToXML(element)}</element>`;\r\n            }\r\n          });\r\n          xml += `</${key}>`;\r\n        } else if (typeof obj[key] === 'object') {\r\n          xml += `<${key}>${convertToXML(obj[key])}</${key}>`;\r\n        } else {\r\n          xml += `<${key}>${obj[key]}</${key}>`;\r\n        }\r\n      }\r\n      return xml;\r\n    };\r\n  \r\n    const xmlData = `<form>${convertToXML(formData)}</form>`;\r\n  \r\n    // Send form data to backend\r\n    try {\r\n      const response = await fetch('http://localhost:5000/save_form', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          name: formName,\r\n          label: formLabel,\r\n          tags: formTags ? formTags.split(',').map(tag => tag.trim()) : [],\r\n          elements: formElements,\r\n          xmlData: xmlData, // Include XML data in the request\r\n        }),\r\n      });\r\n  \r\n      if (!response.ok) {\r\n        throw new Error(`Failed to save form: ${response.status} ${response.statusText}`);\r\n      }\r\n  \r\n      alert(`Form \"${formName}\" saved successfully!`);\r\n      localStorage.setItem(formName, xmlData); // Optional: save XML to local storage\r\n  \r\n      // Refresh saved forms after saving\r\n      loadSavedForms();\r\n  \r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      alert(`Error saving form: ${error.message}`);\r\n    }\r\n  };\r\n\r\n  const removeElement = (id) => {\r\n    if (id === SUBMIT_BUTTON_ID) return; // Prevent deletion of the Submit button\r\n    setFormElements(prev => prev.filter(el => el.id !== id));\r\n    if (selectedElement?.id === id) {\r\n      setSelectedElement(null);\r\n    }\r\n  };\r\n\r\n  const handleEditClick = (element) => {\r\n    setSelectedElement(element);\r\n    setDraftSettings({\r\n        ...element.settings,\r\n        key: element.key || '',\r\n        label: element.label,\r\n        alignment: element.alignment,\r\n        required: element.required,\r\n        placeholder: element.settings?.placeholder,\r\n        csvData: element.settings?.csvData || [], // Ensure csvData is included\r\n    });\r\n};\r\n \r\n  const applyDraftChanges = () => {\r\n    if (selectedElement && draftSettings) {\r\n        console.log('Applying draft changes:', { selectedElement, draftSettings });\r\n\r\n        if (isKeyUnique(draftSettings.key)) {\r\n            updateElementSettings(selectedElement.id, {\r\n                ...selectedElement,\r\n                ...draftSettings,\r\n                settings: {\r\n                    ...selectedElement.settings,\r\n                    ...draftSettings,\r\n                    csvData: draftSettings.csvData !== undefined\r\n                        ? draftSettings.csvData\r\n                        : selectedElement.settings.csvData, // Preserve csvData if not in draftSettings\r\n                },\r\n            });\r\n\r\n            console.log('Updated element:', selectedElement);\r\n            setSelectedElement(null);\r\n            setDraftSettings(null);\r\n        } else {\r\n            alert('The key must be unique. Please choose another.');\r\n        }\r\n    }\r\n};\r\n\r\nconst handleDraftChange = (key, value) => {\r\n  setDraftSettings((prev) => ({ ...prev, [key]: value }));\r\n  applyDraftChanges();\r\n};\r\n\r\n\r\n  const cancelChanges = () => {\r\n    setSelectedElement(null);\r\n    setDraftSettings(null);\r\n  };\r\n\r\n  const updateElementSettings = (id, newSettings) => {\r\n    console.log('Updating element settings for ID:', id);\r\n    console.log('New settings before merge:', newSettings);\r\n\r\n    setFormElements((prev) =>\r\n        prev.map((el) =>\r\n            el.id === id.toString()\r\n                ? {\r\n                    ...el,\r\n                    ...newSettings,\r\n                    settings: {\r\n                        ...el.settings,\r\n                        ...newSettings,\r\n                        csvData: newSettings.csvData !== undefined\r\n                            ? newSettings.csvData\r\n                            : el.settings.csvData, // Preserve existing csvData if not overwritten\r\n                    },\r\n                }\r\n                : el\r\n        )\r\n    );\r\n\r\n    console.log('Updated form elements:', formElements);\r\n};\r\n\r\n  \r\n  const handleDragStart = ({ active }) => {\r\n    setDraggingElement(active.id);\r\n  };\r\n\r\n  const handleDragEnd = ({ active, over }) => {\r\n    if (over && active.id !== over.id) {\r\n      const oldIndex = formElements.findIndex((el) => el.id === active.id);\r\n      const newIndex = formElements.findIndex((el) => el.id === over.id);\r\n      setFormElements((prev) => arrayMove(prev, oldIndex, newIndex));\r\n    }\r\n    setDraggingElement(null);\r\n  };\r\n\r\n  const handleCSVUpload = (event, elementId) => {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      if (!file.name.endsWith('.csv')) {\r\n        alert('Please upload a valid .csv file.');\r\n        return;\r\n      }\r\n      Papa.parse(file, {\r\n        complete: (result) => {\r\n          const csvData = result.data;\r\n          console.log('Parsed CSV Data:', csvData);\r\n  \r\n          setFormElements((prev) =>\r\n            prev.map((el) =>\r\n              el.id === elementId\r\n                ? {\r\n                    ...el,\r\n                    csvData, // Update the csvData property\r\n                    settings: { ...el.settings, csvData }\r\n                  }\r\n                : el\r\n            )\r\n          );\r\n        },\r\n        header: false, // Adjust as needed\r\n      });\r\n    }\r\n  };\r\n  \r\n  const handleResetForm = () => {\r\n    if (window.confirm('Are you sure you want to reset the form?')) {\r\n      setFormElements([]);\r\n    }\r\n  };\r\n\r\n  const validatePassword = (password, settings) => {\r\n    if (settings?.passwordLength && password.length < settings.passwordLength) {\r\n      return false;\r\n    }\r\n    if (settings?.requireSymbols && !/[!@#$%^&*(),.?\":{}|<>]/.test(password)) {\r\n      return false;\r\n    }\r\n    if (settings?.requireNumbers && !/[0-9]/.test(password)) {\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const renderElementContent = (element) => {\r\n    const isBeingEdited = selectedElement?.id === element.id;\r\n    const settings = isBeingEdited ? draftSettings : element.settings;\r\n  \r\n    const alignmentStyle = {\r\n      textAlign: settings?.alignment || 'center',\r\n    };\r\n  \r\n    // Use the element key as the default label if the label isn't set\r\n    // const displayLabel = settings?.label || element.key || element.label;\r\n    const wrapperStyle = {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: settings?.alignment === 'left' ? 'flex-start' : settings?.alignment === 'right' ? 'flex-end' : 'center',\r\n      width: '100%',\r\n      marginBottom: '10px',\r\n    };\r\n\r\n    switch (element.type) {\r\n      case 'heading': {\r\n        const HeaderTag = settings?.headerLevel || 'h1';\r\n        const alignmentStyle = { \r\n          textAlign: settings?.alignment || 'center', \r\n          width: '100%', \r\n          margin: '0 auto'  // Ensures it's centered\r\n        };\r\n      \r\n        return (\r\n          <div style={{ display: 'flex', justifyContent: 'center', width: '100%' }}>\r\n            <HeaderTag style={alignmentStyle}>\r\n              {settings?.label || element.label}\r\n            </HeaderTag>\r\n          </div>\r\n        );\r\n      }      \r\n      case 'text':\r\n        return <p style={alignmentStyle}>{settings.label}</p>;\r\n      case 'button':\r\n        return (\r\n          <div style={{ display: 'flex', justifyContent: element.alignment || 'center', width: '100%' }}>\r\n            <button\r\n              onClick={element.id === SUBMIT_BUTTON_ID ? handleSubmit : undefined} // Submit button triggers API\r\n              className=\"custom-button\"\r\n              style={{ padding: '10px 20px', borderRadius: '6px', margin: '5px', backgroundColor: '#007bff', color: 'white' }}\r\n            >\r\n              {element.label}\r\n            </button>\r\n          </div>\r\n        );\r\n      case 'inputText':\r\n        return (\r\n        <div style={wrapperStyle}>\r\n          {settings?.label && <label>{settings.label}</label>}\r\n          <input\r\n              type=\"text\"\r\n              placeholder={settings?.placeholder || ''}\r\n              required={settings?.required}\r\n              style={{\r\n                borderRadius: '8px',\r\n                padding: '10px',\r\n                border: '1px solid #ced4da',\r\n                textAlign: 'center',\r\n              }}\r\n            />\r\n          </div>\r\n        );\r\n      case 'email':\r\n        return (\r\n        <div style={wrapperStyle}>\r\n          {settings?.label && <label>{settings.label}</label>}\r\n            <input\r\n              type=\"email\"\r\n              placeholder={settings?.placeholder || ''}\r\n              required={settings?.required}\r\n              style={{\r\n                borderRadius: '8px',\r\n                padding: '10px',\r\n                border: settings?.isValid === false ? '2px solid #ff0000' : '1px solid #ced4da',\r\n                boxShadow: settings?.isValid === false ? '0 0 5px #ff0000' : 'none',\r\n                textAlign: 'center'\r\n              }}\r\n              onBlur={(e) => {\r\n                if (e.target.value.trim() !== '') {\r\n                  const isValid = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(e.target.value);\r\n                  updateElementSettings(element.id, { ...settings, isValid });\r\n                }\r\n              }}\r\n            />\r\n            {!settings?.isValid && settings?.isValid !== undefined && (\r\n              <span style={{ color: '#ff0000', fontSize: '0.8em', marginTop: '5px' }}>Invalid email address</span>\r\n            )}\r\n          </div>\r\n        );\r\n      case 'divider':\r\n        return <hr style={{ ...alignmentStyle, width: '100%' }} />;\r\n      case 'image':\r\n          return (\r\n            <div style={wrapperStyle}>\r\n          {settings?.label && <label>{settings.label}</label>}              <label className=\"custom-file-label\">\r\n                Choose Image\r\n                <input\r\n                  type=\"file\"\r\n                  className=\"custom-file-input\"\r\n                  accept=\"image/*\"\r\n                  onChange={(e) => handleImageUpload(e, element.id)}\r\n                />\r\n              </label>\r\n              {settings?.imageSrc ? (\r\n                <img\r\n                  src={settings.imageSrc}\r\n                  alt=\"Uploaded\"\r\n                  style={{ maxWidth: '100%', height: 'auto', borderRadius: '8px', marginTop: '10px' }}\r\n                />\r\n              ) : (\r\n                <img\r\n                  src=\"https://via.placeholder.com/150\"\r\n                  alt=\"Placeholder\"\r\n                  style={{ maxWidth: '100%', height: 'auto', borderRadius: '8px', marginTop: '10px' }}\r\n                />\r\n              )}\r\n            </div>\r\n          );       \r\n      case 'file':\r\n          return (\r\n          <div style={wrapperStyle}>\r\n          {settings?.label && <label>{settings.label}</label>}\r\n              <label className=\"custom-file-label\">\r\n                Upload File\r\n                <input\r\n                  type=\"file\"\r\n                  className=\"custom-file-input\"\r\n                  onChange={(e) => handleCSVUpload(e, element.id)}\r\n                  accept=\".csv\"\r\n                />\r\n              </label>\r\n              <span className=\"file-name\">No file chosen</span>\r\n            </div>\r\n          );\r\n      case 'table':\r\n          const tableData = element.settings?.csvData || [];\r\n          console.log('Rendering Table with Data:', tableData);\r\n    \r\n          return (\r\n            <div style={wrapperStyle}>\r\n          {settings?.label && <label>{settings.label}</label>}<div>\r\n                {/* Styled file input and label */}\r\n                <div style={{ marginBottom: '10px' }}>\r\n                  <input\r\n                    type=\"file\"\r\n                    accept=\".csv\"\r\n                    id={`file-upload-${element.id}`}\r\n                    onChange={(e) => handleCSVUpload(e, element.id)}\r\n                    style={{ display: 'none' }} // Hide default input\r\n                  />\r\n                  <label\r\n                    htmlFor={`file-upload-${element.id}`}\r\n                    style={{\r\n                      backgroundColor: '#007bff',\r\n                      color: 'white',\r\n                      padding: '10px 20px',\r\n                      borderRadius: '6px',\r\n                      cursor: 'pointer',\r\n                      display: 'inline-block',\r\n                    }}\r\n                  >\r\n                    Upload CSV File\r\n                  </label>\r\n                  <span style={{ marginLeft: '10px' }}>\r\n                    {selectedFileName || 'No file chosen'}\r\n                  </span>\r\n                </div>\r\n    \r\n                <table style={{ margin: '0 auto', borderCollapse: 'collapse', width: '100%' }}>\r\n                  <tbody>\r\n                    {tableData.length > 0 ? (\r\n                      tableData.map((row, rowIndex) => (\r\n                        <tr key={`row-${rowIndex}`}>\r\n                          {row.map((cell, cellIndex) => (\r\n                            <td\r\n                              key={`cell-${rowIndex}-${cellIndex}`}\r\n                              style={{ border: '1px solid #ddd', padding: '8px' }}\r\n                            >\r\n                              {cell}\r\n                            </td>\r\n                          ))}\r\n                        </tr>\r\n                      ))\r\n                    ) : (\r\n                      <tr>\r\n                        <td style={{ textAlign: 'center' }}>No Data Available</td>\r\n                      </tr>\r\n                    )}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          );\r\n      case 'dateTime':\r\n      return (\r\n        <div style={wrapperStyle}>\r\n          {settings?.label && <label>{settings.label}</label>}\r\n           {settings?.useCurrentDate ? (\r\n\r\n            <input\r\n              type=\"text\"\r\n              value={new Date().toLocaleDateString('en-US')}\r\n              readOnly\r\n              style={{\r\n                borderRadius: '8px',\r\n                padding: '10px',\r\n                border: '1px solid #ced4da',\r\n                textAlign: 'center'\r\n              }}\r\n            />\r\n          ) : (\r\n            <input\r\n              type=\"date\"\r\n              style={{\r\n                borderRadius: '8px',\r\n                padding: '10px',\r\n                border: '1px solid #ced4da',\r\n                textAlign: 'center'\r\n              }}\r\n            />\r\n          )}\r\n        </div>\r\n      );    \r\n      case 'dropdown':\r\n        return (\r\n          <div style={wrapperStyle}>\r\n          {settings?.label && <label>{settings.label}</label>}\r\n          <select\r\n              style={{\r\n                borderRadius: '8px',\r\n                padding: '10px',\r\n                border: '1px solid #ced4da',\r\n                textAlign: 'center',\r\n              }}\r\n            >\r\n              <option value=\"\">Select an option</option>\r\n              {settings?.dropdownOptions?.map((option, idx) => (\r\n                <option key={idx} value={option}>\r\n                  {option}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        );    \r\n      case 'boolean':\r\n        return (\r\n        <div style={wrapperStyle}>\r\n          {settings?.label && <label>{settings.label}</label>}\r\n            <select\r\n              value={settings?.defaultBoolean || 'true'}\r\n              onChange={(e) => updateElementSettings(element.id, { ...settings, defaultBoolean: e.target.value })}\r\n              style={{\r\n                borderRadius: '8px',\r\n                padding: '10px',\r\n                border: '1px solid #ced4da',\r\n                textAlign: 'center'\r\n              }}\r\n            >\r\n              <option value=\"true\">True</option>\r\n              <option value=\"false\">False</option>\r\n            </select>\r\n          </div>\r\n        );      \r\n      case 'number':\r\n        return (\r\n        <div style={wrapperStyle}>\r\n          {settings?.label && <label>{settings.label}</label>}\r\n            <input\r\n              type=\"number\"\r\n              min={settings?.min}\r\n              max={settings?.max}\r\n              step={settings?.step}\r\n              defaultValue={settings?.defaultValue}\r\n              required={settings?.required}\r\n              style={{\r\n                borderRadius: '8px',\r\n                padding: '10px',\r\n                border: '1px solid #ced4da',\r\n                textAlign: 'center'\r\n              }}\r\n            />\r\n          </div>\r\n        );\r\n      case 'password':\r\n      return (\r\n        <div\r\n          style={{\r\n            width: '100%',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: settings?.alignment === 'left' ? 'flex-start' : settings?.alignment === 'right' ? 'flex-end' : 'center',\r\n            justifyContent: 'center',\r\n          }}\r\n        >\r\n          {/* Password Input Field and Show Password Option */}\r\n          <div style={wrapperStyle}>\r\n          {settings?.label && <label>{settings.label}</label>}<input\r\n              type={settings?.showPasswordOption && settings?.showPassword ? 'text' : 'password'}\r\n              placeholder={settings?.placeholder || 'Enter password'}\r\n              required={settings?.required}\r\n              onBlur={(e) => {\r\n                const isValid = validatePassword(e.target.value, settings);\r\n                updateElementSettings(element.id, { ...settings, isValid });\r\n              }}\r\n              style={{\r\n                borderRadius: '8px',\r\n                padding: '10px',\r\n                width: '300px', // Adjust the width as needed\r\n                border: settings?.isValid === false ? '2px solid #ff0000' : '1px solid #ced4da',\r\n                textAlign: 'left', // Ensures the placeholder text stays aligned left\r\n                marginRight: '10px',\r\n              }}\r\n            />\r\n            {settings?.showPasswordOption && (\r\n              <label style={{ display: 'flex', alignItems: 'center', marginLeft: '10px' }}>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={settings?.showPassword || false}\r\n                  onChange={(e) => updateElementSettings(element.id, { ...settings, showPassword: e.target.checked })}\r\n                  style={{ marginRight: '5px' }}\r\n                />\r\n                Show Password\r\n              </label>\r\n            )}\r\n          </div>\r\n          {/* Password Requirements */}\r\n          <div style={{ marginTop: '10px', textAlign: settings?.alignment || 'center', width: '100%', display: 'flex', flexDirection: 'column', alignItems: settings?.alignment === 'left' ? 'flex-start' : settings?.alignment === 'right' ? 'flex-end' : 'center' }}>\r\n            {settings?.passwordLength && <p style={{ marginBottom: '5px' }}>Requires Minimum Length: {settings.passwordLength}</p>}\r\n            {settings?.requireSymbols && <p style={{ marginBottom: '5px' }}>Requires Symbols: Yes</p>}\r\n            {settings?.requireNumbers && <p>Requires Numbers: Yes</p>}\r\n          </div>\r\n          {/* Validation Error */}\r\n          {!settings?.isValid && settings?.isValid !== undefined && (\r\n            <span style={{ color: '#ff0000', fontSize: '0.8em', marginTop: '5px' }}>Password does not meet requirements</span>\r\n          )}\r\n        </div>\r\n      );\r\n      default:\r\n        return (\r\n          <input\r\n            type={element.type}\r\n            placeholder={settings?.placeholder ||''}\r\n            required={settings?.required}\r\n            style={alignmentStyle}\r\n          />\r\n        );\r\n    }\r\n  };\r\n  \r\n  const areRequiredFieldsFilled = () => {\r\n    return formElements.every((el) => {\r\n      if (el.required) {\r\n        return el.settings.label && el.settings.label.trim() !== '';\r\n      }\r\n      return true;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-builder-container\" style={{ height: '100vh', overflow: 'hidden' }}>\r\n<div className=\"sidebar\">\r\n\r\n\r\n  {/* Form Name Input */}\r\n  <div className=\"form-name-section\" style={{ marginBottom: '20px' }}>\r\n    <label htmlFor=\"form-name\" className=\"sidebar-label\">Form Name:</label>\r\n    <input\r\n      id=\"form-name\"\r\n      type=\"text\"\r\n      value={formName}\r\n      onChange={(e) => setFormName(e.target.value)}\r\n      placeholder=\"Enter form name\"\r\n      className=\"form-input\"\r\n    />\r\n  </div>\r\n\r\n  {/* Label Input (Required) */}\r\n  <div className=\"form-label-section\" style={{ marginBottom: '20px' }}>\r\n    <label htmlFor=\"form-label\" className=\"sidebar-label\">Label (Required):</label>\r\n    <input\r\n      id=\"form-label\"\r\n      type=\"text\"\r\n      value={formLabel}\r\n      onChange={(e) => setFormLabel(e.target.value)}\r\n      placeholder=\"Enter form label\"\r\n      className=\"form-input\"\r\n    />\r\n  </div>\r\n\r\n  <div className=\"element-input-wrapper\" style={{ display: 'flex', gap: '10px' }}>\r\n    <div className=\"element-selector\">\r\n      <h4>Elements</h4>\r\n      {ELEMENT_TYPES.map((element) => (\r\n        <button\r\n          key={element.id}\r\n          onClick={() => addElement(element.id)}\r\n          className=\"element-button\"\r\n        >\r\n          {element.label}\r\n        </button>\r\n      ))}\r\n    </div>\r\n\r\n    <div className=\"input-selector\">\r\n      <h4>Input Fields</h4>\r\n      {INPUT_FIELDS.map((input) => (\r\n        <button\r\n          key={input.id}\r\n          onClick={() => addElement(input.id)}\r\n          className=\"input-button\"\r\n        >\r\n          {input.label}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  </div>\r\n  <div className=\"load-section\" style={{ marginBottom: '20px' }}>\r\n  <label htmlFor=\"saved-forms\" className=\"sidebar-label\">Load Saved Form:</label>\r\n  <select\r\n    id=\"saved-forms\"\r\n    value={selectedForm}\r\n    onChange={(e) => setSelectedForm(e.target.value)}\r\n    className=\"sidebar-select\"\r\n  >\r\n    <option value=\"\">-- Select a Form --</option>\r\n    {savedForms.map((form) => (\r\n      <option key={form.id} value={form.name}> {/* Ensure you're using form.name */}\r\n        {form.name} {/* This should render a string */}\r\n      </option>\r\n    ))}\r\n  </select>\r\n  <button onClick={loadForm} className=\"load-form-button\">Load Form</button>\r\n</div>\r\n  <button onClick={saveForm} className=\"save-form-button\">Save Form</button>\r\n  <button onClick={handleResetForm} className=\"reset-form-button\">Reset Form</button>\r\n</div>\r\n\r\n\r\n      <div className=\"form-builder\" ref={formContainerRef} style={{ height: '100%', overflowY: 'auto' }}>\r\n        <DndContext\r\n          collisionDetection={closestCenter}\r\n          onDragEnd={handleDragEnd}\r\n          onDragStart={handleDragStart}\r\n        >\r\n          <SortableContext items={formElements} strategy={rectSortingStrategy}>\r\n            <div className=\"form-preview\">\r\n              {formElements.map((element) => (\r\n                <SortableFormElement\r\n                  key={element.id}\r\n                  element={element}\r\n                  handleEditClick={handleEditClick}\r\n                  renderElementContent={renderElementContent}\r\n                />\r\n              ))}\r\n            </div>\r\n          </SortableContext>\r\n          {draggingElement && (\r\n            <DragOverlay>\r\n              <div className=\"dragging-overlay\">Dragging</div>\r\n            </DragOverlay>\r\n          )}\r\n        </DndContext>\r\n      </div>\r\n\r\n      {selectedElement && (\r\n  <div className=\"element-editor\">\r\n    <div className=\"element-editor-header\">\r\n    <h3>Edit Element</h3>\r\n      <button\r\n        onClick={() => {\r\n          if (window.confirm('Are you sure you want to delete this element?')) {\r\n            removeElement(selectedElement.id);\r\n          }\r\n        }}\r\n        className=\"delete-element\"\r\n      >\r\n        X\r\n      </button>\r\n    </div>\r\n          <label>\r\n          Key:\r\n          <input\r\n            type=\"text\"\r\n            value={draftSettings?.key || ''}\r\n            oonChange={(e) => handleDraftChange('placeholder', e.target.value)}\r\n           />\r\n          </label>\r\n          <label>\r\n            Label:\r\n            <input\r\n              type=\"text\"\r\n              value={draftSettings?.label || ''}\r\n              onChange={(e) =>\r\n                setDraftSettings((prev) => ({ ...prev, label: e.target.value }))\r\n              }\r\n            />\r\n          </label>\r\n          {selectedElement.type === 'heading' && (\r\n            <label>\r\n              Header Level:\r\n              <select\r\n                value={draftSettings?.headerLevel || 'h1'}\r\n                onChange={(e) =>\r\n                  setDraftSettings((prev) => ({\r\n                    ...prev,\r\n                    headerLevel: e.target.value,\r\n                  }))\r\n                }\r\n              >\r\n                <option value=\"h1\">H1</option>\r\n                <option value=\"h2\">H2</option>\r\n                <option value=\"h3\">H3</option>\r\n                <option value=\"h4\">H4</option>\r\n                <option value=\"h5\">H5</option>\r\n                <option value=\"h6\">H6</option>\r\n              </select>\r\n            </label>\r\n          )}\r\n          <label>\r\n            Alignment:\r\n            <select\r\n              value={draftSettings?.alignment || 'center'}\r\n              onChange={(e) =>\r\n                setDraftSettings((prev) => ({ ...prev, alignment: e.target.value }))\r\n              }\r\n            >\r\n              <option value=\"left\">Left</option>\r\n              <option value=\"center\">Center</option>\r\n              <option value=\"right\">Right</option>\r\n            </select>\r\n          </label>\r\n          {(selectedElement.type === 'inputText' || selectedElement.type === 'email') && (\r\n            <label>\r\n              Placeholder Text:\r\n              <input\r\n                type=\"text\"\r\n                value={draftSettings?.placeholder || ''}\r\n                onChange={(e) =>\r\n                  setDraftSettings((prev) => ({ ...prev, placeholder: e.target.value }))\r\n                }\r\n              />\r\n            </label>\r\n          )}\r\n          {selectedElement.type === 'dateTime' && (\r\n            <label>\r\n              Use Current Date:\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={draftSettings?.useCurrentDate || false}\r\n                onChange={(e) =>\r\n                  setDraftSettings((prev) => ({ ...prev, useCurrentDate: e.target.checked }))\r\n                }\r\n              />\r\n            </label>\r\n          )}\r\n          {selectedElement.type === 'dropdown' && (\r\n          <>\r\n            <label>Dropdown Options:</label>\r\n            {draftSettings?.dropdownOptions?.map((option, idx) => (\r\n              <div key={idx} style={{ display: 'flex', alignItems: 'center' }}>\r\n                <input\r\n                  type=\"text\"\r\n                  value={option}\r\n                  onChange={(e) =>\r\n                    setDraftSettings((prev) => {\r\n                      const updatedOptions = [...prev.dropdownOptions];\r\n                      updatedOptions[idx] = e.target.value;\r\n                      return { ...prev, dropdownOptions: updatedOptions };\r\n                    })\r\n                  }\r\n                />\r\n                <button\r\n                  onClick={() =>\r\n                    setDraftSettings((prev) => ({\r\n                      ...prev,\r\n                      dropdownOptions: prev.dropdownOptions.filter((_, i) => i !== idx),\r\n                    }))\r\n                  }\r\n                  style={{\r\n                    marginLeft: '10px',\r\n                    padding: '5px 10px',\r\n                    color: 'white',\r\n                    backgroundColor: 'red',\r\n                    borderRadius: '4px',\r\n                    cursor: 'pointer',\r\n                  }}\r\n                >\r\n                 X\r\n                </button>\r\n              </div>\r\n            ))}\r\n<button\r\n  onClick={() =>\r\n    setDraftSettings((prev) => ({\r\n      ...prev,\r\n      dropdownOptions: [...(prev.dropdownOptions || []), ''],\r\n    }))\r\n  }\r\n  className=\"add-option-button\"\r\n>\r\n  +\r\n</button>\r\n\r\n          </>\r\n        )}\r\n\r\n          {selectedElement.type === 'boolean' && (\r\n            <label>\r\n              Default Boolean Value:\r\n              <select\r\n                value={draftSettings?.defaultBoolean || 'true'}\r\n                onChange={(e) =>\r\n                  setDraftSettings((prev) => ({ ...prev, defaultBoolean: e.target.value }))\r\n                }\r\n              >\r\n                <option value=\"true\">True</option>\r\n                <option value=\"false\">False</option>\r\n              </select>\r\n            </label>\r\n          )}\r\n          {selectedElement.type === 'number' && (\r\n            <>\r\n              <label>\r\n                Minimum Value:\r\n                <input\r\n                  type=\"number\"\r\n                  value={draftSettings?.min || ''}\r\n                  onChange={(e) =>\r\n                    setDraftSettings((prev) => ({ ...prev, min: e.target.value }))\r\n                  }\r\n                />\r\n              </label>\r\n              <label>\r\n                Maximum Value:\r\n                <input\r\n                  type=\"number\"\r\n                  value={draftSettings?.max || ''}\r\n                  onChange={(e) =>\r\n                    setDraftSettings((prev) => ({ ...prev, max: e.target.value }))\r\n                  }\r\n                />\r\n              </label>\r\n              <label>\r\n                Step Value:\r\n                <input\r\n                  type=\"number\"\r\n                  value={draftSettings?.step || ''}\r\n                  onChange={(e) =>\r\n                    setDraftSettings((prev) => ({ ...prev, step: e.target.value }))\r\n                  }\r\n                />\r\n              </label>\r\n              <label>\r\n                Default Value:\r\n                <input\r\n                  type=\"number\"\r\n                  value={draftSettings?.defaultValue || ''}\r\n                  onChange={(e) =>\r\n                    setDraftSettings((prev) => ({ ...prev, defaultValue: e.target.value }))\r\n                  }\r\n                />\r\n              </label>\r\n            </>\r\n          )}\r\n          {selectedElement.type === 'password' && (\r\n            <>\r\n              <label>\r\n                Show Password Option:\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={draftSettings?.showPasswordOption || false}\r\n                  onChange={(e) =>\r\n                    setDraftSettings((prev) => ({\r\n                      ...prev,\r\n                      showPasswordOption: e.target.checked,\r\n                    }))\r\n                  }\r\n                />\r\n              </label>\r\n              <label>\r\n                Minimum Password Length:\r\n                <input\r\n                  type=\"number\"\r\n                  value={draftSettings?.passwordLength || ''}\r\n                  onChange={(e) =>\r\n                    setDraftSettings((prev) => ({\r\n                      ...prev,\r\n                      passwordLength: e.target.value,\r\n                    }))\r\n                  }\r\n                />\r\n              </label>\r\n              <label>\r\n                Requires Symbols:\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={draftSettings?.requireSymbols || false}\r\n                  onChange={(e) =>\r\n                    setDraftSettings((prev) => ({\r\n                      ...prev,\r\n                      requireSymbols: e.target.checked,\r\n                    }))\r\n                  }\r\n                />\r\n              </label>\r\n              <label>\r\n                Requires Numbers:\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={draftSettings?.requireNumbers || false}\r\n                  onChange={(e) =>\r\n                    setDraftSettings((prev) => ({\r\n                      ...prev,\r\n                      requireNumbers: e.target.checked,\r\n                    }))\r\n                  }\r\n                />\r\n              </label>\r\n            </>\r\n          )}\r\n\r\n          <button\r\n            onClick={cancelChanges}\r\n            className=\"cancel-button custom-button\"\r\n            style={{\r\n              backgroundColor: '#6c757d',\r\n              color: 'white',\r\n              border: 'none',\r\n              padding: '10px 20px',\r\n              textAlign: 'center',\r\n              fontSize: '16px',\r\n              cursor: 'pointer',\r\n              margin: '5px',\r\n              borderRadius: '6px'\r\n            }}\r\n          >\r\n            Cancel\r\n          </button>      \r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SortableFormElement = ({ element, handleEditClick, renderElementContent }) => {\r\n  const { attributes, listeners, setNodeRef, transform, transition } = useSortable({\r\n    id: element.id,\r\n  });\r\n\r\n  const style = {\r\n    transform: transform ? `translate3d(${transform.x}px, ${transform.y}px, 0)` : undefined,\r\n    transition,\r\n    backgroundColor: element.settings?.backgroundColor || 'inherit',\r\n  };\r\n\r\n  return (\r\n    <div\r\n      ref={setNodeRef}\r\n      style={style}\r\n      className=\"form-element\"\r\n      onClick={() => handleEditClick(element)}\r\n    >\r\n      {renderElementContent(element)}\r\n      <button\r\n        className=\"drag-handle\"\r\n        {...listeners}\r\n        {...attributes}\r\n        onMouseDown={(e) => e.stopPropagation()}\r\n      >\r\n        Drag\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormBuilder;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}