{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abarbas\\\\Desktop\\\\soar_web_forms\\\\src\\\\components\\\\FormBuilder.js\",\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { DndContext, DragOverlay, closestCenter } from '@dnd-kit/core';\nimport { arrayMove, SortableContext, useSortable, rectSortingStrategy } from '@dnd-kit/sortable';\nimport Papa from 'papaparse';\nimport './FormBuilder.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ELEMENT_TYPES = [{\n  id: 'heading',\n  label: 'Heading'\n}, {\n  id: 'text',\n  label: 'Text'\n}, {\n  id: 'divider',\n  label: 'Divider'\n},\n//{ id: 'button', label: 'Button' },\n//{ id: 'image', label: 'Image' },\n{\n  id: 'table',\n  label: 'Table'\n}];\nconst INPUT_FIELDS = [{\n  id: 'inputText',\n  label: 'Input Text',\n  type: 'text'\n}, {\n  id: 'email',\n  label: 'Email',\n  type: 'email'\n},\n//{ id: 'password', label: 'Password', type: 'password' }, \n{\n  id: 'dateTime',\n  label: 'Date or Time',\n  type: 'datetime-local'\n}, {\n  id: 'dropdown',\n  label: 'Dropdown',\n  type: 'dropdown'\n}, {\n  id: 'boolean',\n  label: 'Boolean',\n  type: 'dropdown'\n}, {\n  id: 'number',\n  label: 'Number',\n  type: 'number'\n}, {\n  id: 'file',\n  label: 'File Upload',\n  type: 'file'\n}];\nconst FormBuilder = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [formElements, setFormElements] = useState([]);\n  const [formName, setFormName] = useState('');\n  const [formLabel, setFormLabel] = useState('');\n  const [formTags, setFormTags] = useState('');\n  const [savedForms, setSavedForms] = useState([]); // Add state to store list of saved forms\n  const [selectedForm, setSelectedForm] = useState(''); // Add state to track selected form\n  const [selectedElement, setSelectedElement] = useState(null);\n  const [draftSettings, setDraftSettings] = useState(null);\n  const [draggingElement, setDraggingElement] = useState(null);\n  const formContainerRef = useRef(null);\n  const [selectedFileName, setSelectedFileName] = useState('');\n  const SUBMIT_BUTTON_ID = 'submit-button';\n  const [formToLoad, setFormToLoad] = useState(null); // Hold the form name to load after clearing\n\n  const EditElement = ({\n    selectedElement,\n    setSelectedElement,\n    draftSettings,\n    setDraftSettings,\n    updateElementSettings,\n    removeElement\n  }) => {\n    _s();\n    const editorRef = useRef(null);\n    useEffect(() => {\n      const handleClickOutside = event => {\n        if (editorRef.current && !editorRef.current.contains(event.target)) {\n          setSelectedElement(null); // Close editor when clicking outside\n        }\n      };\n      document.addEventListener('mousedown', handleClickOutside);\n      return () => {\n        document.removeEventListener('mousedown', handleClickOutside);\n      };\n    }, [setSelectedElement]);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: editorRef,\n      className: \"element-editor\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"element-editor-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Edit Element\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            if (window.confirm('Are you sure you want to delete this element?')) {\n              removeElement(selectedElement.id);\n            }\n          },\n          className: \"delete-element\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Key:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: (draftSettings === null || draftSettings === void 0 ? void 0 : draftSettings.key) || '',\n          onChange: e => {\n            const updatedKey = e.target.value;\n            setDraftSettings(prev => ({\n              ...prev,\n              key: updatedKey\n            }));\n            updateElementSettings(selectedElement.id, {\n              ...draftSettings,\n              key: updatedKey\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Label:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: (draftSettings === null || draftSettings === void 0 ? void 0 : draftSettings.label) || '',\n          onChange: e => {\n            const updatedLabel = e.target.value;\n            setDraftSettings(prev => ({\n              ...prev,\n              label: updatedLabel\n            }));\n            updateElementSettings(selectedElement.id, {\n              ...draftSettings,\n              label: updatedLabel\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this);\n  };\n  _s(EditElement, \"FXGU5sRik9TpAO5B+Yli91RwFDk=\");\n  useEffect(() => {\n    console.log('Form Elements Updated:', formElements);\n    const tableElement = formElements.find(el => el.type === 'table');\n    if (tableElement) {\n      console.log('Table Element Found:', tableElement);\n      console.log('CSV Data in State:', tableElement.settings.csvData);\n    }\n  }, [formElements]);\n  useEffect(() => {\n    if (!formElements.some(el => el.id === SUBMIT_BUTTON_ID)) {\n      addSubmitButton();\n    }\n  }, [formElements]);\n  useEffect(() => {\n    loadSavedForms();\n  }, []);\n  const loadSavedForms = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/forms');\n      if (!response.ok) {\n        throw new Error(`Failed to fetch forms: ${response.status}`);\n      }\n      const data = await response.json();\n      const loadedForms = data.map(form => ({\n        id: form.id,\n        // Ensure this is present\n        name: form.name // Ensure this is present\n      }));\n      setSavedForms(loadedForms); // Set the forms to state\n    } catch (error) {\n      console.error('Error loading forms:', error);\n    }\n  };\n  const loadForm = async () => {\n    if (!selectedForm) {\n      alert('Please select a form to load.');\n      return;\n    }\n    try {\n      var _xmlDoc$querySelector, _xmlDoc$querySelector2;\n      // Use the endpoint that searches by form name\n      const response = await fetch(`http://localhost:5000/forms/${encodeURIComponent(selectedForm)}`);\n      if (!response.ok) {\n        throw new Error(`Failed to load form: ${response.status}`);\n      }\n      const formData = await response.json();\n      const parser = new DOMParser();\n      const xmlDoc = parser.parseFromString(formData.xml_data, 'application/xml');\n      const loadedName = ((_xmlDoc$querySelector = xmlDoc.querySelector('form > name')) === null || _xmlDoc$querySelector === void 0 ? void 0 : _xmlDoc$querySelector.textContent) || '';\n      const loadedLabel = ((_xmlDoc$querySelector2 = xmlDoc.querySelector('form > label')) === null || _xmlDoc$querySelector2 === void 0 ? void 0 : _xmlDoc$querySelector2.textContent) || '';\n      const loadedTags = Array.from(xmlDoc.querySelectorAll('form > tags > tag')).map(tag => tag.textContent);\n      const elements = Array.from(xmlDoc.querySelectorAll('elements > element')).map((el, index) => {\n        var _el$querySelector, _el$querySelector2, _el$querySelector3, _el$querySelector4, _el$querySelector5, _el$querySelector6, _el$querySelector7;\n        const type = ((_el$querySelector = el.querySelector('type')) === null || _el$querySelector === void 0 ? void 0 : _el$querySelector.textContent) || 'text';\n        const optionsNode = el.querySelector('dropdownOptions');\n        const options = optionsNode ? Array.from(optionsNode.querySelectorAll('option')).map(opt => opt.textContent) : [];\n        return {\n          id: `element-${Date.now()}-${index}`,\n          type,\n          key: ((_el$querySelector2 = el.querySelector('key')) === null || _el$querySelector2 === void 0 ? void 0 : _el$querySelector2.textContent) || '',\n          label: ((_el$querySelector3 = el.querySelector('label')) === null || _el$querySelector3 === void 0 ? void 0 : _el$querySelector3.textContent) || '',\n          required: ((_el$querySelector4 = el.querySelector('required')) === null || _el$querySelector4 === void 0 ? void 0 : _el$querySelector4.textContent) === 'true',\n          alignment: ((_el$querySelector5 = el.querySelector('alignment')) === null || _el$querySelector5 === void 0 ? void 0 : _el$querySelector5.textContent) || 'center',\n          settings: {\n            headerLevel: ((_el$querySelector6 = el.querySelector('headerLevel')) === null || _el$querySelector6 === void 0 ? void 0 : _el$querySelector6.textContent) || 'h1',\n            placeholder: ((_el$querySelector7 = el.querySelector('placeholder')) === null || _el$querySelector7 === void 0 ? void 0 : _el$querySelector7.textContent) || '',\n            dropdownOptions: options\n          }\n        };\n      }).filter(el => el.type !== 'button'); // Exclude submit button\n\n      setFormName(loadedName);\n      setFormLabel(loadedLabel);\n      setFormTags(loadedTags.join(', '));\n      setFormElements(elements);\n      console.log(`Form \"${selectedForm}\" loaded successfully!`);\n    } catch (error) {\n      console.error('Error loading form:', error);\n      alert('Failed to load form data.');\n    }\n  };\n  const addSubmitButton = () => {\n    setFormElements(prev => [...prev, {\n      id: SUBMIT_BUTTON_ID,\n      type: 'button',\n      key: 'Submit',\n      label: 'Submit',\n      alignment: 'center',\n      required: false,\n      settings: {}\n    }]);\n  };\n  const generateKey = type => {\n    // Replace spaces with underscores and lowercase the type for consistency\n    const formattedType = type.replace(/\\s+/g, '_').toLowerCase();\n\n    // Count existing elements of this type\n    const existingCount = formElements.filter(el => el.type === type).length + 1;\n\n    // Return a formatted key such as \"heading_1\", \"email_2\"\n    return `${formattedType}_${existingCount}`;\n  };\n  const addElement = type => {\n    const newKey = generateKey(type);\n    const newElement = {\n      id: newKey,\n      // Use the generated key as ID\n      type,\n      key: newKey,\n      label: type,\n      // Default label as the type name\n      alignment: 'center',\n      settings: {\n        headerLevel: 'h1',\n        placeholder: type === 'email' ? 'Email Address' : 'Enter text here...',\n        useCurrentDate: false,\n        defaultBoolean: 'true',\n        dropdownOptions: [],\n        min: '',\n        max: '',\n        step: '',\n        defaultValue: '',\n        showPasswordOption: false,\n        passwordLength: '',\n        requireSymbols: false,\n        requireNumbers: false,\n        csvData: []\n      },\n      required: false,\n      textColor: '#ffffff',\n      fontFamily: 'Arial'\n    };\n\n    // Ensure new elements are added before the Submit button\n    setFormElements(prev => {\n      const submitIndex = prev.findIndex(el => el.id === SUBMIT_BUTTON_ID);\n      const newFormElements = [...prev];\n      newFormElements.splice(submitIndex, 0, newElement);\n      return newFormElements;\n    });\n  };\n  const isKeyUnique = key => {\n    return !formElements.some(el => el.key === key && el.id !== (selectedElement === null || selectedElement === void 0 ? void 0 : selectedElement.id));\n  };\n  const handleSubmit = () => {\n    const formData = formElements.filter(el => el.id !== SUBMIT_BUTTON_ID); // Exclude submit button from data\n    console.log('Form submitted:', formData);\n\n    // Example API call\n    fetch('/api/submit-form', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        elements: formData\n      })\n    }).then(response => response.json()).then(data => console.log('Form submission response:', data)).catch(error => console.error('Error submitting form:', error));\n  };\n  const handleImageUpload = (event, elementId) => {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = e => {\n        const imageSrc = e.target.result;\n        setFormElements(prev => prev.map(el => el.id === elementId ? {\n          ...el,\n          settings: {\n            ...el.settings,\n            imageSrc\n          }\n        } : el));\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  const saveForm = async () => {\n    if (!formName) {\n      alert('Please enter a name for the form.');\n      return;\n    }\n    const formData = {\n      name: formName,\n      label: formLabel,\n      tags: formTags ? formTags.split(',').map(tag => tag.trim()) : [],\n      elements: formElements // Includes the populated csvData\n    };\n\n    // Convert form data to XML\n    const convertToXML = obj => {\n      let xml = '';\n      for (let key in obj) {\n        if (Array.isArray(obj[key])) {\n          xml += `<${key}>`;\n          obj[key].forEach(element => {\n            if (Array.isArray(element)) {\n              // Handle CSV data as rows and cells\n              xml += '<row>';\n              element.forEach(cell => {\n                xml += `<cell>${cell}</cell>`;\n              });\n              xml += '</row>';\n            } else {\n              xml += `<element>${convertToXML(element)}</element>`;\n            }\n          });\n          xml += `</${key}>`;\n        } else if (typeof obj[key] === 'object') {\n          xml += `<${key}>${convertToXML(obj[key])}</${key}>`;\n        } else {\n          xml += `<${key}>${obj[key]}</${key}>`;\n        }\n      }\n      return xml;\n    };\n    const xmlData = `<form>${convertToXML(formData)}</form>`;\n\n    // Send form data to backend\n    try {\n      const response = await fetch('http://localhost:5000/save_form', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: formName,\n          label: formLabel,\n          tags: formTags ? formTags.split(',').map(tag => tag.trim()) : [],\n          elements: formElements,\n          xmlData: xmlData // Include XML data in the request\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`Failed to save form: ${response.status} ${response.statusText}`);\n      }\n      alert(`Form \"${formName}\" saved successfully!`);\n      localStorage.setItem(formName, xmlData); // Optional: save XML to local storage\n\n      // Refresh saved forms after saving\n      loadSavedForms();\n    } catch (error) {\n      console.error('Error:', error);\n      alert(`Error saving form: ${error.message}`);\n    }\n  };\n  const removeElement = id => {\n    if (id === SUBMIT_BUTTON_ID) return; // Prevent deletion of the Submit button\n    setFormElements(prev => prev.filter(el => el.id !== id));\n    if ((selectedElement === null || selectedElement === void 0 ? void 0 : selectedElement.id) === id) {\n      setSelectedElement(null);\n    }\n  };\n  const handleEditClick = element => {\n    var _element$settings, _element$settings2, _element$settings3;\n    setSelectedElement(element);\n    setDraftSettings({\n      ...element.settings,\n      key: element.key || '',\n      label: element.label,\n      alignment: element.alignment,\n      required: element.required,\n      requirement: ((_element$settings = element.settings) === null || _element$settings === void 0 ? void 0 : _element$settings.requirement) || false,\n      // Add this line\n      placeholder: (_element$settings2 = element.settings) === null || _element$settings2 === void 0 ? void 0 : _element$settings2.placeholder,\n      csvData: ((_element$settings3 = element.settings) === null || _element$settings3 === void 0 ? void 0 : _element$settings3.csvData) || []\n    });\n  };\n  const updateElementSettings = (id, newSettings) => {\n    setFormElements(prev => prev.map(el => el.id === id.toString() ? {\n      ...el,\n      ...newSettings,\n      settings: {\n        ...el.settings,\n        ...newSettings,\n        requirement: newSettings.requirement !== undefined ? newSettings.requirement : el.settings.requirement // Preserve existing requirement if not changed\n      }\n    } : el));\n  };\n  const handleDragStart = ({\n    active\n  }) => {\n    setDraggingElement(active.id);\n  };\n  const handleDragEnd = ({\n    active,\n    over\n  }) => {\n    if (over && active.id !== over.id) {\n      const oldIndex = formElements.findIndex(el => el.id === active.id);\n      const newIndex = formElements.findIndex(el => el.id === over.id);\n      setFormElements(prev => arrayMove(prev, oldIndex, newIndex));\n    }\n    setDraggingElement(null);\n  };\n  const handleCSVUpload = (event, elementId) => {\n    const file = event.target.files[0];\n    if (file) {\n      if (!file.name.endsWith('.csv')) {\n        alert('Please upload a valid .csv file.');\n        return;\n      }\n      Papa.parse(file, {\n        complete: result => {\n          const csvData = result.data;\n          console.log('Parsed CSV Data:', csvData);\n          setFormElements(prev => prev.map(el => el.id === elementId ? {\n            ...el,\n            csvData,\n            // Update the csvData property\n            settings: {\n              ...el.settings,\n              csvData\n            }\n          } : el));\n        },\n        header: false // Adjust as needed\n      });\n    }\n  };\n  const handleResetForm = () => {\n    if (window.confirm('Are you sure you want to reset the form?')) {\n      setFormElements([]);\n      setFormName('');\n      setFormLabel('');\n    }\n  };\n  const validatePassword = (password, settings) => {\n    if (settings !== null && settings !== void 0 && settings.passwordLength && password.length < settings.passwordLength) {\n      return false;\n    }\n    if (settings !== null && settings !== void 0 && settings.requireSymbols && !/[!@#$%^&*(),.?\":{}|<>]/.test(password)) {\n      return false;\n    }\n    if (settings !== null && settings !== void 0 && settings.requireNumbers && !/[0-9]/.test(password)) {\n      return false;\n    }\n    return true;\n  };\n  const renderElementContent = element => {\n    var _element$settings4, _settings$dropdownOpt;\n    const isBeingEdited = (selectedElement === null || selectedElement === void 0 ? void 0 : selectedElement.id) === element.id;\n    const settings = isBeingEdited ? draftSettings : element.settings;\n    const alignmentStyle = {\n      textAlign: (settings === null || settings === void 0 ? void 0 : settings.alignment) || 'center'\n    };\n    const wrapperStyle = {\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: (settings === null || settings === void 0 ? void 0 : settings.alignment) === 'left' ? 'flex-start' : (settings === null || settings === void 0 ? void 0 : settings.alignment) === 'right' ? 'flex-end' : 'center',\n      width: '100%',\n      marginBottom: '10px'\n    };\n    const renderLabel = label => label && /*#__PURE__*/_jsxDEV(\"label\", {\n      style: {\n        marginBottom: '5px',\n        fontWeight: 'bold'\n      },\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 16\n    }, this);\n    switch (element.type) {\n      case 'heading':\n        {\n          const HeaderTag = (settings === null || settings === void 0 ? void 0 : settings.headerLevel) || 'h1';\n          const alignmentStyle = {\n            textAlign: (settings === null || settings === void 0 ? void 0 : settings.alignment) || 'center',\n            width: '100%',\n            margin: '0 auto' // Ensures it's centered\n          };\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              justifyContent: 'center',\n              width: '100%'\n            },\n            children: /*#__PURE__*/_jsxDEV(HeaderTag, {\n              style: alignmentStyle,\n              children: (settings === null || settings === void 0 ? void 0 : settings.label) || element.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 506,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 505,\n            columnNumber: 11\n          }, this);\n        }\n      case 'text':\n        return /*#__PURE__*/_jsxDEV(\"p\", {\n          style: alignmentStyle,\n          children: settings.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 16\n        }, this);\n      case 'button':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            justifyContent: element.alignment || 'center',\n            width: '100%'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: element.id === SUBMIT_BUTTON_ID ? handleSubmit : undefined // Submit button triggers API\n            ,\n            className: \"custom-button\",\n            style: {\n              padding: '10px 20px',\n              borderRadius: '6px',\n              margin: '5px',\n              backgroundColor: '#007bff',\n              color: 'white'\n            },\n            children: element.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 517,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 516,\n          columnNumber: 11\n        }, this);\n      case 'inputText':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: wrapperStyle,\n          children: [renderLabel((settings === null || settings === void 0 ? void 0 : settings.label) || element.label), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: (settings === null || settings === void 0 ? void 0 : settings.placeholder) || '',\n            required: settings === null || settings === void 0 ? void 0 : settings.required,\n            style: {\n              borderRadius: '8px',\n              padding: '10px',\n              border: '1px solid #ced4da',\n              textAlign: 'center'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 530,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 528,\n          columnNumber: 9\n        }, this);\n      case 'email':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: wrapperStyle,\n          children: [renderLabel((settings === null || settings === void 0 ? void 0 : settings.label) || element.label), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            placeholder: (settings === null || settings === void 0 ? void 0 : settings.placeholder) || '',\n            required: settings === null || settings === void 0 ? void 0 : settings.required,\n            style: {\n              borderRadius: '8px',\n              padding: '10px',\n              border: (settings === null || settings === void 0 ? void 0 : settings.isValid) === false ? '2px solid #ff0000' : '1px solid #ced4da',\n              boxShadow: (settings === null || settings === void 0 ? void 0 : settings.isValid) === false ? '0 0 5px #ff0000' : 'none',\n              textAlign: 'center'\n            },\n            onBlur: e => {\n              if (e.target.value.trim() !== '') {\n                const isValid = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(e.target.value);\n                updateElementSettings(element.id, {\n                  ...settings,\n                  isValid\n                });\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 547,\n            columnNumber: 13\n          }, this), !(settings !== null && settings !== void 0 && settings.isValid) && (settings === null || settings === void 0 ? void 0 : settings.isValid) !== undefined && /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: '#ff0000',\n              fontSize: '0.8em',\n              marginTop: '5px'\n            },\n            children: \"Invalid email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 566,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 545,\n          columnNumber: 9\n        }, this);\n      case 'divider':\n        return /*#__PURE__*/_jsxDEV(\"hr\", {\n          style: {\n            ...alignmentStyle,\n            width: '100%'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 571,\n          columnNumber: 16\n        }, this);\n      case 'image':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: wrapperStyle,\n          children: [renderLabel((settings === null || settings === void 0 ? void 0 : settings.label) || element.label), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"custom-file-label\",\n            children: [\"Choose Image\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              className: \"custom-file-input\",\n              accept: \"image/*\",\n              onChange: e => handleImageUpload(e, element.id)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 578,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 576,\n            columnNumber: 15\n          }, this), settings !== null && settings !== void 0 && settings.imageSrc ? /*#__PURE__*/_jsxDEV(\"img\", {\n            src: settings.imageSrc,\n            alt: \"Uploaded\",\n            style: {\n              maxWidth: '100%',\n              height: 'auto',\n              borderRadius: '8px',\n              marginTop: '10px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 586,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"https://via.placeholder.com/150\",\n            alt: \"Placeholder\",\n            style: {\n              maxWidth: '100%',\n              height: 'auto',\n              borderRadius: '8px',\n              marginTop: '10px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 592,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 574,\n          columnNumber: 11\n        }, this);\n      case 'file':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: wrapperStyle,\n          children: [renderLabel((settings === null || settings === void 0 ? void 0 : settings.label) || element.label), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"custom-file-label\",\n            children: [\"Upload File\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              className: \"custom-file-input\",\n              onChange: e => handleCSVUpload(e, element.id),\n              accept: \".csv\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 606,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 604,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"file-name\",\n            children: \"No file chosen\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 613,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 602,\n          columnNumber: 11\n        }, this);\n      case 'table':\n        const tableData = ((_element$settings4 = element.settings) === null || _element$settings4 === void 0 ? void 0 : _element$settings4.csvData) || [];\n        console.log('Rendering Table with Data:', tableData);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: wrapperStyle,\n          children: [renderLabel((settings === null || settings === void 0 ? void 0 : settings.label) || element.label), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginBottom: '10px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                accept: \".csv\",\n                id: `file-upload-${element.id}`,\n                onChange: e => handleCSVUpload(e, element.id),\n                style: {\n                  display: 'none'\n                } // Hide default input\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 626,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: `file-upload-${element.id}`,\n                style: {\n                  backgroundColor: '#007bff',\n                  color: 'white',\n                  padding: '10px 20px',\n                  borderRadius: '6px',\n                  cursor: 'pointer',\n                  display: 'inline-block'\n                },\n                children: \"Upload CSV File\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 633,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  marginLeft: '10px'\n                },\n                children: selectedFileName || 'No file chosen'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 646,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 625,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n              style: {\n                margin: '0 auto',\n                borderCollapse: 'collapse',\n                width: '100%'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: tableData.length > 0 ? tableData.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: row.map((cell, cellIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n                    style: {\n                      border: '1px solid #ddd',\n                      padding: '8px'\n                    },\n                    children: cell\n                  }, `cell-${rowIndex}-${cellIndex}`, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 657,\n                    columnNumber: 29\n                  }, this))\n                }, `row-${rowIndex}`, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 655,\n                  columnNumber: 25\n                }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    style: {\n                      textAlign: 'center'\n                    },\n                    children: \"No Data Available\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 668,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 667,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 652,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 651,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 623,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 621,\n          columnNumber: 11\n        }, this);\n      case 'dateTime':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: wrapperStyle,\n          children: [renderLabel((settings === null || settings === void 0 ? void 0 : settings.label) || element.label), settings !== null && settings !== void 0 && settings.useCurrentDate ? /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: new Date().toLocaleDateString('en-US'),\n            readOnly: true,\n            style: {\n              borderRadius: '8px',\n              padding: '10px',\n              border: '1px solid #ced4da',\n              textAlign: 'center'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 681,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            style: {\n              borderRadius: '8px',\n              padding: '10px',\n              border: '1px solid #ced4da',\n              textAlign: 'center'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 693,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 678,\n          columnNumber: 11\n        }, this);\n      case 'dropdown':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: wrapperStyle,\n          children: [renderLabel((settings === null || settings === void 0 ? void 0 : settings.label) || element.label), /*#__PURE__*/_jsxDEV(\"select\", {\n            style: {\n              borderRadius: '8px',\n              padding: '10px',\n              border: '1px solid #ced4da',\n              textAlign: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select an option\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 717,\n              columnNumber: 15\n            }, this), settings === null || settings === void 0 ? void 0 : (_settings$dropdownOpt = settings.dropdownOptions) === null || _settings$dropdownOpt === void 0 ? void 0 : _settings$dropdownOpt.map((option, idx) => /*#__PURE__*/_jsxDEV(\"option\", {\n              value: option,\n              children: option\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 719,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 709,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 707,\n          columnNumber: 11\n        }, this);\n      case 'boolean':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: wrapperStyle,\n          children: [renderLabel((settings === null || settings === void 0 ? void 0 : settings.label) || element.label), /*#__PURE__*/_jsxDEV(\"select\", {\n            value: (settings === null || settings === void 0 ? void 0 : settings.defaultBoolean) || 'true',\n            onChange: e => updateElementSettings(element.id, {\n              ...settings,\n              defaultBoolean: e.target.value\n            }),\n            style: {\n              borderRadius: '8px',\n              padding: '10px',\n              border: '1px solid #ced4da',\n              textAlign: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"true\",\n              children: \"True\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 740,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"false\",\n              children: \"False\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 741,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 730,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 728,\n          columnNumber: 9\n        }, this);\n      case 'number':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: wrapperStyle,\n          children: [renderLabel((settings === null || settings === void 0 ? void 0 : settings.label) || element.label), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            min: settings === null || settings === void 0 ? void 0 : settings.min,\n            max: settings === null || settings === void 0 ? void 0 : settings.max,\n            step: settings === null || settings === void 0 ? void 0 : settings.step,\n            defaultValue: settings === null || settings === void 0 ? void 0 : settings.defaultValue,\n            required: settings === null || settings === void 0 ? void 0 : settings.required,\n            style: {\n              borderRadius: '8px',\n              padding: '10px',\n              border: '1px solid #ced4da',\n              textAlign: 'center'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 749,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 747,\n          columnNumber: 9\n        }, this);\n      case 'password':\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '100%',\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: (settings === null || settings === void 0 ? void 0 : settings.alignment) === 'left' ? 'flex-start' : (settings === null || settings === void 0 ? void 0 : settings.alignment) === 'right' ? 'flex-end' : 'center',\n            justifyContent: 'center'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: wrapperStyle,\n            children: [renderLabel((settings === null || settings === void 0 ? void 0 : settings.label) || element.label), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: settings !== null && settings !== void 0 && settings.showPasswordOption && settings !== null && settings !== void 0 && settings.showPassword ? 'text' : 'password',\n              placeholder: (settings === null || settings === void 0 ? void 0 : settings.placeholder) || 'Enter password',\n              required: settings === null || settings === void 0 ? void 0 : settings.required,\n              onBlur: e => {\n                const isValid = validatePassword(e.target.value, settings);\n                updateElementSettings(element.id, {\n                  ...settings,\n                  isValid\n                });\n              },\n              style: {\n                borderRadius: '8px',\n                padding: '10px',\n                width: '300px',\n                border: (settings === null || settings === void 0 ? void 0 : settings.isValid) === false ? '2px solid #ff0000' : '1px solid #ced4da',\n                textAlign: 'left',\n                marginRight: '10px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 778,\n              columnNumber: 11\n            }, this), (settings === null || settings === void 0 ? void 0 : settings.showPasswordOption) && /*#__PURE__*/_jsxDEV(\"label\", {\n              style: {\n                display: 'flex',\n                alignItems: 'center',\n                marginLeft: '10px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: (settings === null || settings === void 0 ? void 0 : settings.showPassword) || false,\n                onChange: e => updateElementSettings(element.id, {\n                  ...settings,\n                  showPassword: e.target.checked\n                }),\n                style: {\n                  marginRight: '5px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 797,\n                columnNumber: 17\n              }, this), \"Show Password\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 796,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 776,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: '10px',\n              textAlign: (settings === null || settings === void 0 ? void 0 : settings.alignment) || 'center',\n              width: '100%',\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: (settings === null || settings === void 0 ? void 0 : settings.alignment) === 'left' ? 'flex-start' : (settings === null || settings === void 0 ? void 0 : settings.alignment) === 'right' ? 'flex-end' : 'center'\n            },\n            children: [(settings === null || settings === void 0 ? void 0 : settings.passwordLength) && /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                marginBottom: '5px'\n              },\n              children: [\"Requires Minimum Length: \", settings.passwordLength]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 808,\n              columnNumber: 42\n            }, this), (settings === null || settings === void 0 ? void 0 : settings.requireSymbols) && /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                marginBottom: '5px'\n              },\n              children: \"Requires Symbols: Yes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 809,\n              columnNumber: 42\n            }, this), (settings === null || settings === void 0 ? void 0 : settings.requireNumbers) && /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Requires Numbers: Yes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 810,\n              columnNumber: 42\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 807,\n            columnNumber: 11\n          }, this), !(settings !== null && settings !== void 0 && settings.isValid) && (settings === null || settings === void 0 ? void 0 : settings.isValid) !== undefined && /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: '#ff0000',\n              fontSize: '0.8em',\n              marginTop: '5px'\n            },\n            children: \"Password does not meet requirements\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 813,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 767,\n          columnNumber: 9\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(\"input\", {\n          type: element.type,\n          placeholder: (settings === null || settings === void 0 ? void 0 : settings.placeholder) || '',\n          required: settings === null || settings === void 0 ? void 0 : settings.required,\n          style: alignmentStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 819,\n          columnNumber: 11\n        }, this);\n    }\n  };\n  const areRequiredFieldsFilled = () => {\n    return formElements.every(el => {\n      if (el.required) {\n        return el.settings.label && el.settings.label.trim() !== '';\n      }\n      return true;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-builder-container\",\n    style: {\n      height: '100vh',\n      overflow: 'hidden'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-name-section\",\n        style: {\n          marginBottom: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"form-name\",\n          className: \"sidebar-label\",\n          children: \"Form Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 845,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"form-name\",\n          type: \"text\",\n          value: formName,\n          onChange: e => setFormName(e.target.value),\n          placeholder: \"Enter form name\",\n          className: \"form-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 846,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 844,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-label-section\",\n        style: {\n          marginBottom: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"form-label\",\n          className: \"sidebar-label\",\n          children: \"Label (Required):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 858,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"form-label\",\n          type: \"text\",\n          value: formLabel,\n          onChange: e => setFormLabel(e.target.value),\n          placeholder: \"Enter form label\",\n          className: \"form-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 859,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 857,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"element-input-wrapper\",\n        style: {\n          display: 'flex',\n          gap: '10px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"element-selector\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Elements\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 870,\n            columnNumber: 7\n          }, this), ELEMENT_TYPES.map(element => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => addElement(element.id),\n            className: \"element-button\",\n            children: element.label\n          }, element.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 872,\n            columnNumber: 9\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 869,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-selector\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Input Fields\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 883,\n            columnNumber: 7\n          }, this), INPUT_FIELDS.map(input => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => addElement(input.id),\n            className: \"input-button\",\n            children: input.label\n          }, input.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 885,\n            columnNumber: 9\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 882,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 868,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"load-section\",\n        style: {\n          marginBottom: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"saved-forms\",\n          className: \"sidebar-label\",\n          children: \"Load Saved Form:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 896,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"saved-forms\",\n          value: selectedForm,\n          onChange: e => setSelectedForm(e.target.value),\n          className: \"sidebar-select\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"-- Select a Form --\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 903,\n            columnNumber: 5\n          }, this), savedForms.map(form => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: form.name,\n            children: [\" \", form.name, \" \"]\n          }, form.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 905,\n            columnNumber: 7\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 897,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: loadForm,\n          className: \"load-form-button\",\n          children: \"Load Form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 910,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 895,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: saveForm,\n        className: \"save-form-button\",\n        children: \"Save Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 912,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleResetForm,\n        className: \"reset-form-button\",\n        children: \"Reset Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 913,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 840,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-builder\",\n      ref: formContainerRef,\n      style: {\n        height: '100%',\n        overflowY: 'auto'\n      },\n      children: /*#__PURE__*/_jsxDEV(DndContext, {\n        collisionDetection: closestCenter,\n        onDragEnd: handleDragEnd,\n        onDragStart: handleDragStart,\n        children: [/*#__PURE__*/_jsxDEV(SortableContext, {\n          items: formElements,\n          strategy: rectSortingStrategy,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-preview\",\n            children: formElements.map(element => /*#__PURE__*/_jsxDEV(SortableFormElement, {\n              element: element,\n              handleEditClick: handleEditClick,\n              renderElementContent: renderElementContent\n            }, element.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 925,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 923,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 922,\n          columnNumber: 11\n        }, this), draggingElement && /*#__PURE__*/_jsxDEV(DragOverlay, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"dragging-overlay\",\n            children: \"Dragging\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 936,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 935,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 917,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 916,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 839,\n    columnNumber: 5\n  }, this);\n};\n_s2(FormBuilder, \"2d8C2Jk3XBI+PWREG2Gg9YN3+iw=\");\n_c = FormBuilder;\nconst SortableFormElement = ({\n  element,\n  handleEditClick,\n  renderElementContent\n}) => {\n  _s3();\n  var _element$settings5;\n  const {\n    attributes,\n    listeners,\n    setNodeRef,\n    transform,\n    transition\n  } = useSortable({\n    id: element.id\n  });\n  const style = {\n    transform: transform ? `translate3d(${transform.x}px, ${transform.y}px, 0)` : undefined,\n    transition,\n    backgroundColor: ((_element$settings5 = element.settings) === null || _element$settings5 === void 0 ? void 0 : _element$settings5.backgroundColor) || 'inherit'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: setNodeRef,\n    style: style,\n    className: \"form-element\",\n    onClick: () => handleEditClick(element),\n    children: [renderElementContent(element), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"drag-handle\",\n      ...listeners,\n      ...attributes,\n      onMouseDown: e => e.stopPropagation(),\n      children: \"Drag\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 966,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 959,\n    columnNumber: 5\n  }, this);\n};\n_s3(SortableFormElement, \"FTUh0JV0KNM2MI3tYtLrQh0rr1U=\", false, function () {\n  return [useSortable];\n});\n_c2 = SortableFormElement;\nexport default FormBuilder;\nvar _c, _c2;\n$RefreshReg$(_c, \"FormBuilder\");\n$RefreshReg$(_c2, \"SortableFormElement\");","map":{"version":3,"names":["React","useState","useRef","useEffect","DndContext","DragOverlay","closestCenter","arrayMove","SortableContext","useSortable","rectSortingStrategy","Papa","jsxDEV","_jsxDEV","ELEMENT_TYPES","id","label","INPUT_FIELDS","type","FormBuilder","_s2","_s","$RefreshSig$","formElements","setFormElements","formName","setFormName","formLabel","setFormLabel","formTags","setFormTags","savedForms","setSavedForms","selectedForm","setSelectedForm","selectedElement","setSelectedElement","draftSettings","setDraftSettings","draggingElement","setDraggingElement","formContainerRef","selectedFileName","setSelectedFileName","SUBMIT_BUTTON_ID","formToLoad","setFormToLoad","EditElement","updateElementSettings","removeElement","editorRef","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","ref","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","window","confirm","value","key","onChange","e","updatedKey","prev","updatedLabel","console","log","tableElement","find","el","settings","csvData","some","addSubmitButton","loadSavedForms","response","fetch","ok","Error","status","data","json","loadedForms","map","form","name","error","loadForm","alert","_xmlDoc$querySelector","_xmlDoc$querySelector2","encodeURIComponent","formData","parser","DOMParser","xmlDoc","parseFromString","xml_data","loadedName","querySelector","textContent","loadedLabel","loadedTags","Array","from","querySelectorAll","tag","elements","index","_el$querySelector","_el$querySelector2","_el$querySelector3","_el$querySelector4","_el$querySelector5","_el$querySelector6","_el$querySelector7","optionsNode","options","opt","Date","now","required","alignment","headerLevel","placeholder","dropdownOptions","filter","join","generateKey","formattedType","replace","toLowerCase","existingCount","length","addElement","newKey","newElement","useCurrentDate","defaultBoolean","min","max","step","defaultValue","showPasswordOption","passwordLength","requireSymbols","requireNumbers","textColor","fontFamily","submitIndex","findIndex","newFormElements","splice","isKeyUnique","handleSubmit","method","headers","body","JSON","stringify","then","catch","handleImageUpload","elementId","file","files","reader","FileReader","onload","imageSrc","result","readAsDataURL","saveForm","tags","split","trim","convertToXML","obj","xml","isArray","forEach","element","cell","xmlData","statusText","localStorage","setItem","message","handleEditClick","_element$settings","_element$settings2","_element$settings3","requirement","newSettings","toString","undefined","handleDragStart","active","handleDragEnd","over","oldIndex","newIndex","handleCSVUpload","endsWith","parse","complete","header","handleResetForm","validatePassword","password","test","renderElementContent","_element$settings4","_settings$dropdownOpt","isBeingEdited","alignmentStyle","textAlign","wrapperStyle","display","flexDirection","alignItems","width","marginBottom","renderLabel","style","fontWeight","HeaderTag","margin","justifyContent","padding","borderRadius","backgroundColor","color","border","isValid","boxShadow","onBlur","fontSize","marginTop","accept","src","alt","maxWidth","height","tableData","htmlFor","cursor","marginLeft","borderCollapse","row","rowIndex","cellIndex","toLocaleDateString","readOnly","option","idx","showPassword","marginRight","checked","areRequiredFieldsFilled","every","overflow","gap","input","overflowY","collisionDetection","onDragEnd","onDragStart","items","strategy","SortableFormElement","_c","_s3","_element$settings5","attributes","listeners","setNodeRef","transform","transition","x","y","onMouseDown","stopPropagation","_c2","$RefreshReg$"],"sources":["C:/Users/abarbas/Desktop/soar_web_forms/src/components/FormBuilder.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\r\nimport { DndContext, DragOverlay, closestCenter } from '@dnd-kit/core';\r\nimport { arrayMove, SortableContext, useSortable, rectSortingStrategy } from '@dnd-kit/sortable';\r\nimport Papa from 'papaparse';\r\nimport './FormBuilder.css';\r\n\r\nconst ELEMENT_TYPES = [\r\n  { id: 'heading', label: 'Heading' },\r\n  { id: 'text', label: 'Text' },\r\n  { id: 'divider', label: 'Divider' },\r\n  //{ id: 'button', label: 'Button' },\r\n  //{ id: 'image', label: 'Image' },\r\n  { id: 'table', label: 'Table' }\r\n];\r\n\r\nconst INPUT_FIELDS = [\r\n  { id: 'inputText', label: 'Input Text', type: 'text' },\r\n  { id: 'email', label: 'Email', type: 'email' },\r\n  //{ id: 'password', label: 'Password', type: 'password' }, \r\n  { id: 'dateTime', label: 'Date or Time', type: 'datetime-local' },\r\n  { id: 'dropdown', label: 'Dropdown', type: 'dropdown' },\r\n  { id: 'boolean', label: 'Boolean', type: 'dropdown' },\r\n  { id: 'number', label: 'Number', type: 'number' },\r\n  { id: 'file', label: 'File Upload', type: 'file' }\r\n\r\n];\r\n\r\nconst FormBuilder = () => {\r\n  const [formElements, setFormElements] = useState([]);\r\n  const [formName, setFormName] = useState('');\r\n  const [formLabel, setFormLabel] = useState('');\r\n  const [formTags, setFormTags] = useState('');\r\n  const [savedForms, setSavedForms] = useState([]); // Add state to store list of saved forms\r\n  const [selectedForm, setSelectedForm] = useState(''); // Add state to track selected form\r\n  const [selectedElement, setSelectedElement] = useState(null);\r\n  const [draftSettings, setDraftSettings] = useState(null);\r\n  const [draggingElement, setDraggingElement] = useState(null);\r\n  const formContainerRef = useRef(null);\r\n  const [selectedFileName, setSelectedFileName] = useState('');\r\n  const SUBMIT_BUTTON_ID = 'submit-button';\r\n  const [formToLoad, setFormToLoad] = useState(null); // Hold the form name to load after clearing\r\n  \r\n  const EditElement = ({ selectedElement, setSelectedElement, draftSettings, setDraftSettings, updateElementSettings, removeElement }) => {\r\n    const editorRef = useRef(null);\r\n  \r\n    useEffect(() => {\r\n      const handleClickOutside = (event) => {\r\n        if (editorRef.current && !editorRef.current.contains(event.target)) {\r\n          setSelectedElement(null); // Close editor when clicking outside\r\n        }\r\n      };\r\n  \r\n      document.addEventListener('mousedown', handleClickOutside);\r\n      return () => {\r\n        document.removeEventListener('mousedown', handleClickOutside);\r\n      };\r\n    }, [setSelectedElement]);\r\n  \r\n    return (\r\n      <div ref={editorRef} className=\"element-editor\">\r\n        <div className=\"element-editor-header\">\r\n          <h3>Edit Element</h3>\r\n          <button\r\n            onClick={() => {\r\n              if (window.confirm('Are you sure you want to delete this element?')) {\r\n                removeElement(selectedElement.id);\r\n              }\r\n            }}\r\n            className=\"delete-element\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </div>\r\n        <label>\r\n          Key:\r\n          <input\r\n            type=\"text\"\r\n            value={draftSettings?.key || ''}\r\n            onChange={(e) => {\r\n              const updatedKey = e.target.value;\r\n              setDraftSettings((prev) => ({ ...prev, key: updatedKey }));\r\n              updateElementSettings(selectedElement.id, { ...draftSettings, key: updatedKey });\r\n            }}\r\n          />\r\n        </label>\r\n        <label>\r\n          Label:\r\n          <input\r\n            type=\"text\"\r\n            value={draftSettings?.label || ''}\r\n            onChange={(e) => {\r\n              const updatedLabel = e.target.value;\r\n              setDraftSettings((prev) => ({ ...prev, label: updatedLabel }));\r\n              updateElementSettings(selectedElement.id, { ...draftSettings, label: updatedLabel });\r\n            }}\r\n          />\r\n        </label>\r\n        {/* Add other input fields as necessary */}\r\n      </div>\r\n    );\r\n  };\r\n  \r\nuseEffect(() => {\r\n  console.log('Form Elements Updated:', formElements);\r\n  const tableElement = formElements.find((el) => el.type === 'table');\r\n  if (tableElement) {\r\n    console.log('Table Element Found:', tableElement);\r\n    console.log('CSV Data in State:', tableElement.settings.csvData);\r\n  }\r\n}, [formElements]);\r\n\r\nuseEffect(() => {\r\n  if (!formElements.some(el => el.id === SUBMIT_BUTTON_ID)) {\r\n    addSubmitButton();\r\n  }\r\n}, [formElements]);\r\n\r\nuseEffect(() => {\r\n  loadSavedForms();\r\n}, []);\r\n\r\n\r\nconst loadSavedForms = async () => {\r\n  try {\r\n    const response = await fetch('http://localhost:5000/forms');\r\n    if (!response.ok) {\r\n      throw new Error(`Failed to fetch forms: ${response.status}`);\r\n    }\r\n    const data = await response.json();\r\n    const loadedForms = data.map(form => ({\r\n      id: form.id, // Ensure this is present\r\n      name: form.name // Ensure this is present\r\n    }));\r\n    setSavedForms(loadedForms); // Set the forms to state\r\n  } catch (error) {\r\n    console.error('Error loading forms:', error);\r\n  }\r\n};\r\n\r\n\r\nconst loadForm = async () => {\r\n  if (!selectedForm) {\r\n    alert('Please select a form to load.');\r\n    return;\r\n  }\r\n\r\n  try {\r\n    // Use the endpoint that searches by form name\r\n    const response = await fetch(`http://localhost:5000/forms/${encodeURIComponent(selectedForm)}`);\r\n    if (!response.ok) {\r\n      throw new Error(`Failed to load form: ${response.status}`);\r\n    }\r\n\r\n    const formData = await response.json();\r\n    const parser = new DOMParser();\r\n    const xmlDoc = parser.parseFromString(formData.xml_data, 'application/xml');\r\n    const loadedName = xmlDoc.querySelector('form > name')?.textContent || '';\r\n    const loadedLabel = xmlDoc.querySelector('form > label')?.textContent || '';\r\n    const loadedTags = Array.from(xmlDoc.querySelectorAll('form > tags > tag')).map(tag => tag.textContent);\r\n\r\n    const elements = Array.from(xmlDoc.querySelectorAll('elements > element')).map((el, index) => {\r\n      const type = el.querySelector('type')?.textContent || 'text';\r\n      const optionsNode = el.querySelector('dropdownOptions');\r\n      const options = optionsNode ? Array.from(optionsNode.querySelectorAll('option')).map(opt => opt.textContent) : [];\r\n\r\n      return {\r\n        id: `element-${Date.now()}-${index}`,\r\n        type,\r\n        key: el.querySelector('key')?.textContent || '',\r\n        label: el.querySelector('label')?.textContent || '',\r\n        required: el.querySelector('required')?.textContent === 'true',\r\n        alignment: el.querySelector('alignment')?.textContent || 'center',\r\n        settings: {\r\n          headerLevel: el.querySelector('headerLevel')?.textContent || 'h1',\r\n          placeholder: el.querySelector('placeholder')?.textContent || '',\r\n          dropdownOptions: options,\r\n        }\r\n      };\r\n    }).filter(el => el.type !== 'button'); // Exclude submit button\r\n\r\n    setFormName(loadedName);\r\n    setFormLabel(loadedLabel);\r\n    setFormTags(loadedTags.join(', '));\r\n    setFormElements(elements);\r\n\r\n    console.log(`Form \"${selectedForm}\" loaded successfully!`);\r\n  } catch (error) {\r\n    console.error('Error loading form:', error);\r\n    alert('Failed to load form data.');\r\n  }\r\n};\r\n\r\n\r\nconst addSubmitButton = () => {\r\n  setFormElements(prev => [\r\n    ...prev,\r\n    {\r\n      id: SUBMIT_BUTTON_ID,\r\n      type: 'button',\r\n      key: 'Submit',\r\n      label: 'Submit',\r\n      alignment: 'center',\r\n      required: false,\r\n      settings: {},\r\n    },\r\n  ]);\r\n};\r\n\r\nconst generateKey = (type) => {\r\n  // Replace spaces with underscores and lowercase the type for consistency\r\n  const formattedType = type.replace(/\\s+/g, '_').toLowerCase();\r\n\r\n  // Count existing elements of this type\r\n  const existingCount = formElements.filter((el) => el.type === type).length + 1;\r\n\r\n  // Return a formatted key such as \"heading_1\", \"email_2\"\r\n  return `${formattedType}_${existingCount}`;\r\n};\r\n\r\nconst addElement = (type) => {\r\n  const newKey = generateKey(type);\r\n  const newElement = {\r\n    id: newKey, // Use the generated key as ID\r\n    type,\r\n    key: newKey,\r\n    label: type, // Default label as the type name\r\n    alignment: 'center',\r\n    settings: {\r\n      headerLevel: 'h1',\r\n      placeholder: type === 'email' ? 'Email Address' : 'Enter text here...',\r\n      useCurrentDate: false,\r\n      defaultBoolean: 'true',\r\n      dropdownOptions: [],\r\n      min: '',\r\n      max: '',\r\n      step: '',\r\n      defaultValue: '',\r\n      showPasswordOption: false,\r\n      passwordLength: '',\r\n      requireSymbols: false,\r\n      requireNumbers: false,\r\n      csvData: [],\r\n    },\r\n    required: false,\r\n    textColor: '#ffffff',\r\n    fontFamily: 'Arial',\r\n  };\r\n\r\n  // Ensure new elements are added before the Submit button\r\n  setFormElements((prev) => {\r\n    const submitIndex = prev.findIndex((el) => el.id === SUBMIT_BUTTON_ID);\r\n    const newFormElements = [...prev];\r\n    newFormElements.splice(submitIndex, 0, newElement);\r\n    return newFormElements;\r\n  });\r\n};\r\n\r\n  const isKeyUnique = (key) => {\r\n    return !formElements.some((el) => el.key === key && el.id !== selectedElement?.id);\r\n  };\r\n  const handleSubmit = () => {\r\n    const formData = formElements.filter(el => el.id !== SUBMIT_BUTTON_ID); // Exclude submit button from data\r\n    console.log('Form submitted:', formData);\r\n\r\n    // Example API call\r\n    fetch('/api/submit-form', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify({ elements: formData }),\r\n    })\r\n      .then(response => response.json())\r\n      .then(data => console.log('Form submission response:', data))\r\n      .catch(error => console.error('Error submitting form:', error));\r\n  };\r\n\r\n  const handleImageUpload = (event, elementId) => {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        const imageSrc = e.target.result;\r\n        setFormElements((prev) =>\r\n          prev.map((el) =>\r\n            el.id === elementId\r\n              ? { ...el, settings: { ...el.settings, imageSrc } }\r\n              : el\r\n          )\r\n        );\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n  \r\n  const saveForm = async () => {\r\n    if (!formName) {\r\n      alert('Please enter a name for the form.');\r\n      return;\r\n    }\r\n  \r\n    const formData = {\r\n      name: formName,\r\n      label: formLabel,\r\n      tags: formTags ? formTags.split(',').map(tag => tag.trim()) : [],\r\n      elements: formElements, // Includes the populated csvData\r\n    };\r\n  \r\n    // Convert form data to XML\r\n    const convertToXML = (obj) => {\r\n      let xml = '';\r\n      for (let key in obj) {\r\n        if (Array.isArray(obj[key])) {\r\n          xml += `<${key}>`;\r\n          obj[key].forEach((element) => {\r\n            if (Array.isArray(element)) {\r\n              // Handle CSV data as rows and cells\r\n              xml += '<row>';\r\n              element.forEach((cell) => {\r\n                xml += `<cell>${cell}</cell>`;\r\n              });\r\n              xml += '</row>';\r\n            } else {\r\n              xml += `<element>${convertToXML(element)}</element>`;\r\n            }\r\n          });\r\n          xml += `</${key}>`;\r\n        } else if (typeof obj[key] === 'object') {\r\n          xml += `<${key}>${convertToXML(obj[key])}</${key}>`;\r\n        } else {\r\n          xml += `<${key}>${obj[key]}</${key}>`;\r\n        }\r\n      }\r\n      return xml;\r\n    };\r\n  \r\n    const xmlData = `<form>${convertToXML(formData)}</form>`;\r\n  \r\n    // Send form data to backend\r\n    try {\r\n      const response = await fetch('http://localhost:5000/save_form', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          name: formName,\r\n          label: formLabel,\r\n          tags: formTags ? formTags.split(',').map(tag => tag.trim()) : [],\r\n          elements: formElements,\r\n          xmlData: xmlData, // Include XML data in the request\r\n        }),\r\n      });\r\n  \r\n      if (!response.ok) {\r\n        throw new Error(`Failed to save form: ${response.status} ${response.statusText}`);\r\n      }\r\n  \r\n      alert(`Form \"${formName}\" saved successfully!`);\r\n      localStorage.setItem(formName, xmlData); // Optional: save XML to local storage\r\n  \r\n      // Refresh saved forms after saving\r\n      loadSavedForms();\r\n  \r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      alert(`Error saving form: ${error.message}`);\r\n    }\r\n  };\r\n  \r\n  const removeElement = (id) => {\r\n    if (id === SUBMIT_BUTTON_ID) return; // Prevent deletion of the Submit button\r\n    setFormElements(prev => prev.filter(el => el.id !== id));\r\n    if (selectedElement?.id === id) {\r\n      setSelectedElement(null);\r\n    }\r\n  };\r\n\r\n  const handleEditClick = (element) => {\r\n    setSelectedElement(element);\r\n    setDraftSettings({\r\n      ...element.settings,\r\n      key: element.key || '',\r\n      label: element.label,\r\n      alignment: element.alignment,\r\n      required: element.required,\r\n      requirement: element.settings?.requirement || false, // Add this line\r\n      placeholder: element.settings?.placeholder,\r\n      csvData: element.settings?.csvData || [],\r\n    });\r\n};\r\n\r\n  const updateElementSettings = (id, newSettings) => {\r\n    setFormElements((prev) =>\r\n      prev.map((el) =>\r\n        el.id === id.toString()\r\n          ? {\r\n              ...el,\r\n              ...newSettings,\r\n              settings: {\r\n                ...el.settings,\r\n                ...newSettings,\r\n                requirement: newSettings.requirement !== undefined\r\n                  ? newSettings.requirement\r\n                  : el.settings.requirement, // Preserve existing requirement if not changed\r\n              },\r\n            }\r\n          : el\r\n      )\r\n    );\r\n  };\r\n    \r\n  const handleDragStart = ({ active }) => {\r\n    setDraggingElement(active.id);\r\n  };\r\n\r\n  const handleDragEnd = ({ active, over }) => {\r\n    if (over && active.id !== over.id) {\r\n      const oldIndex = formElements.findIndex((el) => el.id === active.id);\r\n      const newIndex = formElements.findIndex((el) => el.id === over.id);\r\n      setFormElements((prev) => arrayMove(prev, oldIndex, newIndex));\r\n    }\r\n    setDraggingElement(null);\r\n  };\r\n\r\n  const handleCSVUpload = (event, elementId) => {\r\n    const file = event.target.files[0];\r\n    if (file) {\r\n      if (!file.name.endsWith('.csv')) {\r\n        alert('Please upload a valid .csv file.');\r\n        return;\r\n      }\r\n      Papa.parse(file, {\r\n        complete: (result) => {\r\n          const csvData = result.data;\r\n          console.log('Parsed CSV Data:', csvData);\r\n  \r\n          setFormElements((prev) =>\r\n            prev.map((el) =>\r\n              el.id === elementId\r\n                ? {\r\n                    ...el,\r\n                    csvData, // Update the csvData property\r\n                    settings: { ...el.settings, csvData }\r\n                  }\r\n                : el\r\n            )\r\n          );\r\n        },\r\n        header: false, // Adjust as needed\r\n      });\r\n    }\r\n  };\r\n  \r\n  const handleResetForm = () => {\r\n    if (window.confirm('Are you sure you want to reset the form?')) {\r\n      setFormElements([]);\r\n      setFormName('');\r\n      setFormLabel('');\r\n    }\r\n  };\r\n  \r\n\r\n  const validatePassword = (password, settings) => {\r\n    if (settings?.passwordLength && password.length < settings.passwordLength) {\r\n      return false;\r\n    }\r\n    if (settings?.requireSymbols && !/[!@#$%^&*(),.?\":{}|<>]/.test(password)) {\r\n      return false;\r\n    }\r\n    if (settings?.requireNumbers && !/[0-9]/.test(password)) {\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const renderElementContent = (element) => {\r\n    const isBeingEdited = selectedElement?.id === element.id;\r\n    const settings = isBeingEdited ? draftSettings : element.settings;\r\n  \r\n    const alignmentStyle = {\r\n      textAlign: settings?.alignment || 'center',\r\n    };\r\n  \r\n    const wrapperStyle = {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: settings?.alignment === 'left' ? 'flex-start' : settings?.alignment === 'right' ? 'flex-end' : 'center',\r\n      width: '100%',\r\n      marginBottom: '10px',\r\n    };\r\n\r\n    const renderLabel = (label) => (\r\n      label && <label style={{ marginBottom: '5px', fontWeight: 'bold' }}>{label}</label>\r\n    );\r\n\r\n    switch (element.type) {\r\n      case 'heading': {\r\n        const HeaderTag = settings?.headerLevel || 'h1';\r\n        const alignmentStyle = { \r\n          textAlign: settings?.alignment || 'center', \r\n          width: '100%', \r\n          margin: '0 auto'  // Ensures it's centered\r\n        };\r\n      \r\n        return (\r\n          <div style={{ display: 'flex', justifyContent: 'center', width: '100%' }}>\r\n            <HeaderTag style={alignmentStyle}>\r\n              {settings?.label || element.label}\r\n            </HeaderTag>\r\n          </div>\r\n        );\r\n      }      \r\n      case 'text':\r\n        return <p style={alignmentStyle}>{settings.label}</p>;\r\n      case 'button':\r\n        return (\r\n          <div style={{ display: 'flex', justifyContent: element.alignment || 'center', width: '100%' }}>\r\n            <button\r\n              onClick={element.id === SUBMIT_BUTTON_ID ? handleSubmit : undefined} // Submit button triggers API\r\n              className=\"custom-button\"\r\n              style={{ padding: '10px 20px', borderRadius: '6px', margin: '5px', backgroundColor: '#007bff', color: 'white' }}\r\n            >\r\n              {element.label}\r\n            </button>\r\n          </div>\r\n        );\r\n      case 'inputText':\r\n        return (\r\n        <div style={wrapperStyle}>\r\n          {renderLabel(settings?.label || element.label)}\r\n            <input\r\n              type=\"text\"\r\n              placeholder={settings?.placeholder || ''}\r\n              required={settings?.required}\r\n              style={{\r\n                borderRadius: '8px',\r\n                padding: '10px',\r\n                border: '1px solid #ced4da',\r\n                textAlign: 'center',\r\n              }}\r\n            />\r\n          </div>\r\n        );\r\n      case 'email':\r\n        return (\r\n        <div style={wrapperStyle}>\r\n          {renderLabel(settings?.label || element.label)}\r\n            <input\r\n              type=\"email\"\r\n              placeholder={settings?.placeholder || ''}\r\n              required={settings?.required}\r\n              style={{\r\n                borderRadius: '8px',\r\n                padding: '10px',\r\n                border: settings?.isValid === false ? '2px solid #ff0000' : '1px solid #ced4da',\r\n                boxShadow: settings?.isValid === false ? '0 0 5px #ff0000' : 'none',\r\n                textAlign: 'center'\r\n              }}\r\n              onBlur={(e) => {\r\n                if (e.target.value.trim() !== '') {\r\n                  const isValid = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(e.target.value);\r\n                  updateElementSettings(element.id, { ...settings, isValid });\r\n                }\r\n              }}\r\n            />\r\n            {!settings?.isValid && settings?.isValid !== undefined && (\r\n              <span style={{ color: '#ff0000', fontSize: '0.8em', marginTop: '5px' }}>Invalid email address</span>\r\n            )}\r\n          </div>\r\n        );\r\n      case 'divider':\r\n        return <hr style={{ ...alignmentStyle, width: '100%' }} />;\r\n      case 'image':\r\n        return (\r\n          <div style={wrapperStyle}>\r\n          {renderLabel(settings?.label || element.label)}\r\n              <label className=\"custom-file-label\">\r\n                Choose Image\r\n                <input\r\n                  type=\"file\"\r\n                  className=\"custom-file-input\"\r\n                  accept=\"image/*\"\r\n                  onChange={(e) => handleImageUpload(e, element.id)}\r\n                />\r\n              </label>\r\n              {settings?.imageSrc ? (\r\n                <img\r\n                  src={settings.imageSrc}\r\n                  alt=\"Uploaded\"\r\n                  style={{ maxWidth: '100%', height: 'auto', borderRadius: '8px', marginTop: '10px' }}\r\n                />\r\n              ) : (\r\n                <img\r\n                  src=\"https://via.placeholder.com/150\"\r\n                  alt=\"Placeholder\"\r\n                  style={{ maxWidth: '100%', height: 'auto', borderRadius: '8px', marginTop: '10px' }}\r\n                />\r\n              )}\r\n            </div>\r\n          );       \r\n      case 'file':\r\n          return (\r\n          <div style={wrapperStyle}>\r\n          {renderLabel(settings?.label || element.label)}\r\n              <label className=\"custom-file-label\">\r\n                Upload File\r\n                <input\r\n                  type=\"file\"\r\n                  className=\"custom-file-input\"\r\n                  onChange={(e) => handleCSVUpload(e, element.id)}\r\n                  accept=\".csv\"\r\n                />\r\n              </label>\r\n              <span className=\"file-name\">No file chosen</span>\r\n            </div>\r\n          );\r\n      case 'table':\r\n        const tableData = element.settings?.csvData || [];\r\n        console.log('Rendering Table with Data:', tableData);\r\n  \r\n        return (\r\n          <div style={wrapperStyle}>\r\n          {renderLabel(settings?.label || element.label)}\r\n          <div>\r\n                {/* Styled file input and label */}\r\n                <div style={{ marginBottom: '10px' }}>\r\n                  <input\r\n                    type=\"file\"\r\n                    accept=\".csv\"\r\n                    id={`file-upload-${element.id}`}\r\n                    onChange={(e) => handleCSVUpload(e, element.id)}\r\n                    style={{ display: 'none' }} // Hide default input\r\n                  />\r\n                  <label\r\n                    htmlFor={`file-upload-${element.id}`}\r\n                    style={{\r\n                      backgroundColor: '#007bff',\r\n                      color: 'white',\r\n                      padding: '10px 20px',\r\n                      borderRadius: '6px',\r\n                      cursor: 'pointer',\r\n                      display: 'inline-block',\r\n                    }}\r\n                  >\r\n                    Upload CSV File\r\n                  </label>\r\n                  <span style={{ marginLeft: '10px' }}>\r\n                    {selectedFileName || 'No file chosen'}\r\n                  </span>\r\n                </div>\r\n    \r\n                <table style={{ margin: '0 auto', borderCollapse: 'collapse', width: '100%' }}>\r\n                  <tbody>\r\n                    {tableData.length > 0 ? (\r\n                      tableData.map((row, rowIndex) => (\r\n                        <tr key={`row-${rowIndex}`}>\r\n                          {row.map((cell, cellIndex) => (\r\n                            <td\r\n                              key={`cell-${rowIndex}-${cellIndex}`}\r\n                              style={{ border: '1px solid #ddd', padding: '8px' }}\r\n                            >\r\n                              {cell}\r\n                            </td>\r\n                          ))}\r\n                        </tr>\r\n                      ))\r\n                    ) : (\r\n                      <tr>\r\n                        <td style={{ textAlign: 'center' }}>No Data Available</td>\r\n                      </tr>\r\n                    )}\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          );\r\n      case 'dateTime':\r\n        return (\r\n          <div style={wrapperStyle}>\r\n            {renderLabel(settings?.label || element.label)}\r\n            {settings?.useCurrentDate ? (\r\n              <input\r\n                type=\"text\"\r\n                value={new Date().toLocaleDateString('en-US')}\r\n                readOnly\r\n                style={{\r\n                  borderRadius: '8px',\r\n                  padding: '10px',\r\n                  border: '1px solid #ced4da',\r\n                  textAlign: 'center'\r\n                }}\r\n              />\r\n            ) : (\r\n              <input\r\n                type=\"date\"\r\n                style={{\r\n                  borderRadius: '8px',\r\n                  padding: '10px',\r\n                  border: '1px solid #ced4da',\r\n                  textAlign: 'center'\r\n                }}\r\n              />\r\n            )}\r\n          </div>\r\n        );    \r\n      case 'dropdown':\r\n        return (\r\n          <div style={wrapperStyle}>\r\n          {renderLabel(settings?.label || element.label)}\r\n          <select\r\n              style={{\r\n                borderRadius: '8px',\r\n                padding: '10px',\r\n                border: '1px solid #ced4da',\r\n                textAlign: 'center',\r\n              }}\r\n            >\r\n              <option value=\"\">Select an option</option>\r\n              {settings?.dropdownOptions?.map((option, idx) => (\r\n                <option key={idx} value={option}>\r\n                  {option}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        );    \r\n      case 'boolean':\r\n        return (\r\n        <div style={wrapperStyle}>\r\n          {renderLabel(settings?.label || element.label)}\r\n            <select\r\n              value={settings?.defaultBoolean || 'true'}\r\n              onChange={(e) => updateElementSettings(element.id, { ...settings, defaultBoolean: e.target.value })}\r\n              style={{\r\n                borderRadius: '8px',\r\n                padding: '10px',\r\n                border: '1px solid #ced4da',\r\n                textAlign: 'center'\r\n              }}\r\n            >\r\n              <option value=\"true\">True</option>\r\n              <option value=\"false\">False</option>\r\n            </select>\r\n          </div>\r\n        );      \r\n      case 'number':\r\n        return (\r\n        <div style={wrapperStyle}>\r\n          {renderLabel(settings?.label || element.label)}\r\n            <input\r\n              type=\"number\"\r\n              min={settings?.min}\r\n              max={settings?.max}\r\n              step={settings?.step}\r\n              defaultValue={settings?.defaultValue}\r\n              required={settings?.required}\r\n              style={{\r\n                borderRadius: '8px',\r\n                padding: '10px',\r\n                border: '1px solid #ced4da',\r\n                textAlign: 'center'\r\n              }}\r\n            />\r\n          </div>\r\n        );\r\n      case 'password':\r\n      return (\r\n        <div\r\n          style={{\r\n            width: '100%',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            alignItems: settings?.alignment === 'left' ? 'flex-start' : settings?.alignment === 'right' ? 'flex-end' : 'center',\r\n            justifyContent: 'center',\r\n          }}\r\n        >\r\n          <div style={wrapperStyle}>\r\n          {renderLabel(settings?.label || element.label)}\r\n          <input\r\n              type={settings?.showPasswordOption && settings?.showPassword ? 'text' : 'password'}\r\n              placeholder={settings?.placeholder || 'Enter password'}\r\n              required={settings?.required}\r\n              onBlur={(e) => {\r\n                const isValid = validatePassword(e.target.value, settings);\r\n                updateElementSettings(element.id, { ...settings, isValid });\r\n              }}\r\n              style={{\r\n                borderRadius: '8px',\r\n                padding: '10px',\r\n                width: '300px',\r\n                border: settings?.isValid === false ? '2px solid #ff0000' : '1px solid #ced4da',\r\n                textAlign: 'left',\r\n                marginRight: '10px',\r\n              }}\r\n            />\r\n            {settings?.showPasswordOption && (\r\n              <label style={{ display: 'flex', alignItems: 'center', marginLeft: '10px' }}>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={settings?.showPassword || false}\r\n                  onChange={(e) => updateElementSettings(element.id, { ...settings, showPassword: e.target.checked })}\r\n                  style={{ marginRight: '5px' }}\r\n                />\r\n                Show Password\r\n              </label>\r\n            )}\r\n          </div>\r\n          <div style={{ marginTop: '10px', textAlign: settings?.alignment || 'center', width: '100%', display: 'flex', flexDirection: 'column', alignItems: settings?.alignment === 'left' ? 'flex-start' : settings?.alignment === 'right' ? 'flex-end' : 'center' }}>\r\n            {settings?.passwordLength && <p style={{ marginBottom: '5px' }}>Requires Minimum Length: {settings.passwordLength}</p>}\r\n            {settings?.requireSymbols && <p style={{ marginBottom: '5px' }}>Requires Symbols: Yes</p>}\r\n            {settings?.requireNumbers && <p>Requires Numbers: Yes</p>}\r\n          </div>\r\n          {!settings?.isValid && settings?.isValid !== undefined && (\r\n            <span style={{ color: '#ff0000', fontSize: '0.8em', marginTop: '5px' }}>Password does not meet requirements</span>\r\n          )}\r\n        </div>\r\n      );\r\n      default:\r\n        return (\r\n          <input\r\n            type={element.type}\r\n            placeholder={settings?.placeholder ||''}\r\n            required={settings?.required}\r\n            style={alignmentStyle}\r\n          />\r\n        );\r\n    }\r\n  };\r\n\r\n  const areRequiredFieldsFilled = () => {\r\n    return formElements.every((el) => {\r\n      if (el.required) {\r\n        return el.settings.label && el.settings.label.trim() !== '';\r\n      }\r\n      return true;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-builder-container\" style={{ height: '100vh', overflow: 'hidden' }}>\r\n<div className=\"sidebar\">\r\n\r\n\r\n  {/* Form Name Input */}\r\n  <div className=\"form-name-section\" style={{ marginBottom: '20px' }}>\r\n    <label htmlFor=\"form-name\" className=\"sidebar-label\">Form Name:</label>\r\n    <input\r\n      id=\"form-name\"\r\n      type=\"text\"\r\n      value={formName}\r\n      onChange={(e) => setFormName(e.target.value)}\r\n      placeholder=\"Enter form name\"\r\n      className=\"form-input\"\r\n    />\r\n  </div>\r\n\r\n  {/* Label Input (Required) */}\r\n  <div className=\"form-label-section\" style={{ marginBottom: '20px' }}>\r\n    <label htmlFor=\"form-label\" className=\"sidebar-label\">Label (Required):</label>\r\n    <input\r\n      id=\"form-label\"\r\n      type=\"text\"\r\n      value={formLabel}\r\n      onChange={(e) => setFormLabel(e.target.value)}\r\n      placeholder=\"Enter form label\"\r\n      className=\"form-input\"\r\n    />\r\n  </div>\r\n  <div className=\"element-input-wrapper\" style={{ display: 'flex', gap: '10px' }}>\r\n    <div className=\"element-selector\">\r\n      <h4>Elements</h4>\r\n      {ELEMENT_TYPES.map((element) => (\r\n        <button\r\n          key={element.id}\r\n          onClick={() => addElement(element.id)}\r\n          className=\"element-button\"\r\n        >\r\n          {element.label}\r\n        </button>\r\n      ))}\r\n    </div>\r\n\r\n    <div className=\"input-selector\">\r\n      <h4>Input Fields</h4>\r\n      {INPUT_FIELDS.map((input) => (\r\n        <button\r\n          key={input.id}\r\n          onClick={() => addElement(input.id)}\r\n          className=\"input-button\"\r\n        >\r\n          {input.label}\r\n        </button>\r\n      ))}\r\n    </div>\r\n  </div>\r\n  <div className=\"load-section\" style={{ marginBottom: '20px' }}>\r\n  <label htmlFor=\"saved-forms\" className=\"sidebar-label\">Load Saved Form:</label>\r\n  <select\r\n    id=\"saved-forms\"\r\n    value={selectedForm}\r\n    onChange={(e) => setSelectedForm(e.target.value)}\r\n    className=\"sidebar-select\"\r\n  >\r\n    <option value=\"\">-- Select a Form --</option>\r\n    {savedForms.map((form) => (\r\n      <option key={form.id} value={form.name}> {/* Ensure you're using form.name */}\r\n        {form.name} {/* This should render a string */}\r\n      </option>\r\n    ))}\r\n  </select>\r\n  <button onClick={loadForm} className=\"load-form-button\">Load Form</button>\r\n</div>\r\n  <button onClick={saveForm} className=\"save-form-button\">Save Form</button>\r\n  <button onClick={handleResetForm} className=\"reset-form-button\">Reset Form</button>\r\n</div>\r\n\r\n      <div className=\"form-builder\" ref={formContainerRef} style={{ height: '100%', overflowY: 'auto' }}>\r\n        <DndContext\r\n          collisionDetection={closestCenter}\r\n          onDragEnd={handleDragEnd}\r\n          onDragStart={handleDragStart}\r\n        >\r\n          <SortableContext items={formElements} strategy={rectSortingStrategy}>\r\n            <div className=\"form-preview\">\r\n              {formElements.map((element) => (\r\n                <SortableFormElement\r\n                  key={element.id}\r\n                  element={element}\r\n                  handleEditClick={handleEditClick}\r\n                  renderElementContent={renderElementContent}\r\n                />\r\n              ))}\r\n            </div>\r\n          </SortableContext>\r\n          {draggingElement && (\r\n            <DragOverlay>\r\n              <div className=\"dragging-overlay\">Dragging</div>\r\n            </DragOverlay>\r\n          )}\r\n        </DndContext>\r\n      </div>\r\n\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nconst SortableFormElement = ({ element, handleEditClick, renderElementContent }) => {\r\n  const { attributes, listeners, setNodeRef, transform, transition } = useSortable({\r\n    id: element.id,\r\n  });\r\n\r\n  const style = {\r\n    transform: transform ? `translate3d(${transform.x}px, ${transform.y}px, 0)` : undefined,\r\n    transition,\r\n    backgroundColor: element.settings?.backgroundColor || 'inherit',\r\n  };\r\n\r\n  return (\r\n    <div\r\n      ref={setNodeRef}\r\n      style={style}\r\n      className=\"form-element\"\r\n      onClick={() => handleEditClick(element)}\r\n    >\r\n      {renderElementContent(element)}\r\n      <button\r\n        className=\"drag-handle\"\r\n        {...listeners}\r\n        {...attributes}\r\n        onMouseDown={(e) => e.stopPropagation()}\r\n      >\r\n        Drag\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormBuilder;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}